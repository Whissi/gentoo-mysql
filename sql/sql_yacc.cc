/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 478 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_CVE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_CVE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_CVE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2069 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1024
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   85337

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  786
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  936
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3071
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5389

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   783,     2,     2,     2,   771,   766,     2,
     775,   776,   769,   768,   780,   767,   781,   770,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   782,   778,
       2,     2,     2,     2,   779,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   772,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   784,   765,   785,   773,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     745,   746,   747,   748,   749,   750,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     751,   752,   753,   754,   755,   756,   757,   758,   759,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     760,   761,     2,   762,   763,   764,   774,   777
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2027,  2027,  2028,  2033,  2043,  2061,  2068,  2081,  2080,
    2105,  2112,  2114,  2118,  2119,  2124,  2125,  2126,  2127,  2128,
    2129,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,  2138,
    2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,  2148,
    2149,  2150,  2151,  2152,  2153,  2154,  2155,  2156,  2157,  2158,
    2159,  2160,  2161,  2162,  2163,  2164,  2165,  2166,  2167,  2168,
    2169,  2170,  2171,  2172,  2173,  2174,  2175,  2176,  2177,  2178,
    2179,  2180,  2181,  2182,  2183,  2184,  2185,  2186,  2187,  2188,
    2189,  2190,  2191,  2192,  2193,  2194,  2195,  2196,  2197,  2198,
    2199,  2200,  2201,  2202,  2203,  2204,  2205,  2206,  2207,  2208,
    2209,  2210,  2211,  2212,  2213,  2214,  2218,  2228,  2229,  2233,
    2253,  2260,  2271,  2270,  2281,  2283,  2287,  2288,  2292,  2305,
    2304,  2324,  2323,  2337,  2336,  2351,  2352,  2355,  2362,  2369,
    2376,  2383,  2390,  2398,  2407,  2413,  2420,  2427,  2435,  2444,
    2450,  2456,  2464,  2472,  2478,  2485,  2492,  2500,  2512,  2518,
    2525,  2532,  2540,  2550,  2551,  2555,  2559,  2563,  2567,  2571,
    2581,  2585,  2589,  2594,  2605,  2610,  2614,  2618,  2622,  2623,
    2627,  2631,  2635,  2640,  2644,  2648,  2652,  2658,  2692,  2696,
    2700,  2704,  2710,  2711,  2721,  2722,  2725,  2727,  2728,  2732,
    2738,  2744,  2753,  2757,  2761,  2768,  2773,  2781,  2785,  2801,
    2805,  2816,  2820,  2835,  2845,  2855,  2860,  2868,  2875,  2888,
    2887,  2902,  2904,  2917,  2937,  2956,  2976,  2990,  3004,  3009,
    3018,  3023,  3035,  3047,  3061,  3077,  3081,  3088,  3097,  3105,
    3119,  3121,  3142,  3143,  3147,  3151,  3155,  3159,  3163,  3168,
    3172,  3180,  3179,  3211,  3210,  3219,  3228,  3229,  3235,  3241,
    3251,  3257,  3265,  3267,  3276,  3277,  3281,  3287,  3296,  3297,
    3305,  3305,  3363,  3364,  3365,  3366,  3367,  3368,  3369,  3370,
    3371,  3372,  3373,  3374,  3375,  3379,  3393,  3412,  3413,  3417,
    3418,  3423,  3425,  3427,  3429,  3431,  3433,  3435,  3441,  3442,
    3443,  3447,  3451,  3458,  3465,  3466,  3473,  3475,  3479,  3480,
    3484,  3535,  3537,  3541,  3542,  3546,  3596,  3597,  3598,  3599,
    3603,  3604,  3608,  3609,  3614,  3617,  3641,  3740,  3758,  3757,
    3836,  3832,  3908,  3909,  3914,  3916,  3921,  3944,  3955,  3959,
    3981,  3982,  3986,  3990,  4003,  4009,  4015,  4024,  4037,  4063,
    4069,  4070,  4076,  4077,  4082,  4088,  4101,  4103,  4123,  4129,
    4131,  4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,  4149,
    4151,  4156,  4170,  4187,  4188,  4190,  4195,  4201,  4210,  4216,
    4225,  4233,  4261,  4269,  4271,  4280,  4285,  4291,  4300,  4308,
    4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,  4326,  4328,
    4330,  4332,  4337,  4357,  4381,  4385,  4393,  4394,  4395,  4396,
    4397,  4398,  4399,  4400,  4401,  4402,  4403,  4404,  4405,  4410,
    4409,  4420,  4420,  4480,  4479,  4536,  4536,  4558,  4615,  4662,
    4686,  4685,  4710,  4732,  4734,  4735,  4739,  4757,  4778,  4786,
    4824,  4778,  4852,  4854,  4855,  4859,  4860,  4865,  4875,  4864,
    4927,  4926,  4940,  4941,  4945,  4946,  4951,  4959,  4950,  5009,
    5017,  5008,  5063,  5076,  5081,  5080,  5118,  5119,  5124,  5123,
    5157,  5157,  5176,  5175,  5223,  5238,  5246,  5237,  5304,  5312,
    5301,  5354,  5356,  5361,  5363,  5365,  5380,  5381,  5388,  5389,
    5396,  5397,  5401,  5407,  5416,  5417,  5418,  5419,  5420,  5421,
    5422,  5423,  5424,  5425,  5426,  5427,  5431,  5432,  5436,  5442,
    5451,  5452,  5453,  5454,  5455,  5456,  5457,  5458,  5462,  5463,
    5467,  5473,  5482,  5486,  5487,  5491,  5497,  5506,  5507,  5508,
    5509,  5510,  5511,  5512,  5516,  5517,  5521,  5527,  5536,  5537,
    5538,  5542,  5546,  5547,  5551,  5555,  5562,  5569,  5576,  5583,
    5590,  5597,  5604,  5611,  5618,  5625,  5629,  5636,  5643,  5650,
    5657,  5658,  5733,  5739,  5743,  5748,  5753,  5759,  5767,  5777,
    5778,  5792,  5800,  5804,  5808,  5812,  5816,  5820,  5827,  5828,
    5833,  5834,  5852,  5853,  5865,  5866,  5871,  5880,  5881,  5886,
    5892,  5902,  5903,  5915,  5916,  5920,  5926,  5935,  5944,  5947,
    5952,  5960,  5961,  5965,  5969,  5976,  5983,  5993,  5992,  6010,
    6016,  6025,  6026,  6031,  6032,  6036,  6042,  6051,  6058,  6059,
    6063,  6069,  6078,  6080,  6082,  6084,  6086,  6088,  6090,  6092,
    6101,  6102,  6106,  6107,  6111,  6116,  6121,  6136,  6137,  6141,
    6147,  6156,  6162,  6170,  6172,  6176,  6180,  6184,  6188,  6192,
    6196,  6200,  6204,  6208,  6212,  6216,  6220,  6224,  6228,  6232,
    6236,  6253,  6257,  6261,  6265,  6269,  6273,  6277,  6281,  6285,
    6289,  6293,  6297,  6301,  6305,  6309,  6313,  6317,  6321,  6325,
    6332,  6346,  6350,  6354,  6358,  6362,  6363,  6364,  6365,  6366,
    6367,  6371,  6372,  6373,  6377,  6378,  6379,  6380,  6384,  6390,
    6399,  6400,  6404,  6411,  6412,  6420,  6426,  6432,  6437,  6454,
    6462,  6470,  6474,  6475,  6479,  6480,  6484,  6485,  6489,  6493,
    6497,  6518,  6520,  6524,  6525,  6526,  6530,  6534,  6538,  6542,
    6546,  6550,  6554,  6558,  6563,  6568,  6577,  6586,  6590,  6594,
    6599,  6608,  6612,  6635,  6639,  6643,  6647,  6651,  6655,  6659,
    6660,  6664,  6668,  6672,  6677,  6682,  6687,  6692,  6697,  6701,
    6705,  6710,  6714,  6721,  6723,  6725,  6727,  6729,  6731,  6733,
    6735,  6740,  6741,  6745,  6746,  6750,  6751,  6752,  6753,  6754,
    6758,  6759,  6760,  6761,  6762,  6766,  6771,  6775,  6777,  6781,
    6782,  6783,  6784,  6789,  6793,  6802,  6806,  6811,  6815,  6824,
    6825,  6829,  6830,  6831,  6839,  6840,  6844,  6848,  6852,  6853,
    6854,  6863,  6864,  6865,  6866,  6869,  6870,  6875,  6879,  6883,
    6884,  6888,  6907,  6926,  6930,  6934,  6938,  6942,  6946,  6950,
    6954,  6958,  6962,  6966,  6970,  6974,  6978,  6982,  6986,  6990,
    6994,  6998,  7007,  7012,  7025,  7029,  7036,  7037,  7044,  7045,
    7046,  7050,  7051,  7052,  7056,  7062,  7066,  7070,  7071,  7075,
    7084,  7088,  7089,  7093,  7102,  7106,  7107,  7111,  7117,  7121,
    7122,  7126,  7127,  7132,  7133,  7137,  7144,  7152,  7158,  7168,
    7172,  7177,  7182,  7187,  7194,  7200,  7211,  7212,  7220,  7219,
    7231,  7233,  7237,  7252,  7253,  7257,  7264,  7274,  7275,  7276,
    7277,  7282,  7286,  7291,  7296,  7302,  7311,  7312,  7313,  7314,
    7315,  7319,  7320,  7325,  7326,  7330,  7331,  7335,  7336,  7337,
    7341,  7342,  7346,  7350,  7354,  7358,  7362,  7366,  7370,  7374,
    7380,  7381,  7385,  7391,  7400,  7401,  7415,  7416,  7420,  7426,
    7435,  7439,  7440,  7444,  7450,  7459,  7460,  7465,  7466,  7470,
    7474,  7478,  7502,  7503,  7504,  7508,  7509,  7513,  7514,  7518,
    7519,  7523,  7524,  7525,  7529,  7535,  7545,  7551,  7566,  7572,
    7582,  7583,  7592,  7593,  7597,  7598,  7602,  7608,  7620,  7631,
    7646,  7645,  7666,  7665,  7687,  7686,  7708,  7707,  7726,  7720,
    7743,  7742,  7778,  7800,  7819,  7839,  7847,  7869,  7893,  7904,
    7906,  7921,  7935,  7941,  7953,  7965,  7979,  7980,  7984,  7994,
    8004,  8009,  8016,  8025,  8026,  8030,  8031,  8035,  8041,  8047,
    8055,  8070,  8078,  8086,  8093,  8100,  8107,  8114,  8120,  8126,
    8132,  8144,  8156,  8165,  8166,  8170,  8171,  8175,  8181,  8187,
    8193,  8202,  8216,  8217,  8218,  8219,  8223,  8224,  8236,  8237,
    8241,  8242,  8246,  8247,  8262,  8267,  8275,  8279,  8287,  8291,
    8296,  8297,  8306,  8310,  8321,  8325,  8329,  8333,  8337,  8342,
    8347,  8352,  8357,  8364,  8368,  8372,  8376,  8381,  8386,  8391,
    8396,  8400,  8407,  8408,  8412,  8416,  8423,  8424,  8432,  8439,
    8444,  8448,  8453,  8464,  8465,  8473,  8477,  8481,  8485,  8489,
    8493,  8498,  8502,  8506,  8510,  8514,  8518,  8522,  8526,  8530,
    8534,  8538,  8542,  8546,  8550,  8554,  8558,  8562,  8566,  8572,
    8576,  8583,  8588,  8593,  8601,  8602,  8607,  8612,  8618,  8627,
    8631,  8635,  8652,  8656,  8660,  8676,  8678,  8682,  8683,  8687,
    8688,  8689,  8693,  8694,  8695,  8699,  8700,  8701,  8702,  8706,
    8707,  8715,  8723,  8725,  8729,  8730,  8734,  8735,  8736,  8740,
    8752,  8765,  8772,  8773,  8783,  8799,  8797,  8819,  8836,  8839,
    8846,  8850,  8857,  8861,  8868,  8872,  8879,  8884,  8887,  8894,
    8897,  8904,  8907,  8914,  8917,  8925,  8928,  8935,  8939,  8946,
    8950,  8958,  8962,  8987,  8988,  8989,  8994,  8999,  9006,  9020,
    9021,  9022,  9026,  9035,  9036,  9040,  9041,  9049,  9050,  9051,
    9055,  9065,  9066,  9085,  9090,  9097,  9107,  9115,  9123,  9124,
    9128,  9129,  9137,  9139,  9141,  9143,  9145,  9147,  9152,  9159,
    9160,  9161,  9166,  9165,  9171,  9178,  9183,  9191,  9192,  9196,
    9209,  9213,  9222,  9228,  9237,  9244,  9245,  9249,  9254,  9261,
    9267,  9276,  9283,  9290,  9291,  9301,  9302,  9306,  9310,  9315,
    9319,  9355,  9359,  9363,  9367,  9406,  9412,  9419,  9425,  9432,
    9437,  9443,  9451,  9455,  9459,  9463,  9467,  9475,  9476,  9477,
    9484,  9489,  9493,  9505,  9527,  9551,  9552,  9556,  9560,  9561,
    9565,  9571,  9580,  9587,  9599,  9602,  9606,  9611,  9615,  9619,
    9628,  9634,  9643,  9647,  9651,  9658,  9659,  9663,  9667,  9668,
    9672,  9673,  9677,  9683,  9689,  9699,  9700,  9708,  9709,  9710,
    9711,  9712,  9716,  9717,  9722,  9728,  9733,  9739,  9743,  9747,
    9751,  9755,  9759,  9763,  9767,  9771,  9775,  9779,  9783,  9796,
    9800,  9804,  9809,  9813,  9820,  9824,  9831,  9835,  9839,  9843,
    9851,  9855,  9859,  9864,  9869,  9877,  9885,  9889,  9890,  9894,
    9898,  9902,  9906,  9910,  9914,  9918,  9922,  9926,  9930,  9934,
    9938,  9942,  9946,  9950,  9954,  9955,  9959,  9960,  9967,  9968,
    9972,  9973,  9977,  9978,  9979,  9980,  9981,  9982,  9983,  9987,
    9988,  9992,  9993,  9994,  9995,  9996,  9997, 10001, 10002, 10003,
   10004, 10005, 10006, 10010, 10014, 10018, 10022, 10026, 10030, 10031,
   10035, 10039, 10043, 10047, 10051, 10055, 10059, 10063, 10067, 10071,
   10075, 10079, 10084, 10091, 10102, 10103, 10113, 10117, 10121, 10125,
   10129, 10133, 10137, 10141, 10145, 10149, 10156, 10160, 10164, 10168,
   10172, 10176, 10180, 10184, 10188, 10193, 10198, 10203, 10207, 10211,
   10215, 10219, 10224, 10228, 10247, 10251, 10255, 10259, 10263, 10268,
   10273, 10277, 10281, 10286, 10290, 10294, 10298, 10302, 10306, 10310,
   10314, 10319, 10323, 10327, 10331, 10335, 10346, 10349, 10360, 10364,
   10368, 10372, 10376, 10380, 10384, 10388, 10392, 10396, 10400, 10404,
   10408, 10412, 10416, 10420, 10424, 10428, 10432, 10436, 10440, 10444,
   10448, 10452, 10458, 10464, 10470, 10476, 10482, 10486, 10504, 10508,
   10515, 10517, 10530, 10531, 10535, 10536, 10540, 10541, 10545, 10551,
   10560, 10567, 10568, 10572, 10576, 10580, 10584, 10588, 10598, 10608,
   10612, 10616, 10620, 10624, 10633, 10637, 10641, 10645, 10649, 10653,
   10657, 10661, 10665, 10669, 10679, 10683, 10687, 10691, 10695, 10699,
   10703, 10714, 10725, 10729, 10733, 10746, 10750, 10755, 10764, 10767,
   10775, 10778, 10782, 10791, 10794, 10798, 10806, 10809, 10816, 10823,
   10827, 10834, 10841, 10848, 10869, 10872, 10880, 10883, 10891, 10894,
   10902, 10905, 10914, 10919, 10926, 10930, 10934, 10938, 10942, 10949,
   10956, 10960, 10964, 10968, 10972, 10980, 10983, 10987, 10991, 10995,
   11001, 11002, 11003, 11007, 11014, 11018, 11025, 11029, 11036, 11037,
   11042, 11047, 11051, 11052, 11056, 11061, 11071, 11078, 11085, 11104,
   11112, 11119, 11126, 11133, 11140, 11147, 11154, 11161, 11168, 11175,
   11183, 11193, 11194, 11198, 11204, 11213, 11214, 11218, 11224, 11233,
   11234, 11238, 11239, 11243, 11251, 11260, 11261, 11262, 11275, 11276,
   11357, 11361, 11366, 11370, 11374, 11384, 11391, 11392, 11393, 11397,
   11398, 11399, 11400, 11403, 11404, 11407, 11409, 11412, 11414, 11422,
   11423, 11427, 11456, 11457, 11458, 11459, 11461, 11463, 11467, 11468,
   11477, 11478, 11482, 11489, 11490, 11494, 11507, 11518, 11531, 11545,
   11552, 11558, 11567, 11571, 11581, 11588, 11591, 11602, 11606, 11611,
   11616, 11625, 11626, 11637, 11640, 11643, 11647, 11651, 11659, 11662,
   11663, 11664, 11668, 11669, 11673, 11679, 11688, 11689, 11697, 11698,
   11702, 11707, 11713, 11717, 11723, 11732, 11738, 11746, 11750, 11759,
   11771, 11772, 11773, 11774, 11775, 11776, 11777, 11778, 11779, 11780,
   11781, 11782, 11786, 11787, 11788, 11789, 11790, 11791, 11792, 11793,
   11794, 11798, 11799, 11800, 11801, 11804, 11806, 11810, 11811, 11814,
   11816, 11820, 11821, 11825, 11829, 11830, 11837, 11841, 11848, 11853,
   11862, 11879, 11887, 11894, 11900, 11910, 11913, 11920, 11926, 11935,
   11949, 11950, 11957, 11962, 11973, 11974, 11989, 11994, 12004, 12011,
   12012, 12016, 12023, 12028, 12038, 12039, 12043, 12044, 12048, 12049,
   12053, 12060, 12066, 12072, 12081, 12085, 12089, 12093, 12097, 12104,
   12105, 12109, 12110, 12111, 12112, 12113, 12114, 12118, 12119, 12120,
   12121, 12122, 12126, 12127, 12128, 12129, 12130, 12134, 12135, 12136,
   12137, 12138, 12142, 12147, 12148, 12152, 12158, 12167, 12171, 12178,
   12185, 12191, 12195, 12203, 12216, 12232, 12241, 12251, 12274, 12309,
   12316, 12331, 12341, 12356, 12365, 12376, 12396, 12418, 12441, 12446,
   12455, 12462, 12469, 12475, 12484, 12490, 12499, 12500, 12504, 12505,
   12509, 12510, 12514, 12520, 12529, 12530, 12537, 12557, 12577, 12595,
   12608, 12625, 12641, 12642, 12643, 12652, 12656, 12657, 12668, 12670,
   12674, 12679, 12684, 12692, 12697, 12702, 12710, 12716, 12725, 12732,
   12733, 12737, 12741, 12742, 12746, 12751, 12761, 12766, 12775, 12776,
   12779, 12781, 12785, 12789, 12794, 12799, 12803, 12809, 12818, 12819,
   12827, 12831, 12845, 12849, 12858, 12875, 12876, 12880, 12887, 12899,
   12907, 12908, 12914, 12927, 12937, 12950, 12952, 12956, 12957, 12961,
   12962, 12963, 12967, 12973, 12975, 12978, 12980, 12983, 12984, 12987,
   12991, 12995, 12999, 13003, 13007, 13011, 13015, 13019, 13027, 13030,
   13044, 13043, 13054, 13063, 13069, 13081, 13092, 13103, 13118, 13125,
   13133, 13135, 13158, 13162, 13167, 13166, 13177, 13176, 13186, 13204,
   13211, 13219, 13227, 13235, 13243, 13251, 13261, 13283, 13288, 13310,
   13319, 13328, 13334, 13339, 13344, 13349, 13354, 13359, 13364, 13370,
   13379, 13387, 13391, 13395, 13402, 13409, 13416, 13423, 13430, 13437,
   13444, 13450, 13460, 13470, 13475, 13480, 13485, 13494, 13496, 13498,
   13503, 13504, 13507, 13509, 13513, 13514, 13518, 13519, 13523, 13524,
   13528, 13529, 13530, 13531, 13535, 13536, 13540, 13541, 13545, 13546,
   13550, 13551, 13552, 13557, 13564, 13571, 13572, 13573, 13574, 13575,
   13576, 13583, 13584, 13589, 13592, 13608, 13626, 13636, 13637, 13642,
   13650, 13649, 13662, 13661, 13675, 13679, 13680, 13693, 13692, 13715,
   13716, 13721, 13723, 13725, 13727, 13729, 13731, 13733, 13735, 13737,
   13739, 13741, 13743, 13745, 13747, 13749, 13751, 13753, 13755, 13760,
   13761, 13766, 13765, 13772, 13782, 13783, 13788, 13793, 13802, 13802,
   13805, 13804, 13821, 13826, 13827, 13831, 13832, 13847, 13846, 13857,
   13858, 13868, 13872, 13886, 13898, 13899, 13900, 13906, 13917, 13956,
   13957, 13961, 13962, 13966, 13967, 13968, 13972, 13973, 13977, 13978,
   13982, 13983, 13987, 13992, 13996, 14001, 14007, 14012, 14020, 14021,
   14025, 14030, 14034, 14039, 14047, 14048, 14052, 14053, 14057, 14058,
   14062, 14063, 14064, 14068, 14074, 14083, 14084, 14091, 14092, 14096,
   14104, 14124, 14145, 14150, 14156, 14161, 14169, 14176, 14183, 14193,
   14212, 14213, 14214, 14224, 14225, 14229, 14244, 14245, 14246, 14247,
   14251, 14255, 14259, 14263, 14267, 14274, 14275, 14279, 14283, 14287,
   14291, 14295, 14303, 14307, 14311, 14325, 14326, 14330, 14334, 14344,
   14351, 14358, 14362, 14366, 14370, 14374, 14378, 14387, 14393, 14404,
   14410, 14421, 14422, 14452, 14465, 14478, 14494, 14510, 14527, 14531,
   14532, 14539, 14555, 14556, 14567, 14568, 14578, 14579, 14590, 14591,
   14601, 14602, 14603, 14607, 14608, 14609, 14613, 14618, 14626, 14630,
   14644, 14649, 14657, 14681, 14682, 14683, 14684, 14685, 14692, 14693,
   14694, 14701, 14702, 14703, 14704, 14705, 14706, 14707, 14708, 14709,
   14710, 14711, 14712, 14713, 14714, 14715, 14716, 14717, 14718, 14719,
   14720, 14721, 14722, 14723, 14724, 14725, 14726, 14727, 14728, 14729,
   14730, 14731, 14732, 14733, 14734, 14735, 14736, 14751, 14752, 14753,
   14760, 14761, 14762, 14763, 14764, 14765, 14766, 14767, 14768, 14776,
   14777, 14778, 14779, 14780, 14781, 14782, 14783, 14784, 14785, 14786,
   14787, 14788, 14789, 14790, 14791, 14792, 14793, 14794, 14795, 14796,
   14797, 14798, 14799, 14800, 14801, 14802, 14803, 14804, 14805, 14806,
   14807, 14808, 14809, 14810, 14811, 14812, 14813, 14814, 14815, 14816,
   14817, 14818, 14819, 14820, 14821, 14822, 14823, 14824, 14825, 14826,
   14827, 14828, 14829, 14830, 14831, 14832, 14833, 14834, 14835, 14836,
   14837, 14838, 14839, 14840, 14841, 14842, 14843, 14844, 14845, 14846,
   14847, 14848, 14849, 14850, 14851, 14852, 14853, 14854, 14855, 14856,
   14857, 14858, 14859, 14860, 14861, 14862, 14863, 14864, 14865, 14866,
   14867, 14868, 14869, 14870, 14871, 14872, 14873, 14874, 14875, 14876,
   14877, 14878, 14879, 14880, 14881, 14882, 14883, 14884, 14885, 14886,
   14887, 14888, 14889, 14890, 14891, 14892, 14893, 14894, 14895, 14896,
   14897, 14898, 14899, 14900, 14901, 14902, 14903, 14904, 14905, 14906,
   14907, 14908, 14909, 14910, 14911, 14912, 14913, 14914, 14915, 14916,
   14917, 14918, 14919, 14920, 14921, 14922, 14923, 14924, 14925, 14926,
   14927, 14928, 14929, 14930, 14931, 14932, 14933, 14934, 14935, 14936,
   14937, 14938, 14939, 14940, 14941, 14942, 14943, 14944, 14945, 14946,
   14947, 14948, 14949, 14950, 14951, 14952, 14953, 14954, 14955, 14956,
   14957, 14958, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14966,
   14967, 14968, 14969, 14970, 14971, 14972, 14973, 14974, 14975, 14976,
   14977, 14978, 14979, 14980, 14981, 14982, 14983, 14984, 14985, 14986,
   14987, 14988, 14989, 14990, 14991, 14992, 14993, 14994, 14995, 14996,
   14997, 14998, 14999, 15000, 15001, 15002, 15003, 15004, 15005, 15006,
   15007, 15008, 15009, 15010, 15011, 15012, 15013, 15014, 15015, 15016,
   15017, 15018, 15019, 15020, 15021, 15022, 15023, 15024, 15025, 15026,
   15027, 15028, 15029, 15030, 15031, 15032, 15033, 15034, 15035, 15036,
   15037, 15038, 15039, 15040, 15041, 15042, 15043, 15044, 15045, 15046,
   15047, 15048, 15049, 15050, 15051, 15052, 15053, 15054, 15055, 15056,
   15057, 15058, 15059, 15060, 15061, 15062, 15063, 15064, 15065, 15066,
   15067, 15068, 15069, 15070, 15071, 15072, 15073, 15074, 15075, 15076,
   15077, 15078, 15079, 15080, 15081, 15082, 15083, 15084, 15085, 15086,
   15087, 15088, 15089, 15090, 15091, 15092, 15093, 15094, 15095, 15096,
   15097, 15098, 15099, 15100, 15101, 15102, 15103, 15104, 15105, 15106,
   15107, 15108, 15109, 15110, 15111, 15112, 15113, 15114, 15115, 15116,
   15117, 15118, 15119, 15120, 15121, 15122, 15123, 15124, 15125, 15126,
   15127, 15128, 15129, 15130, 15131, 15132, 15133, 15134, 15135, 15136,
   15137, 15138, 15139, 15140, 15141, 15142, 15143, 15144, 15145, 15146,
   15147, 15148, 15149, 15150, 15151, 15152, 15153, 15154, 15155, 15156,
   15157, 15158, 15159, 15160, 15161, 15162, 15163, 15164, 15165, 15177,
   15178, 15179, 15191, 15192, 15193, 15194, 15203, 15204, 15205, 15206,
   15207, 15218, 15227, 15231, 15235, 15239, 15246, 15254, 15262, 15274,
   15278, 15283, 15288, 15293, 15298, 15303, 15311, 15312, 15316, 15320,
   15327, 15333, 15342, 15347, 15354, 15364, 15365, 15370, 15374, 15382,
   15386, 15390, 15391, 15392, 15393, 15394, 15398, 15399, 15400, 15401,
   15405, 15406, 15407, 15408, 15412, 15413, 15414, 15415, 15416, 15417,
   15422, 15430, 15436, 15440, 15445, 15449, 15456, 15460, 15467, 15471,
   15475, 15482, 15486, 15493, 15500, 15501, 15505, 15512, 15513, 15517,
   15518, 15522, 15523, 15524, 15525, 15529, 15530, 15531, 15535, 15539,
   15543, 15547, 15551, 15560, 15571, 15576, 15575, 15581, 15591, 15592,
   15596, 15597, 15601, 15629, 15630, 15631, 15636, 15640, 15651, 15658,
   15666, 15674, 15681, 15688, 15704, 15721, 15733, 15737, 15741, 15744,
   15747, 15762, 15784, 15788, 15792, 15801, 15812, 15828, 15829, 15833,
   15834, 15835, 15836, 15840, 15841, 15842, 15843, 15844, 15850, 15855,
   15871, 15870, 15889, 15894, 15905, 15910, 15927, 15926, 15943, 15956,
   15957, 15958, 15959, 15962, 15964, 15968, 15974, 15983, 15990, 15992,
   15994, 15996, 15998, 16000, 16002, 16004, 16006, 16008, 16010, 16012,
   16014, 16016, 16018, 16020, 16022, 16027, 16029, 16043, 16045, 16047,
   16049, 16051, 16053, 16055, 16057, 16059, 16061, 16063, 16065, 16067,
   16069, 16074, 16075, 16078, 16080, 16084, 16085, 16089, 16099, 16109,
   16122, 16136, 16148, 16160, 16172, 16189, 16195, 16204, 16210, 16219,
   16220, 16224, 16225, 16228, 16239, 16250, 16261, 16274, 16288, 16300,
   16311, 16325, 16343, 16354, 16365, 16379, 16390, 16404, 16419, 16432,
   16443, 16448, 16456, 16461, 16469, 16470, 16474, 16480, 16488, 16490,
   16494, 16498, 16502, 16509, 16510, 16515, 16516, 16520, 16521, 16525,
   16530, 16532, 16537, 16538, 16546, 16545, 16555, 16556, 16561, 16562,
   16563, 16568, 16569, 16570, 16574, 16575, 16579, 16591, 16600, 16610,
   16619, 16633, 16634, 16635, 16639, 16643, 16647, 16654, 16655, 16656,
   16657, 16658, 16659, 16660, 16666, 16677, 16686, 16688, 16690, 16695,
   16696, 16697, 16698, 16699, 16703, 16704, 16705, 16706, 16707, 16708,
   16718, 16719, 16724, 16737, 16750, 16752, 16754, 16759, 16764, 16766,
   16768, 16774, 16775, 16777, 16783, 16782, 16822, 16873, 16874, 16875,
   16876, 16886, 16888, 16894, 16899, 16917, 16907, 16984, 17002, 17026,
   17050, 17056, 17097, 17023, 17164, 17184, 17189, 17197, 17162, 17218,
   17223, 17228, 17233, 17238, 17243, 17251, 17252, 17255, 17264, 17274,
   17292, 17293, 17297, 17298, 17299, 17303, 17304, 17309, 17310, 17312,
   17317, 17323, 17332, 17338, 17347, 17353, 17362, 17379, 17388, 17411,
   17415, 17423, 17426, 17430, 17437, 17438, 17443, 17449, 17453, 17460,
   17470, 17477, 17490, 17491, 17495, 17496, 17504, 17505, 17510, 17518,
   17519, 17524
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "CHANGED_PAGE_BITMAPS_SYM",
  "CLIENT_STATS_SYM", "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM",
  "INDEX_STATS_SYM", "TABLE_STATS_SYM", "THREAD_STATS_SYM",
  "USER_STATS_SYM", "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM",
  "SEQUENCE_TABLE_SYM", "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD",
  "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "';'", "'@'", "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept",
  "start_entry", "sql_statement", "$@1", "opt_end_of_input",
  "simple_statement_or_begin", "simple_statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "$@3",
  "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "master_tls_ciphersuites_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt",
  "create_compression_dictionary_allowed_expr", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "ts_option_engine_attribute",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "slave", "slave_start",
  "start_slave_opts", "$@43", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "opt_checksum_type", "repair_table_stmt", "opt_mi_repair_types",
  "mi_repair_types", "mi_repair_type", "analyze_table_stmt",
  "opt_num_buckets", "opt_histogram", "binlog_base64_event",
  "check_table_stmt", "opt_mi_check_types", "mi_check_types",
  "mi_check_type", "optimize_table_stmt", "opt_no_write_to_binlog",
  "rename", "$@44", "rename_list", "table_to_table_list", "table_to_table",
  "keycache_stmt", "keycache_list", "assign_to_keycache", "key_cache_name",
  "preload_stmt", "preload_list", "preload_keys", "adm_partition",
  "opt_cache_key_list", "opt_ignore_leaves", "select_stmt",
  "select_stmt_with_into", "query_expression", "query_expression_body",
  "query_expression_parens", "query_primary", "query_specification",
  "opt_from_clause", "from_clause", "from_tables", "table_reference_list",
  "table_value_constructor", "explicit_table", "select_options",
  "select_option_list", "select_option", "locking_clause_list",
  "locking_clause", "lock_strength", "table_locking_list",
  "opt_locked_row_action", "locked_row_action", "select_item_list",
  "select_item", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "opt_of", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "opt_array_cast", "function_call_keyword",
  "function_call_nonkeyword", "opt_returning_type",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@48", "flush_options", "$@49",
  "opt_flush_lock", "$@50", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@56", "grant", "$@57", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@58", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@59",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,
    1155,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,
    1350,  1351,  1353,  1354,  1355,   124,    38,    45,    43,    42,
      47,    37,    94,   126,  1356,    40,    41,  1357,    59,    64,
      44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4608

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4608)))

#define YYTABLE_NINF -2874

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6991,  3145,   212, -4608,   -18,   977, 69457,   206,   -27,   -27,
     683,  3303, -4608, -4608, -4608, 13115,  4003, -4608, 69457,   212,
     249, 46777, 69457, -4608,  1144,  1942,  1015,   314,   328,  1186,
     212, 69457, -4608,  1357,  1838,   212,   329,  1355, 61897, 47533,
     683, 69457,  3142, 29370, -4608, -4608, 61897,  1251,  1128, 69457,
    1481,  1066,  1226, 69457,  1595, 62653,  1791, 22475,  2397,  1704,
    1361,   261, -4608,  1997,  2157, -4608,  2055, -4608, -4608,  1826,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, 54337, -4608,   613, -4608,
    1668, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,  2426,    55,  1236, -4608, -4608, -4608, -4608,
    1673, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608,   507, -4608, -4608, -4608, -4608, -4608, 63409, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608,  2136, 69457,  2156, 69457,  1685,
    2130, 69457, 60385, 69457, 69457,  1790,  2119,  2182,  2200, -4608,
   -4608,  2287, -4608, -4608,   -27,   683, -4608, -4608, 69457, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,  1651, -4608,  1787, -4608, -4608, -4608,
   -4608, -4608, -4608,  2000,  2395, -4608, -4608, 69457, 69457, -4608,
    2593,  2377,  2416,  2487,  2260, 60385,   353, 69457, -4608,  2169,
      39,  2377,  2377,  2510,   887,  2377,  2522, -4608,  2180, -4608,
   -4608, -4608,  2287,  2754, -4608,  2001,  2003,  2009, 22475, -4608,
    2041,  2043,  2054, 17015,  2092,  2094,  2097,  2109,  2124,  2128,
    2150,  2166,  2166,  2172,  2174,  2210,  2223,  -134,  2230, -4608,
    2232,  1361,  2268, -4608, -4608,  2275,  2296,  2304,  2307, -4608,
    2309,  2324,  2326, 17795,  2333,  2343, -4608, 39967,  2348,  2367,
    2373,  2381,  2384,  2388,  2391,  2400,  2415, -4608, -4608, 17015,
    2172, -4608, -4608, -4608,  2428,  2435,  2436,  2443,  2448,  2467,
    2490,  2493,  2505,  2521,  2523,  2534,  2539,  2542,  2549,  2551,
    2172, -4608,  -128,  2557,  2574,   -99,  2575, -4608,  2577, -4608,
     283,  2580,  2166,  2172,  2172,  2586,  2595,  2609,  2612,  2614,
    2616,  2625,  2632,  2633,  2634,  2635,  2639,  2644,  2647,  2663,
    2664,  2666,  2668,  2671,  2673,  2675, 22475, 22475, -4608, 22475,
   11555, 30127, -4608, 69457, -4608, -4608,  2010, -4608, 49801,  3681,
   -4608,  3385, 22475,  1113, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,  2269, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608,   113, -4608,  2677,  2077, -4608, -4608,  2119,  2119,
    2119, 69457,  2662,  2119,  2119,  2222, 69457,  2119,  2504,  2119,
    2119,  2119,  2747,  2119,   -27, -4608, -4608, -4608, -4608,  2978,
    2734,  2716,  2234, -4608,  2558, -4608, -4608, -4608,  2854, -4608,
    2683, -4608,  2723, -4608,  2919,  2683, -4608,   272,  2683,   258,
   -4608, -4608, -4608,  2683, -4608, -4608, -4608, -4608,  1620, -4608,
   -4608, -4608, -4608,  1093, -4608,  2930,   147, 60385,  3150, -4608,
   -4608, -4608,  3155, 69457,   -18, -4608, -4608, 17015, -4608,  3174,
   -4608,   351,  3266,  3267, -4608, -4608,   -27,  3268,   181, 69457,
   55093, -4608,   -27, -4608, -4608,  3218, -4608,   131,   933,  2845,
   -4608, -4608,  2966, -4608,  2734,  3091,   115,   221, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, 13115,  3142,
   -4608, -4608,   318,  2973,  1445, -4608, -4608, 50557,  1099, -4608,
    1333, -4608, 73237, -4608,  3264, 30884, 52069, -4608,  2696, -4608,
   -4608, -4608, -4608, -4608, -4608, 71725,  2701,   257,  9656,  2966,
   -4608,    48,   814, -4608,    48, -4608,  2714, -4608, 69457, 69457,
     -18, -4608, -4608, -4608, -4608,  2724,  2718, -4608, 69457,  2726,
   -4608,  2732, -4608,   373,   373,   373,  3414,   373, -4608,   373,
    2831,  2733,  2738,  3467,  3360,  2042,  3361, -4608,  3328,  3416,
    2758,   235,    77,  1673, -4608, -4608,  2757, 69457,  2166, -4608,
    2761,   402, -4608, -4608,  2762, -4608,  2452, -4608,   -37,  3377,
    3383,  3386, -4608,  2768, -4608, -4608, -4608, -4608,  2645, -4608,
    2938,   -11, 28613,  3302,  2426, -4608,  1865,  3505,  2105,  3278,
   -4608, 52825,  2105,  3278, -4608,    55,  1236,  1701,  3262,  3362,
    3398, -4608,  2408, 55849,  1440, -4608, -4608, 55093, -4608, 69457,
   69457,  2813, 60385, -4608, 69457, -4608,  3177,  2597,  8570, 69457,
    3392, -4608, 69457, 69457,  3034, -4608, 69457, -4608,    80, -4608,
    2123, 17015, -4608, 69457, -4608, -4608,    43, -4608,   357,   341,
     907,  1439, 69457, 69457, 69457,  3049,  3376, 69457,  2872,  3563,
   69457, -4608,  3312, 55093, 76261, 69457, -4608,  3324, 69457, 69457,
    2377,  1431,  1122, -4608, -4608, 17015, 17015,  2158,  3519,  3579,
    3579,  3579,  2406,  2972, 17015, 17015, 17015, 17015, 17015, 17015,
    2177,  2828, -4608, -4608,   -16, -4608,  2832, 17015, 17015, -4608,
   17015, 17015, 69457, -4608,  4688, 17015, 17015,   575,  3469, 17015,
   17015, 17015, 11555,  5207, 17015, 17015, 69457,  3600,  2833, -4608,
    2842,  2292, 17015, 17015,  2351, 17015, 17015, 17015, 17015, 17015,
   -4608, -4608, 17015, 17015, 22475, 17015, 17015, 17015, 17015, 17015,
   17015,  2836, 17015,  3579,  3579, 17015, 17015,  2405, -4608, -4608,
   17015,  1743,  1743, -4608, 17015, 12335, 17015, -4608, -4608, -4608,
    2860, -4608, -4608, -4608, 69457,  3579,  3579, 17015, 17015, 17015,
    3579,  3579, 17015,  2863,  2867, 17015, 17015, 17015, 17015, 17015,
   22475,  2870,  2877,  2878, 22475,  3519,  3519,  3519,   -71,   333,
      77,   229,  1509, -4608,  3122, 17015, 17015, -4608, -4608, 64165,
   -4608, -4608, -4608, 17015, -4608, 17015, 17015, -4608, -4608, -4608,
   -4608, -4608, -4608,  3333, -4608, -4608, -4608, 18575, 22475, 22475,
    2873, 22475, 22475, -4608, -4608, 22475, 22475, 22475,  3381,  2992,
   22475, 22475, 23255, 24035, 22475, 22475, 22475, 22475,  1571,  3519,
   60385, 22475, -4608, -4608,  2269,  2269, 17015, 42991, 69457, 69457,
   69457,  3284, 69457, 69457, 60385,  2955,  1405, 69457, 69457, 55093,
   69457, 76261, 69457, 69457,  2119,  3050,  4028, 33155, -4608, -4608,
   -4608, -4608, -4608,  3103, -4608, -4608, -4608, -4608, -4608, 69457,
   -4608, -4608, 55093, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   60385, -4608,  1003, 55093, 48289,   193, -4608, 70213, 69457, -4608,
     -18, -4608,  3218,  3151, -4608,  2895,  2406,  3626, -4608, -4608,
    3396,  3650,  3652, 69457, 69457,  -117, -4608, -4608,  3654,  3399,
   -4608, -4608,  2907,  3105, 69457, 69457, -4608, 69457, 69457, -4608,
   -4608, -4608, -4608,  2909, -4608, -4608,  2269,  4467, -4608,  2910,
   55093, 55093,  1003,  3205,   907,   269, -4608, -4608, 74749, 69457,
   -4608, -4608, -4608, -4608,  3624, 17015, -4608, 55093,  2965,  3129,
    3429,    35, -4608,  2924,  2928, -4608,  3052, -4608, -4608,  2934,
   -4608,  2935, 69457,  1116,   257, -4608, -4608, -4608, -4608, -4608,
   69457,  2933,  1333, -4608,  2701,   257, 31641, -4608, 10775,  3550,
   -4608,  1024,  2942,  3084,  1024, 56605,  3278,   332,   228,   289,
     270, -4608,  3527, -4608,  3179,  3163, -4608, -4608,   281,  2689,
   -4608,  3562, -4608,   175, -4608,  3186,  3278,  1024,  1024,  1024,
    1024,  1024,  3520,  1024, -4608,  3445,  3576,    19,  2430,   330,
    1534, -4608, -4608, -4608, -4608,  2957, -4608,   893,  3647, -4608,
    2958, -4608,  3546, -4608, -4608,  2895, 19355,  1595,  2726, 69457,
   69457,  3720, -4608, -4608,  2962, -4608,  3370,  3195, -4608,  3110,
   -4608, -4608,   198, -4608, 69457, 17015,  1941, -4608, -4608, 55093,
    3623, -4608, -4608,   275, -4608,  3607, -4608, -4608,  2988,  3036,
    3718, 60385,  3113,  3040,   196, -4608,  1289, 55093,  3133,   -18,
     -18,   -18,   613,  3615,  3616,  3619,  3628,  3631, -4608,  3632,
   -4608,  3004,  3634, -4608,  3394, -4608, -4608,  2243,  3224,  3224,
   60385,  3021, -4608, -4608, -4608,  3301, -4608, -4608,  1865, 17015,
   -4608, -4608,  1673, -4608, -4608, -4608, -4608, -4608, -4608,   -17,
   -4608, -4608,  1673, -4608,  3278,  3278, -4608, -4608, -4608, -4608,
   64921,  1701,  3155,  3398, -4608, 60385,  3719, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,  3683,
   -4608, -4608, 69457, 69457,   295,   422,  3802, -4608,  3037,  3701,
     257,   257,  3701,   257,   257, -4608,  3235, -4608,   257,   257,
     189, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
    3661,  3158,   257,  2578,  3419,   257,   257,  3747,   257,  3423,
    3425,   257,   257,   257,   257,  3245,  3693, -4608,   257,  3569,
      53,  3866,  3570,   257,  3432, -4608,  1363,  3700,   257,   257,
     257,   257,   257,  3747,  3436,  3790,   257,   257,  3438,   511,
    3439,  3451,   257,  3269,   257,   257,   257,  1524,   257,   257,
    3455,   257,  3239,  3240,   257, -4608, -4608,   257,   257,   257,
    3965, -4608, -4608, -4608,  2526, -4608, -4608,  1946, -4608, -4608,
    3077,  3080, -4608, -4608, -4608, -4608,  3365, -4608,  3153, -4608,
    3369,  3242, -4608,  3034,   124, 65677, 69457, -4608, -4608,  3093,
    3098,  1080, -4608,  2406,  3099,  3094, -4608,  5692,  3387, -4608,
   -4608, 69457, -4608, -4608, -4608, -4608,  3270, -4608, -4608, -4608,
   -4608,  2138, -4608,  3820,  3431, -4608, -4608,  3712, -4608,  3508,
    3880,  3175,  3782,  3516,  2377,  3701,  3282,  3890, -4608,  3671,
   -4608,   105,  2935,  3309, -4608,  3130,  1879, 69457,  3704,  2377,
   69457, 69457, 69457, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   69457, -4608, -4608, -4608, -4608, -4608, -4608,  3034,   248,   512,
   -4608,  3579,  3132, 17015,  3134,  3138,  3140, 17015,   187,  1624,
     892,  1586,  1943,  1197,   239, 17015,  3141, 13895, -4608,  3143,
   -4608, -4608,   255,   304,  1277,  1300,  3144, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608,  3709, -4608,   345,
    3147, -4608, -4608, -4608, -4608,  3154, -4608, 17015,  1462,   347,
     367,   244,  3156,   381,  1971,  1988,  3167, 69457, 69457,  3579,
    3149,  1475,  1528,  3579,  3157,   389,  1592,  1991,  2015,  2024,
     530,  2056,  4104,  1594,   540,   559,  1609,   679,   748, -4608,
    1611,  3168,  3169,   861,   233,  3579,  3170,   278,  3171,  3172,
    1615, 14675, 15455, 16235,   337,   871, -4608,  3173, -4608,  2842,
    3183,  3188,   292,   220,  1639,  3185,  3190,  2073,  3260,  3260,
    1647,   882,  1661,   882,  1022,   146,  3260,  3260,  3260,   163,
     370, -4608, 17015,  3191,  3198,  3202, 60385, 17015,   209, -4608,
   -4608, -4608,  2650,   285, -4608, -4608, -4608, -4608, -4608,  1404,
   -4608,  3209, -4608,  1361,  2536,  3214, 11555, -4608,  1547,  3214,
    2572,  1326,  1326, 22475, -4608,  3213,  3408,  2861, 17795,  1042,
   17795,  1042,  3214,  3214,  3214, -4608, 22475,  3215, 22475, 22475,
   -4608,  3519, -4608, -4608, 49801,  3220,  3211, -4608, -4608,  1864,
   -4608, -4608,  3216, 69457,  1405, -4608, -4608,  2119, -4608, -4608,
   -4608,   354, -4608, -4608,   930, -4608,  3223,   155,  2935,  3806,
   -4608, 69457,  3221, -4608,  3721,  3729,  3730,  3733, -4608, -4608,
   -4608, -4608,  3734, -4608,  3735, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,  3227, -4608, 69457, 27856, 60385, -4608,  3244,
   -4608,  3865, -4608,  3651, -4608, -4608,  2099,  3448, -4608, -4608,
   -4608, -4608, 43747,  1171, -4608, -4608, 69457, -4608,   120,   224,
    4723,  3397, -4608,  2895, 69457,   -18,   -18, 69457, -4608,  3797,
   -4608, -4608,   320,  3254, -4608,  3257, 60385, -4608, -4608,  2004,
     254, 55093, 55093,  3261, -4608,  3460,   311,  3643, -4608,  3462,
    4033,   933, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608,  3271,  3887,  3844,  3677,  3861,
    3223, 43747, -4608, 69457, -4608, 25577,  3397, -4608,  3863,  3478,
    3479,   845, -4608, 57361, -4608,  2406,   211,  3608, -4608,  3608,
    2076, -4608, -4608,  3810, -4608,  3633, -4608, 76261, -4608, 60385,
   76261,  3873,  3288,  3289,  3292,  3293,  3294, 72481, 17015, -4608,
   -4608, -4608, 10775,  3291, -4608, 72481, -4608, -4608, 22475,  2232,
   -4608, -4608,  2505, -4608,  2406, -4608,  3829,  2269, 17015, -4608,
   -4608,  3310,  2377, 69457, 69457, 69457, 69457, 69457, 55093, 69457,
   -4608,   127,   127, -4608, -4608, -4608,  1024, 69457, -4608, 69457,
    1024, 55093, -4608,   332, 69457,  1024, -4608,  3828,  3522, -4608,
   -4608, -4608,  3900, -4608, -4608,  3891,  3307, -4608,  3829, -4608,
    3546,   332, -4608, -4608, -4608, -4608, -4608, -4608,  3894, -4608,
   -4608, -4608, -4608,   332, -4608, -4608, -4608,   332,   332,   332,
    1024,  1024,    48, -4608, -4608,  3578,   814,  4036, -4608,  2232,
    2406,  3322,  3320, -4608, -4608, -4608,  2142, -4608,  1361,   373,
    3698, -4608,  3912, -4608, -4608, -4608, -4608, -4608,  1929,  1761,
   -4608,   169,   191,  3708,   339,  3330,   257, -4608, -4608, -4608,
   -4608,  3710,  1332, -4608, 75505,  3714,  1340, 60385,  3541,  3544,
   -4608, -4608,  3553, -4608, -4608,   506,  2141, -4608,  2607,   208,
   -4608, -4608, -4608, -4608, -4608,   -18,  1427,   -18,  3000,   -18,
     -18,  2139,   -18,  3546,  3966,  4001, 69457,  3459, -4608,  2085,
   -4608, -4608, -4608, -4608,  2622, -4608, 32398,  3788,  2525,  3352,
   -4608, -4608, -4608, 52825, 52825, -4608, -4608, -4608, -4608, 69457,
      49, -4608,  3353, -4608, 26339, -4608,  3112,   134, -4608, -4608,
   -4608, -4608,  2566,  3454, -4608, -4608,  4075,  3663,  3876,  3879,
    3547,  3454,  1472,   -18,  2686, -4608,  2890,   -18,  2686,  2890,
    2890, 69457,   -18,  3112, -4608,   657,   257, -4608, 69457,  1080,
     212,  1080, -4608,   312, 69457, 40723, 66433, 69457, 69457, 69457,
   69457,   212,  1427,  3000, 69457,  3000, 67189,   212,   -18,   -18,
     -18,   -18,  2622,   257,  3000, -4608, 67189, -4608, 69457, 69457,
    3883, 69457,  3885, 69457, 69457, -4608, 60385, 69457, 67189, -4608,
     257,  1977,  3000, 67945,  1427,  1427, 69457,   212, 69457,  3238,
     -18,   212, -4608, 69457, -4608, -4608, 69457, 69457,   212,   212,
    2354, -4608,  3238,  3238,  3249, -4608, -4608, 69457,  3000, 67189,
    3388, -4608, -4608, 58117,   -18,   -18,  3112, -4608,   257,   257,
    3759, -4608, -4608,  5735,  9394,  1990,   257,  3457,  3787,  1892,
   69457, -4608,  3493,  3496, -4608, -4608, -4608, -4608, -4608,  1080,
   67189, 68701,  3923, -4608, 17015,  4021,  4022,  4023,  4027,  4029,
    4031,  4032,  4034,  4035,  4038,  4039,  4041,  4042,  4044,  4045,
    4048,  4052,  4053,  4054,  4055,  4057,  4059,  4064,  4066,  4068,
    4069,  4073,  4074,  4076,  4077,    71, -4608, -4608,  4079,  4081,
    4084,  4087,  4088,  4089,  4091,    83, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,   219, 69457,  3547,  3487,  3590, 69457,  2004,
   -4608,  3902,  2771,  3701,   241,  3588, 55093,  3789,   257,  1196,
    1121,  1121,  3877, -4608,  4225, 69457, 69457,  3482,   -64, -4608,
    2555, -4608, 20135, -4608,  3483,  3260,  2406,  3260,  3260,  3260,
    1341, 17015, 17015,  4107,  3382, -4608, 58873, -4608, -4608, -4608,
   58873,  3382,  2155,  3260,  3488, -4608,  4013,  4018, -4608, -4608,
   -4608, 17015, 17015, -4608, 17015,   812, -4608, 17015, 17015, 17015,
   17015, 17015, -4608, -4608, 22475, -4608,  3484,  3490,  3260, -4608,
   -4608,  3492,  3260, 17015, -4608, -4608, -4608, -4608, 17015, -4608,
   17015, -4608, 17015, 17015, -4608, 17015, 17015, -4608,  3260,  3260,
   20915, 17015, 17015,  3494,  3260, -4608, 17015, 17015, 17015, -4608,
   17015,  2248, 17015,  2547, 17015,  2576, 17015, -4608, 17015, -4608,
    3260,  3260, -4608, 17015,   479, -4608,  3000, -4608,  3579,  3260,
   -4608, 41479, -4608, -4608,    99,  2626,  3497,    99,  3498, 22475,
    3260, -4608, -4608, -4608,  1297,  2164, -4608, -4608, -4608,  3501,
    2406, -4608, -4608, -4608, -4608, -4608, -4608, 22475,   313, 22475,
    2572, 22475,  5207,  5207,  2611, 11555, -4608,  1784,  2572, -4608,
   -4608, 17015, 17015, 44503, 69457,   440, -4608,  2004,  1470, -4608,
     161, -4608, -4608, 55093, -4608, -4608, -4608, -4608, -4608,   155,
   60385,  3499, -4608, -4608, -4608, -4608, -4608,  3546, -4608,  4058,
    3257, -4608,  3706,  3713,  3723, -4608, 34669, -4608, -4608, -4608,
   -4608, 34669,  1621,  1003, -4608, 69457, 55093,  3510,  3511,  3517,
    3703,  3641, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,  3397,  3524,  3278, -4608,  3643, -4608, -4608,
    3521, -4608,  2123,  3224,  1313, 69457, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, 17015,   -18, -4608,  3717,
   -4608, 69457, 69457, -4608, -4608, -4608, -4608,   869, -4608,  3528,
    2594, -4608,  2004, -4608, -4608,  3546, -4608,  4467, 27856,  3919,
    1003, 55093,  4110, -4608, -4608,  3535,  1361,  3536, 24815,  3585,
   -4608,  3537,  2403, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608,  3643,  3178,  4106,  3397, 76261, 76261, 76261, -4608, -4608,
   -4608,  3586,  3129,  3129,  3592,  3592,   392,  3889, -4608, -4608,
   -4608, -4608,  2935, -4608, -4608,  3112, -4608, -4608, -4608, -4608,
   -4608,   257,  2406, -4608, 31641, -4608,   -18,  4127, -4608,  2406,
    3551, 69457, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,  3711,  1024,
   -4608, -4608, -4608, -4608, -4608,  3903,  3278,  2689,  4127, -4608,
    1024, 55093,  1024, 69457, 69457,  1024, -4608, -4608, -4608,  4133,
   -4608,   -18, -4608, 19355, -4608, 69457, -4608,  3552, -4608,  3997,
   69457,  4178,  3565, 22475,  3566, 22475,  3112,  3792,  3573,  4325,
    3000,  3224, -4608,  3608,  3940, -4608, -4608,  2935, -4608,  3895,
    3948,  3592,  1859, -4608, -4608, -4608, -4608,   508,  3000,  3000,
    3000,  3000,  2607, -4608,  1041,  1234,  2233,  3112,   231,   208,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608,   -18,  4195,  3950,  3577, -4608, -4608, 58873,  4285, -4608,
   -4608, -4608, -4608, -4608, -4608, 17015, -4608, -4608,   594,   327,
    1331, 26339, 69457, 45259, -4608,   696, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,   257,   -18,  3826,  3833,  3837,  3838,  3839,
    3869, -4608, -4608, 69457,  3984, -4608,  3000,   -18,  1195,   -18,
     -18,   -18,   -18,  3000,   -18,   -18,  2178, -4608, -4608, -4608,
     361, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, 60385, -4608, -4608, -4608, 69457,   806, 69457,
    3598,  4112,  4113,    26, 69457,  1080,  3603,  3765,  3793, 51313,
    8453, -4608, -4608, -4608,  4017,  4017,  2132,   251, 67189, -4608,
   -4608, 69457, -4608, -4608,  2138,  3606, -4608,  3112, -4608, -4608,
   -4608, -4608, 53581,   -18, -4608,  3825, -4608, -4608, 69457,  3606,
   -4608, -4608,   336, -4608,  3753,  3827,   -18, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608,  8453, 67189,  3614,
   -4608,  1246, -4608, -4608, -4608, -4608, 67189,  3812,  3813, -4608,
   69457, 67189, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, 69457, -4608, -4608, -4608,
   -4608, -4608, 57361, 58873, -4608,  2904,  3896,  3965, -4608, -4608,
   -4608,  3077, -4608, -4608, -4608,   930,  4024,   257,  1198,   308,
   -4608,  3947, -4608, -4608,  2732,  4025,  4026,  3625, -4608,  3629,
   -4608,  3630, -4608, 65677,  2406,  3640,  3000,   -18,  3000,  3000,
     -18,   -18,  3000,  3000,   -18,   -18,   -18,   -18,   -18,   -18,
     -18,   -18,  3000,  3000,   -18,  2383,   -18,  3000,   -18,   -18,
    3000, 59629,  1411,  3000,  1005,  5692, -4608,  3642,  3642,  3644,
    3644,  3649,  3649,  3653,  3387, -4608, -4608,   256,  3655,  1980,
    2004, 60385,  3656, -4608,  4187,   257,   257,   257,   257, -4608,
     386, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,   930,  1471, 60385, 76261, -4608,  3133,
    1343,  3836,  3657, -4608,  2269, -4608, -4608, -4608, -4608, -4608,
   69457,  2042, -4608, 69457, -4608, 38454, -4608, -4608, -4608, -4608,
     982,  1190, -4608,  1865,  1236, -4608,   804,  3949, -4608, -4608,
    1342,  3662, -4608, -4608,   562, 17795,  1785,  3260, -4608, -4608,
   -4608, -4608, -4608, 17015,  2406,  2095, -4608,  3665,  3665,  3668,
   -4608,  3670,  4011,  3665, -4608,  4364, -4608, -4608,  4182,  3668,
    4185,  3665, -4608,  3725,  3675,  3678,  3679,  3260, -4608,  3260,
   17015, 17015,  1813,   324,  1815,  4405,  3962,  1111,  1126,   360,
   -4608,  1829,  4128,  3260, -4608,  3260, -4608,  1835,  1840,  1881,
    1883,  1134,  1890,  2184, -4608, -4608, 17795,  1910,  1262,   444,
    3260, -4608,  1912,  1167,  1180,  1925, 17015,  1944, 17015,  1953,
   17015,  1973,  2048, -4608, -4608,  2069,  3684,  3684,  3682,  3685,
   -4608, 69457, -4608, -4608, -4608, -4608,  3770,  3775,  3260,  3688,
    3688,    99,  3260,    99,   200, -4608,   -98, -4608, 69457, -4608,
   -4608, -4608, 17015,  1113,   215, -4608, -4608, 22475,   480, 22475,
   -4608,  3694, -4608, -4608, -4608, -4608,  4179,  4457, -4608, -4608,
    3925, -4608, -4608, -4608,  3221, -4608, -4608,   362,  4314,  3695,
   -4608, -4608, -4608, -4608, -4608, 43747, -4608,  1274,  3716, 46015,
   55093,  4093,  3278, 19355, -4608,  2866, 69457,  1080,  4248,   194,
    3840,  4199, -4608, -4608, -4608,  2406, -4608, 55093, -4608, -4608,
   -4608, 69457, 69457,  1595, -4608, 36183, -4608, -4608, -4608, -4608,
    3707, -4608, -4608,  4329, -4608,  4294, 43747,  3223, 55093, 17015,
    3178, 17015,  3715,  3722,  3727,  3732,  3737,  3738, 26339, 26339,
    4234,  4235, -4608,  4103,  1410,  4103, -4608, 39210, 26339, 26339,
    2970,  2732,  4449,  4282,  4106,  2935,  2935,  2935,  3608,  3608,
   -4608,  4407, -4608, -4608, -4608, -4608, -4608, -4608,   411, -4608,
   10775, -4608, -4608,  1427, -4608,   144, -4608, 55093, -4608,  4138,
   -4608, -4608, -4608, -4608,  3904, -4608,   332,   332, -4608,  4020,
   -4608, -4608, -4608,  3000, -4608, -4608, 69457,  2849, 69457,  3931,
   -4608,  4472,  3740, 22475,  4361,  3750,  4296, -4608,  3592,  3608,
    3129,   -32, -4608,  1013,  1474, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,  1713,  4424,  3290,  4283, -4608, -4608, -4608,
    2269,  2269, -4608, -4608, -4608,   -18,  4370, -4608, -4608,  1409,
    4253, -4608, 26339,  3643, 45259,  -159, -4608, -4608,  3754, 69457,
     -18, -4608, -4608, -4608,  4423, -4608,  4425,  2014,  4169,  4377,
   -4608, -4608, -4608,   416, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608,  1472, -4608,  3766,  3112,
    4141,  3769, 17015, 69457, -4608, -4608,  3815, -4608, -4608,  3773,
   -4608, 42235,  1121,  1121,  2193, -4608, -4608, -4608,  8453, -4608,
    3665,  3665,  3665, -4608, -4608,   388,  3668, -4608, -4608,  3774,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,   397,  2393,
   -4608, -4608,   397, -4608, -4608, -4608,   188,  1872, -4608, -4608,
   -4608, -4608, -4608,  3776, -4608,  3665,  3668,  3668, -4608, -4608,
     397,  3665, -4608,  3665,  4111,  3905, -4608,   164,  3665,  3665,
    3665,  3778,  3670, -4608, -4608, -4608, -4608, -4608,  4430,  4431,
   -4608,  8453, -4608, 69457, -4608,  3624,  3624, -4608, -4608, -4608,
   -4608,  3994, -4608, -4608,  1711, -4608, 69457, -4608, -4608, 69457,
   69457,    69,   869,  3785, -4608, -4608, -4608,  3795,   276, -4608,
      21, -4608, -4608,  3806,  2030,  1965,  3981,  2199, -4608, 69457,
   69457, -4608, -4608, 68701, -4608,  3000, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, 36940, -4608, -4608, 37697, -4608, -4608,   703,
   -4608, -4608,  2186, -4608, -4608, 42235,   257,   257, -4608,   477,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,  4190,
   42235,   771, 69457,   -18,  2890,  2890,  3112,  2773, -4608,  4162,
   -4608,  2021,  2935,   208, -4608, -4608,  3153, -4608,  3801, -4608,
   -4608, 69457,  2203, -4608, -4608,  5502,  1865, -4608,  1342,  4201,
   69457, -4608, -4608, -4608, -4608,  4080, -4608, -4608, -4608, -4608,
    4204,  5207, -4608, -4608,  2406, 17015,   396, -4608, -4608,   397,
    4211, -4608,  1156, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608,  3809, -4608, -4608, -4608,
   -4608, -4608,  5207,  5207, -4608, -4608, 17015, -4608, 17015,   373,
    3816, 17015, 17015, -4608, 17015, -4608,  1265,  3817,  3951, -4608,
   -4608, -4608, -4608, -4608, -4608, 17015, -4608, -4608,  5207, -4608,
   17015, -4608, -4608, 17015, -4608, -4608, 17015, 17015, -4608,  2083,
   -4608,  2102, -4608,  2106, -4608, -4608, -4608,  3112,  3819,  3821,
    3000,  3260, -4608,  3822,  4188, -4608, -4608, -4608, 17015, -4608,
   -4608,  3260, -4608,  3260,  4402,  3382,   309, -4608,  2208, -4608,
   -4608, -4608, 17015,  1113, -4608, -4608, -4608, -4608, -4608, -4608,
    4167, -4608,  4273, 34669,  4019,  4394, -4608, -4608, -4608, -4608,
    1375, -4608, -4608,  2251, 69457,  4589,  4238, -4608,  1080,  4248,
    4343, -4608,  4367, -4608, -4608, -4608, -4608,  3841,  3606,  3842,
   -4608,   257,  3152,  2254, -4608, -4608, -4608,  3846, 19355,  3843,
   -4608, 27856, 55093,  4421,  3223,  1187,  2732,  2126, 26339, -4608,
   -4608, -4608, -4608, -4608,  2403,  3845,  3849,  3851,  2403, -4608,
   -4608, -4608,  4363, -4608,  4103,  4103,  4379,  4380, -4608,  3660,
    3935,   214, -4608, 17015, 17015,  3927,  4282,  3592,  3592,  4224,
    3112, -4608, -4608,  3278, -4608, -4608,  3223, -4608,  3278, 55093,
    3397,  1024, 17015, -4608,  2257, -4608, -4608,  2262, -4608,  4362,
    4141, -4608,  3961,  3112, 69457,  4592, -4608,  3592,  3592,  3129,
   -4608, -4608, -4608,  3592,  4237,   828, -4608,  3112, -4608,   135,
   -4608, -4608,  3515, -4608, -4608, -4608,   -18,  4594,  4595,  4492,
    4598,  1409, -4608,   -26, -4608,  -159,  3397,  1408, -4608,  3878,
   -4608,  -156, -4608, -4608, -4608, -4608, -4608,  4170, -4608,  1498,
   -4608, 42235, -4608, 69457,  2279, -4608, 42235,  2167,  3875, -4608,
   42235, 17015, -4608,  2286, -4608,   190, -4608, -4608, -4608, 51313,
    4111, -4608, -4608, -4608,  4616,   661, -4608,  4617, -4608,   397,
   58873, -4608, -4608, -4608, -4608,   373, -4608,  1561, -4608,   397,
   -4608, -4608,  4030, -4608, -4608, -4608,   373,   397, -4608, -4608,
   -4608, -4608,  1413, 69457,  1711, -4608, -4608, 57361,  2471,   -18,
    3206,  3930, -4608,  4056, -4608,  4528,  1759,  4398,  2004,   257,
     257,  4399,  4599, -4608, -4608,  4072, -4608,  4461,  4404,     5,
   -4608,  4633, -4608,   397,  4633,  1413,  4297, -4608,  1413,  1413,
   -4608,  3646,  1711, -4608, -4608, -4608, 69457, 69457, -4608, -4608,
   -4608, -4608, -4608,  3897, -4608, -4608,  4298,  4024, -4608,  4300,
   -4608, -4608,  4259, -4608, 17015, 17015,  4291, 69457,  4299, -4608,
    4601,  4659,  3606,  1394, -4608,  2293, -4608, -4608, -4608,  2322,
   -4608, -4608, -4608,  2331, -4608, -4608,  3906, -4608,  2356, -4608,
   -4608, -4608, 69457, -4608,  2369,  2378,  2890,  2890,  2682,   771,
    3908,  2385,   -18,   -18,   -18,   -18, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608,  1013,  1503,   231,  3457, 42235,  3909,  6845,
   -4608,  4172,  4198,  3913,  3911, -4608,  8453,   -18,    89, 69457,
     572,  2406,  3916,  3917,  3918,  3928, -4608,  3929,  2392, -4608,
    3933,  3934,  2213,  3926, -4608, -4608,  3260,  2228,  1245,  2398,
    4371,  4447, -4608,  4288, -4608,  2235,  1137,  2242,  2246,  2256,
    2273, -4608, -4608, -4608, -4608, -4608, -4608,  3939, -4608, -4608,
    4672,  4333,  2406, -4608, -4608,   321,    99, -4608,  3749, -4608,
   -4608,  3946,   309, -4608,  4345, -4608,  2409,  4550,  4450, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, 55093,  4349,  4526,  4717,  3397,   177,
   69457,  4238,  4593, -4608, -4608, -4608,  4173, -4608, 69457, 19355,
   -4608, -4608,  3152, 69457, 42991,  3967,  3707, -4608,  3223, 55093,
    1297, -4608,  3306,  2298, -4608, -4608,  4483,  4484, -4608, -4608,
   17015,  3973, 17015,  3974, -4608, -4608,  1080,  1080, -4608,   214,
   -4608, -4608,  2406,   551, -4608,  2406, 69457, -4608,  3927, -4608,
   -4608, -4608, -4608, -4608,  3546,  3223, -4608, -4608,  2406, -4608,
   69457, -4608,  2066,  2422, -4608, -4608,  3978,  3970,   -18, -4608,
   -4608,  3592, -4608,  3592,  3129, -4608,  4638, -4608, -4608, -4608,
    4639, -4608,   373,   373,  4712,   373, -4608,  4713,  4715,   -26,
   -4608, -4608,  4381,  4381,  4392, -4608,  2424,  4151, -4608,  4141,
    2437, -4608, 69457,  2450,  2288,   580, 42235,  4400, -4608, -4608,
   -4608, -4608, -4608, -4608, 58873, -4608, -4608,  4633,  2464, -4608,
   -4608, -4608,  2472, -4608, -4608, -4608, -4608, -4608,  1413, -4608,
    3999, -4608,  1540,  4140, -4608, -4608, -4608, -4608, -4608,  3706,
    3713,  3723,  2383,  2383, 17015, -4608, -4608, -4608, -4608, -4608,
   -4608,  4413,  4161, -4608, -4608, -4608, -4608, -4608, -4608,   -18,
     -18, -4608, -4608, 57361, -4608,  4773,  4775, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,  4037, -4608, -4608, 17015, -4608, -4608,
    1875, -4608,  4141, -4608, -4608, -4608, -4608,  2406,  5207,  4716,
   -4608, -4608,  4292,   -18,  4656,  2042,  4438, -4608, -4608,  3000,
   -4608, 69457, -4608, 69457, 69457, -4608,   -18,  4040, -4608,  4051,
     939, -4608, -4608, -4608,  1472,  1140, -4608, -4608, -4608,  4584,
   -4608,  4415, -4608, -4608,  1198,  2478, -4608, -4608,   -18,  1965,
   -4608, 69457,  3624, -4608, -4608, -4608, -4608,  4047,  4049, -4608,
   69457,  4636, -4608, -4608, -4608, -4608, -4608, -4608,  4454, -4608,
   -4608, -4608, 17015, -4608, -4608, 17015, -4608, -4608,  4489,  4660,
   -4608, -4608, -4608, -4608, -4608, -4608,  4060,  3000, 17015,  4784,
      30, -4608, -4608,  3260, -4608, -4608, -4608,  4456,   119, -4608,
   -4608, -4608,  1375, -4608,  4452, 55093, -4608,  3278,  4238,  2732,
   -4608,  4575, 69457, -4608, -4608, -4608, -4608, -4608,  4061, -4608,
   -4608,  3223,   205, -4608, -4608, -4608, -4608,  2406, 69457,  2406,
   69457,  4645,  4645, -4608, -4608, 17015, -4608,  4819,  4063, -4608,
   -4608, -4608, -4608,  4086,  4325, -4608, -4608,   280, -4608, -4608,
    3592, -4608, -4608, -4608, -4608,   373, -4608,   373,   373, -4608,
    4579,  4579,  4694,   939,  2261,  2766, -4608,  1140,  2480, -4608,
     580,  1246,   -18,   257,   257,   257, -4608,   580, -4608, -4608,
   -4608, -4608, -4608,  4083, -4608, -4608,   397,   373,   397, -4608,
   69457,  4538,  4114, -4608, -4608, -4608,  2305, -4608, -4608, -4608,
   -4608, -4608, -4608,  4090,  2334, -4608, -4608,  2481, -4608, -4608,
   -4608, -4608, -4608,  4227, -4608,  4193, -4608, -4608, -4608, -4608,
   -4608, 69457, 69457,  4479,   440,   939, -4608, -4608,  2486,   440,
    1140, -4608, -4608,  4830, -4608, -4608,   580, -4608,  4291,  4406,
   -4608, -4608, -4608,  2064,  8453,  4731,  4105, -4608,  2338, -4608,
   -4608, -4608,  4108,  4109, 17015, -4608, -4608, -4608, -4608,  1553,
   -4608,  4724, -4608, -4608,  4717, -4608,  4250, -4608, -4608, -4608,
    4276,  3643,  4115,  4126,  4129,  4130,  1684,  4116,  4132, -4608,
    4135, 69457, 22475,  4142,  4752,  1347, -4608, -4608, -4608, -4608,
   -4608, -4608, 52825, -4608, -4608, -4608, -4608,  4144,  4334,   257,
    4779,  4780,   257,   257,   257,   257,  4145,  2766, -4608,  4745,
   -4608,  4111, 69457, -4608, -4608, -4608,  3000,   -18,   -18, -4608,
    1246, -4608, -4608, -4608,  2494, -4608,  1175,  4543, 69457, -4608,
   17015, -4608, -4608,  4384, -4608, 83065,  1597, -4608, -4608,  4147,
    4149,  2397, -4608, -4608, -4608, -4608, -4608,  2004,   440,  2199,
   -4608,  8453, -4608, -4608,  3624,  4441, -4608, -4608, -4608,  3352,
    2848,  4443, 17015,  4240,  4251, -4608, -4608,  4241,  4242, -4608,
    4284, -4608, 69457,  2622, 70969,  3306, -4608, -4608,  4891, -4608,
    4893, 68701, 68701, -4608, -4608,  4082, 69457,   257,  4408, -4608,
   -4608,  4171, -4608, -4608,    32,   -18,   257,   257,  2004,  2004,
    3112, 69457,  4387, -4608, -4608,   257, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, 69457, -4608, -4608, -4608,   565, -4608, -4608,
    2355, 17015,  4789,  4313, 69457,  1556, -4608, 84577, 84577, 69457,
   -4608, -4608, -4608, -4608,  7798, -4608, -4608,  1259, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,  4917,
   -4608,  4175, -4608, -4608, -4608, -4608,  4887,  4567,  4889, -4608,
   69457, -4608, -4608, -4608,  4601,  3624,  4767, -4608,   240, 17015,
    -135, -4608,  4935,   684,  1169, -4608,  5207, -4608,   192, -4608,
   -4608, -4608, 73993,  3842,  4476,  4256,  2495, -4608,  9983, -4608,
   -4608, -4608,  4184,  2497,  4409,  2511,  3224, -4608, -4608,  2519,
   -4608, 21695, -4608, -4608, -4608, -4608,   -18,   -18, -4608, -4608,
   -4608, -4608, 60385,  2543, -4608, 60385, -4608,  1317,  1317,  1696,
    2406, 17015, -4608, 17015,  4327, -4608, -4608,  4765, 69457, -4608,
   -4608, -4608, -4608, 17015, -4608, 83065, 83065, -4608, -4608, -4608,
   -4608,  4932,  4580, -4608,  4581,  4192,  4826, -4608, -4608, -4608,
   -4608,  4836, 83065, -4608, -4608, 60385, -4608,  5207, -4608,  2848,
   -4608, -4608,  4279,  4488, -4608,  4287, -4608,  3052, -4608, -4608,
    2935,  4749,  4285,  1297, -4608, 70969,  4271,  3624, -4608, -4608,
    3112, -4608,  4409,  4514, -4608,  4171, -4608,  2553, -4608,  2572,
   -4608, -4608,  2766, -4608,  4387, -4608, -4608,  4974, -4608,   317,
    4603,  4604, -4608, -4608,  4072,  2406,  2406, -4608,   443, -4608,
   -4608,  4739,  4832, 17015,  2406, 79285,  4209, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   83821, 17015, -4608,  1259,  4917, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, 83065,  2008, -4608, -4608, -4608, -4608, -4608,
    4943,  4253,   205, -4608, -4608,  4821, -4608, -4608, -4608, -4608,
   -4608, 21695, -4608, -4608, -4608, -4608, -4608,  4385,  4863, -4608,
    4365, 17015, 83065, -4608,  4841, -4608,  4766,  2406,  4706,  4223,
   -4608,  4226,  2406,  4881, 84577, 84577, -4608,  4767, -4608, -4608,
     373,  4776, -4608, -4608,  4303, -4608,  1317,  1317, -4608,   461,
   -4608,  2406, 80041,  4956, 69457, -4608,  4436, -4608, -4608, 17015,
    4869, 61141, 80797,  4243, -4608, -4608, -4608, 83065, -4608,  4640,
    4244,  1297, -4608, -4608, 17015, -4608,  4861,  4445, -4608,  4236,
   -4608, 83065,  2406, 83065, -4608, -4608,  4807,  9383,   442, -4608,
    4246, -4608, -4608,  1008, 33912,  4529,  1288,  2406,  4975, 83065,
   69457, 77017,  4874, 81553,  4837, 69457,  3624,  4839,  4842, -4608,
   -4608, -4608, -4608, -4608, 60385,  2588, -4608, -4608, 69457, -4608,
   -4608, -4608,   309,  4462, -4608, 77773, -4608,  2825,  4583,  4403,
   -4608, -4608,  4915,  3407, -4608, -4608, -4608, 35426,  4261, -4608,
     257, -4608,  4664, 83065, 83065, -4608, -4608, -4608, -4608, 49045,
   17015, -4608, -4608, -4608, -4608,  1997, -4608, 69457, 19355,  4344,
   78529, 82309, -4608, -4608, -4608, 27100, -4608, -4608, -4608,  4849,
   -4608,  2406, -4608, -4608, -4608, 49045, -4608, -4608, -4608
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1915,  2982,  1219,  2934,     0,     0,     0,     0,     0,     0,
    2936,  2982,   107,  2041,  2042,     0,  1858,     7,     0,  1219,
     363,     0,     0,   119,     0,  1872,     0,  2104,     0,     0,
    1219,     0,  2097,     0,     0,  1219,  1920,  2081,   340,     0,
    2936,     0,  1284,     0,  1950,  2790,     0,     0,     0,     0,
    1933,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2791,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,  1142,    98,
    1181,    99,    33,    83,    28,    29,    32,    76,    82,    77,
      78,    91,  1250,  1247,  1779,  1249,  1262,  1270,  1271,  1272,
    1916,    45,    58,    49,    46,    48,    52,    51,    60,    61,
      47,    59,    56,    57,    50,    54,    55,    53,    71,    84,
     103,     0,    43,   100,    96,    44,    63,  2043,    64,    85,
      80,    73,   104,    74,    92,    94,    93,    75,   102,    97,
      87,    18,    68,    88,    67,    14,    35,    89,    90,    81,
     105,    72,   101,    70,    34,     0,  1040,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1856,     0,   978,  2980,
    2981,  2982,  1221,  1220,     0,  2936,  2205,  1206,     0,  2290,
    2289,  2292,  2294,  2295,  2296,  2297,  2298,  2299,  2241,  2301,
    2303,  2304,  2305,  2306,  2307,  2242,  2308,  2309,  2310,  2311,
    2312,  2313,  2243,  2244,  2315,  2316,  2317,  2318,  2320,  2245,
    2246,  2321,  2322,  2323,  2325,  2326,  2327,  2328,  2329,  2330,
    2331,  2248,  2332,  2249,  2333,  2334,  2336,  2337,  2369,  2338,
    2339,  2340,  2341,  2342,  2343,  2251,  2344,  2345,  2346,  2347,
    2348,  2349,  2350,  2351,  2352,  2252,  2353,  2354,  2356,  2358,
    2359,  2360,  2361,  2362,  2253,  2363,  2364,  2365,  2367,  2254,
    2370,  2372,  2373,  2375,  2377,  2376,  2378,  2379,  2280,  2380,
    2381,  2238,  2383,  2384,  2385,  2386,  2387,  2389,  2390,  2281,
    2391,  2392,  2393,  2394,  2255,  2256,  2396,  2397,  2398,  2399,
    2405,  2400,  2401,  2402,  2686,  2404,  2257,  2406,  2258,  2410,
    2409,  2411,  2201,  2412,  2202,  2413,  2259,  2416,  2417,  2418,
    2419,  2260,  2421,  2422,  2423,  2424,  2425,  2426,  2428,  2261,
    2429,  2430,  2431,  2432,  2433,  2434,  2687,  2436,  2437,  2438,
    2439,  2441,  2442,  2444,  2446,  2447,  2448,  2449,  2451,  2452,
    2453,  2463,  2454,  2455,  2456,  2458,  2457,  2459,  2460,  2461,
    2464,  2443,  2466,  2467,  2468,  2469,  2470,  2471,  2472,  2474,
    2475,  2476,  2477,  2478,  2479,  2480,  2481,  2482,  2483,  2484,
    2485,  2486,  2487,  2488,  2489,  2490,  2491,  2492,  2493,  2495,
    2496,  2497,  2498,  2282,  2262,  2500,  2502,  2503,  2505,  2508,
    2509,  2510,  2512,  2516,  2517,  2518,  2519,  2520,  2522,  2521,
    2523,  2526,  2528,  2529,  2527,  2530,  2531,  2532,  2263,  2264,
    2534,  2535,  2536,  2283,  2538,  2540,  2539,  2284,  2541,  2542,
    2543,  2545,  2546,  2547,  2548,  2549,  2551,  2552,  2553,  2554,
    2555,  2285,  2556,  2557,  2265,  2558,  2286,  2559,  2561,  2560,
    2562,  2564,  2565,  2563,  2266,  2568,  2570,  2571,  2573,  2575,
    2577,  2267,  2579,  2580,  2581,  2583,  2582,  2584,  2268,  2585,
    2586,  2592,  2593,  2594,  2595,  2690,  2596,  2597,  2240,  2269,
    2598,  2270,  2600,  2601,  2602,  2603,  2604,  2605,  2606,  2607,
    2608,  2609,  2610,  2611,  2613,  2614,  2271,  2615,  2616,  2617,
    2618,  2272,  2619,  2621,  2622,  2623,  2624,  2625,  2626,  2288,
    2627,  2628,  2629,  2630,  2631,  2632,  2633,  2635,  2636,  2637,
    2638,  2644,  2642,  2643,  2645,  2647,  2648,  2273,  2649,  2650,
    2652,  2653,  2654,  2655,  2274,  2275,  2656,  2657,  2658,  2659,
    2661,  2662,  2663,  2664,  2666,  2668,  2669,  2670,  2671,  2672,
    2673,  2674,  2675,  2276,  2676,  2677,  2678,  2688,  2578,  2293,
    2420,  2667,  2335,  2599,  2435,  2499,  2689,  2407,  2314,  2247,
    2382,  2395,  2501,  2515,  2533,  2569,  2641,  2651,  2494,  2513,
    2525,  2408,  2576,  2612,  2639,  2287,  2665,  2450,  2403,  2239,
    2355,  2357,  2514,  2550,  2291,  2414,  2300,  2473,  2511,  2590,
    2587,  2589,  2591,  2572,  2507,  2371,  2506,  2445,  2544,  2440,
    2465,  2537,  2462,  2566,  2524,  2388,  2567,  2620,  2504,  2574,
    2427,  2646,  2302,  2374,  2588,  2319,  2324,  2250,  2415,  2634,
    2640,  2660,  2368,  2366,   294,  2212,   276,  2213,  2234,  2235,
    2236,  2233,  2237,     0,     0,  2779,  2778,     0,     0,  2937,
    2938,   627,     0,     0,     0,     0,     0,     0,  1859,     0,
     912,   627,   627,     0,   914,   627,     0,   911,     0,   211,
    2965,  2965,  2982,  2984,  2986,  2292,  2241,  2306,     0,  2172,
       0,     0,     0,  1629,     0,  2245,     0,  2326,  2328,     0,
       0,  1312,  1312,   791,     0,     0,     0,  2351,  2352,  2180,
       0,     0,     0,  2169,  2181,  2396,  2400,  2402,     0,  2171,
    2411,     0,     0,     0,     0,  2433,  2178,     0,     0,  2477,
    2479,     0,     0,  2483,  2484,  2485,  2486,  2153,  1371,     0,
     791,  2165,  2177,  2159,  2530,  2531,     0,  2541,     0,     0,
    2577,     0,     0,  2582,  2592,     0,     0,  2623,     0,     0,
     791,  2152,  2644,  2642,  2643,  2645,     0,  2170,  2273,  2179,
       0,  2659,  1312,   791,   791,     0,     0,     0,  2670,  2671,
    2678,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2427,     0,     0,  1304,     0,
       0,     0,  1370,     0,  1452,  2956,  1833,  1303,  1307,  1324,
    1329,  1346,     0,  1363,  1382,  1383,  1385,  1490,  1384,  1390,
    1511,  1391,  1512,  1389,  2166,  1388,  2176,  2175,  1387,  2167,
    2168,  1305,  1381,  2192,  2212,  2191,  1397,  2954,  1856,  1856,
    1856,     0,     0,  1856,  1856,     0,     0,  1856,     0,  1856,
    1856,  1856,     0,  1856,     0,   112,  2050,   364,   365,     0,
    2833,  2846,  2847,  2843,  2848,  2866,  2849,  2853,     0,  2845,
    2914,  2225,     0,  2852,     0,  2914,  2850,     0,  2914,     0,
    2851,  2856,  2867,  2914,  2844,  2214,  2224,  2223,  2914,  2680,
    2679,  2215,  2681,     0,  2835,     0,  2197,     0,     0,  1874,
    1875,  1873,  1127,     0,     0,  2105,  2106,     0,  2109,     0,
    2110,  2113,     0,  2779,  2773,  2775,     0,     0,     0,     0,
       0,  1222,     0,  1877,  1921,  1878,  1876,  1856,     0,   330,
     339,   341,   342,   338,  2833,     0,     0,  2938,  2949,  2964,
    2959,  2958,  2961,  2962,  2963,  1289,  2960,  2957,     0,  1285,
    1287,  1288,   848,     0,     0,  2721,  2724,  2489,  2523,  2725,
    2647,  2722,  2578,  2723,  2287,     0,     0,  2218,  2748,  2683,
    2684,  2685,  2682,  2219,  2691,     0,  2715,     0,  2018,   342,
    1141,  1175,  1158,  1140,  1175,  1283,  2197,  1934,     0,     0,
       0,  2788,  2789,  2787,  2107,     0,  1282,  1897,     0,  1756,
    1759,  1761,  3030,     0,     0,     0,  3025,     0,  3031,     0,
       0,  2191,     0,     0,     0,     0,     0,  2955,     0,     0,
       0,     0,     0,     0,     1,    10,     0,     0,  1312,  2222,
    2659,     0,  2221,  2220,  2226,  2228,  2891,  2912,  2918,     0,
       0,     0,  1139,  1143,  1144,  1146,  1147,  1148,     0,  1152,
    1167,     0,     0,     0,  1248,  1291,  1252,     0,  2951,  1788,
    1780,     0,  2951,  1788,  1259,  1779,  1261,  1927,  1920,  2043,
    2396,  2046,  1915,  2047,     0,   970,  1041,     0,   974,     0,
       0,     0,     0,  2792,     0,   972,     0,  2012,  1048,     0,
       0,   999,     0,     0,  2991,   976,     0,  2935,     0,  1232,
    1243,  1621,   293,     0,   121,   123,  1189,  1852,  1208,     0,
    2941,     0,     0,     0,     0,  2987,     0,     0,     0,   476,
       0,   913,   916,     0,     0,     0,   915,   918,     0,     0,
     627,  2991,  2991,  2965,  2985,     0,     0,  1749,  1404,  1749,
    1749,  1749,  1630,     0,     0,     0,     0,     0,     0,     0,
    1749,     0,  1446,  1418,     0,  1447,     0,     0,     0,  2182,
       0,     0,     0,  1401,     0,     0,  1621,     0,  1598,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1625,  1627,
    2191,  1749,     0,     0,  1749,     0,     0,     0,     0,     0,
    1317,   844,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1749,  1749,     0,     0,  1749,  1460,  2184,
       0,     0,     0,  2183,     0,     0,     0,  2174,  2173,  2154,
       0,  1463,  1465,  1464,     0,  1749,  1749,     0,     0,     0,
    1749,  1749,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1394,  1393,  1395,     0,     0,
    2956,     0,  2730,  1594,  1596,     0,     0,  1367,  1366,     0,
    1365,  1364,  2211,     0,  1306,     0,     0,  1311,  1310,  1372,
    1373,  1374,  1375,     0,  1376,  1377,  1378,     0,     0,     0,
       0,     0,     0,  1369,  1368,     0,     0,     0,     0,  1348,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1396,
       0,     0,  2206,  2155,     0,     0,  1506,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1860,     0,     0,     0,
       0,     0,     0,     0,  1856,   114,     0,     0,  2834,  2826,
    2864,  2863,  2868,     0,  2865,  2861,  2869,  2870,  2854,     0,
    2840,  2858,     0,  2842,  2860,  2859,  2839,  2855,  2862,  2841,
       0,  2837,  2829,     0,     0,  1745,  2803,     0,     0,   120,
       0,  1128,  1878,     0,  3044,  3041,  2103,     0,  2114,  2115,
    2111,     0,     0,     0,     0,     0,  2011,  2010,     0,     0,
    2098,  2950,  1224,     0,     0,     0,  1879,     0,     0,  2083,
    2090,  2088,  2092,  2082,  2085,   331,     0,     0,   361,  2820,
       0,     0,  2829,  2944,  2941,  1275,  1286,   847,     0,     0,
     850,  2747,  1898,  1899,   859,     0,   849,     0,     0,     0,
       0,     0,  2693,  2757,  2754,  2753,  2706,  2701,  2700,  2230,
    2887,  2699,     0,  2734,     0,   854,   856,   855,  2744,   853,
       0,     0,  2647,  2694,  2715,     0,     0,  2692,     0,     0,
     848,  2030,     0,     0,  2030,     0,  1788,  2014,  2019,  2017,
       0,  2727,  1982,  2728,  2010,     0,  1958,  1981,     0,  1935,
    1974,     0,  2729,     0,  2013,     0,  1788,  2030,  2030,  2030,
    2030,  2030,     0,  2030,  1951,     0,     0,     0,     0,     0,
       0,   337,  1180,  1179,  1154,  1176,  1177,     0,     0,  1157,
    1159,  1160,   201,  1932,  3042,  3043,  1904,     0,  1757,     0,
       0,     0,  2158,  2157,  3027,  2156,  3035,  3037,  3021,     0,
    3024,  3023,  3032,     3,     0,     0,   568,     4,     6,     0,
       0,  1251,  1268,     0,  1267,    11,   106,  2229,     0,     0,
       0,     0,     0,     0,     0,  2909,     0,     0,  1023,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1187,     0,
    1183,  1182,     0,  1155,  1169,  1296,  1295,  1298,  2363,     0,
       0,  1832,  1826,  1829,  1828,     0,  1290,  1254,  1253,     0,
    2953,  2952,     0,  1255,  1789,  1797,  1798,  1796,  1790,  1791,
    1795,  1794,     0,  1257,  1788,  1788,  1260,  1931,  1930,  1929,
       0,  1927,  1127,     0,  2045,     0,     0,  2035,  2036,  2037,
    2038,  2039,  2034,  2033,  2048,  2049,  2989,  2990,  2988,   861,
    2983,   277,     0,     0,  2796,     0,     0,   277,     0,     0,
    1900,  1900,     0,  1900,  1900,   546,     0,   545,  1900,  1900,
     633,   498,   500,   501,   502,   503,   504,   505,   506,   507,
       0,  1125,  1900,  1125,     0,  1900,  1900,  1125,  1900,     0,
       0,  1900,  1900,  1900,  1900,     0,     0,   862,  1900,     0,
       0,  1125,     0,  1900,     0,  1109,     0,     0,  1900,  1900,
    1900,  1900,  1900,  1125,     0,     0,  1900,  1900,     0,  1135,
       0,     0,  1900,     0,  1900,  1900,  1900,     0,  1900,  1900,
       0,  1900,     0,     0,  1900,  1070,  1071,  1900,  1900,  1900,
    1081,   629,   657,   658,     0,   968,   969,  1042,  1044,  1113,
    1050,  1049,  1078,  1083,  1111,  1112,     0,  1857,  3056,   980,
       0,     0,   979,  2991,  1203,     0,     0,   904,   903,     0,
       0,  1243,  1234,  1623,     0,  1622,   275,     0,     0,  1191,
    1190,     0,  1188,  1216,  1215,  1213,     0,  1214,  1212,  1207,
    1209,  1210,  2940,     0,     0,  2942,  2946,     0,   209,     0,
       0,     0,     0,     0,   627,     0,   478,     0,   917,  2899,
    2910,   225,   207,     0,   919,     0,   945,     0,     0,   627,
       0,     0,     0,  2979,  2967,  2974,  2975,  2978,  2977,  2976,
       0,  2973,  2966,  2969,  2970,  2972,  2971,  2991,     0,     0,
    1750,  1749,     0,     0,     0,     0,     0,     0,  1631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,     0,
     792,  1472,     0,     0,     0,     0,     0,  1721,  1722,  1723,
    1724,  1732,  1725,  1726,  1727,  1734,  1739,  1728,  1729,  1735,
    1736,  1737,  1730,  1738,  1733,  1731,  1740,     0,  1720,     0,
       0,  1744,  1741,  1743,  1742,     0,  1599,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1749,
       0,     0,     0,  1749,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1482,
       0,     0,     0,     0,     0,  1749,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1442,     0,  2194,  2193,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1545,     0,  1545,     0,     0,     0,     0,     0,     0,
       0,  1398,     0,     0,     0,     0,     0,     0,     0,  1302,
    1309,  1308,  1315,  1314,  1316,  1320,  1325,  1318,  1322,     0,
    1379,  2299,  1327,     0,     0,  1360,     0,  1330,  1340,  1361,
    1344,  1351,  1352,     0,  1347,     0,  1349,  1350,     0,  1354,
       0,  1353,  1357,  1358,  1359,  1362,     0,     0,     0,     0,
    1386,  1392,  1412,  1413,  1307,     0,  1507,  1508,  2187,  2195,
    1836,  1843,  1838,     0,  1860,  1840,  1848,  1856,  1864,  1865,
    1845,   633,  1862,  1844,   508,  2885,  1841,  1129,  1851,  3069,
    1849,     0,     0,   113,     0,     0,     0,     0,  2067,  2069,
    2077,  2068,     0,  2076,     0,  2070,  2078,  2071,  2075,  2074,
    2073,  2072,  2051,  2054,  2060,  2079,     0,     0,   362,   366,
     368,     0,   371,     0,  2857,  2916,     0,     0,  2838,  2831,
    2832,  2830,     0,  2871,  2836,  1746,     0,  2802,  2393,  2497,
       0,  1751,  2198,  3046,     0,     0,     0,     0,  2112,     0,
    2777,  2774,  1745,  2776,  2780,  1218,     0,   109,   110,     0,
       0,     0,     0,  1223,  1227,     0,  1193,  1659,  2087,  2095,
    2093,     0,   329,   354,   349,   357,   351,   353,   352,   358,
     359,   360,   355,   350,   356,   343,     0,     0,     0,     0,
    2818,     0,  2945,     0,  2947,     0,  1751,  1276,  1275,     0,
       0,     0,  2750,     0,  2746,  2745,     0,   996,  2208,   996,
       0,  2759,  2760,     0,  2751,     0,  2752,     0,  2705,     0,
       0,  2708,     0,     0,     0,     0,     0,     0,     0,  2749,
    2714,  2713,     0,  2716,  2717,     0,  2720,  2768,  2769,  2766,
    2772,  2767,  2770,  2771,  2765,  2741,  2026,     0,     0,  2032,
    1980,     0,   627,     0,     0,     0,     0,     0,     0,     0,
    1952,     0,     0,  1973,  2024,  2025,  2030,     0,  2023,     0,
    2030,     0,  1991,  2014,     0,  2030,  1947,     0,     0,  1939,
    1944,  1940,     0,  1946,  1945,  1948,  1936,  1937,  2026,  1963,
     201,  2014,  1972,  1993,  1997,  1996,  1995,  1994,  1985,  1979,
    1962,  1969,  1977,  2014,   909,   908,   907,     0,     0,  2014,
    2030,  2030,     0,  1164,  1165,     0,     0,     0,  1153,  1909,
    1908,     0,  1905,  1907,  1896,  1758,     0,  1763,     0,     0,
       0,  3022,  3038,  3020,  3026,  3033,  3034,  3019,  2195,     0,
     569,     0,     0,   572,     0,     0,  1900,  1269,    12,     9,
    1031,     0,     0,  2227,     0,     0,     0,     0,     0,     0,
    2922,  2920,     0,  2921,  2919,  2876,  2891,  2913,     0,  1003,
    1151,  2203,  1150,  1149,  1145,     0,     0,     0,     0,     0,
       0,     0,     0,   201,     0,  1171,     0,     0,  1301,  1298,
    1292,  1299,  2207,  1831,   851,  1827,     0,     0,  1784,  1781,
    1783,  1265,  1263,     0,     0,  1266,  1264,  1256,  1258,     0,
       0,  1854,  1925,  1928,     0,  2044,     0,   861,   622,   625,
     624,   626,     0,   975,  2801,  2800,     0,     0,     0,     0,
       0,   973,     0,     0,   496,  1901,     0,     0,   496,     0,
       0,     0,     0,     0,   634,  2012,  1900,  1126,   962,   905,
    1219,   905,  1087,     0,   962,     0,     0,     0,     0,     0,
       0,  1219,     0,     0,     0,     0,     0,  1219,     0,     0,
       0,     0,     0,  1900,     0,  1096,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1097,     0,     0,     0,  1053,
    1900,     0,     0,     0,     0,     0,     0,  1219,     0,     0,
       0,  1219,  1138,     0,  1137,  1136,     0,     0,  1219,  1219,
       0,   667,     0,     0,     0,   663,   664,     0,     0,     0,
       0,  1074,  1075,     0,     0,     0,     0,   630,  1900,  1900,
       0,  1046,  1043,   861,   861,     0,  1900,  3064,  1032,     0,
       0,   977,     0,     0,  1200,  1236,  1230,  1235,  1233,  1243,
       0,  1711,     0,   295,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   201,   153,   185,     0,     0,
       0,     0,     0,     0,     0,   201,   125,  1853,  1217,  1211,
    2939,  2943,   628,   861,     0,     0,     0,     0,     0,     0,
     477,     0,   480,     0,     0,     0,     0,  2918,  1900,     0,
       0,     0,     0,   946,   861,     0,     0,     0,   276,  3014,
       0,  2968,     0,  1468,     0,  1556,  1606,  1556,  1556,  1556,
       0,     0,     0,     0,     0,  1469,     0,  1416,  1470,  1471,
       0,     0,     0,  1556,     0,   793,     0,     0,  1419,  1420,
    1409,     0,     0,  1491,     0,  1602,  1421,     0,     0,     0,
       0,     0,  1492,  1626,     0,  1628,  2195,     0,  1556,  1476,
    1427,     0,  1556,     0,  1428,  1493,  1494,  1495,     0,  1497,
       0,  1478,     0,     0,  1481,     0,     0,  1430,  1556,  1556,
       0,     0,     0,     0,  1556,  1432,     0,     0,     0,  1431,
       0,     0,     0,     0,     0,     0,     0,  1434,     0,  1410,
    1556,  1556,  1484,     0,     0,  1486,     0,  1443,  1749,  1556,
    1593,     0,  1537,  1536,  1550,     0,     0,  1550,     0,     0,
       0,  1538,  1535,  1534,     0,     0,  2731,  2732,  2733,   964,
    1595,  1402,  1321,  1326,  1319,  1323,  1328,     0,     0,     0,
    1339,     0,     0,     0,     0,     0,  1331,  1342,  1345,  1510,
    1498,     0,  1621,     0,     0,  1114,  1847,     0,  2012,  1846,
     509,   510,   512,     0,  1131,  1130,  1842,  3070,  1839,  1129,
       0,   115,   117,  2065,  2062,  2061,  2063,   201,  2064,     0,
    2080,  2052,  2351,  2644,  2645,   375,     0,   347,   346,   348,
     372,     0,     0,  2829,  2915,     0,     0,  2880,  2883,     0,
       0,     0,  2824,  1748,  2813,  2809,  2814,  2816,  2812,  2815,
    2817,  2810,  2811,  1751,     0,  1788,  1752,  1659,  3040,  3045,
    1238,  1239,  1243,     0,     0,     0,   111,  1823,  1824,  1818,
    1820,  1817,  1819,  2100,  1821,  1822,     0,     0,  2099,     0,
    1225,     0,     0,  1198,  1197,  1199,  1192,  1194,  1195,     0,
       0,  1660,     0,  2091,  2094,   201,  2084,     0,     0,     0,
    2829,     0,     0,  2948,  1278,     0,     0,     0,     0,     0,
    1277,  1279,  1280,  1636,  1635,  1666,  1663,  1662,  1665,  1664,
    1667,  1659,  1745,  1770,  1751,     0,     0,     0,   858,   860,
     857,     0,     0,     0,  2889,  2889,     0,     0,  2764,  2756,
    2758,  2755,  2707,  2231,  2888,     0,  2737,  2738,  2739,  2735,
    2736,     0,  2742,  2740,     0,  2719,     0,  2028,  2031,  1753,
       0,     0,  2005,  1999,  1998,  1989,  2000,  2006,  1990,  2009,
    2008,  2007,  1960,  1959,  1955,  2015,  2004,  2002,  1983,  2030,
    2003,  2001,  1941,  1942,  1943,     0,  1788,     0,  2028,  1992,
    2030,     0,  2030,     0,     0,  2030,  1976,  1978,  1178,  1162,
    1161,     0,  1903,     0,  1762,     0,  1760,  3028,  3036,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,   570,
       0,     0,   992,   996,     0,   993,   994,   995,  2892,  2208,
       0,  2889,  2905,  2879,  2878,  2877,  2874,     0,     0,     0,
       0,     0,  1024,  1026,     0,     0,     0,     0,  1000,  1004,
    1005,   197,  1815,  1816,  1814,  1812,  1813,   198,   199,  1805,
    1806,  1802,  1803,  1801,  1804,   200,  1186,  1185,  1184,  1168,
    1156,     0,     0,  1173,  1297,  1300,  1293,     0,  2120,  1825,
    1294,  1786,  1787,  2189,  1785,     0,  1793,  1792,     0,  1745,
    2197,     0,     0,     0,  2199,     0,  1808,  1809,  1807,  1810,
    2040,  1811,   623,  1900,     0,     0,     0,     0,     0,     0,
       0,   278,   287,     0,     0,  2793,  2795,     0,   524,     0,
       0,     0,     0,     0,     0,     0,     0,   232,   531,   983,
     633,   536,   550,   551,   547,   984,   535,   537,   985,  3071,
     549,   548,   499,     0,   703,   963,   906,   962,  1054,   962,
       0,     0,     0,   706,   962,   905,     0,   942,   963,   702,
       0,  1120,  1119,  1121,   704,   704,     0,     0,     0,   646,
     640,     0,   652,  1076,  1208,  1077,  1718,     0,   642,   643,
     644,   665,     0,     0,   654,     0,  1094,  1095,     0,  1057,
    1092,  1093,  1129,   635,     0,     0,     0,   682,   683,   681,
     659,   666,  1123,  1122,  1124,   638,   639,     0,     0,  1110,
    1777,  1784,   671,   647,   670,   641,     0,     0,     0,  1104,
    1065,     0,   680,   678,   675,   677,   676,   679,   655,   648,
     649,   651,   650,   662,   653,  1064,  2079,   636,   637,   668,
     669,   645,     0,     0,  1047,  1125,  1125,  1082,  1079,  1080,
    1045,  1051,  1084,   532,   533,   508,     0,  1900,  3066,     0,
    1034,  1036,  2992,  2993,  1761,     0,     0,     0,  1714,     0,
    1715,  1712,  1713,     0,  1624,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   122,     0,     0,     0,
       0,     0,     0,     0,     0,   124,   210,   861,     0,   513,
       0,     0,     0,   220,     0,  1900,  1900,  1900,  1900,   214,
     633,   482,   484,   485,   486,   487,   488,   491,   489,   492,
     490,   493,   494,   495,   508,     0,     0,     0,  2911,  1023,
       0,     0,     0,   231,   230,   951,   953,   952,   948,   947,
       0,     0,  2119,     0,  2118,   702,   204,   553,   555,   558,
     556,   633,   631,  1889,  1891,   560,     0,     0,   241,  3009,
       0,     0,   472,   471,     0,     0,     0,  1556,  1513,  1557,
    1515,  1516,  1519,     0,  1632,     0,  1406,   805,   805,   789,
    1614,   785,   777,   783,  1618,     0,   761,   775,  1610,   789,
    1612,   805,  1619,  1414,     0,     0,     0,  1556,  1521,  1556,
       0,     0,     0,     0,     0,     0,  1600,     0,     0,     0,
    1411,     0,  1502,  1556,  1525,  1556,  1523,     0,     0,     0,
       0,     0,     0,     0,  1529,  1527,     0,     0,     0,     0,
    1556,  1531,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1528,  1530,     0,     0,     0,     0,     0,
    1517,  1564,  1558,  1559,  1560,  1561,     0,     0,     0,  1548,
    1548,  1550,     0,  1550,     0,  1539,  1466,  1399,     0,  1597,
    1337,  1332,     0,  1341,     0,  1356,  1355,     0,     0,     0,
    1509,     0,  2188,  2196,  1837,  1835,  1116,  1115,  1850,  1863,
    2012,  2886,  1834,   118,     0,  2066,  2059,  2055,     0,   367,
     376,   369,   373,   374,   370,     0,  2917,  2925,     0,     0,
       0,     0,  1788,     0,  2804,     0,     0,  1243,  1245,  2116,
       0,  2783,  2784,  2782,  2781,  2102,  2101,     0,  1228,  1229,
    1196,     0,     0,  1893,  1892,     0,  1869,  1871,  1880,  1883,
       0,  2096,  2089,     0,   344,     0,     0,  2823,     0,     0,
    1745,     0,     0,  1636,  1666,  1663,  1662,  1665,     0,     0,
       0,     0,  1649,  1657,  1655,  1657,  1652,     0,     0,     0,
    1745,  1761,     0,  1754,  1770,  2704,  2703,  2702,   996,   996,
     997,     0,  2696,  2695,  2762,  2761,  2763,  2710,   633,  2709,
       0,  2718,  2027,     0,  1964,     0,  1988,     0,  1957,     0,
    1975,  1938,  1966,  1956,  1986,  1954,  2014,  2014,  1953,     0,
     202,  1906,  1764,     0,  3039,     5,     0,     0,     0,     0,
     573,     0,   583,     0,     0,     0,     0,  3047,  2889,   996,
       0,  2889,  2902,     0,     0,  2875,  1029,  1027,  1028,  1030,
    1025,  1008,  1007,  1009,     0,     0,     0,  1022,  1021,  1020,
       0,     0,   989,  1006,  1170,     0,     0,  1166,   852,     0,
    2128,  1782,     0,  1659,     0,  1751,  1855,  1926,  1925,     0,
       0,   281,   284,   282,     0,   283,     0,     0,  2798,     0,
    2794,   534,   982,   633,   526,   528,   529,   530,   236,   235,
     237,   238,   240,   239,   234,   988,     0,   543,     0,     0,
       0,     0,     0,   962,   901,   705,     0,   700,   707,     0,
     902,     0,     0,     0,     0,   688,   690,   691,     0,   774,
     728,   719,   805,   722,   721,   869,   789,   733,   780,     0,
     782,   779,   754,   753,   770,   752,   757,   741,   869,   869,
     740,   773,   869,   758,   756,   760,     0,   761,   781,   766,
     755,   759,   751,     0,   772,   805,   789,   789,   737,   771,
     869,     0,   764,   805,   693,   809,   739,   876,     0,     0,
     805,   807,   785,  1102,  1103,   950,   949,  1101,     0,     0,
    1060,     0,  1061,     0,  1063,   859,   859,   660,  1068,  1091,
    1090,     0,  1069,   661,  1132,  1059,     0,  1778,  1058,     0,
       0,     0,  1193,     0,   673,   672,   987,  3060,  3057,  3058,
       0,  3068,  3067,  3069,     0,     0,     0,   246,  2994,     0,
       0,  1242,  1244,     0,  1231,   186,   181,   157,   161,   163,
     155,   159,   160,   162,   166,   167,   165,   169,   170,   173,
     174,   171,   164,   172,   158,   177,   175,   176,   156,   179,
     180,   191,   182,   190,   196,   168,   195,   183,   193,   192,
     194,   184,   154,     0,   127,   128,     0,   129,   130,     0,
     131,   132,     0,   133,   126,     0,  1900,  1900,   213,   633,
     515,   517,   518,   519,   520,   523,   521,   522,   220,     0,
       0,   219,     0,     0,     0,     0,     0,  2012,   215,     0,
    2893,  2895,   226,  1003,  3054,  3055,  3056,   217,     0,   559,
     205,     0,     0,   554,   552,   861,  1890,   557,     0,     0,
     296,   686,   687,   685,   684,     0,  3015,   475,   473,   474,
       0,     0,  1444,  1514,  1633,     0,     0,   806,  1607,   869,
       0,  1616,     0,  1617,   787,   786,   778,   776,  1620,   784,
     762,  1611,  1615,  1613,  1609,  1415,     0,  1417,  1408,  1407,
    1522,  1520,     0,     0,  1450,  1474,     0,  1451,     0,     0,
       0,     0,     0,  1423,     0,  1426,     0,     0,  1504,  1526,
    1524,  1477,  1496,  1453,  1479,     0,  1429,  1400,     0,  1454,
       0,  1459,  1457,     0,  1532,  1433,     0,     0,  1440,     0,
    1438,     0,  1439,     0,  1441,  1483,  1485,     0,     0,     0,
       0,  1556,  1565,     0,  1566,  1552,  1551,  1542,     0,  1547,
    1546,     0,  1543,     0,  1553,     0,  1687,   965,     0,  1336,
    1338,  1334,     0,  1343,  1499,  1118,  1117,   511,   116,  2057,
       0,  2053,     0,     0,     0,     0,  2828,  2882,  2881,  2884,
    2923,  2872,  2805,     0,     0,  1910,  1912,  1240,  1243,  1245,
       0,  1241,     0,  2117,  2785,  2786,  1226,     0,  1717,  1870,
    1918,     0,     0,     0,  1887,  2186,  2185,  2193,  1904,  1888,
    1895,     0,     0,     0,  2819,     0,  1761,     0,     0,  1674,
    1668,  1670,  1671,  1673,     0,     0,  1636,  1635,  1281,  1651,
    1650,  1658,     0,  1656,  1657,  1657,     0,     0,  1645,  1644,
       0,  1708,  1675,     0,     0,  1765,  1754,  2889,  2889,     0,
       0,  2743,  2029,  1788,  1971,  1970,  1984,  1949,  1788,     0,
    1751,  2030,     0,  3029,     0,   579,   566,     0,   564,   568,
       0,   561,     0,     0,   577,     0,   991,  2889,  2889,     0,
    2903,  2210,  2209,  2889,     0,  2889,  1012,     0,  1011,  1017,
    1014,  1013,     0,  1002,  1001,  1172,     0,     0,     0,     0,
       0,  2121,  2123,     0,  1830,  1751,  1751,  2198,  1923,     0,
    2200,  1751,   674,   286,   285,   291,   292,     0,  2797,  2012,
     233,     0,  1056,     0,     0,   585,     0,     0,     0,   708,
       0,     0,   960,     0,   959,  1784,   943,   944,  1086,   702,
     693,   727,   720,   738,   863,   874,   872,   866,   763,   869,
       0,   870,   871,   724,   736,     0,   747,     0,   742,   869,
     750,   746,   762,   765,   767,   769,     0,   869,   735,   734,
     744,   731,   794,     0,  1132,   694,   819,     0,     0,     0,
       0,  1368,   813,     0,   881,     0,     0,   822,     0,  1900,
    1900,   824,     0,   833,   709,   810,   812,   711,     0,     0,
     877,   876,   726,   869,   876,   794,     0,   808,   794,   794,
    1100,     0,  1132,  1719,  1108,  1107,     0,     0,  1134,  1089,
    1776,  1106,  1105,     0,  1062,   656,     0,     0,  3062,     0,
    3065,   998,     0,   256,     0,     0,  1033,     0,   249,   247,
     258,     0,  1205,  1201,  1716,     0,   187,   189,   134,     0,
     136,   138,   143,     0,   145,  2232,     0,   148,     0,   150,
    2204,   152,     0,   139,     0,     0,     0,     0,  2012,   218,
       0,     0,     0,     0,     0,     0,   479,   542,   538,   544,
     541,   483,  2894,     0,     0,  1000,  3064,     0,     0,   861,
     632,     0,     0,     0,   297,   299,     0,     0,   306,     0,
       0,  1634,     0,     0,     0,     0,  1608,     0,     0,  1405,
       0,     0,     0,  1603,  1605,  1601,  1556,     0,     0,     0,
       0,     0,  1403,     0,  1500,     0,     0,     0,     0,     0,
       0,  1437,  1435,  1436,   878,  1488,  1487,     0,  1518,  1562,
       0,  1568,  1549,  1541,  1540,     0,  1550,  1467,     0,  1695,
    1696,     0,  1688,  1689,     0,  1333,     0,     0,     0,   384,
     379,   387,   381,   383,   382,   388,   389,   390,   391,   385,
     380,   386,   378,   377,     0,     0,     0,  2932,  1751,  1910,
       0,  1912,     0,  1868,  1237,  1246,     0,  1661,     0,     0,
    1881,  1884,     0,     0,     0,     0,     0,   345,  2822,     0,
       0,  1676,  1745,  1281,  1637,  1653,     0,     0,  1646,  1654,
       0,     0,     0,     0,  1702,  1703,     0,     0,  1706,  1709,
    1710,  1672,  2190,  1774,  1773,  1755,     0,  1274,  1765,  2698,
    2697,  2890,  2711,  1965,   201,  1987,  1968,  1961,  1163,   567,
       0,   565,     0,     0,   563,   571,     0,   578,     0,   990,
    2900,  2889,  2906,  2889,     0,  2907,     0,  1018,  1019,  1016,
       0,  1174,     0,     0,     0,     0,  2122,     0,     0,  2129,
    2131,  1924,  1779,  1779,     0,   527,     0,   588,  1055,     0,
       0,   701,     0,     0,     0,   931,     0,     0,   956,   689,
     692,   865,   864,   868,     0,   867,   723,   876,     0,   966,
     743,   768,     0,   745,   798,   799,   800,   732,   795,   797,
     883,  1085,   827,   836,   838,   840,   839,   828,   826,     0,
       0,     0,     0,     0,     0,   845,   816,  2163,   846,  2164,
    2160,     0,     0,   841,   842,   843,   830,   823,   831,     0,
       0,   825,   832,     0,   811,     0,     0,   821,   814,   815,
     725,   729,   730,   716,     0,   717,   718,     0,  1098,  1088,
    1072,  1133,     0,  3061,  3059,  3063,   257,   245,     0,     0,
    1035,  1037,     0,     0,  1038,     0,     0,  1204,   178,     0,
     135,     0,   144,     0,     0,   149,     0,     0,   140,     0,
     920,   540,   539,   516,     0,   926,   221,   222,   224,     0,
    2896,     0,  2897,   212,  3066,     0,   206,   203,     0,     0,
    3010,     0,   859,  3008,   309,   307,   308,     0,   302,   304,
       0,     0,  1445,   803,   801,   804,   802,   790,     0,  1448,
    1449,  1475,     0,  1533,  1473,     0,  1424,  1501,     0,     0,
    1480,  1455,  1458,  1456,  1461,  1462,     0,     0,     0,     0,
    1570,  1554,  1555,     0,  1697,  1425,  1690,     0,     0,  1335,
    2058,  2056,  2923,  2926,     0,     0,  2825,  1788,  1912,  1761,
    1866,     0,     0,  1917,  1919,  1882,  1885,  1886,  2195,  1902,
    1894,  2821,     0,  1678,  1669,  1648,  1647,  1640,     0,  1642,
       0,  1698,  1698,  1707,  1775,     0,  1771,     0,  1766,  1767,
    1273,  1967,   580,     0,   570,   584,   562,  3051,  2904,  2908,
    2889,  1010,  1015,  2126,  2127,     0,  2124,     0,     0,  2130,
    1799,  1799,     0,   920,     0,   608,   586,   926,     0,   955,
     931,  1784,     0,  1900,  1900,  1900,   695,   932,   933,   935,
     936,   939,   958,     0,   875,   873,   869,     0,   869,   796,
       0,   887,     0,   829,  2162,  2161,     0,   818,   820,   834,
     835,   827,   712,     0,     0,  1067,  1073,     0,   243,   248,
     259,   260,   981,  2997,  2995,     0,   188,   137,   146,   147,
     151,     0,     0,     0,  1114,   921,   922,   924,     0,  1114,
     927,   928,   930,     0,  2898,   208,   931,  3007,   254,     0,
     298,   300,  3016,   306,     0,     0,     0,  1604,     0,  1503,
    1505,   879,     0,  1567,     0,  1591,  1590,  1592,  1563,     0,
    1544,     0,  1694,  1693,  2932,  2924,  2927,  2806,  1867,  1911,
       0,  1659,     0,     0,     0,     0,     0,     0,     0,  1772,
       0,     0,     0,     0,     0,     0,  3048,  3049,  2901,  2125,
    2133,  2132,     0,  1922,  1914,  2799,   696,     0,     0,  1900,
       0,     0,  1900,  1900,  1900,  1900,   603,   609,   611,     0,
     697,     0,     0,   698,   961,   938,     0,     0,     0,   934,
    1784,   748,   967,   749,     0,   886,     0,   891,     0,   817,
       0,  1099,  1066,   250,  1039,   411,     0,  2996,  1202,     0,
       0,     0,   228,   923,   216,   229,   929,     0,  1114,   246,
     255,     0,   279,   303,   859,     0,   788,  1422,  1489,  1569,
       0,     0,     0,     0,  1585,  1572,  1573,     0,     0,  2827,
       0,  2933,     0,   851,     0,  1745,  1641,  1643,     0,  1699,
       0,  1711,     0,  1769,  1768,     0,     0,  1900,     0,  3052,
    1800,   597,   590,   593,     0,     0,  1900,  1900,     0,     0,
       0,     0,     0,   587,   610,  1900,   699,   954,   937,   940,
     941,   957,   884,     0,   888,   889,   890,     0,   882,   837,
       0,     0,   252,   437,  2325,   423,   409,     0,     0,  2510,
     413,   261,   264,   262,  1915,   263,   269,     0,   270,   271,
     272,   273,   274,   265,   435,   436,   268,   266,   267,     0,
    2216,     0,  2217,  2278,  2277,  2279,     0,     0,     0,   141,
       0,   925,   223,   227,   258,   859,  3017,   305,  3003,     0,
       0,  1580,     0,     0,     0,  1578,     0,  1574,     0,  1571,
    1576,  1575,     0,  1913,  2134,  2494,     0,  1680,     0,  1677,
    1701,  1700,     0,     0,   581,     0,     0,  3053,   597,     0,
     595,     0,   591,   589,   592,   619,     0,     0,   615,   616,
     614,   612,     0,     0,   605,     0,   885,     0,     0,   713,
     251,     0,   244,     0,     0,   422,   425,     0,     0,   428,
     418,   417,   419,     0,   412,   411,   411,   465,   416,   462,
     461,   454,     0,  2998,     0,     0,     0,  3011,   289,   288,
     280,     0,   411,  3001,  3002,     0,  3005,     0,  1581,     0,
    1583,  1582,     0,     0,  1587,     0,  1588,  2706,  2931,  2930,
    2928,     0,  2120,     0,  1679,     0,     0,   859,  1705,  1704,
       0,   575,   581,  3051,   594,     0,   601,     0,   599,   602,
     617,   618,   608,   604,     0,   613,   897,     0,   896,     0,
     893,   892,   715,   714,   809,   253,   438,   449,   452,   444,
     424,     0,     0,     0,   414,   411,     0,   398,   396,   397,
     403,   404,   405,   406,   407,   408,   399,   402,   400,   401,
     411,     0,   314,     0,     0,  2999,  3000,   142,   260,   279,
     290,  3018,  3004,   411,     0,  1579,  1577,  1586,  1589,  2929,
       0,  2128,     0,  1681,  1682,  1685,   582,   576,  3050,   596,
     598,     0,   607,   606,   899,   900,   898,     0,     0,   710,
       0,     0,   411,   445,     0,   420,     0,   429,     0,     0,
     312,   468,   466,   310,   456,   456,   242,  3012,  3006,  1584,
       0,  2136,  1684,  1686,     0,   600,     0,     0,   446,   452,
     442,   450,   411,     0,     0,   410,     0,   464,   313,     0,
       0,     0,   411,     0,   455,   457,   459,   411,  2135,     0,
    2140,     0,   895,   894,     0,   443,     0,     0,   441,   421,
     426,   411,   469,   411,   323,   322,     0,     0,   392,   463,
       0,   315,  3013,     0,     0,  2147,  1687,   447,     0,   411,
       0,   411,     0,   411,     0,     0,   859,     0,     0,   311,
    2138,  2139,  2137,  2142,     0,     0,  2144,  2145,     0,  2108,
    1691,  1683,  1689,     0,   439,   411,   427,   432,     0,     0,
     318,   393,   394,     0,   320,  2146,  2141,     0,  2148,  2150,
       0,  1692,     0,   411,   411,   428,   431,   470,   467,     0,
       0,   316,   317,   328,   327,     0,  2143,     0,     0,     0,
     411,   411,   433,   336,   334,   411,   324,   332,   326,     0,
     333,   395,   321,  2149,  2151,     0,   319,   335,   325
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4608, -4608, -4608, -4608, -4608, -4608,    52, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608,  1623, -4608, -4608, -4608, -4608,
   -4608, -4608,  1824,  1831, -4608, -4062, -4608, -4608,  1830, -4608,
     468,  1832, -4608,   466, -4608,  1841, -4608,   474, -4608, -4608,
   -4608,  -896, -2133, -4608, -4608, -4608, -4608, -4608, -4608,  1237,
   -4608, -4608, -4608,   464,  1433,  3932, -4608,   451, -4608,   152,
   -4608, -4608, -4608, -3948,    38,  -133, -4608, -4608,    25,  3440,
    -136, -4607, -4608, -4608, -4608, -4608, -4608, -4608,   457, -4608,
   -4608,   267, -4608, -4608, -2226, -4608, -4608, -4608, -4608, -4608,
   -4608,  -314,  -271,  2093, -4608, -4608, -4608,  5027, -4608,  4095,
   -4608, -2640,  2270, -4608, -4608, -4608, -4608, -4608,  2335, -2569,
   -4608, -4608, -4608,  1105, -4608, -4608, -4608,   104,   184, -4608,
     199, -4608,   201, -4608,   202, -4608,   203,   204,   213,   216,
   -4608,   217, -4608, -4608,  -274, -4608, -4608, -4608, -4608,   223,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608,  -176, -4608, -4608,
     -84, -4608, -4608,  -174,   225, -4608,  -158,   237, -4608,   242,
   -4608,  -106, -4608,  -104, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,  1263,  2725,  4008,  2731, -2685, -4608,
    1687, -4608, -4608,   851, -4608, -4608,  1004, -1442, -4608,  2589,
   -2442, -2402, -2400, -4608, -4608, -4608, -3058, -3046, -1288, -4608,
   -1268, -2394, -2380, -2369, -2281,   846,  1866,  1877,  1860,    37,
   -4608,  1090,   456, -4608, -4608, -4608, -3435,    22, -4608, -3790,
     686, -4608, -4608, -4608, -4608, -2951, -4608, -4608,   -58, -4608,
   -4608,    20,    23, -4608,   310, -4608,  2643, -2142,  -560,  2717,
   -4608, -1874, -1649,   571, -1503, -1501, -4608, -4608, -4608,  1334,
    1906,  1047, -4608,  1049, -1546,   995, -3586, -4608, -4608,  -381,
   -2792, -4608, -4608, -4095, -4608, -2448,  1521, -4608, -4608, -2445,
   -4608, -4608, -4608,  1497,  1500, -1857,  1726, -1561, -4608,   694,
    1096,  -800, -4608,    40, -4608,  1010, -4608, -4608, -4608, -3005,
   -4608,   -41, -2478,   273, -4608, -4608, -3029, -3565, -1500, -4608,
   -4608, -3285, -3753,  1836, -4608, -4608,   338, -4608, -4608, -4608,
   -4608, -3826, -4608, -1597, -2144, -4608, -4608,  2820,   484, -4608,
     423,   487, -4608,   425, -4217, -4608,   481, -2114,  2153, -4608,
    3434,  2147, -2377, -4608, -3822, -2430,   738, -2214, -4608,  1061,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -2025, -4608, -4608,
     943,  1396, -4608,  2271,  1972, -4608,  2280, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608,  2772, -4608,   680, -2016,
    2775, -4608,  2781,   556, -4293, -1028, -4608, -1010, -4608, -1518,
    3658, -1552, -3650, -4608, -4608, -4608, -4608, -4608,  3702, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,  2999,
   -4608, -4608, -4608, -4608, -4608,  4272, -4608,  3013, -4608, -4608,
   -4608, -4608, -4608,  1527, -4608,  2466, -4608, -4608, -4608, -4608,
   -4608,  2183,  3500, -4608, -4608,    87, -4608, -4608, -4608, -4608,
    2473, -4608, -4608,  3530,  2086, -4608, -4608,  1822,  2498, -1669,
    1282, -1071,  5209,    10,    75,     8,   876, -4608,  3146, -4608,
   -4608, -2175, -4608, -4608, -4608, -4608,  4324,  -935, -1025, -4608,
   -4608,  2959, -4608,  4332,  4043,  3287,  1035,  5539, -4608, -1192,
   -4608,   -52, -4608, -4608,  -805, -4608, -4608, -4608,  -608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608,  2581, -4608, -4608, -4608,  3350,  1894, -2576, -4608, -2359,
   -1861, -4608, -2450,   445, -4608, -4608, -4608, -4608, -4608, -4608,
     467, -4608,   168, -4608, -4608, -4608, -1981, -4608, -4608, -4608,
   -4608, -4608,  -857, -2449, -1062, -1094, -4608,  4117, -4608, -4608,
   -4608, -2898, -4608, -2500, -4608, -4608, -4608, -4608, -3028, -2670,
   -4608, -1037,  2470,  2477,  2479,  2483, -4608, -4608,    78, -4608,
     154, -4608,   -15, -4608,   -24, -4173, -4167,   614, -4608,   886,
   -4608, -4608, -4608,   371,  1558,   372, -1954, -2349, -1155,  1849,
   -4608, -4608, -2043,  4163, -2056, -2002,  1269,     3,  4318,  3808,
   -3066, -4608,   891, -4608,   488,  1817,   682, -4608, -4608,  1602,
   -1045,   -93,   517, -3039, -4608, -1029,   -88, -4608, -2270,   611,
   -2150, -2329, -2238, -2051, -2053, -4608, -4608,  3007,  -728, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608,  -501,   195,  -618,
    5318,  3331, -4608,  2628,  4267,  4268, -4608, -4608,  3980,  1898,
    1899, -4608, -2771, -2697, -4608, -4608, -4608,  -944,  4527,   949,
    3847,  1338,  1904, -2867,   969, -3963,  4277, -4608, -3468,   962,
    4290,  4280, -3095,  3755, -4608, -4608, -4608, -4608, -4608,  2454,
   -4608, -4608, -4608, -4608, -4608, -4608,  3176,  4382,  -967, -2037,
   -4608, -4608, -4608,   896,  3159,  2461, -1334, -4608, -4608, -4608,
   -4608,  4293, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608,  2636,  2217, -4608, -4608, -4608, -4608,  3273, -4608, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608,  1918,   246, -4608,  1268,   171, -4608,
     903, -4608, -4608, -4608, -4608, -4608,    33, -4608, -4608,    17,
   -2519, -1066, -1042,  1037,  1176, -3636, -2058, -1967, -2599, -4608,
     993, -3272, -2894,   695,  -701, -1209, -1207,   501,  2389,  3956,
   -1493, -4608,  4542,  -820, -1545, -2176,  1109,  4134,    -6, -4608,
   -2960, -4608,  -127,   142,  2185,   -59,  3247, -3602, -4608,    -1,
       2, -4608,   180,   315, -4608, -4608,   401, -4608, -4608, -4608,
     268, -4608, -4608, -4608, -4608,  3954, -4608,  2530,  5356, -4608,
   -4608, -4608,  3236,  5357,  -793,  3963,  3258, -4608,  3263, -4608,
   -4608, -4608, -2028, -4608, -4608, -4608,   227, -4608,  2638, -4608,
   -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608, -4608,
   -4608, -4608, -4608, -4608, -1277,  4473,  5369,  4062, -4608, -4608,
    2462, -4608, -1961, -1294, -1103, -2686, -4608,  2868,  3871, -4608,
   -4608,  1947, -4608,  2874,   757, -4608, -4608,   596, -4608, -4608,
     413,  4485,  4046, -4608, -4608, -4608, -4608, -4608,  4366, -4608,
     -10,    -9, -4608,  -311, -4608, -4608, -4608,   108,  5412,  5415,
   -4608, -4608,   186, -4608,  -797, -4608, -4608, -4608, -4608, -4608,
    4302, -4608, -4608,  4304, -4608, -4608, -4608, -4608,  4305, -4608,
   -4608, -4608, -4608, -4608, -4608,  1882, -4608, -4608, -4608, -4608,
   -4608, -4608,   277, -4608, -4608, -4608,   286, -4608,  1599, -4608,
    1211, -4608,  1154,   837,  1702, -2371
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,  1026,  2279,    66,    67,    68,    69,    70,
    2087,    71,  1325,  2023,  2721,  2722,    72,   897,    73,  1747,
    1748,  2525,  2526,  3794,  4249,  4250,  3803,  4264,  3797,  4253,
    4254,  3800,  4258,  4259,  2515,  2516,  4245,  4246,  3782,  3791,
    3785,  2517,  2248,    74,    75,    76,    77,  2533,    78,  3821,
    2547,    79,  3262,  3036,  3037,  1793,  3849,  4236,  4893,  4240,
    4982,  5082,  4909,  3170,  4574,  4894,  4895,  4991,  2557,  2353,
    5026,  3021,  5110,  3022,    80,  1102,  4293,  4294,  4295,  4617,
    4618,  4619,  4620,  5272,  5175,  5243,  5273,  5359,  5365,  5296,
    5375,  5376,  5377,  5363,  1396,  5378,    81,   931,   932,  1398,
    2115,  2735,  2116,    82,    83,   859,  2048,  2049,  2050,  2051,
    3434,  2736,  3429,  3430,  4372,  5297,  5361,  5176,  5177,  5089,
    5178,  4994,  5179,  5093,  5180,  4997,  5181,  5182,  5183,  5184,
    5264,  5185,  5088,  5289,  5172,  5173,  5266,  5337,  5356,  5186,
    5004,  5083,  5230,  5005,  5084,  5259,  5168,  5260,  5284,  5333,
    5169,  5231,  5287,  5234,  5187,  5193,  5274,  5188,  5194,  5189,
    5009,  5100,  5192,  5098,  5191,  5270,  5269,  5312,  3294,  3860,
    1776,  2542,  3239,  3240,  3241,  3039,  3040,  1641,  2709,  2710,
    2711,  3808,  3809,  3810,  3612,  3613,  3614,  2364,  3165,  3028,
    1642,  1643,  1644,  3245,  3812,  3813,  3246,  3247,  1645,  3249,
    1646,  1647,  1648,  1649,  3041,  3276,  3277,  3278,  3279,  3280,
    2273,  2274,  3555,  2927,  3552,  4446,  4064,  5141,  4071,  4124,
    4125,  4725,  5063,  4952,  5059,  4953,  5061,  5147,  5148,  4963,
    5073,  5074,  4866,  4867,  4868,  3226,  2347,  2348,  1112,  1710,
    3281,  2375,  1711,  3123,  1712,  1713,  2351,  3138,  3110,  3855,
    3644,  3645,  3646,  4174,  3647,  3063,  2383,  3636,  3637,  4193,
    3694,  4546,  5164,  3695,  3696,  3697,  3698,  3699,  3700,  3701,
    3877,  3702,  3878,  3873,  3874,  3871,  1155,  4507,  4508,  4509,
    3867,  3868,  4208,  4194,  4195,  4196,  4753,  4517,  4536,   804,
    4526,  4150,  1414,  2988,  1437,  1438,  2839,  2134,  1714,  4151,
    4152,  4153,  4202,  3938,  4646,  4198,  4175,  4751,  4884,  4887,
    4978,  5160,  3064,  1740,  3057,  2237,   676,   677,  4784,  4785,
    4786,  4789,  4790,  4791,  4736,  4737,  4738,  4739,  3066,  2552,
    4740,  4741,  3268,  4728,  4132,  4133,  4134,  3067,  3399,  4498,
      84,    85,  1619,    86,  1627,    87,  1621,    88,  1733,  1094,
      89,  2468,    90,    91,    92,    93,    94,  2844,    95,    96,
    3582,  2958,  2959,  2960,  2299,  2952,  2953,  1031,  3171,  3747,
    4772,  1075,  1715,  1716,  2462,  1717,  1718,  4765,  1719,  3084,
    1720,  1721,  1722,  1723,  3415,  3416,  3072,  3417,  3113,  2385,
    1362,  2716,  4219,  2437,    97,    98,  1042,  1043,  1044,  1045,
    1046,  1047,    99,   100,  1049,  2313,   101,  1499,  1500,  1501,
    1563,  1564,  2315,  2983,  3587,  1494,  1495,  1496,  1050,  1561,
     102,  1752,   103,  2796,  2797,  2798,   104,  4577,  2474,   105,
     106,  1759,  1760,  1761,   107,   194,   108,  1384,  1382,  2093,
    2094,   109,  1098,  1099,  2476,   110,  2770,  2771,  1741,  1742,
    3991,   111,   112,  3283,   114,   805,   116,   117,  2126,  2127,
    2820,  2821,   118,   119,   948,   949,   950,  1054,  1055,  1567,
    2319,  2320,  2321,   806,   807,  1264,  1152,  1743,   809,   810,
    1975,   811,  1265,  1266,  4199,   812,  1277,  1963,   813,  3886,
     814,   815,  3956,   816,   817,   818,  3907,  3908,  4324,  1995,
    1996,  1997,   819,   820,   821,  2666,  3949,  3388,  4346,  3298,
    3299,  3382,  4697,  3384,  3943,  3944,  4341,  4650,  4818,  4924,
    5031,  4926,  5032,  5039,  4819,   822,   823,  1253,  1867,  3900,
    3336,  4313,  1812,  3323,  1744,  1745,  1177,  1178,  1143,  2573,
    1818,  2822,  4025,  2823,  3497,  3498,  3499,  4036,  4032,  2800,
    2801,  2824,  2825,  2826,  2827,  2828,  2829,  2830,  4833,  5046,
    5047,  5254,  4351,  5331,  4352,  4353,  4354,  4837,  4417,  4418,
    4419,  4420,  4421,  3179,  3180,  3181,  3997,  3085,  1857,  1858,
    1865,  2066,  2067,  1813,  2765,  2179,  4045,  1023,   999,  1000,
    1511,  2256,  4427,  4698,  4699,  3503,  4423,  4696,  3119,  3120,
    1059,  1060,  2329,  2993,  2994,  1583,  1584,  1588,  1589,  4853,
    3124,  3010,  2967,  3042,  3011,  2785,  1571,  1572,  1056,  1573,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,  2730,  2340,  1091,
     678,  2010,  2011,  2012,   138,   139,   902,   925,  1387,  3466,
    3467,  4003,  3468,  3285,  3470,  4009,   996,  2365,  2366,  4010,
     997,  2251,  2252,  2253,  4381,  4383,   140,   141,  3999,  4000,
     926,   142,  3004,  1600,  1601,   143,   988,  2215,  2216,  2217,
    2896,   144,   978,  1484,  4053,  4058,  2882,  1379,  1650,  2196,
    1487,  1488,  1489,  2197,  2867,  3524,  2180,   145,   146,  1612,
     147,  1071,  1072,  1613,   148,  1326,  2042,  3427,  3971,  4357,
    2043,  2044,  2731,   149,   928,  1393,  1389,  1394,  2100,  2099,
    2805,  2803,   150,   918,  1380,  2788,   151,   907,   152,   153,
     911,  2079,  1370,  3992,  3286,  3590,  4101,  4102,  4104,  4469,
    4470,  5132,  5280,  5322,  5305,  5325,  5326,  5329,  5348,  5349,
     824,  1514,   825,  4527,  4528,   826,   827,   828,   829,   830,
    4004,   831,  2330,  4424,   832,  4001,   833,  2831,  2341,   645,
    4260,  4261,  1032,  1515,  2323,  2139,  4083,  1267,  1011,   887,
    5011,   968,  1034,  1429,  1035,  2015,  1430,  2749,   647,   648,
     649,  5012,   650,   651,   891,   973,   652,   154,   974,   155,
    2148,   156,  3518,  3519,  1443,  1447,  2163,  2164,  2165,  1490,
    1946,  2157,  1444,  2166,   977,  1422,  1423,  2146,  1424,  2144,
    1425,  2849,  2175,   157,   914,  1373,   657,  2083,  2084,  3453,
     158,   993,   159,   160,   161,  1083,   162,  2071,  2763,  2764,
     163,  2118,   164,  2053,  2062,  1329,   893,   894,  2752,  2947,
    2294,  2295,  2750,  2016,  1431,  3512,  1545,  1780,  1037,  1781,
    1038,  1340,  2056,  1548,  4377,  3976,  4931,  4666,   165,   195,
     660,  1110,  1766,  2123,   166,   167,   168,   169,  1582,   836,
    2832,   837,   951,  1131,   679,  1802,  1794,   188,   189,   190,
     682,   683,   191,  1731,  1732,  4241,  4774,  4897,  5115,  5116,
    1796,  5203,  1797,  1798,  3850,  4799,  5199,  5277,  1799,  3291,
    4298,  4912,  5112,   170,  1520,  1516,  1009,  2267,  2261,  2263,
     171,   172,  1365,   173,   174,  4846,  4847,  3836,  2467,  3738,
    3739,  4230,  3168,  3743,  2718,  3050
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     646,  1607,   966,   120,  1303,  1010,  1298,  1614,   115,   835,
     113,  1486,   855,  1415,  1419,  1917,   896,  1918,  1872,  1590,
    1594,  1782,  1063,   889,  2324,   917,  1179,  1064,  2008,  1576,
    3264,   644,   933,  1448,  1593,   938,  2784,  1036,  2783,  2774,
     933,   889,   969,   986,  3051,   970,  3541,   994,  2009,  1001,
    1016,  1017,  1821,  1822,  2384,  1086,  2300,  2302,  2303,  2063,
    1724,  2457,  3099,  2996,  2997,  2737,  3390,  2662,  2663,  2766,
    2833,  1022,  2482,  1021,  2413,  2671,  2672,  2673,  1725,  2738,
    1138,  1874,  3727,  3149,  3150,  1962,  1533,  2899,  3046,  3047,
    1033,  3392,  2436,  1887,  1888,  1889,  1014,  3445,  3324,  1891,
    3242,  3591,  3325,  3469,  1860,  2382,   856,  2120,  3748,  4192,
    2941,  1123,  1124,  4067,  2845,  1128,  2349,   916,  2350,  2352,
    2190,  1578,   922,  3734,  2766,  2121,  3321,  3151,  1066,  3322,
    4197,  4111,  3326,  3321,  2863,  2390,  3322,  2708,  1927,  2394,
    3243,   986,  3244,  2223,  2224,  2225,  2226,  2227,  3251,  2229,
    4214,  4215,  1560,  2414,  3079,  3396,  1106,  1108,  2975,  3513,
    2812,  3500,  3252,   888,  3054,  2426,  2889,  3428,  3474,  3005,
    1076,  3814,   646,  3253,  3269,   646,  1033,  1087,   986,  4656,
    2980,   888,  1445,  3815,  2900,  4657,  3115,  3116,  1245,  1246,
    2368,  1247,   986,  4005,  4256,  1065,  2902,   684,  4380,  4200,
    4587,  4612,  2905,  1078,  1299,  3012,  1085,  2714,  3300,  3301,
    3302,  3383,  2991,  2954,  2065,  1356,  1376,  1300,  2018,  1749,
    1308,  1309,  1310,   971,  3328,  1313,  1314,  1257,  1258,  1317,
    2545,  1319,  1320,  1321,  1300,  1323,   658,  3059,  1257,  1258,
    1109,  2654,  2922,  3080,  2286,  3082,  3001,  1257,  1258,  3344,
    4162,  1257,  1258,  3346,  3094,  3562,   915,  1257,  1258,  1667,
    4457,   921,  1257,  1258,  2924,  2247,  1257,  1258,  2472,  3354,
    3355,  1300,  3111,  1257,  1258,  3361, -2807,  2247,  4832,   992,
    4443,  4822,  1814,  1815,  1816,  2786,  1300, -2086,  4570,  3255,
    -971,  3373,  3374,  1826,  3142,  5123,  1257,  1258,  3144,  1095,
    3380, -2022,  1121,  1257,  1258,  2131,  1767,  4054,  3580,  1388,
    1257,  1258,  1401,  2784,  1940,  4223,  2784,  2784,  3483,  -633,
    1217,  2992,  1257,  1258,  1880,  3724,  1577,  1884,  4614,  1735,
    3386,  1257,  1258,  2540,  1795,  1803,   890,  2571,  4615,  1344,
    2199,  2065,  1257,  1258,  1667,  -986,  1901,  1902,  2065, -1747,
    1906,  2204,   857,  1061,   890,  1257,  1258,  1829,   972,  5062,
    2333,  1090, -2021,  1257,  1258,  1257,  1258,  1347,  1920,  1921,
    1132,  1412,  1304,  1925,  1926,  -620,  3060,  4548,  1257,  1258,
   -2808,  1667,  3216,  4156,  4160,  1257,  1258,  4161,  2714,  3744,
    3095,  4844,  3225,  3635,  4228,  3708, -2807,  2219,  1762,  1257,
    1258,   905,  3105,  2238,  5124,  4170,  4414,  1257,  1258,  3290,
    1512,  4144,  -621,   995,  2879,  2141,  1753,  1412,  4670,  5109,
    4144,  1096,   892,  4145,  4079,  3272,  2198,  2193,  1546,  1051,
    2631,  5113,  4145,  3145,  4348,  4042,  1368,  4146,  1159,   908,
     892,  2232,  5225,  1057,  1209,  4415,  4146,  2222,  4550,  1450,
     953,  4552,  1652,   937,  2406,   196,  2265,   923,  1450,   953,
    4815,  1836,  1257,  1258,  3177,  1057,  2125,  4037,  1959,  1051,
    3514,  4349,  1750,  1213,  1302,  1179,  2178,  2880, -2245,  2178,
    3736,  1052,  4616, -1747,  1992,  1993,  2784,  2793,  3233,  2356,
    2158,  4902,  1565,  1402,   192,  1492,  4905,  1377,  1257,  1258,
   -2808,  2162,  1218,  4110,  1018,  3061,  3378,  4651,  1576,  3588,
   -1861,  4467,  4816,  4873,  3376,  1052,  4379,  -497,  4302,  4777,
    1053,  1052,   653,   895,  4511,  2946,  3517,  1051,  5317,  2194,
    1257,  1258,  2432,  1754,  2646,  1301,   655,  1755,  1116,   656,
    1539,  3377,  -481,  1019,  4529,  4468,  5118,  5318,  1257,  1258,
     985,  1756,  1301,  1576,   196,  2928,  3969,  5037,  1257,  1258,
    1053,  5125,  4559,   909,  1051,  2337,  2338, -2712,  3263,  3828,
    1787, -2873,  -525,  2288,  3839,  4529,  2102,  1257,  1258,  4908,
    1357,  2195,  1493,   193,  4306,  2433,  3615,  4652,  1117,  1301,
    4024,  4028,  1513,  5232,  3425,  1734,  1260,  3550,  1566,  1261,
    4039,  4040,  2929, -1747,  1301,  2233,  3775,  1260,  1097,  4192,
    1261,  5232,  2955, -1747,  3716,  5023,  1260,  2407,  1053,  1261,
    1260,  3489,   924,  1261,  4388,  2715,  1260,  3578,  3579,  1261,
    1540,  1260,  1935,  -514,  1261,  1260,  1939,  1067,  1261,  4447,
    5109,  1160,  1260,  3482,  1369,  1261,  3955,  1210,  1073,  -633,
    3274,   986,   986,  5114,  2784,  1053,  3418,  4732,  1058,  1033,
    4729,  1119,  2086,   654,  2357,  1260,  3509,  3510,  1261,  2266,
    2881,  2434,  3472,  1968,  1254,  3735,  1214,  2128,  2142,  1260,
    1062,  4350,  1261,  1630,  4492,  1088,  4303,  1861,  1757,  5226,
    1862,  1260,  3857,  1991,  1261,  5077,  3511,  1257,  1258,  1100,
    1260,  1163,  1017,  1261,  1224,  4828,  2021,  3442,  -633,  4914,
    1763,  1260,  4817,  1413,  1261, -1747,  2008,  1103,  2220,  4899,
    4900,  1180,  1450,   953,  1260,  1680,  2712,  1261, -1747,  4549,
    3062,  2582,  1260,  2473,  1260,  1261,  2009,  1261,  2358,  1039,
    2794,  1631,   906,  1547,  4745,  4845,  1737,  1260,  3469,  2784,
    1261,  3471,  3709, -1747,  1260, -2807,  -704,  1261,  3714,  1413,
    1830,  2766, -2873,  2334,  2289,  1305,  1257,  1258,  1260,  4304,
    1359,  1261,  4767,  2595,  1738,  4055,  1260,  1302,  3504,  1261,
    3556,  3731,  3056,  1345,  3056,   858,  1758,  3811,  4229,  3501,
    1133, -2022,  1122,  3387,  2841,  1033,  3745,  1255,  3566,  3567,
    3568,  3569,  1268,  3858,  1403,  1577,  2715,  5058,  1250,  3395,
    1249,  4163,  2961,  2200,  2968,  3951,  5025,  3953,  4823,  2017,
   -2245,  2572,  1807,  1751,  2205,  3271,  3595,  2737,  4416,  3002,
    1416,  1260,  2766,  2287,  1261,  1311,  3420,  2787,  1434,  1439,
    1316,  2738,  4733,  3628,  2349,  3631,  2350,  2352,  2675,  3713,
    4910,  3215, -2021,  1534,  2580,  1219,  4140,  1263,  4458, -2808,
    1736,  1383,  2884,  3224,  4496,  -301,  2887,  1260,  1263,  1134,
    1261,  2891,  4076,  2085,  4500,  4080,  3610,  1263,  3256,  1257,
    1258,  1263,  4503,  3622,  2096,  2546,  1348,  1263,  5126,  1257,
    1258,  1033,  1263,  2239,  1633,  1354,  1263,  1363, -2807,  1260,
    1257,  1258,  1261,  1263,  1751,  3282,  2906,  2907,  3558, -2086,
    1257,  1258,  -971,  1381,  1033,  1576,   670,  1260,  4551,  4212,
    1261,  3640,  2670,  4106,  2795,  1574,  1263,  1260,  1358,  1063,
    1261,  3942,  1378,  1263,  1064,  1751,  2471,  1483,  3863,  3866,
    1263,  2374,   835,  2674,  2923,  1302,  1260,  2956,  2957,  1261,
    4401,  1033,  1263,  5137,  2564,  1625,  3593,  4388,  5105,  1033,
    1033,  1263, -1747, -1747,   889,  4487,  2925,  -986,  3890,  2374,
    3891, -1747,  1263,  1595,   969,   910,  3954,   970,  1596,  3581,
    1634,  4256,   986,  1504,  3909,  1263,  3910,  3515,  4026,  4147,
    4305,  3959,  1001,  1263,  2681,  1263,  2655,  -620,  4147,  3970,
    2656,  3924, -2808,  3271,  4314,  1941,  4406,  4407,  1263,  1942,
    2561,  1532,  4110,  2632,  4148,  1263,  4732,  1040,  1620,  2581,
    1941,  1536,  2607,  1022,  2599,  1249,  2611,  1635,  2562,  1263,
    2349,  1066,  2350,  2352,  -621,  2586,  3756,  1263,  3758,  3759,
    1257,  1258,  3762,  3763,  2852,  2793,  1033,  4801,  2633,  1256,
    4967,  2277,  3772,  3773,  2635,  1591,  2374,  3777,  2636, -2873,
    3780,  2292,  3710,  3787,  1779,   674,  1260,  1615,  2652,  1261,
    1118,  1033,  2653,  1622,  1623,   120,  1033,  5167,  1626,  3830,
     115,  1324,   113,  1726,  2587,  3012,  1728,   646, -2012,  3401,
     986,  1751,  1263,  3402,  2435,  5258,  4488,  1746,  1065, -2245,
    3895,  3254,  3725,  3448,  3896, -1747,  1768,  1769,  1770,  1532,
    3728,  1773,  3998,  2647,  1777,  3732,  1068,  1033,  1729,  1783,
    4403,  4005,  1785,  1786,  4272,  2592,   889,  2597,  1263,  1257,
    1258,  2359, -1861,  5332,  2374,  1260,  3903,  1751,  1261,  -497,
    3904,  2374,  1892,  1374,  1257,  1258,  2277,  2598,  4512,  1385,
    1126,  1863,  1257,  1258,  1864,   971,  1180,  1063,  1107,  1107,
    1263,  2601,  1064,  3866,  -481,  5352,  2374,  3422,  3265,  2613,
    1180,  3859,  2550,  1990,  5078,  4525,  2605,  2784,  1263,  3818,
    1250,  2937,  1249,  1279,  1300,  1257,  1258,  2006,  1263, -2712,
    4694,  2374,  2842,  2917,  -525,  2551,  2374,  3599,  1257,  1258,
    3335,  4733,  5316,  2059,  1474,  1257,  1258,  1263,  3629,  3592,
    3814,  3271,   198,  3272,  2539,  1257,  1258,  4732,  1919,  3121,
    3922,  1918,  3815,  2058,  3923,  1041,  1964,  1965,  3449,  2556,
    1969,  4390,  4081,  1970,  1971,  1972,  3705,  3706,  1976,  1977,
    1979,  1981,  1982,  1983,  1984,  1985,  4091,  1497,  1260,  1390,
     835,  1261,  5161,  1951,  3248,  -514,  3961,  2374,  1260,  1412,
    3962,  1261,  4493,  1257,  1258,  4136,  4137,  1505,  2991,  1260,
    1967,  1017,  1261,  2243,  3250,   196,  1764,   890,  4302,  1260,
    1257,  1258,  1261,  2057,  4454,  4052,  5320,  1637,  2563,  1789,
     972,  1590,  1590,  1417,  1033,  1257,  1258,    42,  2794,  2177,
    4122,  1999,  2000,   646,  2002,  4391,  2004,   646,  1033,  4320,
    2618,   646,  2014,  1033,   986,  1737,  2019,  2020,  1257,  1258,
    2622,  2052,  1800,   889,   659,  2152,  3571,  1263,  2192,  4734,
    4735,  4695,   983,  2055,  2001,  3741,  1033,  3266,  2005,  2623,
    2600,  2119,  2013,  1738,  1033,  2739,  -556,  1033,  4622,  5027,
    3742,  2070,  2072, -2012,  2288,  1765,   889,  2868,  2136,  1257,
    1258,  4429,  4430,   892,  2861,  5120,  3827,   986,   986,  5156,
      49,  4397,  1445,  4974,  3002,  4265,  5040,  2992,   986,   986,
    2697,   986,  2098,  3788,  4078,  3242,  3557,  1282,  4085,  2707,
    4271,  4449,  4450,  4063,  1033,  1033,  1263,  4452,  2153,  4455,
    4242,  4243,  4733,  2132,  3428,   966,  1638,  3845,  3573,  1260,
     889,  1033,  1261,  4348,  2283,  2978,  1639,  4105,  3540,  4128,
    2008,  3272,   903,  2060,    54,  3243,  2151,  3244,  2837,   912,
    5282,  5283,  1633,  3251,  2159,  1724,  1724,  4016,  3274,   890,
    2009,    55,  1788,  2325,  1391,   969,  4303,  3252,   970,  1033,
    4349,  1498,  3437,  1725,  1725,   980,  3920,  4041,  3253,  2625,
    5107,  4881,  3882,  4883,  5043,  3851,  3435,  1279,  3056,   991,
    2275,  1352,  2384,   989,  3974,    42,  3489,  1474,  2345,  4257,
    1257,  1258,  2795,  4047,  4048,  4273,  4274,  4275,  2296,  1503,
    5321,  1127,  4051,  1257,  1258,  3400,   888,  4280,  1260,  4060,
    4061,  1261,  1301,  1001,  2257,  2675,  4347,  3321,  2457,  1263,
    3322,  5055,  1061,  1260,  4761,  4013,  1261,  3477,  2268,  1263,
    2719,  1260,  4674,  1033,  1261,   892,  4757,  3947,  2626,  4308,
    1263,  3952,  3353,  3476,  4077,  1033,  2244,  3405,  3406,  4108,
    1263,  1033,  1791,  4278,  4279,  2289,  1257,  1258,    49,  2962,
    3720,  5095,   737,  2045,  1260,  3528,  3511,  1261,  2384,  2413,
    1138,  -860,  4097, -2012,  1033,  1635,  3533,  1260,  3535,  2061,
    1261,  3538,  5215,  4098,  1260,  4975,  4783,  1261,  4192,  1015,
    3029,  3630,  4338,  2682,  1260,   196,  4920,  1261,  1420,  3852,
    2331,  1013,  2484,  2766,  2342,  3705,  3706,  1107,  1789,  1033,
    2335,  1413,    54,  4829,  1986,  4247,  3450,  3267,  4334,  2382,
    1257,  1258,  1257,  1258,  2154,  2963,  2354,  2355,  1300,    55,
    4321,  4675,  2871,  3389,  1057,  2150,   971,  1257,  1258,  1257,
    1258,  1790,  1260,  1257,  1258,  1261,   890,  2073,  2414,   984,
    3411,  2630,  1257,  1258,  4050,  2574,  3274,  3572,  4033,  1260,
    5016,  2648,  1261,   737,  2290,  1730,  4921,  1257,  1258,  2178,
    4350,  5017,  2665,  2445,  1260,  1257,  1258,  1261,  2575,   890,
    1263,  1282,  4497,  2459,   904,   709,  1353,  3615,  2384,  1257,
    1258,  4034,  1418,    42,  1392,  4976,  5157,  1260,  4734,  4735,
    1261,  4476,  4874,  3030,  3757,  4676,  4480,  3760,  3761,  3574,
    4483,  3764,  3765,  3766,  3767,  3768,  3769,  3770,  3771,  1792,
     898,  3774,  2689,  3776,  5096,  3778,  4948,  2964,  1943,  3786,
    4217,  4432,   892,   890,  2349,   990,  2350,  2352,  1260,  2477,
     986,  1261,  3505,  3506,  3507,  1633,  3444,  1153,  4807,  4119,
    3616,   714,  1474,  -860,  4445,   986,  3451,  3789,  3790,   913,
    4305,  5342,   656,  5086,  2461,   892,    49,  1015,  4456,  1263,
    3617,   972,   981,  4460,  2418,  4708,  1421,  4709,   761,  2155,
    4653,  2784,  2784,  1616,  1263,  1635,  2683,  3853,  3989,  1257,
    1258,   986,  1263,  3784,  2558,   646,   646,  5158,  2156,   655,
    4337,  1944,   656,  3261,   646,  4099,  3705,  3706,  4922,  4154,
    2965,  3379,  2669,  1257,  1258,  1283,  1284,  1221,  2751,   892,
      54,  1294,  1295,  1296,  1297,  1263,  2559,  2560,  5159,  2679,
    1987,  1107,  1079,  1002,  2291,  1637,  3811,    55,  1263,  4168,
    4169,  1257,  1258,  1257,  1258,  1263,   982,  1080,  4086,  1062,
    1635,  4971,  2292,   726,   919,  1263,  1988,  1257,  1258,  1260,
    5121,  1791,  1261,  1257,  1258,  1300,  2446,  4605,  1257,  1258,
    1302,  5041,  1260,  1841,  4227,  1261,  3031,  3530,  1635,   761,
    1003,  1180,  2606,  1354,  2082,  1107,  3032,  2712,  4773,  5018,
    3563,  4682,  4949,  3033,  4533,  2095,  1107,  4035,  2097,  4734,
    4735,  3901,  3854,  1263,  3261,  5097,  4938,  4218,  4534,  1257,
    1258,  1257,  1258,  4451,  2933,  2600,  3902,  3564,  1257,  1258,
    1263,  3975,  2939,  4641,  3915,  1260,  3303,  3520,  1261,  5087,
    2740,  2690,  4504,  4754,  4755,  1263,   742,  2419,  1257,  1258,
    1257,  1258,  1597,  2293,  2694,  4268,  1301,  2698,  3575,  3576,
    1033,  3816,  4939,  1257,  1258,  1004, -1925,  3926,  1263,  3409,
     743,  2713,  1474,  2686,  1017,  3834,  3452,  4633,  4087,  2776,
    3927,  3817,  1257,  1258,  1730,  1015,  2712,  4400,  -556,  1845,
    2374,  1257,  1258,  2579,  1250,   801,  1249,  2696,  1017,  1260,
    4100,  1260,  1261,   196,  1261,  4591,  4592,  3034,  1268,  1263,
    4234,  1257,  1258,  2684,  1598,  3432,  1260,   986,  1260,  1261,
    5060,  1261,  1260,  5064,  4436,  1261,  2840,  1945,   927,  2685,
    1617,  1260,  4376,  1989,  1261,   986,  4744,  1474,  1792,  3172,
    4505,  2966,  2853, -1925,  4848,  4635,  1260,  5090,  5091,  1261,
    2737,  4576,  2789,  2790,  1260,  1637,  1618,  1261,  3921,   986,
    1180,  1033,  4283,  2138,  2738,  1474,  2138,   987,  1260,  4471,
    4472,  1261,  3835,  2588,  2713,  4473,  2748,  3235,  2766,  1051,
    2753,  3394,  1407,  1537,  4506,  2934,  1257,  1258,   986,  4284,
     899,   986,  4940,  2940,  4088,  2138,  2589,  2240,  1846,   995,
    1033,  3403,  1849,  3404,  3035,  1033,  1033,  1257,  1258,  1850,
    4343,  4535,  4344,  1292,  1293,  1294,  1295,  1296,  1297,  1408,
    1637,  1257,  1258,  2766,  2766,  1013,  3433,  2739,  4602,  2766,
    1263, -1925,  3594,  1257,  1258,  2748,  1017,  2813,  1580,   986,
    1257,  1258,  4530,  1263,  1257,  1258,  2777,  1033,  1637,  2877,
    1599,   930,  2712,  4235,  1081,  2784,  1015,  4538, -2012,   930,
    3173,  4115,  2888,  1033,  1257,  1258,  3980,   769,  1260,   889,
    1053,  1261,   889,  4530,  3832,  2713,   969,  1024,  2241,   970,
    2942,  4933,   900,  3107,   969,  1082,    42,   970,  4759,  4760,
    1851,  1810,  1260,  1301,  3713,  1261,  1263,   646,   646,   646,
     986,   646,  1033,   986,  4014,  1257,  1258,  4148, -1925,  4109,
    1810,  2885,  2778,   646,  5219,  1033,  4290,  1753,   646,  1574,
    1260,  2576,  1260,  1261,  3829,  1261,  1005,  4084,  2872,  2873,
    2874,  1025,  2876,  2784,  2784,  3960,  1260,  1633,  2270,  1261,
    4928,  2271,  1260,  2779,  2886,  1261,  1409,  1260,  1006,  2890,
    1261,  1257,  1258,  4056,  1853,   901,  4601,  2479,  2596,    49,
    1263,  1027,  1263,  3108,  5162,  1581,  1257,  1258,  2916,  1017,
    4923,  2609,  2527,  1257,  1258,  1918,  4006,  1263,  1918,  1263,
    1257,  1258,  4116,  1263,  1257,  1258,  1257,  1258,  1260,  1007,
    1260,  1261,  1263,  1261,  1257,  1258,  1048,  1260,  4710,  1543,
    1261,  1033,  4703,  2987,  5275,  5275,   889,  1263,  2554,  3103,
    4530,  1257,  1258,    54,  2780,  1263,  1074,  1260,  1811,  1260,
    1261,  4701,  1261,  4614,  2610,  1810,  1257,  1258,  3958,  1263,
    2342,  2459,  1260,  4615,  1754,  1261,  1077,  1825,  1755,  3448,
    1033,  5034,  4667,  1257,  1258,  5163,  3148,  1591,  1591,  4704,
    1008,  1260,  1756,  3000,  1261,  1017,  4238,   971,   986,  3998,
    1260,  3998,  1084,  1261,  3238,   971,  3109,  1013,  3846,  1090,
    1635,  4239,  1257,  1258,  1089,  2777,  1257,  1258,  1737,  4683,
    1260,  3092,  2577,  1261,  1810,  3048,  2484,  1093,  2614,  1544,
    2621,  2272,  3055,  1257,  1258,  1854,  2766,  2781,  3068,  3070,
    3073,  3074,  3075,  3076,  3077,  2624,  1738,  2627,  3081,  3966,
    3086,  2639,  1918,  1856,  1092,  1339,  2460,  4232,  3490,  1350,
    3086,   655,  3096,  3097,   656,  3086,  3965,  3101,  3102,  1263,
    1033,  3104,  3086,  3982,   177,  2657,  4144,  3114,  1810,  3806,
    3117,  2778,  1919,  2664,  1257,  1258,  1101,  3127,  4145,  4247,
    3128,   986,  1879,  1263,  3132,  1260,  3133,  2667,  1261,  1553,
    1554,  3143,  4146,  3086,  1303,  3366,  4233,  1033,  1015,  1416,
     920,  4027,  3006,  1416,  1450,  4157,  1260,  4616,  2332,  1261,
    4038,  1263,   890,  1263,   986,   890,  1191,  3058,  2336,  1757,
    1260,  2550,   972,  1261,  3086,  3182,  4787,  1263,  3078,  3134,
     972,  4792,  1260,  1263,  3087,  1261,  1208,  1779,  1263,  1260,
      42,  1883,  1261,  1260,  2551,  4164,  1261,  4812,  4165,  1222,
    1223,  5384,  3135,  3490,  2705,   709,  4969,  4970,  3869,  2846,
    4857,  2984,  1702,  1260,  3118,  1703,  1261,  3121,  3126,  1918,
    5034,  3884,  1107,  3007,  1739,  3130,  3131,  1474,   986,  1263,
    2847,  1263,   986,  4858,  2998,    42,  3491,  2921,  1263,  3248,
    1033,  3136,  2384,  1257,  1258,  1905,  1107,  2991,   892,  3287,
     646,   892,  3342,  4513,  1260,  2687,  3492,  1261,  1263,  3250,
    1263,  3862,  3284,    49,  3292,  1257,  1258,  1758,  1103,  3493,
    1033,   714,  2848,  1263,  1033,  2767,  1303,  1542,  2772,  3807,
    1105,  3288,  4950,  1104,  1555,  1556,  3293,  1450,   953,  3894,
    1543,  3897,  1263,  3423,  1257,  1258,  4514,  2458,  2782,   890,
    1260,  1263,  1606,  1261,  1629,  3905,  3008,  1111,    49,  4787,
    1637,  3911,  1109,  4792,  5212,  1260,  3912,    54,  1261,  4515,
    1051,  1263,  1260,  1630,   322,  1261,   324,  1450,   953,  1260,
    3407,  5070,  1261,  1260,    55,  1260,  1261,  2458,  1261,  2702,
    3282,  3491,  2387,  1260,  4553,  2703,  1261,  4555,  4556,    25,
    3013,  1113,  2377,  3494,  3421,  3385,  2992,  3913,  4516,  3914,
    1260,  3492,    54,  1261,  2234,  2235,  3916,  2388,  1257,  1258,
    3865,  4787,  1052,   726,  3493,  1260,  4792,  1279,  1261,    55,
    1544,  1631,  3638,  1450,   953,   892,  3919,  2875,  3925,  5249,
    2878,  2236,  1260,  3703,  3704,  1261,  1263,  3413,  3414,  1114,
    5206,  3928,  2206,  1250,  2702,  1249,  4300,  1033,  3163,  3164,
    2920,  1053,  1630,  1279,  1033,  1331,  1115,  1263,  4398,  2578,
    3930,  1260,  1125,  2484,  1261,  1260,  4968,  4437,  1261,  3932,
    2052,  1263,  2207,  1120,  4834,  2052,  4835,  4310,  4311,  3436,
    1033,  1632,  1260,  1263,  3368,  1261,  1130,  2602,   709,  3934,
    1263,  2484,  1279,  2317,  1263,  2318,   742,  1129,  3494,  3235,
    4093,  4094,  5306,  4326,  2603,  4435,   175,  2615,  1877,   986,
    1631,  2484,    63,  3370,  1263,  3495,  1135,  1918,  1136,  4596,
    4597,  4598,  4599,  2208,  1137,   986,   986,  2209,  3705,  3706,
    1256,  2616,  4820,  1260,  3137,  2484,  1261,  1630,  1332,  1630,
    2617,  3963,  1180,  1333,  2484,  1033,  3480,  1017,  3284,  1017,
    4319,  5216,   986,  2389,   714,  1263,  1139,  1015,  1140,  4691,
    4692,  1576,  1343,   966,  3935,  1346,  1250,  3009,  1249,  1141,
    1349,  3616,  2619,  4315,  1633,  1351,  2484,   889,   889,   889,
    2999,  1302,  3534,  4859, -2012,  3936,  1334,  3496,  3235,  2660,
    3235,  3617,  4143,  2484,  2784,  1631,  5022,  1631,  1307,  4331,
    1416,  1263,  1335,   969,    36,  3526,   970,  1144,  4356,  1145,
    5190,  3547,  1146,  3549,  1312,  2744,  1263,  4860,  4332,  2745,
    3495,  1282,  4333,  1263,  1147,  4167,  1517,  1518,  1336,  1521,
    1263,  1522,  5049,  4172,  1263,  1033,  1263,   986,   986,  1148,
    4205,    42,  4402,  1149,  1263,  2784,  2784,  5068,  5069,  3542,
    2316,  2317,  1260,  2318,  3413,  1261,   726,  1282,  2914,  1633,
    1634,  1263,  2915,  1633, -2012,  1150,  3627,  2948,  2949, -2012,
    3577,  3327,  2950,  2951,  1260,  2484,  1263,  1261,  3129,  1315,
    3397,  1151,  2210,  4481,  2484,  1553,  1554,  1154,  3236,  1156,
    3236,  4921,  3496,  1263,  3625,  3237,  1282,  3237,  3626,  1322,
    3917,  4262,  4263,  1260,  2484,  1416,  1261,  1635,  -702,  4138,
     709,  3174,  1279,  4139,    49,  5354,  5355,   769,  2377,  4289,
    3816,  1033,  1263,  4139,  4355,  1157,  1263,  1523,  2484,  4631,
    1279,  2065,  1017,  2378,  4147,   986,  2342,  3598,  1158,   742,
    3817,  4861,  1279,  1263,  4634,  1161,  5262,  1162,  1633,  1634,
    1633,  4640,  2777,  3139,  3140,  4158,  3692,  3608,  4642,  3159,
    3162,  2211,  4643,   743,  4433,  2840,  1416,  4378,    54,  4434,
    4392,  2913,  4644,  4439,  4393,  3228,   714,  4440,  4441,  3232,
    1286,  1287,  4440,  1164,   971,    55,  3238,  1033,  1636,  4645,
    1165,  3055,  1635,  3055,  1263,  4478,  1635,  4389,  3068,  4479,
    1908,  1909,  4485,  3648,  4731,  5311,  4486,  5313,  1318,  4578,
   -1747,  1166,  3086,  4579,  4684,  3711,  1286,  1287,  2778,  1167,
    4662,  4889,  1168,  5335,  1169,  2212,  1033,    42,  4862,  4499,
    1555,  1556,  3719,  5029,  1634,  3462,  1634,  -702,  4580,  1170,
    4499,  1171,  4581,  2379,  3819,  4681,  4863,  4582,  1174,  2779,
    4891,  4583,  3086,  1327,  4917,  1286,  1287,   322,  1175,   324,
    3086,  3806,  2969,  1181,  3086,  3086, -1747,  5370,  5371,  3831,
    4864,  5079,  4585,  2903,  2904,  3238,  4586,  3238,   726,  1737,
     986,  1635,  1182,  1635,  1474,  4588,  1033,  1033,  1183,  4589,
     890,   890,   890,  1328,  4590,   939,  1184,   175,  4486,  1185,
      49,  4595, -1747,  1186, -1747,  4486,  1187,  1738,  4625,  1557,
    1558,  1559,  4628,  1263,  4636,  1188,  1282,  2477,  2484,   972,
    2780,  1918, -1747,    63,  4006,  4659,  1918, -1747,  2970,  2484,
    1189,  1063,  2182,  5364,  1282,  1263,  1064,  1330,  4705,  2065,
    4723, -1747,  4479,  1192,  4486,  1033,  1282,  2213, -1747,  5364,
    1193,  1194,  1337,  4727,  3463,  3464, -1747,  4486,  1195,  2971,
     769,   742,  -702,  1196,  1263,  1033,  4730,  1637, -1747,  1474,
    4486,    55,  2377,  1474,  2777,  5364,   892,   892,   892,  1338,
    4746, -1747,  1197,   689,  4747,   743, -1747,  2378,  4748,  2214,
    1033,  2183,  4747,   176,  4796, -1747,  4871,  4892,  4486,   889,
    4872,  4479,  4904,  2781,   986,  1198,  3626,   986,  1199,  3648,
    4972,  5134,   177,  5139,  4973,  5135,  2082,  3753, -1747,  3284,
    1200,  3807,   940,  1022,  2184,  1249,  1341,  5142,  3284,  3284,
    2972,  4440,  2095,  3459,  3284,  5144,  1201,  1342,  1202,  5145,
    2778,  1290,  1291,  1292,  1293,  1294,  1295,  1296,  1297,  1203,
    2739,  1355,  1637,  1474,  1204,   175,  1637,  1205,  1474,  5153,
    1474,  4519,  -702,  5154,  1206, -1747,  1207,  2065,   709,  5220,
    4865,  3006,  1211,  5221, -1747,  1286,  1287,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,   178,  1638,  1360, -1747,  1212,
    1215,  -702,  1216,  1286,  1287,  1220,  1639,  2379, -1747,    42,
    2969,  1224,   941,  3122,  5346,  1286,  1287,  3984,  5347,  3465,
    1225,  2969, -1747,  2973,  3141,  3385,  1290,  1291,  1292,  1293,
    1294,  1295,  1296,  1297,  1226,   713,  1361,  1227,   179,  1228,
   -1747,  1229,  3957,  1737,   714, -1747,  4713,  4714,  3996,  4716,
    1230,  1637,  3007,  1637,  3536,  3537, -1747,  1231,  1232,  1233,
    1234,   661,  2777,  4768,  1235,  4090, -1747,  3307,  1278,  1236,
    1367,  1738,  1237,  2381, -1747,   719,  2970,  4720,  4721,  2748,
     177,   180,    49,  3979,  1033,  1638, -1747,  2970,  1238,  1239,
     986,  1240,   769,  1241,  3308,  1639,  1242, -1747,  1243, -1747,
    1244,  1033,  1306,  3284, -1747,  3086,  1919,  2971,  1339,  4007,
    1371,  1372, -1747, -1747,  1386,  1375,  1395,  1397,  2971,  1400,
    2748, -1747,  1033,  1022,  1407,  1249,  1432,  1440,  2778,  1017,
    1017,  1446,   986,   986,  2782,  3008,  3463,  3464,  1017,  1017,
    1017,   986,   986,   986,  3309,  1358,   726,  3310,  1507,  1506,
   -1747,  4072,   662,    55,  2185,  3311,  1509,  1510,  -702,  3006,
    1519,  5143,  1955,  1525,  1524,  1526,  1527,  1528, -1747, -1747,
    1638,  1033,  1638, -1747,  3312,  1529,  1279,  1530,  2972,  2969,
    1639,  3014,  1639, -1747,  1531,  1535,  1538,  1549,  -910,  2972,
    4065,  1541,  4065,  1550, -1747,  5030,  1551,  3015,  1552,  1279,
    1562,  1575, -1747,  1579,  1061,   924, -1747,  1603,  1605,  2380,
    1624,  1628,   737,  1727, -1747,   181, -1747,  1730,  1771,  1772,
    1775,  3313,   890, -1747,   740,  1778,  -702, -1747,   741,   742,
    3007,  1774, -1747,  1017, -1747, -1747,   986,  1784,  4107,   663,
    1300, -1747,  1810,  1919,  2974,  2970,  1290,  1291,  1292,  1293,
    1294,  1295,  1296,  1297,  1828, -1747,  1817, -1747,  1831,  1866,
    1876,  2973,  1899,  1877,  1290,  1291,  1292,  1293,  1294,  1295,
    1296,  1297,  2973,  1878,  1947,  4066,  2971,  3055,  1292,  1293,
    1294,  1295,  1296,  1297,  1280,  4135,  1916,  2777,  4827,  1928,
    4459,  3465,  3314,  1929,   182,    42,  1936,  1107,  1966,  4849,
    2186,  4850,  4851,  1937,  1938, -1747,  1973,  -702,   892,  1974,
    1281, -1747,  2003,  3008,  2007,  2022,  2054,  2075, -1747,   942,
     943,  2187,   944,   945,   946,  2076,  2077,  2381,  2078, -1747,
    2080,  4882,  2081,   689, -1747,  2089,  2090,  2091,  2092,  2101,
    2117,   947,  2122,   664, -1747,  2133,  2188,  2972,  2137,  1283,
    1284,  2138,  2140,  2778,  2143,  1956,  3009,  4213,  2145,   183,
    2147,   184,  2189,  2149,  1409,  2150,  2176,  2181,    49,  3016,
    1919,  2201,  2202,  4221,  4222,  1918,  2203, -1747,  2218,  2221,
    1282,  2228,  2230,  2231,  3006,  2245,  3315,  2242,  2246,  3316,
    2247,  2258,  2259,  3086,  3086,   185, -1747,  3182, -1747,  2260,
   -1747,  1283,  1284,  1282,  2262, -1747,  2264,   186,  4869,  2276,
    3490,  4519,  -702,  2278,  2280,  2281,  2282,  2284,   709,  2285,
    2298,  3838,  3463,  3464,  3840,  2305,  2306,  4927,   761,  2307,
    2973, -1747,  4520, -1747,  2311,  4521,   689,  4251,  2308,    55,
    4255,  2309,  2310, -1747,  2312,   767,  2322,  3017,  2314,  4135,
     769,  2326,   665,   770,  2327,  3007,  2346, -1747,  1667,  2360,
    1590,  2363,  2362, -1747,  4135, -1747,  4276,  3317,  2371,  2376,
    2391,  2377,   666,  3018,  2396,   713,  2397,  1285,  2402,  2403,
    2405,  2415,  2974,  2417,   714,   986,  2420,  2427,  2428,  2431,
    2438,  1269,  1270,  2974,  4296,  2518,  2519,  2520,  2521,  2522,
    2523,  2524,  2439,   187,  2441, -1747,  2449,  2463,  2451,  2452,
    2464,  2469,  1303,  2466,  4519,   719,  2465,   667,  2480, -1858,
    2470,   709,   668,  2481,  2484,  2483, -1747,  2530,  5033,  2531,
    2528,  5122,  1271,  2532,  3009,  3019,  2534,  2535,  3008,  1286,
    1287,  3318,  2536,  2537,  2538,  1272,  2541,  2543,  3491,  2544,
    4869,  2548,  1288,   669,  2555,  2549,  2591,   670,  2565, -1747,
    2567,  -702,  1286,  1287,  2568,   671,  2569,  2583,  3492,  2585,
    2590, -1747,  1957,  2593,  2600,  2608,  -859,  1015,   713,   929,
    2408,  3493,  4176,  2612,  2594,  1273,   726,   714,  1958,  5130,
    2377, -1747,  2604, -1747,  2628,  2629,  2634,  3988,  1274,  2649,
    2661,  2637,  2638, -1747, -1747,  2409, -1747,   672, -1747,  2650,
    2408,  3319,  5204, -1747,  2651,  2658,  2659,  2052,   719,  -702,
    2377,   834,  2676,  4522,  4523,  1275,  4177,   885,  1919,  2677,
    4178,  4524,  4179,  2678, -1380,  2409,  1297,  3020,  2691,  3320,
    2695,  2701,  1655,  1656,  2378,   885,  2700,  2704,  2717,   967,
    2720,  2974,   737,  2713, -1747,  1180,  1033,  2729,  2723,  1017,
    3284,   673,   986,   834,  1012,  3494,  2724,  2725,   741,   742,
    2726,  2727,  2728,  1416,  2741,  2742,  -861,  -861,  1658,  2743,
    4180,  2746,  2178,  2773,  2775,  3490,  -861,  1751,  4410,   726,
    1276,  2791,  1661,  2792,  2799,  2802,  2804,  2808,  1662,  1663,
    2840,  2807,  1664,  1033,  2809,  2810,   674,   675,  2811,  2410,
    2125,  2835,  2836,  2024,  2843,  1420,  1421,  2855,  4065,  2856,
    2857,  2864,  1279,  2858,  2859,  2860,  1666,  5033,  2866,  2870,
    2892,  2894, -1747,  2893, -1747,  2895, -1747,  2897,  2901,  2410,
    1667, -1747,  2909,  2024,  1668,  5327,  2911,  1918,  2912,  4176,
    2913,  1737,  1279,  2918,  4494,   737,  2919,  1289,  -859,  3009,
    2926,   838,  2930,  2943,  2932,  4135,  2944,  4477,  2938,  5350,
    4135,  1918,   742,  1673,  4135,  2945,  2981,  2982,  2985,  1738,
    2990,  1737,  2995,  3648,  3003,  3023,  -702,  3495,  5327,  3025,
    1918,  3024,  3026,  4543,  1033,  3027,  3098,  4178,  3100,  4179,
    1290,  1291,  1292,  1293,  1294,  1295,  1296,  1297,  5350,  1738,
    1918,  2378,  3154,  3146,  3167,  3169,  3175,   986,  -880,  3176,
     839,  1033,  3183,  3491,  1291,  1292,  1293,  1294,  1295,  1296,
    1297,  3185,  3186,  3187,  5278,  4869,  2025,  3188,  3234,  3189,
    2026,  3190,  3191,  3492,  3192,  3193,  3230,  4180,  3194,  3195,
    1677,  3196,  3197,   840,  3198,  3199,  3493,  1678,  3200,  3496,
     986,  4561,  3201,  3202,  3203,  3204,  2025,  3205,   761,  3206,
    2026,  5111,  4520,  1279,  3207,  4521,  3208,  1679,  3209,  3210,
    2027,   646,  3231,  3211,  3212,   767,  3213,  3214,   841,  3217,
     769,  3218,  3257,   770,  3219,  1279,  3271,  3220,  3221,  3222,
    2028,  3223,  1655,  1656,  1546,  3270,  4251,  3289,  3330,  3297,
    2027,  3306,  4571,  3331,  3329,  2920,  3343,  2411,  3345,  1279,
    3360,  1283,  4181,  3391,  3393,  4411,  1282,  4182,  1159,  3424,
    2028,  4135,  3398,  4183,  2412,  1209,  3440,  1681,  1658,   842,
    3494,  3438, -2232,   986,  5382,  1213,  3441,  3284,  3439,  3443,
    3457,  3446,  1661,  3461,  3475,  1682,  1282,  3478,  1662,  1663,
    3479,  3481,  1664,  4412,  2412,  2029,  3488,  3489,  3502,  3508,
    3511,   761,  3516,  4184,  3523,  4520,  3527,  3525,  4521,  4359,
    3539,  3529,  3543,  3544,  3545,  -880,  1666,  3554,   767,  4360,
    3546,  3548,  4288,   769,  3559,  2029,   770,  3551,  3553,  4361,
    1667,  3560,  3561,  2620,  1668,  3585,  3586,  3002,  3589,  3602,
    1686,  3607,  3609,  4362,  4363,  4364,  3603,  1416,  1033,  1687,
    3604,  3605,  3606,  3632,  4669,  3633,  3634,  3906,  3641,  4365,
    3642,  -556,  1919,  1673,  3635,  3643,  3713,  4007,  4678,  3718,
    3721,  3722,  1303,  1033,  3726,  3729,  3730,  3737,  3746,  3822,
    3284,  3751,  4185,  3749,  3750,  3752,  5368,  3875,  1219,  3879,
    3753,  2030,  3495,  4522,  4523,  3755,  2840,  3793,  -108,  3796,
    3385,  4557,  3848,   843,  3799,  3876,  3880,  1282,  3802,  3881,
    3805,  3820,  3883,  3837,  4702,  1286,  1287,  3856,  1283,  4181,
    3866,  2030,  5111,  3870,  4182,  3872,  3885,  2031,  1692,  1282,
    4183,  3887,  4186,  3898,  3888,  3889,  3272,  3899,  3945,  3937,
    1677,  3941,  3940,  3946,  1680,  1286,  1287,  1678,  3948,  1652,
    3964,  2032,  1474,  1282,  3972,  3973,  4135,  2031,  3981,  3990,
    4135,  3995,  4008,  3994,  3496,  3977,  1303,  1679,  1033,  4011,
    4184,  4012,  4029,  4030,  4031,  4018,  2033,  4043,  4019,  4044,
    3273,  2032,   844,  4020,  1693,  1694,  1695,  1696,  4021,  4187,
    4049,  4057,  1697,  4022,  4023,  4070,  4522,  4523,  4062,  4059,
    4069,  4073,   845,  2103,  4075,  4074,  2033,  4089,  4092,  1698,
    4096,  4103,  1699,  2104,  4113,  4109,  4114,  1033,  4117,  4118,
    2034,  4121,  4123,  2105,  4126,  4129,   197,  1681,  4130,  4155,
    4413,  4166,  4173,  4206,  5379,  4210,  4211,  2106,  2107,  2108,
    4216,  4225,  4226,   886,  4237,  1682,  4282,   846,  1701,  4185,
    2034,  2035,   668,  2109,  4270,  4251,  4287,  4255,  4779,  4292,
    5379,   886,  4299,  3284,  4307,  4309,  1286,  1287,  4323,  4340,
     847,   655,  4316,  4322,   656,  4335,  4297,  4336,  4339,  4345,
    4358,  2035,  4374,   848,  4375,  4296,  4826,  4366,  1286,  1287,
    4380,  4188,  4385,  4386,  4804,   849,  4382,  4387,  4399,  4186,
    1686,  4405,  4388,  4396,  4367,  4426,  1013,  4394,  4431,  1687,
    4404,   850,  1286,  1287, -1639,  -704, -1638,  4408,  4409,  2270,
    4448,  4453,  4462,  4463,   834,  4464,  4465,  3597,  4474,   834,
    4482,  4491,  4495,  4532,  4189,  4190,  4501,   851,  4191,  1033,
    -705,  4537,  4541,  3060,  4545,  4531,   986,  4547,  4200,  4569,
    4554,  4563,  4562,  4565,  4510,  4566,  4187,  4572,  4573,   834,
    4575,  3274,  3086,  4594,  3086,  4606,  4609,  4584,  4608,  4610,
    1704,  4611,  4623,  4624,  4625,   834,  1290,  1291,  1292,  1293,
    1294,  1295,  1296,  1297,  4626,  4627,  4632,  4068,  1692,  4629,
    4630,   852,  4638,  4637,  1707,  1708,  4639,  4560,    42,  4647,
    4648,  4649,  4655,  4658,  1709,  4660,  1290,  1291,  1292,  1293,
    1294,  1295,  1296,  1297,  4663,  4661,  4664,  4444,  4665,  4672,
    4671,  4685,  4686,  4679,  4885,  4368,  4141,  4142,  4688,  4690,
    4440,  4149,   834,   834,  4706,   834,   834,   853,  4711,  4712,
    4715,  4717,  4369,  4718,  1693,  1694,  1695,  1696,   834,  1057,
    4722,  4724,  1697,  4743,  4750,  4251,  4251,  4752,  4188,  2036,
    2037,   740,  4758,  2038,  2039,  2040,  2041,  4171,  4762,  1698,
    4945,    49,  1699,  4201,  4203,  4204,  4763,  3744,  3875,  4771,
    4621,  2110,  -704,  4769,  1837,  1838,  1839,  1840,  1841,  2036,
    2037,  4775,  4793,  2038,  2039,  2040,  2041,  4628,  2111,  4794,
    4781,  4189,  4190,  4802,  4370,  4191,  4782,  4806,  1701,  4803,
    4805,  4809,  4814,  4810,  4821,  3385,  4811,  4825,  4830,  4836,
    4840,  4371,  2703,  4841,  3014,    54,  1591,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  4852,  4855,  4886,  5054,  4880,
    3015,  4842,    55,   834,  4896,  4890,  4135,  4898,  4888,  1290,
    1291,  1292,  1293,  1294,  1295,  1296,  1297,  4901,  4907,  4911,
    4915,  4916,  4979,  2754,  4918,  4932,  4822,  4930,  4947,  4695,
    4934,  4941,  2987,  1290,  1291,  1292,  1293,  1294,  1295,  1296,
    1297,  5108,  4935,  4965,   834,  4936,  4937,  4942,  4954,  2755,
    3381,  1842,  1843,  1844,  1845,  4956,  4957,  4946,   885,  4951,
    4962,  4977,  4981,  5019,  2756,  5028,  1919,  5035,  5048,  5020,
    5038,   967,  5037,  5040,  5041,  3182,  3182,  2757,  5042,  5050,
    4065,  5051,  5072,  5057,  5081,  5152,  5058,  -440,  5155,  5099,
    1704,  5102,  5103,  5104,  5119,  5071,  2112,  5101,  5131,  5133,
    5138,  5167,  5170,  5140,  -458,  5195,  5196,  5076,  5197,  5198,
    5200,  5206,  5207,  5214,  1707,  1708,  5208,  5210,  5085,  4845,
    5224,  5227,  5228,  5092,  1709,  5235,  5236,  5240,  5202,  2758,
    2759,  5250,  5253,  5257,  5256,  5263,  5265,   120,  5267,  5258,
    3275,  5268,   115,  -556,   113,  5271,  5281,  5279, -2657,  5149,
    5288,  5291,  5293,  5303,  4251,  5308,  5310,  2760,  2113,  5304,
    5309,  5301,  5314,  1846,  5319,  1847,  1848,  1849,  5338,  5334,
    5328,  5340,  3016,  5343,  1850,  2114,  5344,  5353,  5357,  5358,
    5360,  5367,  5369,  4823,   889,  5387,  5094,  3968,  3804,  3795,
    3798,  4778,  4780,  4776,  3801,  4269,  3792,   834,  4788,  4120,
    4798,  5024,  5106,  5247,  1801,  5246,  1033,  2361,  4800,  1033,
    4913,  5388,  5362,   979,  1491,  5013,  3431,  3473,  4373,  4992,
     885,  5372,  5171,  5285,  5233,  5286,  2761,  5276,  5245,  5244,
    4281,   834,   834,  3045,  4993,  1640,  4995,  4996,  4998,  4999,
     834,   834,   834,   834,   834,   834,  3052,  3967,  5000,  1033,
    3017,  5001,  5002,   834,   834,  1851,   834,   834,  5003,  4593,
    5006,   834,   834,  4475,  3229,   834,   834,   834,   834,  5048,
     834,   834,  5007,  1283,  1284,  4607,  3018,  5008,   834,   834,
    2762,   834,   834,   834,   834,   834,  3847,  3844,   834,   834,
     834,   834,   834,   834,   834,   834,   834,  3843,   834,  4442,
    4843,   834,   834,  5255,  5217,  4726,   834,  5013,  5013,  5149,
     834,   834,   834,  4831,  5223,  5222,  3227,  4964,  1852,  1853,
    3157,  3842,  4291,   834,   834,   834,  4489,  4542,   834,  4490,
    4159,   834,   834,   834,   834,   834,   834,  5345,  3019,  4209,
     834,  4207,  4749,  3065,  5229,  4544,  5044,  4856,  4903,  4966,
    5014,   834,   834,  3939,  4870,  4906,  5201,  3639,  4879,   834,
    2553,   834,   834,  3707,  4742,  1257,  1258,  4502,  4603,  4285,
    3583,  3833,  3570,   834,   834,   834,  3160,   834,   834,  3161,
    4766,   834,   834,   834,  3158,  2910,   834,   834,   834,   834,
     834,   834,   834,   834,  2304,  2908,  1502,   834,  5290,  4224,
    2344,  2529,   834,  3460,  3458,  5298,  2478,  3712,  3987,  3754,
    3447,  4384,  1020,  1406,  2834,  5013,  5013,   885,  2986,  5239,
    1405,  2699,  3410,  2668,  3950,  4943,  4925,  5205,  3484,  5213,
    5252,  5330,  5013,  1875,  5239,  3485,  5015,  3486,  1919,  1949,
    3020,  3487,  5014,  5014,  5336,  4693,  4838,  5248,  5351,  5341,
     885,  4244,  5052,  1827,  5053,  4428,  1508,  2255,  1033,  4700,
    1854,  4046,  1919,  1837,  1838,  1839,  1840,  1841,  4220,  4944,
    4813,  4919,  4854,  2989,   854,  2706,  3419,  1855,  1856,  1608,
    1609,  1919,  2074,  3985,  3986,  4680,  4395,  3983,  4668,  1610,
    4673,  3531,  1611,  5380,  2254,  5013,  2343,   890,  1602,  3532,
    1485,  1919,  1604,  3733,   885,  3426,  5239,  3993,  2883,  4466,
    5013,   834,  4719,   115,  2806,   113,  5300,  2898,  5211,  5380,
    5366,  5302,  5251,  5013,  5383,  4654,  4677,  4558,  5015,  5015,
    4839,  3596,  4600,  1950,  3521,  5209,  3783,  2854,  2161,   975,
     976,  2865,   967,  2851,   834,  2160,  2850,  1399,   936,  3565,
    5014,  5014,  5013,  3454,  3258,  5239,  2064,  5239,  2297,  4824,
    4929,  3259,  1404,   680,  5013,  5013,   681,  5014,  1592,  5218,
    1842,  1843,  1844,  1845,  1804,  4286,  1805,  1806,  4564,  5239,
    4604,  4795,  5013,   892,     0,  4231,  1364,     0,     0,     0,
    2124,     0,  5013,     0,     0,     0,     0,  5013,     0,     0,
       0,     0,   834,     0,     0,     0,     0,     0,     0,     0,
       0,  5013,     0,  5013,  5239,  5239,     0,     0,     0,  5386,
       0,   834,     0,     0,     0,     0,     0,     0,     0,  5013,
    5014,  5013,     0,  5013,     0,     0,  5015,  5015,     0,     0,
       0,     0,     0,     0,   886,  5014,     0,     0,     0,     0,
       0,     0,     0,  5015,     0,  5013,     0,     0,  5014,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1655,
    1656,     0,  1364,  5013,  5013,   834,     0,     0,     0,     0,
       0,     0,  1846,     0,  1847,  1848,  1849,  5014,     0,     0,
    5013,  5013,     0,  1850,   808,  5013,     0,     0,     0,  5014,
    5014,     0,     0,     0,     0,  1658,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5015,  5014,     0,  1661,
       0,     0,     0,     0,     0,  1662,  1663,  5014,     0,  1664,
       0,  5015,  5014,     0,  1260,     0,     0,  1261,     0,     0,
       0,     0,     0,     0,  5015,     0,  5014,     0,  5014,     0,
       0,     0,     0,  1666,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5014,     0,  5014,  1667,  5014,     0,
       0,  1668,     0,  5015,  1851,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5015,  5015,     0,     0,     0,
    5014,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1673,     0,     0,  5015,     0,     0,   886,     0,  5014,  5014,
       0,     0,     0,  5015,     0,     0,     0,     0,  5015,     0,
       0,     0,     0,     0,     0,  5014,  5014,     0,     0,     0,
    5014,     0,  5015,     0,  5015,     0,     0,  1852,  1853,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5015,     0,  5015,     0,  5015,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5015,  1677,     0,     0,
       0,     0,  3155,     0,  1678,     0,     0,  1652,     0,  1653,
       0,     0,     0,     0,  5015,  5015,     0,     0,     0,     0,
       0,     0,  1655,  1656,  1679,     0,     0,     0,     0,   834,
       0,  5015,  5015,   834,     0,     0,  5015,     0,     0,     0,
       0,   834,     0,   834,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1657,     0,     0,     0,     0,  1658,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,     0,     0,     0,  1662,  1663,
       0,     0,  1664,   834,  1681,     0,     0,     0,     0,     0,
       0,  1665,     0,     0,     0,     0,     0,     0,     0,  1854,
       0,     0,  1682,     0,     0,     0,  1666,     0,     0,     0,
       0,     0,     0,     0,     0,  1263,  1855,  1856,     0,     0,
    1667,     0,     0,   886,  1668,     0,     0,   834,   834,   834,
       0,     0,  1669,     0,     0,     0,     0,     0,     0,  3156,
       0,     0,     0,     0,     0,     0,     0,  1672,     0,     0,
       0,     0,     0,  1673,     0,     0,   886,  1686,   834,     0,
       0,     0,  1364,   834,     0,     0,  1687,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2088,     0,     0,
       0,     0,   834,     0,  2485,     0,     0,  1675,     0,   834,
       0,     0,     0,     0,   834,     0,   834,     0,     0,     0,
       0,     0,   834,     0,   834,   834,     0,     0,     0,     0,
     886,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1677,     0,     0,     0,     0,     0,     0,  1678,     0,     0,
       0,     0,     0,     0,     0,  1692,     0,  2486,  2487,  2488,
    2489,  2490,  1553,  1554,  2491,  2492,  2493,  1679,  2494,  2495,
    2496,  2497,  2498,  2499,  2500,  2501,  2502,  2503,     0,  2504,
    2505,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1680,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1693,  1694,  1695,  1696,     0,     0,     0,     0,  1697,
       0,     0,     0,     0,     0,     0,     0,  1681,     0,     0,
       0,     0,     0,     0,     0,     0,  1698,     0,     0,  1699,
       0,     0,     0,     0,     0,  1682,     0,     0,     0,  1683,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2301,  2301,  2301,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   885,     0,  1701,   885,     0,     0,     0,
       0,     0,     0,   967,   834,     0,     0,     0,   834,     0,
       0,   967,     0,  1685,   834,     0,     0,     0,     0,     0,
    1686,     0,     0,     0,   834,     0,     0,  1555,  1556,  1687,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2367,     0,
    2369,  2370,     0,     0,     0,  2372,  2373,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2386,
       0,     0,  2392,  2393,     0,  2395,  1689,     0,  2398,  2399,
    2400,  2401,     0,     0,     0,  2404,     0,     0,     0,     0,
    2416,     0,     0,     0,     0,  2421,  2422,  2423,  2424,  2425,
       0,     0,     0,  2429,  2430,     0,     0,     0,  1692,  2440,
       0,  2442,  2443,  2444,     0,  2447,  2448,  1704,  2450,     0,
       0,  2453,  1142,     0,  2454,  2455,  2456,     0,     0,     0,
     885,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1707,  1708,     0,     0,     0,     0,     0,     0,     0,
       0,  1709,  1173,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1693,  1694,  1695,  1696,  1190,     0,
       0,     0,  1697,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1698,
       0,     0,  1699,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3043,     0,     0,  3043,  3043,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1701,  1251,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1702,     0,     0,  1703,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2506,  2507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2508,     0,  2509,  2510,  2511,  2512,
    2513,     0,     0,  2514,     0,     0,     0,     0,     0,     0,
     834,     0,     0,     0,     0,     0,  1366,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1704,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1707,  1708,     0,   808,     0,     0,
       0,     0,     0,     0,  1709,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   834,     0,
       0,     0,     0,     0,     0,     0,     0,   834,   834,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   834,   834,     0,
     834,     0,     0,   834,   834,   834,   834,   834,     0,     0,
     834,     0,     0,     0,     0,     0,     0,     0,     0,   834,
       0,     0,     0,     0,   834,     0,   834,     0,   834,   834,
       0,   834,   834,     0,     0,     0,   834,   834,   834,     0,
       0,     0,   834,   834,   834,     0,   834,     0,   834,     0,
     834,     0,   834,     0,   834,     0,     0,     0,     0,   834,
       0,     0,     0,     0,     0,     0,     0,  2768,  2769,     0,
       0,     0,     0,     0,     0,   834,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   834,     0,   834,     0,   834,     0,     0,
       0,   834,     0,     0,     0,     0,     0,   834,   834,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1808,  1809,     0,     0,     0,     0,
       0,     0,     0,  1819,  1820,     0,     0,  1823,  1824,   886,
       0,     0,   886,     0,     0,     0,  1832,  1833,     0,  1834,
    1835,     0,     0,     0,  1859,     0,     0,     0,  1868,  1869,
    1870,  1871,     0,  1873,     0,     0,     0,     0,     0,     0,
       0,  1881,  1882,     0,  1885,  1886,     0,     0,     0,     0,
       0,  1890,     0,     0,  1893,  1894,  1895,  1896,  1897,  1898,
       0,  1900,   834,     0,  1903,  1904,     0,     0,     0,  1907,
       0,     0,     0,  1910,  1914,  1915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1922,  1923,  1924,     0,
       0,     0,     0,     0,  1930,  1931,  1932,  1933,  1934,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   885,   885,   885,  1948,   808,     0,     0,     0,     0,
       0,     0,  1952,  2931,  1953,  1954,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     967,     0,     0,     0,     0,     0,   886,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1994,     0,  2301,     0,  2301,
       0,  2976,  2977,     0,  2979,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3271,     0,     0,   834,
       0,     0,  1655,  1656,     0,     0,     0,     0,     0,   834,
       0,   834,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3053,     0,  3038,     0,     0,  1658,  3044,
       0,     0,     0,     0,  3049,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,     0,     0,     0,  1662,  1663,
    3093,     0,  1664,     0,     0,     0,     0,     0,     0,     0,
    3088,  3089,  3090,  3091,     0,     0,     0,  3106,     0,     0,
       0,   834,     0,     0,  2135,     0,  1666,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1667,     0,  3125,     0,  1668,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3152,  3153,  2174,     0,     0,
       0,     0,     0,  3166,     0,     0,  3049,  3049,     0,     0,
       0,  -556,     0,  1673,     0,     1,     0,     0,     2,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     3,     0,     0,     0,     4,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     5,     6,     0,     0,  2250,     0,     0,     0,     7,
       0,     0,     0,     0,     8,     9,     0,     0,     0,     0,
       0,     0,     0,     0,  2269,     0,     0,     0,     0,     0,
      10,     0,     0,     0,     0,  3260,  3272,     0,     0,     0,
    1677,     0,     0,     0,     0,     0,     0,  1678,     0,     0,
      11,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1679,     0,     0,
       0,     0,    12,     0,     0,     0,     0,     0,  2328,     0,
       0,     0,    13,    14,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    15,    16,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,  1681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,  1682,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,    21,     0,     0,     0,     0,    22,     0,     0,    23,
       0,     0,     0,   885,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    24,     0,     0,     0,     0,     0,
       0,     0,    25,     0,     0,    26,     0,     0,     0,     0,
    1686,     0,     0,     0,     0,     0,  1013,     0,     0,  1687,
       0,   834,     0,     0,     0,    27,     0,     0,     0,   834,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   834,   834,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3274,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   834,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   834,     0,   834,     0,   834,     0,  1692,  3456,
       0,     0,     0,     0,     0,     0,     0,     0,    42,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2566,     0,     0,     0,  2570,     0,   834,     0,
       0,     0,     0,   834,     0,   834,  2566,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,   886,   886,   886,
       0,     0,     0,     0,  1693,  1694,  1695,  1696,     0,     0,
       0,     0,  1697,     0,     0,     0,     0,     0,     0,   834,
       0,     0,     0,     0,     0,     0,    31,     0,  3522,  1698,
       0,    49,  1699,     0,     0,     0,     0,    32,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   834,     0,   834,     0,    33,
       0,     0,    34,     0,    35,     0,     0,    36,  1701,     0,
    2641,  2643,  2645,  2301,     0,     0,     0,    37,    38,     0,
       0,     0,     0,     0,     0,    54,     0,    39,     0,    40,
       0,     0,     0,     0,     0,     0,   834,     0,    41,     0,
       0,     0,    55,     0,    42,     0,  2680,     0,     0,     0,
       0,     0,    43,     0,     0,     0,     0,    44,    45,    46,
       0,     0,     0,     0,     0,  2688,     0,     0,     0,   834,
       0,     0,     0,     0,     0,     0,     0,  2692,     0,  2693,
       0,     0,     0,  3584,     0,     0,     0,     0,     0,     0,
      47,     0,     0,     0,     0,     0,     0,    48,     0,     0,
    3600,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3601,    49,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3611,
    1704,  3618,  3619,  3620,  3621,     0,  3623,  3624,     0,     0,
       0,    50,     0,     0,     0,     0,     0,     0,   834,     0,
       0,     0,     0,    51,  1707,  1708,     0,    52,     0,     0,
       0,     0,     0,     0,  1709,    53,     0,     0,     0,     0,
       0,    54,     0,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,  -556,     0,     0,     0,     0,    55,     0,
       0,     0,     0,     0,     0,  3717,    56,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3723,     0,
       0,     0,    57,    58,    59,    60,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    61,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3740,     0,     0,  2862,     0,     0,
       0,  2174,     0,     0,    62,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2869,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2301,
       0,     0,  2301,  2301,     0,     0,  2301,  2301,  2301,  2301,
    2301,  2301,  2301,  2301,     0,     0,  2301,     0,  2301,     0,
    2301,  3779,     0,     0,  2301,     0,     0,     0,     0,     0,
       0,     0,  3823,  3824,  3825,  3826,    63,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3043,  3043,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   886,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     1,     0,     0,     2,     0,     0,     0,     0,
       0,   834,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     5,     6,
       0,     0,   834,     0,   834,     0,     7,   834,   834,     0,
     834,     8,     9,     0,     0,     0,     0,     0,     0,     0,
       0,   834,     0,     0,     0,     0,   834,    10,     0,   834,
       0,     0,   834,   834,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    11,     0,     0,
       0,     0,     0,     0,   834,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   834,    12,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
      14,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    15,    16,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   834,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   834,
     834,     0,     0,     0,     0,     0,    20,     0,    21,     0,
       0,     0,     0,    22,     0,     0,    23,     0,   834,     0,
       0,     0,     0,  3184,     0,     0,     0,     0,     0,     0,
       0,    24,     0,     0,     0,     0,     0,     0,     0,    25,
       0,     0,    26,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    27,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,    29,     0,     0,     0,   834,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3296,     0,     0,     0,  4082,     0,     0,     0,     0,
    3304,  3305,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4095,     0,     0,
    3332,  3333,     0,  3334,     0,     0,  3337,  3338,  3339,  3340,
    3341,     0,  4112,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3347,     0,     0,     0,     0,  3348,     0,  3349,
       0,  3350,  3351,     0,  3352,     0,     0,     0,     0,  3357,
    3358,  3359,     0,     0,     0,  3362,  3363,  3364,     0,  3365,
      30,  3367,     0,  3369,     0,  3371,     0,  3372,     0,     0,
     834,   834,  3375,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,  3043,  3043,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3408,     0,     0,     0,     0,     0,
    1994,     0,     0,     0,     0,     0,    33,     0,     0,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    37,    38,     0,     0,     0,     0,
       0,     0,     0,     0,    39,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,    41,     0,     0,     0,     0,
       0,    42,     0,     0,     0,     0,     0,     0,     0,    43,
       0,     0,     0,     0,    44,    45,    46,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3455,     0,     0,     0,     0,
       0,     0,     0,  4266,  4267,     0,     0,    47,     0,     0,
       0,  2301,     0,     0,    48,   834,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    49,  4277,   834,     0,   834,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    50,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,     0,     0,     0,    52,     0,     0,     0,     0,     0,
       0,     0,    53,     0,     0,     0,     0,     0,    54,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,    56,     0,     0,     0,     0,     0,     0,
       0,     0,  2250,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    61,     0,     0,     0,     0,     0,
     834,     0,     0,     0,     0,     0,     0,  3649,  3650,     0,
       0,     0,     0,  3651,     0,  3652,     0,  3653,  3654,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    62,     0,   834,     0,  3655,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3656,     0,     0,  3657,     0,
       0,     0,     0,    63,     0,     0,  3658,  1651,     0,     0,
       0,     0,  1652,     0,  1653,     0,     0,  1654,   834,     0,
       0,   834,     0,     0,     0,  3312,     0,  1655,  1656,     0,
       0,     0,     0,     0,   834,     0,     0,     0,     0,     0,
       0,     0,  3659,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1657,     0,
       0,  -861,  -861,  1658,  1659,     0,     0,     0,  4461,  1660,
    3660,  -861,  3661,     0,     0,     0,     0,  1661,     0,     0,
       0,   834,     0,  1662,  1663,     0,     0,  1664,  3662,  3663,
       0,     0,     0,     0,     0,     0,  1665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1666,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1667,     0,     0,     0,  1668,
    3664,     0,     0,     0,     0,     0,     0,  1669,  1670,     0,
       0,     0,     0,  3665,  1671,     0,  4539,  4540,     0,     0,
       0,  4518,  1672,     0,     0,     0,     0,     0,  1673,     0,
       0,     0,  3666,     0,     0,     0,     0,     0,     0,  1674,
       0,  3667,  3668,     0,  3669,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1675,     0,     0,     0,     0,     0,     0,     0,
     834,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3670,  3671,  3672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   834,     0,
    3673,  3674,  3675,  1676,     0,  1677,     0,  3676,     0,     0,
    3677,     0,  1678,     0,  2301,  2301,  2301,  2301,     0,     0,
       0,     0,     0,     0,     0,  4082,     0,     0,  3678,  3679,
       0,     0,  1679,     0,  3861,     0,     0,     0,     0,  4613,
       0,     0,  3864,     0,     0,     0,   834,     0,     0,     0,
       0,  5010,     0,     0,     0,  1680,     0,  5021,     0,     0,
       0,     0,  3680,  3681,     0,     0,     0,     0,     0,  3892,
    3893,     0,     0,     0,     0,     0,     0,     0,   834,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3317,     0,
       0,     0,  1681,     0,     0,  3918,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3929,     0,  3931,     0,  3933,
    1682,     0,     0,     0,  1683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   834,     0,     0,
       0,     0,     0,  5010,  5010,     0,     0,     0,     0,     0,
    3682,     0,  1684,     0,  3683,     0,     0,     0,  1685,     0,
       0,     0,     0,     0,     0,  1686,  3684,     0,     0,     0,
       0,     0,     0,     0,  1687,     0,     0,     0,     0,     0,
       0,     0,  2250,     0,     0,   834,     0,     0,     0,     0,
    4707,     0,     0,     0,     0,     0,     0,     0,   885,     0,
       0,     0,     0,     0,     0,     0,  1688,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   834,  4015,     0,
    4017,  1689,  1690,  1691,     0,     0,  3685,     0,     0,  3686,
       0,     0,  3687,  3688,  3689,  3690,     0,   834,     0,   834,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   834,
       0,  5010,  5010,  1692,     0,     0,     0,     0,     0,  2174,
       0,     0,     0,     0,     0,     0,     0,     0,  5010,     0,
       0,     0,     0,     0,     0,  3691,  3692,     0,     0,     0,
       0,  3049,  3049,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3693,     0,     0,     0,     0,     0,  1693,
    1694,  1695,  1696,     0,     0,  4770,     0,  1697,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2301,   834,
       0,  5010,     0,     0,  1698,     0,     0,  1699,     0,     0,
       0,     0,     0,     0,     0,     0,  5010,   834,     0,     0,
    4797,     0,     0,     0,     0,     0,     0,     0,     0,  5010,
    1700,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4127,     0,  1701,     0,     0,     0,   834,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   834,  5010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5010,  5010,     0,     0,     0,     0,     0,  1702,     0,     0,
    1703,     0,     0,     0,     0,     0,     0,     0,  5010,     0,
       0,     0,     0,     0,     0,   834,     0,     0,  5010,     0,
       0,     0,     0,  5010,     0,     0,     0,     0,     0,     0,
     834,     0,     0,     0,     0,     0,     0,  5010,     0,  5010,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4876,  4877,  4878,     0,     0,  5010,     0,  5010,     0,  5010,
       0,     0,     0,     0,  4875,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5010,     0,     0,     0,  1704,  1705,  1706,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5010,
    5010,     0,     0,     0,     0,     0,   834,     0,     0,  1707,
    1708,     0,     0,     0,   834,     0,  5010,  5010,     0,  1709,
       0,  5010,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4955,     0,     0,  4958,
    4959,  4960,  4961,     0,     0,     0,     0,     0,     0,     0,
       0,  1651,     0,     0,  4301,     0,  1652,     0,  1653,     0,
       0,  1654,     0,     0,     0,     0,     0,  3649,  3650,  3049,
    3049,  1655,  1656,  3651,     0,  3652,     0,  3653,  3654,     0,
       0,     0,     0,     0,     0,  4312,     0,  2328,     0,     0,
    4317,  4318,     0,     0,     0,  3655,     0,     0,     0,     0,
       0,     0,  1657,     0,  4325,     0,     0,  1658,  1659,  4327,
       0,     0,  4328,  1660,     0,  4329,  4330,     0,     0,     0,
       0,  1661,     0,     0,  5056,     0,     0,  1662,  1663,     0,
       0,  1664,     0,  5066,  5067,     0,     0,  4342,     0,     0,
    1665,     0,  5075,     0,     0,  3656,     0,  5065,  3657,     0,
       0,     0,     0,     0,     0,  1666,  3658,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1667,
       0,     0,     0,  1668,     0,  3312,     0,     0,     0,     0,
       0,  1669,  1670,     0,     0,     0,     0,     0,  1671,     0,
       0,     0,  3659,     0,     0,     0,  1672,  2250,     0,     0,
       0,     0,  1673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1674,     0,     0,     0,     0,     0,     0,
    3660,     0,  3661,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4422,  4425,   886,     0,  1675,     0,  3662,  3663,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4438,     0,     0,     0,     0,     0,     0,  5150,  5151,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1676,     0,  1677,
    3664,     0,     0,     0,     0,     0,  1678,     0,     0,     0,
       0,     0,     0,  3665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1679,     0,     0,     0,
       0,     0,  3666,     0,     0,     0,     0,     0,     0,     0,
    4484,  3667,  3668,     0,  3669,     0,     0,     0,     0,  1680,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1376,  1449,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3670,  3671,  3672,     0,     0,  1681,  1450,   953,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1451, -2020,
    3673,  3674,  3675,     0,  1682,     0,     0,  3676,  1683,     0,
    3677,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1452,     0,  1453,     0,     0,  3678,  3679,
       0,     0,     0,     0,     0,  1454,     0,     0,     0,     0,
       0,     0,     0,  4567,  4568,     0,  1684,     0,     0,     0,
       0,     0,  1685,     0,     0,     0,     0,     0,     0,  1686,
       0,     0,  3680,  3681,     0,     0,     0,     0,  1687,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2012,  1455,     0,     0,     0,  3317,  1456,
       0,     0,  1457,     0,     0,     0,     0,     0,     0,     0,
    1688,     0,  1458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1689,  1690,  1691,     0,     0,
       0,     0,     0,     0,  1459,     0,  1460,     0,     0,     0,
       0,     0,     0,     0,     0,  1461,     0,  1462,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1692,     0,     0,
    3682,     0,     0,     0,  3683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3684,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2250,     0,
       0,     0,     0,  1693,  1694,  1695,  1696,     0,  1463,     0,
       0,  1697,     0,     0,     0,     0,     0,     0,     0,  4687,
       0,  4689,     0,     0,     0,     0,  3685,     0,  1698,  3686,
       0,  1699,  3687,  3688,  3689,  3690,     0,     0,     0,     0,
       0,     0,  1464,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1700,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1701,     0,     0,
       0,     0,     0,     0,     0,  3691,  3692,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3649,  3650,     0,
       0,     0,     0,  3651,     0,  3652,     0,  3653,  3654,     0,
       0,  1702,     0,  3693,  1703,     0,     0,  1465,     0,     0,
       0,     0,     0,     0,     0,  3655,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4756,  1466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1467,  1468,     0, -2016,  1469,
    1470,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3656,  4764,     0,  3657,     0,
    1471,     0,     0,     0,     0,     0,  3658,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1704,
    1705,  1706,     0,     0,     0,  3312,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3659,  1707,  1708,     0,     0,     0,     0,     0,
       0,     0,     0,  1709,  1472,     0,     0,     0,     0,     0,
       0,     0,     0,  5315,     0,     0,     0,  1473,     0,     0,
    3660,  2328,  3661,     0,  4808,     0,     0,  5136,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4422,  3662,  3663,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2726,
       0,     0,     0,  1474,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2020,
       0,     0,  1475,     0,     0,     0,     0,     0,     0,     0,
    3664,     0,     0,     0,  4422,     0,     0,     0,     0,     0,
       0,     0, -2016,  3665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3666,     0,     0,     0,     0,     0,     0,     0,
       0,  3667,  3668,     0,  3669,     0,     0,     0,     0,     0,
   -2726,     0,     0,     0,     0,     0,     0,  1476,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3670,  3671,  3672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3673,  3674,  3675,     0,     0,     0,     0,  3676,     0,     0,
    3677,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2328,     0,     0,     0,     0,  3678,  3679,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3680,  3681,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1477,     0,
       0,  1478,  1479,  1480,  1481,     0,  1482,     0,  3317,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4980,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5036,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3682,     0,     0,     0,  3683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3684,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5080,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3685,     0,     0,  3686,
       0,     0,  3687,  3688,  3689,  3690,     0,     0,  5117,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3691,  3692,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5165,     0,  5166,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5174,  3693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5237,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5242,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5261,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     199,   200,     0,   685,   202,   203,   204,   205,  2167,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,  5292,     0,
    2168,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,  5307,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,  5381,
    2169,   266,   267,     0,   268,     0,     0,  2250,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,  2170,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,  2171,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,  2172,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,  2173,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,    42,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,    49,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,  1248,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,    55,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,  1911,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,  1912,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,  1913,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,   798,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,  2584,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,  2640,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,  2642,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,  2644,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
    1172,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,  1960,     0,
     206,     0,     0,     0,     0,  1961,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,     0,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
    2249,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
    3295,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
    3356,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,   739,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,  5146,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,     0,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
     723,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,     0,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
    1978,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,     0,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   685,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   686,     0,
     209,   210,   211,   212,   687,   214,     0,   215,     0,     0,
     688,   216,   689,   690,   691,   217,   692,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   693,
     694,   225,   226,     0,   227,   228,   695,   696,   230,     0,
     231,   232,   233,   234,   697,   236,     0,   698,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   699,   700,   257,     0,     0,     0,   701,   258,   702,
       0,   259,   703,   704,     0,   260,   261,   262,   705,   706,
     707,     0,     0,     0,     0,   708,   265,   709,     0,     0,
     710,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   711,     0,   292,   293,
     294,   295,   296,   712,   713,   297,   298,     0,   299,   300,
     301,   302,   303,   714,     0,   304,   305,     0,     0,     0,
     715,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     716,   312,   717,     0,   314,     0,   315,     0,   718,     0,
     316,   317,     0,   318,   719,     0,   319,   320,     0,     0,
       0,   720,   322,   323,   324,   721,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   722,   329,   330,   331,
    1980,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   724,   342,   343,     0,
       0,     0,     0,     0,   725,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   726,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   727,   372,   373,   374,   375,   728,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     729,   383,     0,     0,   730,   385,   731,   386,     0,   387,
     732,   733,   734,   735,   736,   392,   393,   394,   395,   396,
       0,   737,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   738,     0,   740,   404,   405,     0,   741,   742,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   744,   745,   427,   746,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   747,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     748,   749,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     750,     0,   751,   471,   472,   473,   474,     0,   475,   752,
     753,   477,   478,   479,   480,     0,   754,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   755,
     756,   511,   512,     0,     0,   513,   514,   757,   516,   517,
     518,   758,   759,   519,   520,   521,   522,   760,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   761,   529,   530,
       0,   762,   763,   764,   765,     0,     0,     0,     0,     0,
     535,   536,     0,   766,   767,   768,   538,   539,     0,   769,
     540,   541,   770,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   771,   550,     0,
       0,   772,   773,   774,   551,   775,   552,     0,     0,   553,
     776,     0,   777,   554,     0,   555,   556,   778,   779,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   780,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     781,   782,     0,   573,   574,   575,   783,   576,   577,   578,
       0,   579,   784,   785,   580,   786,   581,     0,   787,   788,
     789,   790,   791,   582,   583,     0,   792,   584,   793,   585,
     794,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   795,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   796,   797,     0,     0,     0,     0,   799,     0,
     800,     0,     0,     0,   801,     0,     0,     0,   802,   803,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,    42,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,    49,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,    54,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,    55,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,  2815,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,  2816,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,  2817,     0,     0,     0,
       0,     0,   199,   200,     0,   201,   202,   203,   204,   205,
    2818,     0,   206,     0,     0,     0,     0,   207,     0,  2819,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,  2814,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,  2815,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,  2816,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,  2817,     0,
       0,     0,     0,     0,   199,   200,     0,   201,   202,   203,
     204,   205,  2818,     0,   206,     0,     0,     0,     0,   207,
       0,  2819,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,  2815,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,  2816,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
    2817,     0,     0,     0,     0,   199,   200,     0,   201,   202,
     203,   204,   205,     0,  2818,   206,     0,     0,     0,     0,
     207,     0,     0,  2819,     0,   209,   210,   211,   212,   213,
     214,     0,  -460,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,     0,
       0,     0,     0,   224,  4983,     0,   225,   226,     0,   227,
     228,     0,     0,     0,     0,   231,   232,   233,  4984,   235,
     236,     0,   237,   238,     0,   239,   240,     0,   242,     0,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,     0,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,     0,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,     0,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,     0,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
       0,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,  4985,   299,   300,   301,   302,   303,     0,     0,
       0,     0,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,     0,   317,     0,     0,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
    4986,     0,   325,     0,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,     0,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,  4987,     0,     0,
     337,     0,   338,     0,     0,     0,   340,     0,     0,   341,
    4988,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,  -415,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,  4989,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,     0,     0,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,     0,   455,  -415,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,     0,     0,   465,   466,
       0,   467,   468,   469,  4990,   470,     0,     0,     0,   472,
     473,   474,     0,   475,     0,   476,   477,     0,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,     0,     0,     0,
     490,     0,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,     0,
     507,   508,   509,   510,     0,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
       0,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,  -415,     0,     0,     0,
     559,   560,   561,     0,   562,     0,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,     0,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,     0,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,     0,   638,   639,   640,   641,   642,
     643,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,     0,   208,
    5385,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,   689,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,  2732,     0,     0,     0,     0,   264,   265,   709,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,   713,   297,   298,     0,   299,
     300,   301,   302,   303,   714,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,   719,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,   726,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   737,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,   741,   742,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,   761,   529,
     530,     0,  2733,   532,   533,  2734,     0,     0,     0,     0,
       0,   535,   536,     0,     0,   767,   537,   538,   539,     0,
     769,   540,   541,   770,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
     637,   638,   639,   640,   641,   642,   643,     0,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,   801,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,  1568,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,  1029,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,  1569,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,     0,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,     0,
     207,     0,  1570,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   952,   953,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,   954,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   955,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   956,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   957,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   958,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   959,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   960,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   961,   962,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   963,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   964,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,   637,   638,   639,   640,   641,   642,
     643,     0,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,   965,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1029,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,     0,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,  1252,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,  1029,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,   196,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,   637,   638,
     639,   640,   641,   642,   643,     0,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,  1433,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   952,   953,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,  1441,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     955,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   956,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   957,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   959,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   961,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   963,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,     0,   199,   200,     0,   201,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
     965,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,     0,     0,   216,     0,     0,     0,   217,     0,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,   259,     0,     0,     0,   260,   261,
     262,     0,     0,   263,     0,     0,     0,     0,   264,   265,
       0,     0,     0,     0,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,     0,
       0,   292,   293,   294,   295,   296,     0,     0,   297,   298,
       0,   299,   300,   301,   302,   303,     0,     0,   304,   305,
       0,     0,     0,   306,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   311,   312,   313,     0,   314,     0,   315,
       0,     0,     0,   316,   317,     0,   318,     0,     0,   319,
     320,     0,     0,     0,   321,   322,   323,   324,     0,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,     0,
     329,   330,   331,     0,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,     0,
     342,   343,  1029,     0,     0,     0,     0,   344,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,     0,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,     0,   372,   373,
     374,   375,     0,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   382,   383,     0,     0,   384,   385,     0,
     386,     0,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,     0,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,     0,     0,   404,   405,     0,
       0,     0,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,     0,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   438,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   470,     0,     0,   471,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,   519,   520,   521,   522,
       0,   523,   524,     0,     0,   525,   526,   527,   528,     0,
     196,   529,   530,     0,   531,   532,   533,   534,     0,     0,
       0,     0,     0,   535,   536,     0,     0,     0,   537,   538,
     539,     0,     0,   540,   541,     0,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,     0,     0,     0,     0,     0,   551,     0,   552,
       0,     0,   553,     0,     0,     0,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   566,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,   573,   574,   575,     0,
     576,   577,   578,     0,   579,     0,     0,   580,     0,   581,
       0,     0,     0,     0,     0,     0,   582,   583,     0,     0,
     584,     0,   585,     0,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,   637,   638,   639,   640,   641,   642,   643,     0,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,  1570,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,  2046,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
       0,     0,   207,     0,  2047,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,     0,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,   263,     0,     0,
       0,     0,   264,   265,     0,     0,     0,     0,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,     0,   297,   298,     0,   299,   300,   301,   302,   303,
       0,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   314,     0,   315,     0,     0,     0,   316,   317,     0,
     318,     0,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,     0,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,     0,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,     0,     0,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,     0,   529,   530,     0,   531,   532,
     533,   534,     0,     0,     0,     0,     0,   535,   536,     0,
       0,     0,   537,   538,   539,     0,     0,   540,   541,     0,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   576,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,   637,   638,   639,   640,
     641,   642,   643,     0,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,  5323,   207,
       0,  5324,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
       0,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,  2047,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,     0,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
     637,   638,   639,   640,   641,   642,   643,     0,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,  5324,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,    42,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,    49,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,    54,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
      55,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,     0,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,  1015,  4002,
     207,     0,     0,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,   637,   638,   639,   640,   641,   642,
     643,     0,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,  4248,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,     0,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,  4252,   207,     0,     0,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,  2378,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,  2379,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,  1737,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,  1738,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,  3841,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,    42,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,  2381,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
      49,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,    54,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,    55,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,   637,   638,
     639,   640,   641,   642,   643,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,  1015,
     207,     0,     0,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
    2815,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
    2816,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,   637,   638,   639,   640,   641,   642,
     643,  2817,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,  2818,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,  1176,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,  3069,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,  3381,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
    4131,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
    1998,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,  2747,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,  3412,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,  3597,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,     0,     0,     0,     0,
       0,     0,   199,   200,  3978,   201,   202,   203,   204,   205,
     860,   861,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,   862,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,   863,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,   864,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   865,   289,   290,   866,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     867,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,   868,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,   869,     0,   328,     0,     0,     0,   870,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,   871,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   872,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,     0,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   873,   434,
     435,   436,   874,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,   875,     0,
     446,   447,   448,   449,   450,     0,   876,   452,     0,   453,
     454,   455,     0,     0,   877,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     878,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,   879,   880,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   881,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,   882,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,   883,   548,   884,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,     0,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,   934,   861,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,   862,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,   863,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,   864,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     865,   289,   290,   866,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   867,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,   868,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,   869,     0,
     328,     0,     0,     0,   870,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,   871,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,   872,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,     0,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   873,   434,   435,   436,   935,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,   875,     0,   446,   447,   448,   449,
     450,     0,   876,   452,     0,   453,   454,   455,     0,     0,
     877,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   878,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,   879,
     880,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   881,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
     882,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,   883,   548,   884,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,     0,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,   861,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,   862,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,   863,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,   864,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   865,   289,   290,   866,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   867,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,   868,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,   869,     0,   328,     0,     0,     0,
     870,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,   871,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,   872,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,     0,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     873,   434,   435,   436,     0,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
     875,     0,   446,   447,   448,   449,   450,     0,   876,   452,
       0,   453,   454,   455,     0,     0,   877,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   878,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,   879,   880,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   881,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,   882,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,   883,   548,
     884,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,     0,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,  2969,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,  2970,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,  2971,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,  2972,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,  1283,  1284,     0,   404,   405,     0,     0,  2973,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,  5373,   929,  5374,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,  2974,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,  1257,
    1258,   207,  1259,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,  1260,     0,
       0,  1261,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,  1262,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,  1263,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,  1410,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  1411,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,  1412,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1029,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,  1413,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,  2378,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,  2379,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,  1737,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,  1738,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,  2381,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,  1435,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,  1436,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,  1029,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,  1585,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,  1586,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   743,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,  1587,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,  1410,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,  3715,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,  1029,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,  1028,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1029,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,  1030,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,  1028,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,  1029,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,  1512,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,  1513,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,  1302,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,  2191,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,  1029,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,  2838,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,  1029,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1029,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,  3147,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,  1410,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,  1029,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,  1029,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,  3781,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,  1029,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,  5294,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,  5295,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,   929,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,   998,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,  1069,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,  1070,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,  1262,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,  2339,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  2475,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,  3071,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,  3083,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
    3112,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,  3178,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,  2068,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,  2069,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
    5045,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
    1441,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,     0,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,     0,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,     0,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
    1442,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,     0,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,     0,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,  1441,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
       0,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,     0,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,     0,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,     0,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,     0,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
    1426,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  1427,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,     0,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
       0,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,   871,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,  1428,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,     0,   434,
     435,   436,     0,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,     0,   452,     0,   453,
     454,   455,     0,     0,     0,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,     0,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   637,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,  5127,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,  5128,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
       0,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,     0,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,   871,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,  5129,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,     0,   434,   435,   436,     0,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,     0,   452,     0,   453,   454,   455,     0,     0,
       0,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,     0,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,     0,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   637,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,  2129,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,     0,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,     0,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,   871,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,  2130,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
       0,   434,   435,   436,     0,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,     0,   452,
       0,   453,   454,   455,     0,     0,     0,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,     0,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   637,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,  2935,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,     0,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,     0,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,   871,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
    2936,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,     0,   434,   435,   436,
       0,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,     0,   452,     0,   453,   454,   455,
       0,     0,     0,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,     0,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   637,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,     0,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,     0,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,   871,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,     0,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,     0,   434,   435,   436,     0,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
       0,   452,     0,   453,   454,   455,     0,     0,     0,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,     0,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   637,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,  -460,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,  4983,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,  4984,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,  -430,  -430,   278,
       0,  -430,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,  4985,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,  4986,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,  4987,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,  4988,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,  -415,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,  4989,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,  -415,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,  4990,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,  -415,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,     0,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,     0,     0,   209,   210,
     211,   212,   213,   214,     0,  -460,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,     0,     0,     0,     0,   224,  4983,     0,   225,
     226,     0,   227,   228,     0,     0,     0,     0,   231,   232,
     233,  4984,   235,   236,     0,   237,   238,     0,   239,   240,
       0,   242,     0,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,     0,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,     0,     0,     0,   275,
     276,   277,     0,  -451,     0,   278,     0,  -451,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,  4985,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,     0,   317,
       0,     0,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,  4986,     0,   325,     0,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,     0,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
    4987,     0,     0,   337,     0,   338,     0,     0,     0,   340,
       0,     0,   341,  4988,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,  -415,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,  4989,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,     0,   455,  -415,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,     0,
       0,   465,   466,     0,   467,   468,   469,  4990,   470,     0,
       0,     0,   472,   473,   474,     0,   475,     0,   476,   477,
       0,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,     0,   490,     0,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,     0,   507,   508,   509,   510,     0,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,     0,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,  -451,     0,  -415,
       0,     0,     0,   559,   560,   561,     0,   562,     0,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,     0,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,     0,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,     0,     0,   209,   210,   211,   212,   213,   214,
       0,  -460,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,     0,     0,
       0,     0,   224,  4983,     0,   225,   226,     0,   227,   228,
       0,     0,     0,     0,   231,   232,   233,  4984,   235,   236,
       0,   237,   238,     0,   239,   240,     0,   242,     0,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,     0,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,     0,     0,     0,   275,   276,   277,     0,  -448,
       0,   278,     0,  -448,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,  4985,   299,   300,   301,   302,   303,     0,     0,     0,
       0,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,     0,   317,     0,     0,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,  4986,
       0,   325,     0,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,     0,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,  4987,     0,     0,   337,
       0,   338,     0,     0,     0,   340,     0,     0,   341,  4988,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,  -415,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
    4989,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,     0,   455,  -415,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,   465,   466,     0,
     467,   468,   469,  4990,   470,     0,     0,     0,   472,   473,
     474,     0,   475,     0,   476,   477,     0,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,     0,   490,
       0,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,     0,   507,
     508,   509,   510,     0,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,     0,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,  -448,     0,  -415,     0,     0,     0,   559,
     560,   561,     0,   562,     0,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,     0,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,     0,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,     0,     0,
     209,   210,   211,   212,   213,   214,     0,  -460,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,     0,     0,     0,     0,   224,  4983,
       0,   225,   226,     0,   227,   228,     0,     0,     0,     0,
     231,   232,   233,  4984,   235,   236,     0,   237,   238,     0,
     239,   240,     0,   242,     0,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,     0,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,     0,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,  5238,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,  4985,   299,   300,
     301,   302,   303,     0,     0,     0,     0,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
       0,   317,     0,     0,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,  4986,     0,   325,     0,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,     0,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,  4987,     0,     0,   337,     0,   338,     0,     0,
       0,   340,     0,     0,   341,  4988,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,  -415,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,  4989,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,     0,   455,
    -415,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,     0,     0,   465,   466,     0,   467,   468,   469,  4990,
     470,     0,     0,     0,   472,   473,   474,     0,   475,     0,
     476,   477,     0,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,     0,   490,     0,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,     0,   507,   508,   509,   510,     0,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,     0,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,  -415,     0,     0,     0,   559,   560,   561,     0,   562,
       0,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,     0,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,     0,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,     0,     0,   209,   210,   211,   212,
     213,   214,     0,  -460,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
       0,     0,     0,     0,   224,  4983,     0,   225,   226,     0,
     227,   228,     0,     0,     0,     0,   231,   232,   233,  4984,
     235,   236,     0,   237,   238,     0,   239,   240,     0,   242,
       0,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,     0,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,     0,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,  -453,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,  4985,   299,   300,   301,   302,   303,     0,
       0,     0,     0,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,     0,   317,     0,     0,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,  4986,     0,   325,     0,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,     0,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,  4987,     0,
       0,   337,     0,   338,     0,     0,     0,   340,     0,     0,
     341,  4988,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,  -415,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,  4989,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,     0,   455,  -415,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,     0,     0,   465,
     466,     0,   467,   468,   469,  4990,   470,     0,     0,     0,
     472,   473,   474,     0,   475,     0,   476,   477,     0,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
       0,   490,     0,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
       0,   507,   508,   509,   510,     0,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,     0,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,  -415,     0,     0,
       0,   559,   560,   561,     0,   562,     0,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,     0,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,     0,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,  -460,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,  4983,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,  4984,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,  5299,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,  4985,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,  4986,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,  4987,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,  4988,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,  -415,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,  4989,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,  -415,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,  4990,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,  -415,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,     0,   638,   639,   640,   641,   642,   643,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,     0,     0,   209,   210,
     211,   212,   213,   214,     0,  -460,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,     0,     0,     0,     0,   224,  4983,     0,   225,
     226,     0,   227,   228,     0,     0,     0,     0,   231,   232,
     233,  4984,   235,   236,     0,   237,   238,     0,   239,   240,
       0,   242,     0,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,     0,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,     0,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,  5339,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,  4985,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,     0,   317,
       0,     0,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,  4986,     0,   325,     0,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,     0,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
    4987,     0,     0,   337,     0,   338,     0,     0,     0,   340,
       0,     0,   341,  4988,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,  -415,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,  4989,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,     0,   455,  -415,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,     0,
       0,   465,   466,     0,   467,   468,   469,  4990,   470,     0,
       0,     0,   472,   473,   474,     0,   475,     0,   476,   477,
       0,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,     0,   490,     0,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,     0,   507,   508,   509,   510,     0,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,     0,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,  -415,
       0,     0,     0,   559,   560,   561,     0,   562,     0,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,     0,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,     0,   638,   639,
     640,   641,   642,   643,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,     0,     0,   209,   210,   211,   212,   213,   214,
       0,  -460,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,     0,     0,
       0,     0,   224,  4983,     0,   225,   226,     0,   227,   228,
       0,     0,     0,     0,   231,   232,   233,  4984,   235,   236,
       0,   237,   238,     0,   239,   240,     0,   242,     0,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,     0,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,     0,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,  -434,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,  4985,   299,   300,   301,   302,   303,     0,     0,     0,
       0,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,     0,   317,     0,     0,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,  4986,
       0,   325,     0,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,     0,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,  4987,     0,     0,   337,
       0,   338,     0,     0,     0,   340,     0,     0,   341,  4988,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,  -415,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
    4989,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,     0,   455,  -415,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,   465,   466,     0,
     467,   468,   469,  4990,   470,     0,     0,     0,   472,   473,
     474,     0,   475,     0,   476,   477,     0,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,     0,   490,
       0,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,     0,   507,
     508,   509,   510,     0,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,     0,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,  -415,     0,     0,     0,   559,
     560,   561,     0,   562,     0,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,     0,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,     0,   638,   639,   640,   641,   642,   643,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,     0,     0,
     209,   210,   211,   212,   213,   214,     0,  -460,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,     0,     0,     0,     0,   224,  4983,
       0,   225,   226,     0,   227,   228,     0,     0,     0,     0,
     231,   232,   233,  4984,   235,   236,     0,   237,   238,     0,
     239,   240,     0,   242,     0,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,     0,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,     0,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,     0,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,  4985,   299,   300,
     301,   302,   303,     0,     0,     0,     0,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
       0,   317,     0,     0,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,  4986,     0,   325,     0,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,     0,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,  4987,     0,     0,   337,     0,   338,     0,     0,
       0,   340,     0,     0,   341,  4988,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,  -415,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,  4989,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,     0,   455,
    -415,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,     0,     0,   465,   466,     0,   467,   468,   469,  4990,
     470,     0,     0,     0,   472,   473,   474,     0,   475,     0,
     476,   477,     0,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,     0,   490,     0,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,     0,   507,   508,   509,   510,     0,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,     0,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,  -415,     0,     0,     0,   559,   560,   561,     0,   562,
       0,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,     0,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,     0,
     638,   639,   640,   641,   642,   643,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,     0,     0,   209,   210,   211,   212,
     213,   214,     0,  -460,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
       0,     0,     0,     0,   224,  4983,     0,   225,   226,     0,
     227,   228,     0,     0,     0,     0,   231,   232,   233,  4984,
     235,   236,     0,   237,   238,     0,   239,   240,     0,   242,
       0,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,     0,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,     0,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,     0,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,  4985,   299,   300,   301,   302,   303,     0,
       0,     0,     0,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,     0,   317,     0,     0,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,  4986,     0,   325,     0,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,     0,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,  4987,     0,
       0,   337,     0,   338,     0,     0,     0,   340,     0,     0,
     341,  4988,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,  -415,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,  4989,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,     0,   455,  -415,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,     0,     0,   465,
     466,     0,   467,   468,   469,  4990,   470,     0,     0,     0,
     472,   473,   474,     0,   475,     0,   476,   477,     0,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
       0,   490,     0,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
       0,   507,   508,   509,   510,     0,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,     0,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   546,     0,     0,  5241,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,  -415,     0,     0,
       0,   559,   560,   561,     0,   562,     0,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,     0,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,     0,   638,   639,   640,   641,
     642,   643,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,     0,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,     0,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,     0,   638,   639,   640,   641,   642,   643
};

static const yytype_int16 yycheck[] =
{
       6,  1072,    43,     0,   824,    57,   811,  1073,     0,    15,
       0,   978,    18,   957,   958,  1224,    22,  1224,  1173,  1061,
    1065,  1124,   115,    21,  1569,    31,   727,   115,  1316,  1054,
    2549,     6,    38,   977,  1063,    41,  2089,    96,  2089,  2082,
      46,    39,    43,    49,  2373,    43,  2913,    53,  1316,    55,
      60,    60,  1146,  1147,  1651,   182,  1549,  1550,  1551,  1353,
    1088,  1710,  2411,  2333,  2334,  2046,  2665,  1928,  1929,  2071,
    2126,    63,  1741,    63,  1671,  1936,  1937,  1938,  1088,  2046,
     688,  1175,  3121,  2454,  2455,  1277,  1021,  2220,  2369,  2370,
      96,  2667,  1689,  1187,  1188,  1189,    59,  2767,  2576,  1193,
    2542,  2995,  2580,  2800,  1166,  1651,    19,  1401,  3174,  3695,
    2286,   671,   672,  3548,  2139,   675,  1619,    30,  1619,  1619,
    1454,  1056,    35,  3152,  2126,  1402,  2574,  2456,   120,  2574,
    3695,  3599,  2581,  2581,  2162,  1653,  2581,  2011,  1232,  1657,
    2542,   147,  2542,  1477,  1478,  1479,  1480,  1481,  2542,  1483,
    3715,  3716,  1048,  1671,  2392,  2674,   657,   658,  2308,  2845,
    2121,  2831,  2542,    21,  2378,  1683,  2203,  2736,  2808,  2344,
     176,  3229,   178,  2542,  2551,   181,   182,   183,   184,  4352,
    2313,    39,   975,  3229,  2221,  4352,  2424,  2425,   796,   797,
    1632,   799,   198,  3465,  3796,   120,  2233,    11,    21,    35,
    4262,  4296,  2239,   178,   812,  2347,   181,    52,  2567,  2568,
    2569,  2661,    22,     5,    21,    68,    35,    71,  1321,   176,
     838,   839,   840,    43,  2583,   843,   844,    18,    19,   847,
     125,   849,   850,   851,    71,   853,     9,  2381,    18,    19,
      19,    21,    73,  2393,    48,  2395,   197,    18,    19,  2608,
      62,    18,    19,  2612,  2404,  2941,    29,    18,    19,   125,
     125,    34,    18,    19,    73,   194,    18,    19,   144,  2628,
    2629,    71,  2422,    18,    19,  2634,   156,   194,    73,    52,
    4070,   162,  1139,  1140,  1141,    31,    71,   156,  4236,    48,
     156,  2650,  2651,  1150,  2444,   103,    18,    19,  2448,   191,
    2659,    73,   263,    18,    19,  1408,  1111,   163,    77,   927,
      18,    19,   197,  2366,  1249,   246,  2369,  2370,  2818,   158,
      37,   131,    18,    19,  1181,  3117,  1054,  1184,   239,   249,
     231,    18,    19,  1775,  1131,  1132,    21,   150,   249,    67,
      70,    21,    18,    19,   125,   156,  1203,  1204,    21,   156,
    1207,    70,   103,   276,    39,    18,    19,   373,    43,   327,
     377,   230,    73,    18,    19,    18,    19,   109,  1225,  1226,
     681,   160,   259,  1230,  1231,   156,    64,   372,    18,    19,
     156,   125,  2515,  3668,  3669,    18,    19,  3672,    52,    81,
    2406,   111,  2525,   367,   373,   144,   276,   222,    57,    18,
      19,    87,  2418,    73,   212,  3690,   192,    18,    19,   473,
      37,    23,   156,   484,   287,   380,    59,   160,  4381,  5026,
      23,   194,    21,    35,   456,   231,   198,  1456,   465,   194,
     197,   191,    35,  2449,   125,  3501,    85,    49,   572,   111,
      39,   422,   125,   388,   572,   231,    49,  1476,  4201,    61,
      62,  4204,    12,    40,   401,   572,   258,   128,    61,    62,
     430,  1162,    18,    19,  2480,   388,   197,  3495,  1273,   194,
      78,   162,   429,   572,   572,  1176,   635,   350,   160,   635,
    3165,   246,   393,   156,  1304,  1305,  2539,   176,  2539,   194,
    1434,  4784,   503,   378,   282,   447,  4789,   316,    18,    19,
     276,  1445,   219,  3598,   243,   193,  2656,   186,  1533,  2987,
     156,   537,   482,  4730,    35,   246,  3984,   156,   122,  4581,
     285,   246,   316,    22,  4174,    19,  2855,   194,    86,   197,
      18,    19,    21,   176,   197,   389,   563,   180,   665,   566,
     138,    62,   156,   282,  4180,   571,   681,   105,    18,    19,
      49,   194,   389,  1578,   572,   216,   194,   692,    18,    19,
     285,   369,  4212,   235,   194,  1594,  1595,   156,  2549,  3254,
    1130,    65,   156,    65,  3271,  4211,  1396,    18,    19,  4796,
     433,   249,   534,   371,  3869,    74,  3028,   266,   235,   389,
    3488,  3489,   219,   150,  2727,  1096,   387,  2926,   609,   390,
    3498,  3499,   263,   276,   389,   586,  3205,   387,   195,  4195,
     390,   150,   404,   293,  3092,  4908,   387,   564,   285,   390,
     387,   780,   293,   390,   780,   470,   387,  2956,  2957,   390,
     228,   387,  1240,   156,   390,   387,  1244,   130,   390,  4074,
    5247,   775,   387,  2818,   293,   390,   744,   775,   147,   373,
     456,   657,   658,   413,  2707,   285,  2707,    77,   603,   665,
    4482,   667,   779,   457,   369,   387,  2842,  2843,   390,   471,
     543,   160,  2805,  1281,   801,  3153,   775,  1405,   643,   387,
     603,   372,   390,    26,    23,   184,   290,   112,   331,   372,
     115,   387,   130,  1301,   390,   130,   728,    18,    19,   198,
     387,   711,   711,   390,   775,  4668,  1324,  2763,   547,  4804,
     369,   387,   682,   502,   390,   388,  2004,   781,   543,  4781,
    4782,   727,    61,    62,   387,   285,  2014,   390,   401,   724,
     418,  1825,   387,   609,   387,   390,  2004,   390,   316,   126,
     429,    84,   428,   780,  4497,   465,   235,   387,  3445,  2802,
     390,  2802,   501,   433,   387,   635,   730,   390,  3087,   502,
     776,  2763,   256,   780,   256,   652,    18,    19,   387,   373,
     897,   390,  4562,  1867,   263,   631,   387,   572,  2834,   390,
    2930,  3130,  2379,   511,  2381,   536,   429,  3229,   767,  2832,
     682,   563,   753,   694,   583,   801,   488,   803,  2948,  2949,
    2950,  2951,   808,   241,   583,  1533,   470,   775,   800,  2670,
     800,   623,  2305,   543,  2307,  3391,  4911,  3393,   699,  1320,
     502,   634,  1133,   780,   543,    21,  3001,  2808,   614,   780,
     957,   387,  2834,   637,   390,   841,  2710,   583,   965,   966,
     846,  2808,   262,  3057,  2347,  3059,  2347,  2347,  1942,   780,
    4798,   780,   563,   776,   615,   572,  3648,   648,   723,   635,
     780,   920,  2196,   780,  4149,   776,  2200,   387,   648,   683,
     390,  2205,  3558,  1374,  4159,  3561,  3026,   648,   637,    18,
      19,   648,  4167,  3033,  1385,   780,   628,   648,   696,    18,
      19,   897,   648,   563,   237,   780,   648,   903,   778,   387,
      18,    19,   390,   648,   780,  2554,  2240,  2241,  2933,   778,
      18,    19,   778,   919,   920,  1940,   604,   387,  4203,  3711,
     390,  3065,   776,  3593,   613,  1052,   648,   387,   781,  1022,
     390,  3381,   751,   648,  1022,   780,  1733,   978,  3297,   775,
     648,   780,   948,   780,   775,   572,   387,   739,   740,   390,
    4016,   957,   648,  5048,  1811,  1082,  2999,   780,  5020,   965,
     966,   648,   635,   643,   962,   775,   775,   778,  3327,   780,
    3329,   778,   648,  1066,   975,   647,   776,   975,  1066,   748,
     323,  4583,   988,   989,  3343,   648,  3345,   595,  3488,   601,
     594,   776,   998,   648,   785,   648,   776,   778,   601,   637,
     780,  3360,   778,    21,  3898,   776,  4034,  4035,   648,   780,
    1807,   776,  4107,   780,   626,   648,    77,   404,  1077,   780,
     776,  1027,  1879,  1015,   780,  1015,  1883,   370,   780,   648,
    2533,  1023,  2533,  2533,   778,   780,  3186,   648,  3188,  3189,
      18,    19,  3192,  3193,  2147,   176,  1052,  4612,  1905,   780,
    4872,   776,  3202,  3203,   776,  1061,   780,  3207,   780,   553,
    3210,   553,  3078,  3213,  1123,   753,   387,  1073,   776,   390,
     717,  1077,   780,  1079,  1080,  1072,  1082,   634,  1084,  3255,
    1072,   854,  1072,  1089,   780,  3227,  1092,  1093,   158,   776,
    1096,   780,   648,   780,   583,   634,  4135,  1103,  1023,   781,
     776,  2543,  3118,  2772,   780,   778,  1112,  1113,  1114,   776,
    3126,  1117,  3461,   776,  1120,  3131,   609,  1123,  1093,  1125,
    4018,  4393,  1128,  1129,   353,   780,  1124,   780,   648,    18,
      19,   709,   778,  5306,   780,   387,   776,   780,   390,   778,
     780,   780,  1194,   916,    18,    19,   776,   780,  4177,   922,
     263,   576,    18,    19,   579,   975,  1162,  1250,   657,   658,
     648,   780,  1250,   775,   778,  5332,   780,  2719,    47,   780,
    1176,   609,   592,  1300,   609,  4180,  1877,  3230,   648,  3230,
    1172,  2284,  1172,   141,    71,    18,    19,  1314,   648,   778,
     639,   780,  2136,  2259,   778,   615,   780,   501,    18,    19,
     388,   262,  5297,   200,   547,    18,    19,   648,   402,   615,
    4268,    21,   235,   231,  1774,    18,    19,    77,  1224,  2428,
     776,  2428,  4268,  1350,   780,   612,  1278,  1279,  2773,  1789,
    1282,  4002,   219,  1285,  1286,  1287,   656,   657,  1290,  1291,
    1292,  1293,  1294,  1295,  1296,  1297,  3575,   433,   387,   316,
    1256,   390,  5078,  1259,  2542,   778,   776,   780,   387,   160,
     780,   390,   601,    18,    19,  3642,  3643,   990,    22,   387,
    1280,  1280,   390,   380,  2542,   572,   369,   962,   122,   387,
      18,    19,   390,  1342,   456,  3523,   278,   630,   776,   167,
     975,  2333,  2334,   194,  1300,    18,    19,   493,   429,   275,
    3629,  1307,  1308,  1309,  1310,  4002,  1312,  1313,  1314,    44,
     780,  1317,  1318,  1319,  1320,   235,  1322,  1323,    18,    19,
     780,  1327,   200,  1321,   641,   209,   285,   648,  1455,   749,
     750,   780,   204,  1339,  1309,   137,  1342,   216,  1313,   780,
     768,  1400,  1317,   263,  1350,  2046,   156,  1353,   776,  4914,
     152,  1357,  1358,   158,    65,   448,  1354,  2177,  1417,    18,
      19,  4047,  4048,   962,  2157,   681,  3240,  1373,  1374,    52,
     566,  4011,  2165,   198,   780,  3805,   692,   131,  1384,  1385,
    1988,  1387,  1388,   378,  3560,  3827,  2931,   345,  3564,  2007,
    3820,  4077,  4078,  3543,  1400,  1401,   648,  4083,   282,  4085,
    3749,  3750,   262,  1409,  3973,  1446,   749,  3281,   174,   387,
    1408,  1417,   390,   125,  1541,  2311,   759,  3592,  2911,  3633,
    2708,   231,   407,   420,   620,  3827,  1432,  3827,   583,   243,
    5256,  5257,   237,  3827,  1440,  2463,  2464,  3480,   456,  1124,
    2708,   637,    11,  1570,   511,  1446,   290,  3827,  1446,  1455,
     162,   637,  2746,  2463,  2464,   204,   194,  3500,  3827,   780,
    5025,  4746,  3319,  4748,  4932,   123,  2743,   141,  3065,   243,
    1529,   378,  3069,   407,  3435,   493,   780,   547,  1605,   776,
      18,    19,   613,  3508,  3509,   714,   715,   716,  1547,   988,
     482,   604,  3520,    18,    19,  2687,  1354,  3826,   387,  3536,
    3537,   390,   389,  1509,  1510,  2599,  3955,  3955,  3157,   648,
    3955,  4946,   276,   387,  4543,  3476,   390,  2811,  1524,   648,
    2021,   387,  4389,  1529,   390,  1124,  4531,  3388,   780,   373,
     648,  3392,  2626,  2810,  3559,  1541,   643,  2692,  2693,  3595,
     648,  1547,   420,  3824,  3825,   256,    18,    19,   566,   122,
    3102,   292,   356,  1326,   387,  2889,   728,   390,  3155,  3156,
    2168,    21,   153,   158,  1570,   370,  2900,   387,  2902,   566,
     390,  2905,  5137,   164,   387,   400,   637,   390,  5164,   775,
     108,   775,  3941,   179,   387,   572,    33,   390,   255,   247,
    1582,   401,   780,  3595,  1600,   656,   657,  1096,   167,  1605,
    1592,   502,   620,  4669,    33,  3755,   293,   486,  3937,  3155,
      18,    19,    18,    19,   498,   188,  1622,  1623,    71,   637,
     355,  4392,  2182,  2665,   388,   780,  1446,    18,    19,    18,
      19,   200,   387,    18,    19,   390,  1321,  1360,  3156,   511,
    2702,   780,    18,    19,  3518,    21,   456,   606,   238,   387,
      53,   780,   390,   356,   365,   533,   103,    18,    19,   635,
     372,    64,   780,   139,   387,    18,    19,   390,   776,  1354,
     648,   345,  4150,  1714,   659,   122,   583,  4119,  3275,    18,
      19,   271,   583,   493,   751,   510,   369,   387,   749,   750,
     390,  4121,  4731,   221,  3187,  4392,  4126,  3190,  3191,   465,
    4130,  3194,  3195,  3196,  3197,  3198,  3199,  3200,  3201,   587,
     566,  3204,   165,  3206,   455,  3208,   369,   290,   209,  3212,
       9,  4050,  1321,  1408,  3227,   659,  3227,  3227,   387,  1735,
    1736,   390,  2835,  2836,  2837,   237,  2765,   702,  4632,  3613,
    3028,   188,   547,   203,  4073,  1751,   433,   742,   743,   563,
     594,  5316,   566,   197,  1717,  1354,   566,   775,  4087,   648,
    3028,  1446,   511,  4092,   401,  4451,   433,  4453,   572,   653,
    4346,  3824,  3825,   333,   648,   370,   372,   435,  3447,    18,
      19,  1787,   648,   372,  1790,  1791,  1792,   470,   672,   563,
    3940,   282,   566,   597,  1800,   386,   656,   657,   245,  3656,
     373,  2658,   780,    18,    19,   366,   367,   772,   637,  1408,
     620,   769,   770,   771,   772,   648,  1791,  1792,   501,  1946,
     249,  1320,   137,    32,   535,   630,  4268,   637,   648,  3686,
    3687,    18,    19,    18,    19,   648,   585,   152,   125,   603,
     370,  4880,   553,   290,   487,   648,   275,    18,    19,   387,
     681,   420,   390,    18,    19,    71,   332,  4287,    18,    19,
     572,   692,   387,   120,  3738,   390,   394,  2896,   370,   572,
      79,  1877,  1878,   780,  1373,  1374,   404,  3165,  4575,   282,
      21,  4400,   535,   411,   125,  1384,  1385,   477,  1387,   749,
     750,   780,   550,   648,   597,   636,   212,   186,   139,    18,
      19,    18,    19,  4079,   572,   768,   780,    48,    18,    19,
     648,   637,   572,   776,   780,   387,   575,  2861,   390,   363,
    2047,  1973,   509,  4522,  4523,   648,   373,   564,    18,    19,
      18,    19,   231,   644,  1986,  3809,   389,  1989,   704,   705,
    1946,  3229,   258,    18,    19,   154,   615,   780,   648,   165,
     397,   780,   547,  1963,  1963,   612,   643,  4316,   245,  2086,
     780,  3229,    18,    19,   533,   775,  3254,   780,   778,   226,
     780,    18,    19,   776,  1966,   779,  1966,  1987,  1987,   387,
     571,   387,   390,   572,   390,  4266,  4267,   515,  1994,   648,
      25,    18,    19,   589,   293,   374,   387,  2003,   387,   390,
    4951,   390,   387,  4954,  4060,   390,  2133,   498,   653,   605,
     570,   387,   637,   442,   390,  2021,  4494,   547,   587,   127,
     607,   594,  2149,   615,  4710,   780,   387,  4987,  4988,   390,
    4011,   637,  2091,  2092,   387,   630,   596,   390,   776,  2045,
    2046,  2047,    21,   572,  4011,   547,   572,   566,   387,  4105,
    4106,   390,   709,   776,   780,  4111,  2062,    77,  4060,   194,
    2066,  2669,   501,  1028,   651,   733,    18,    19,  2074,    48,
     128,  2077,   388,   733,   361,   572,   776,   543,   335,   484,
    2086,  2689,   339,  2691,   612,  2091,  2092,    18,    19,   346,
    3951,   332,  3953,   767,   768,   769,   770,   771,   772,   654,
     630,    18,    19,  4105,  4106,   401,   485,  2808,  4284,  4111,
     648,   780,   781,    18,    19,  2121,  2125,  2123,    13,  2125,
      18,    19,  4180,   648,    18,    19,   122,  2133,   630,  2188,
     429,    38,  3420,   168,   449,  4188,   775,  4188,   158,    46,
     248,   127,  2201,  2149,    18,    19,  3440,   594,   387,  2147,
     285,   390,  2150,  4211,  3257,   780,  2157,     0,   624,  2157,
    2287,  4831,   220,   186,  2165,   480,   493,  2165,  4539,  4540,
     427,    13,   387,   389,   780,   390,   648,  2183,  2184,  2185,
    2186,  2187,  2188,  2189,  3478,    18,    19,   626,   780,   781,
      13,  2197,   188,  2199,  5145,  2201,  3845,    59,  2204,  2326,
     387,   615,   387,   390,   733,   390,   415,   733,  2183,  2184,
    2185,   156,  2187,  4266,  4267,  3407,   387,   237,   277,   390,
    4819,   280,   387,   219,  2199,   390,   781,   387,   437,  2204,
     390,    18,    19,  3527,   491,   293,   733,  1736,   776,   566,
     648,   415,   648,   266,   548,   140,    18,    19,  2258,  2258,
     697,   776,  1751,    18,    19,  3462,  3465,   648,  3465,   648,
      18,    19,   248,   648,    18,    19,    18,    19,   387,   478,
     387,   390,   648,   390,    18,    19,   608,   387,  4454,   138,
     390,  2287,   216,  2324,  5244,  5245,  2284,   648,  1787,  2416,
    4348,    18,    19,   620,   290,   648,   160,   387,   140,   387,
     390,  4434,   390,   239,   776,    13,    18,    19,  3402,   648,
    2316,  2352,   387,   249,   176,   390,   160,   140,   180,  3988,
    2326,  4920,  4378,    18,    19,   629,  2453,  2333,  2334,   263,
     539,   387,   194,  2339,   390,  2344,   137,  2157,  2344,  4688,
     387,  4690,   212,   390,   364,  2165,   369,   401,  3283,   230,
     370,   152,    18,    19,   564,   122,    18,    19,   235,  4402,
     387,  2402,   776,   390,    13,  2371,   780,   167,   776,   228,
     776,   430,  2378,    18,    19,   632,  4378,   373,  2384,  2385,
    2386,  2387,  2388,  2389,  2390,   776,   263,   776,  2394,  3417,
    2396,   776,  3599,   650,   212,   775,   450,   367,   100,   779,
    2406,   563,  2408,  2409,   566,  2411,  3416,  2413,  2414,   648,
    2416,  2417,  2418,  3442,   127,   776,    23,  2423,    13,   439,
    2426,   188,  2428,   776,    18,    19,   775,  2433,    35,  4579,
    2436,  2437,   140,   648,    80,   387,    82,   776,   390,   300,
     301,  2447,    49,  2449,  3264,   197,   416,  2453,   775,  2576,
     612,  3488,   219,  2580,    61,    62,   387,   393,  1582,   390,
    3497,   648,  2147,   648,  2470,  2150,   740,  2380,  1592,   331,
     387,   592,  2157,   390,  2480,  2481,  4590,   648,  2391,   125,
    2165,  4595,   387,   648,  2397,   390,   760,  2546,   648,   387,
     493,   140,   390,   387,   615,   623,   390,  4647,   626,   773,
     774,  5368,   148,   100,  2003,   122,  4877,  4878,  3308,   433,
     249,  2316,   637,   387,  2427,   640,   390,  3726,  2431,  3726,
    5119,  3321,  2021,   290,   401,  2438,  2439,   547,  2534,   648,
     454,   648,  2538,   272,  2339,   493,   238,   776,   648,  3827,
    2546,   187,  4139,    18,    19,   140,  2045,    22,  2147,  2555,
    2556,  2150,  2604,    82,   387,    19,   258,   390,   648,  3827,
     648,   776,  2554,   566,     9,    18,    19,   429,   781,   271,
    2576,   188,   496,   648,  2580,  2074,  3396,   125,  2077,   599,
     185,  2556,  4852,   583,   445,   446,    31,    61,    62,   776,
     138,   776,   648,  2720,    18,    19,   125,    71,   594,  2284,
     387,   648,   194,   390,     7,   776,   373,   230,   566,  4723,
     630,   776,    19,  4727,  5133,   387,   776,   620,   390,   148,
     194,   648,   387,    26,   227,   390,   229,    61,    62,   387,
      19,  4960,   390,   387,   637,   387,   390,    71,   390,   775,
    4289,   238,    64,   387,  4205,   781,   390,  4208,  4209,   241,
      84,   235,    74,   355,  2713,  2661,   131,   776,   187,   776,
     387,   258,   620,   390,   234,   235,   776,    89,    18,    19,
     575,  4785,   246,   290,   271,   387,  4790,   141,   390,   637,
     228,    84,  3063,    61,    62,  2284,   776,  2186,   776,   681,
    2189,   261,   387,  3074,  3075,   390,   648,  2703,  2704,   212,
     692,   776,    13,  2695,   775,  2695,  3861,  2713,   718,   719,
     781,   285,    26,   141,  2720,   481,   456,   648,  4012,   776,
     776,   387,   212,   780,   390,   387,  4876,  4061,   390,   776,
    2736,   648,    43,   564,  4688,  2741,  4690,  3892,  3893,  2745,
    2746,   144,   387,   648,   197,   390,   566,   776,   122,   776,
     648,   780,   141,   668,   648,   670,   373,   235,   355,    77,
    3580,  3581,  5281,  3918,   776,  4059,    12,   776,   780,  2775,
      84,   780,   775,   197,   648,   477,   775,  3984,   775,  4272,
    4273,  4274,  4275,    94,   775,  2791,  2792,    98,   656,   657,
     780,   776,  4653,   387,   440,   780,   390,    26,   564,    26,
     776,  3409,  2808,   569,   780,  2811,  2816,  2816,  2800,  2818,
    3904,  5140,  2818,   235,   188,   648,   775,   775,   775,  4416,
    4417,  3846,   875,  2864,   776,   878,  2818,   594,  2818,   775,
     883,  4119,   776,  3899,   237,   888,   780,  2835,  2836,  2837,
    2339,   572,  2901,    77,   158,   776,   612,   549,    77,   776,
      77,  4119,  3652,   780,  4907,    84,  4907,    84,   781,   776,
    2987,   648,   628,  2864,   456,  2871,  2864,   775,  3962,   775,
    5096,  2923,   775,  2925,   212,   776,   648,   111,   776,   780,
     477,   345,   776,   648,   775,  3685,  1004,  1005,   654,  1007,
     648,  1009,  4935,  3693,   648,  2901,   648,  2903,  2904,   775,
    3700,   493,   776,   775,   648,  4958,  4959,  4958,  4959,  2915,
     667,   668,   387,   670,  2920,   390,   290,   345,   776,   237,
     323,   648,   780,   237,   158,   775,  3053,   320,   321,   158,
     697,   776,   325,   326,   387,   780,   648,   390,  2437,   717,
     776,   775,   253,   776,   780,   300,   301,   775,   177,   775,
     177,   103,   549,   648,   776,   184,   345,   184,   780,   212,
     776,   775,   776,   387,   780,  3092,   390,   370,    64,   776,
     122,  2470,   141,   780,   566,   150,   151,   594,    74,   776,
    4268,  2987,   648,   780,   776,   775,   648,   156,   780,   776,
     141,    21,  3001,    89,   601,  3001,  3002,  3003,   775,   373,
    4268,   235,   141,   648,   776,   775,  5232,   775,   237,   323,
     237,   776,   122,  2442,  2443,   622,   623,  3023,   776,  2463,
    2464,   332,   776,   397,  4053,  3152,  3153,   776,   620,  4058,
     776,   780,   776,   776,   780,  2534,   188,   780,   776,  2538,
     504,   505,   780,   775,  2864,   637,   364,  3053,   451,   776,
     775,  3057,   370,  3059,   648,   776,   370,  4001,  3064,   780,
    1211,  1212,   776,  3069,   776,  5291,   780,  5293,   564,   776,
     100,   775,  3078,   780,   776,  3081,   504,   505,   188,   775,
    4374,   776,   775,  5309,   775,   396,  3092,   493,   322,  4155,
     445,   446,  3098,   245,   323,   501,   323,   193,   776,   775,
    4166,   775,   780,   199,  3231,  4399,   340,   776,   775,   219,
     776,   780,  3118,   135,   776,   504,   505,   227,   775,   229,
    3126,   439,   122,   775,  3130,  3131,   156,  5353,  5354,  3256,
     364,   776,   776,  2237,  2238,   364,   780,   364,   290,   235,
    3146,   370,   775,   370,   547,   776,  3152,  3153,   775,   780,
    2835,  2836,  2837,   419,   776,    13,   775,    12,   780,   775,
     566,   776,   192,   775,   194,   780,   775,   263,   776,   524,
     525,   526,   780,   648,   776,   775,   345,  3183,   780,  2864,
     290,  4388,   212,   775,  4393,   776,  4393,   217,   188,   780,
     775,  3284,   108,  5343,   345,   648,  3284,   481,   776,    21,
     776,   231,   780,   775,   780,  3211,   345,   518,   238,  5359,
     775,   775,   654,   776,   620,   621,   246,   780,   775,   219,
     594,   373,    64,   775,   648,  3231,   776,   630,   258,   547,
     780,   637,    74,   547,   122,  5385,  2835,  2836,  2837,   385,
     776,   271,   775,    37,   780,   397,   276,    89,   776,   560,
    3256,   167,   780,   108,   776,   285,   776,   776,   780,  3257,
     780,   780,   776,   373,  3270,   775,   780,  3273,   775,  3275,
     776,   776,   127,   776,   780,   780,  2775,   780,   100,  3271,
     775,   599,   140,  3275,   200,  3275,   563,   776,  3280,  3281,
     290,   780,  2791,  2792,  3286,   776,   775,   378,   775,   780,
     188,   765,   766,   767,   768,   769,   770,   771,   772,   775,
    4011,   381,   630,   547,   775,    12,   630,   775,   547,   776,
     547,   115,   418,   780,   775,   355,   775,    21,   122,   776,
     564,   219,   775,   780,   156,   504,   505,   765,   766,   767,
     768,   769,   770,   771,   772,   200,   749,   197,   378,   775,
     775,   193,   775,   504,   505,   775,   759,   199,   388,   493,
     122,   775,   220,   125,   776,   504,   505,   501,   780,   775,
     775,   122,   194,   373,   125,  3381,   765,   766,   767,   768,
     769,   770,   771,   772,   775,   179,   231,   775,   243,   775,
     212,   775,  3398,   235,   188,   217,  4462,  4463,  3457,  4465,
     775,   630,   290,   630,  2903,  2904,   100,   775,   775,   775,
     775,   108,   122,  4568,   775,   125,   238,    35,    33,   775,
     246,   263,   775,   519,   246,   219,   188,  4472,  4473,  3435,
     127,   286,   566,  3439,  3440,   749,   258,   188,   775,   775,
    3446,   775,   594,   775,    62,   759,   775,   477,   775,   271,
     775,  3457,   775,  3445,   276,  3461,  3462,   219,   775,  3465,
     194,   194,   156,   285,   246,   197,   621,   501,   219,   378,
    3476,   501,  3478,  3465,   501,  3465,   212,   781,   188,  3488,
    3489,   780,  3488,  3489,   594,   373,   620,   621,  3497,  3498,
    3499,  3497,  3498,  3499,   112,   781,   290,   115,   780,   775,
     194,  3553,   199,   637,   420,   123,   780,   775,   604,   219,
      96,  5056,   179,   775,   781,    48,   156,   156,   212,   549,
     749,  3527,   749,   217,   142,   197,   141,   111,   290,   122,
     759,    77,   759,   355,   776,   778,   775,   160,   235,   290,
    3546,   779,  3548,   160,   238,   697,   160,    93,   780,   141,
     612,   249,   246,    48,   276,   293,   378,   195,   160,   401,
     747,   384,   356,   171,   258,   420,   388,   533,   519,   193,
       7,   189,  3257,   603,   368,   263,   418,   271,   372,   373,
     290,   709,   276,  3592,   614,   615,  3592,   263,  3594,   286,
      71,   285,    13,  3599,   594,   188,   765,   766,   767,   768,
     769,   770,   771,   772,   776,   635,   634,   637,   776,   140,
      10,   373,   776,   780,   765,   766,   767,   768,   769,   770,
     771,   772,   373,   781,   502,   776,   219,  3633,   767,   768,
     769,   770,   771,   772,   249,  3641,   776,   122,  4667,   776,
     125,   775,   260,   776,   499,   493,   776,  3146,   775,  4715,
     566,  4717,  4718,   776,   776,   477,   275,   753,  3257,   667,
     275,   355,   378,   373,   709,   615,   563,   516,   698,   527,
     528,   587,   530,   531,   532,   780,    50,   519,   282,   501,
      30,  4747,    30,    37,   378,    31,   287,   780,   583,   780,
     780,   549,   487,   390,   388,    71,   612,   290,   733,   366,
     367,   572,   273,   188,   780,   372,   594,  3713,   780,   564,
     658,   566,   628,   779,   781,   780,   166,   775,   566,   265,
    3726,   194,   543,  3729,  3730,  4932,   563,   549,   166,   543,
     345,   211,   287,   157,   219,    88,   354,   780,   780,   357,
     194,    21,   780,  3749,  3750,   600,   776,  3753,   778,   379,
     780,   366,   367,   345,   559,   785,   646,   612,  4725,   136,
     100,   115,   604,   156,   776,   729,    48,   654,   122,   729,
     637,  3270,   620,   621,  3273,   160,   160,  4819,   572,   160,
     373,   603,   576,   477,   780,   579,    37,  3793,   160,   637,
    3796,   160,   160,   615,   160,   589,   572,   343,   404,  3805,
     594,   780,   499,   597,   503,   290,    87,   501,   125,     7,
    4852,   110,   775,   635,  3820,   637,  3822,   435,   583,   158,
     401,    74,   519,   369,   401,   179,   401,   442,   583,   136,
     261,   261,   594,   401,   188,  3841,   136,   401,    48,   401,
     401,   160,   161,   594,  3850,   458,   459,   460,   461,   462,
     463,   464,   401,   708,   585,   549,   401,   780,   619,   619,
     780,   492,  4682,   710,   115,   219,   501,   564,   775,   566,
     628,   122,   569,   775,   780,   776,   698,    57,  4920,   448,
     610,  5036,   201,   171,   594,   431,   378,     7,   373,   504,
     505,   509,   717,   111,   378,   214,   614,     7,   238,   228,
    4867,   592,   517,   600,   200,   775,   197,   604,   776,   603,
     776,   753,   504,   505,   776,   612,   776,   776,   258,   776,
     776,   615,   589,   776,   768,   776,    21,   775,   179,   522,
      64,   271,    27,   776,   780,   254,   290,   188,   605,  5042,
      74,   635,   775,   637,   776,   776,   776,  3446,   267,   776,
     690,   780,   780,   775,   776,    89,   778,   654,   780,   776,
      64,   579,  5117,   785,   776,   780,   776,  3973,   219,    64,
      74,    15,   781,   767,   768,   294,    71,    21,  3984,   781,
      75,   775,    77,   781,   775,    89,   772,   533,   775,   607,
     775,   780,    27,    28,    89,    39,   776,   781,   192,    43,
     779,   594,   356,   780,   698,  4011,  4012,   780,   287,  4018,
    4002,   708,  4018,    57,    58,   355,   287,   287,   372,   373,
     287,   287,   287,  4150,   780,   160,    61,    62,    63,   378,
     125,   583,   635,   236,   780,   100,    71,   780,   378,   290,
     359,   780,    77,   583,   401,   583,    13,   160,    83,    84,
    4177,   780,    87,  4059,   210,   378,   753,   754,   197,   193,
     197,   583,   583,    35,   456,   255,   433,   194,  4074,   781,
     781,   780,   141,   781,   781,   781,   111,  5119,   249,   769,
     252,   181,   776,   561,   778,   194,   780,   780,   194,   193,
     125,   785,   514,    35,   129,  5304,    60,  5304,   776,    27,
     780,   235,   141,   405,  4145,   356,   194,   722,   203,   594,
     402,   108,   782,   572,   404,  4121,   572,  4123,   404,  5328,
    4126,  5328,   373,   158,  4130,   572,   160,   126,   669,   263,
     342,   235,   780,  4139,   781,    60,    64,   477,  5347,   263,
    5347,   478,   263,    71,  4150,   598,   263,    75,   263,    77,
     765,   766,   767,   768,   769,   770,   771,   772,  5367,   263,
    5367,    89,   403,   775,   707,   378,   673,  4173,   263,   673,
     167,  4177,   249,   238,   766,   767,   768,   769,   770,   771,
     772,   160,   160,   160,  5250,  5152,   158,   160,   286,   160,
     162,   160,   160,   258,   160,   160,   709,   125,   160,   160,
     235,   160,   160,   200,   160,   160,   271,   242,   160,   549,
    4216,  4217,   160,   160,   160,   160,   158,   160,   572,   160,
     162,  5026,   576,   141,   160,   579,   160,   262,   160,   160,
     202,  4237,   642,   160,   160,   589,   160,   160,   235,   160,
     594,   160,   654,   597,   160,   141,    21,   160,   160,   160,
     222,   160,    27,    28,   465,   378,  4262,   775,   245,   776,
     202,   154,  4237,   245,   776,   781,   776,   401,   776,   141,
     776,   366,   367,   776,   776,   615,   345,   372,   572,   780,
     222,  4287,   781,   378,   418,   572,   583,   322,    63,   286,
     355,   781,   781,  4299,  5365,   572,   655,  4289,   781,   775,
     583,   780,    77,   775,   385,   340,   345,   197,    83,    84,
     775,   775,    87,   378,   418,   287,   731,   780,   212,   733,
     728,   572,   433,   418,   197,   576,   615,   776,   579,    56,
     197,   428,   780,   336,   156,   263,   111,    12,   589,    66,
     775,   775,  3841,   594,   404,   287,   597,   555,   775,    76,
     125,   456,   404,   249,   129,   160,   406,   780,    73,   533,
     395,   492,   378,    90,    91,    92,   533,  4494,  4374,   404,
     533,   533,   533,   775,  4380,   263,   263,   249,   775,   106,
     615,   156,  4388,   158,   367,   592,   780,  4393,  4394,   564,
     637,   564,  5212,  4399,   780,   583,   583,   373,   451,   212,
    4392,   776,   497,   378,   378,   776,  5350,  3311,   572,  3313,
     780,   383,   477,   767,   768,   775,  4543,   775,   415,   775,
    4426,   775,   473,   420,   775,   414,    62,   345,   775,   247,
     775,   775,   247,   776,  4440,   504,   505,   775,   366,   367,
     775,   383,  5247,   775,   372,   775,   721,   419,   483,   345,
     378,   776,   547,    48,   776,   776,   231,   495,   688,   775,
     235,   776,   780,   688,   285,   504,   505,   242,   780,    12,
     776,   443,   547,   345,   160,   780,  4482,   419,   385,   231,
    4486,   282,   775,   643,   549,   769,  5306,   262,  4494,   160,
     418,   197,   258,   258,   391,   780,   468,    48,   776,   217,
     275,   443,   499,   776,   539,   540,   541,   542,   776,   604,
     103,   373,   547,   776,   776,   775,   767,   768,   498,   615,
      48,   160,   519,    56,   228,   775,   468,   103,   245,   564,
     160,   278,   567,    66,   111,   781,   111,  4543,   369,   162,
     512,   775,   401,    76,   775,   730,     4,   322,   775,   775,
     615,   775,   441,   775,  5359,   125,   125,    90,    91,    92,
     566,   776,   767,    21,   583,   340,   404,   564,   603,   497,
     512,   543,   569,   106,   384,  4581,   775,  4583,  4584,   378,
    5385,    39,   378,  4575,   373,   776,   504,   505,   637,   401,
     587,   563,   776,   776,   566,   776,   516,   776,   776,   197,
     433,   543,   583,   600,   210,  4611,  4665,   334,   504,   505,
      21,   706,   269,   246,  4620,   612,   378,   776,   197,   547,
     395,   258,   780,   780,   351,   698,   401,   781,   404,   404,
     785,   628,   504,   505,   785,   730,   785,   258,   258,   277,
      48,   404,    48,    48,   688,   153,    48,   769,   478,   693,
     775,    35,    35,   125,   749,   750,   626,   654,   753,  4665,
     730,   263,   263,    64,   203,   609,  4672,   263,    35,   378,
     373,   373,   775,   373,  4173,   416,   604,   378,    77,   723,
      21,   456,  4688,   775,  4690,   776,   488,   781,   516,   776,
     725,   780,   776,   776,   776,   739,   765,   766,   767,   768,
     769,   770,   771,   772,   776,   776,   780,   776,   483,   776,
     776,   708,   265,   342,   749,   750,   428,  4216,   493,   780,
      48,   388,   776,   378,   759,   175,   765,   766,   767,   768,
     769,   770,   771,   772,   385,   285,   210,   776,    21,   566,
     147,   258,   258,   776,  4750,   472,  3650,  3651,   775,   775,
     780,  3655,   796,   797,   776,   799,   800,   754,   120,   120,
      48,    48,   489,    48,   539,   540,   541,   542,   812,   388,
     378,   620,   547,   373,   775,  4781,  4782,   637,   706,   751,
     752,   368,   621,   755,   756,   757,   758,  3691,    15,   564,
    4842,   566,   567,  3697,  3698,  3699,    21,    81,  3702,   143,
    4299,   334,   730,   511,   116,   117,   118,   119,   120,   751,
     752,   373,   228,   755,   756,   757,   758,   780,   351,   404,
     780,   749,   750,   776,   551,   753,   775,   373,   603,   780,
     194,   342,    48,   173,   378,  4841,   776,   385,   263,   194,
      21,   568,   781,   780,    77,   620,  4852,   765,   766,   767,
     768,   769,   770,   771,   772,   276,   162,   319,   776,   776,
      93,   775,   637,   907,   637,   775,  4872,   674,   754,   765,
     766,   767,   768,   769,   770,   771,   772,   398,    48,   473,
     149,   776,  4888,   160,   776,   609,   162,   637,   136,   780,
     775,   775,  4933,   765,   766,   767,   768,   769,   770,   771,
     772,   134,   776,   158,   948,   776,   776,   775,   574,   186,
     775,   223,   224,   225,   226,   136,   136,   775,   962,   775,
     775,   378,   538,   776,   201,   484,  4932,   484,  4934,   780,
     679,   975,   692,   692,   692,  4941,  4942,   214,   654,    48,
    4946,    48,   555,   535,   155,  5072,   775,   634,  5075,    32,
     725,    64,   385,    64,    19,  4961,   489,   782,   482,   703,
     776,   634,   197,   554,    32,   385,   385,  4973,   776,   143,
     134,   692,   484,   702,   749,   750,   689,   228,  4984,   465,
       6,   378,   378,  4989,   759,   246,   154,   778,  5115,   266,
     267,    48,   171,   130,   609,   154,   230,  4994,   292,   634,
     775,   778,  4994,   778,  4994,   124,   703,   231,   782,  5061,
      54,   575,   143,   373,  5020,   154,   780,   294,   551,   775,
     575,   778,   215,   335,   778,   337,   338,   339,   154,    54,
     501,   194,   265,   194,   346,   568,   194,   575,   455,   636,
     125,   780,   378,   699,  5042,   196,  4994,  3424,  3224,  3218,
    3220,  4583,  4586,  4579,  3222,  3818,  3215,  1101,  4594,  3626,
    4609,  4909,  5024,  5199,  1132,  5198,  5072,  1627,  4611,  5075,
    4803,  5385,  5343,    46,   979,  4895,  2741,  2807,  3973,  4895,
    1124,  5355,  5088,  5259,  5168,  5259,   363,  5245,  5194,  5193,
    3827,  1135,  1136,  2368,  4895,  1087,  4895,  4895,  4895,  4895,
    1144,  1145,  1146,  1147,  1148,  1149,  2375,  3420,  4895,  5115,
     343,  4895,  4895,  1157,  1158,   427,  1160,  1161,  4895,  4268,
    4895,  1165,  1166,  4119,  2535,  1169,  1170,  1171,  1172,  5135,
    1174,  1175,  4895,   366,   367,  4289,   369,  4895,  1182,  1183,
     417,  1185,  1186,  1187,  1188,  1189,  3286,  3281,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,  1199,  1200,  3280,  1202,  4069,
    4704,  1205,  1206,  5221,  5142,  4479,  1210,  4987,  4988,  5221,
    1214,  1215,  1216,  4672,  5154,  5152,  2533,  4867,   490,   491,
    2463,  3275,  3848,  1227,  1228,  1229,  4139,  4192,  1232,  4140,
    3669,  1235,  1236,  1237,  1238,  1239,  1240,  5324,   431,  3702,
    1244,  3701,  4508,  2383,  5164,  4195,  4933,  4723,  4785,  4871,
    4895,  1255,  1256,  3377,  4727,  4790,  5112,  3064,  4737,  1263,
    1786,  1265,  1266,  3076,  4486,    18,    19,  4166,  4285,  3833,
    2959,  3259,  2952,  1277,  1278,  1279,  2464,  1281,  1282,  2464,
    4560,  1285,  1286,  1287,  2463,  2246,  1290,  1291,  1292,  1293,
    1294,  1295,  1296,  1297,  1552,  2242,   984,  1301,  5264,  3732,
    1602,  1761,  1306,  2797,  2791,  5271,  1736,  3084,  3446,  3183,
    2772,  3989,    63,   949,  2128,  5095,  5096,  1321,  2319,  5175,
     948,  1994,  2701,  1933,  3390,  4840,  4819,  5119,  2818,  5135,
    5212,  5306,  5112,  1176,  5190,  2818,  4895,  2818,  5304,  1256,
     533,  2818,  4987,  4988,  5310,  4419,  4692,  5203,  5332,  5315,
    1354,  3753,  4941,  1150,  4942,  4046,   998,  1509,  5324,  4428,
     632,  3504,  5328,   116,   117,   118,   119,   120,  3726,  4841,
    4648,  4814,  4721,  2326,    16,  2004,  2708,   649,   650,  1072,
    1072,  5347,  1362,  3445,  3445,  4396,  4008,  3443,  4379,  1072,
    4388,  2897,  1072,  5359,  1507,  5175,  1601,  5042,  1068,  2898,
     978,  5367,  1069,  3146,  1408,  2729,  5262,  3449,  2192,  4101,
    5190,  1415,  4469,  5365,  2101,  5365,  5272,  2218,  5132,  5385,
    5347,  5277,  5211,  5203,  5367,  4348,  4393,  4211,  4987,  4988,
    4695,  3002,  4283,  1259,  2864,  5127,  3211,  2150,  1444,    43,
      43,  2165,  1446,  2145,  1448,  1442,  2143,   934,    39,  2947,
    5095,  5096,  5232,  2775,  2546,  5311,  1354,  5313,  1547,  4662,
    4824,  2547,   937,    11,  5244,  5245,    11,  5112,  1062,  5143,
     223,   224,   225,   226,  1132,  3836,  1132,  1132,  4227,  5335,
    4286,  4604,  5262,  5042,    -1,  3743,   904,    -1,    -1,    -1,
    1404,    -1,  5272,    -1,    -1,    -1,    -1,  5277,    -1,    -1,
      -1,    -1,  1506,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5291,    -1,  5293,  5370,  5371,    -1,    -1,    -1,  5375,
      -1,  1525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5309,
    5175,  5311,    -1,  5313,    -1,    -1,  5095,  5096,    -1,    -1,
      -1,    -1,    -1,    -1,   962,  5190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5112,    -1,  5335,    -1,    -1,  5203,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,
      28,    -1,   990,  5353,  5354,  1579,    -1,    -1,    -1,    -1,
      -1,    -1,   335,    -1,   337,   338,   339,  5232,    -1,    -1,
    5370,  5371,    -1,   346,    15,  5375,    -1,    -1,    -1,  5244,
    5245,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5175,  5262,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,  5272,    -1,    87,
      -1,  5190,  5277,    -1,   387,    -1,    -1,   390,    -1,    -1,
      -1,    -1,    -1,    -1,  5203,    -1,  5291,    -1,  5293,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5309,    -1,  5311,   125,  5313,    -1,
      -1,   129,    -1,  5232,   427,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5244,  5245,    -1,    -1,    -1,
    5335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,    -1,    -1,  5262,    -1,    -1,  1124,    -1,  5353,  5354,
      -1,    -1,    -1,  5272,    -1,    -1,    -1,    -1,  5277,    -1,
      -1,    -1,    -1,    -1,    -1,  5370,  5371,    -1,    -1,    -1,
    5375,    -1,  5291,    -1,  5293,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5309,    -1,  5311,    -1,  5313,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5335,   235,    -1,    -1,
      -1,    -1,     7,    -1,   242,    -1,    -1,    12,    -1,    14,
      -1,    -1,    -1,    -1,  5353,  5354,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,   262,    -1,    -1,    -1,    -1,  1813,
      -1,  5370,  5371,  1817,    -1,    -1,  5375,    -1,    -1,    -1,
      -1,  1825,    -1,  1827,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,  1867,   322,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   632,
      -1,    -1,   340,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   648,   649,   650,    -1,    -1,
     125,    -1,    -1,  1321,   129,    -1,    -1,  1911,  1912,  1913,
      -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,  1354,   395,  1942,    -1,
      -1,    -1,  1360,  1947,    -1,    -1,   404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1375,    -1,    -1,
      -1,    -1,  1966,    -1,   232,    -1,    -1,   192,    -1,  1973,
      -1,    -1,    -1,    -1,  1978,    -1,  1980,    -1,    -1,    -1,
      -1,    -1,  1986,    -1,  1988,  1989,    -1,    -1,    -1,    -1,
    1408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   262,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1549,  1550,  1551,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2147,    -1,   603,  2150,    -1,    -1,    -1,
      -1,    -1,    -1,  2157,  2158,    -1,    -1,    -1,  2162,    -1,
      -1,  2165,    -1,   388,  2168,    -1,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,  2178,    -1,    -1,   445,   446,   404,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1631,    -1,
    1633,  1634,    -1,    -1,    -1,  1638,  1639,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1652,
      -1,    -1,  1655,  1656,    -1,  1658,   451,    -1,  1661,  1662,
    1663,  1664,    -1,    -1,    -1,  1668,    -1,    -1,    -1,    -1,
    1673,    -1,    -1,    -1,    -1,  1678,  1679,  1680,  1681,  1682,
      -1,    -1,    -1,  1686,  1687,    -1,    -1,    -1,   483,  1692,
      -1,  1694,  1695,  1696,    -1,  1698,  1699,   725,  1701,    -1,
      -1,  1704,   693,    -1,  1707,  1708,  1709,    -1,    -1,    -1,
    2284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   759,   723,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   539,   540,   541,   542,   739,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2366,    -1,    -1,  2369,  2370,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,   800,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   711,   712,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   732,    -1,   734,   735,   736,   737,
     738,    -1,    -1,   741,    -1,    -1,    -1,    -1,    -1,    -1,
    2484,    -1,    -1,    -1,    -1,    -1,   907,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   749,   750,    -1,   948,    -1,    -1,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2562,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2571,  2572,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2591,  2592,    -1,
    2594,    -1,    -1,  2597,  2598,  2599,  2600,  2601,    -1,    -1,
    2604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2613,
      -1,    -1,    -1,    -1,  2618,    -1,  2620,    -1,  2622,  2623,
      -1,  2625,  2626,    -1,    -1,    -1,  2630,  2631,  2632,    -1,
      -1,    -1,  2636,  2637,  2638,    -1,  2640,    -1,  2642,    -1,
    2644,    -1,  2646,    -1,  2648,    -1,    -1,    -1,    -1,  2653,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2075,  2076,    -1,
      -1,    -1,    -1,    -1,    -1,  2669,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2687,    -1,  2689,    -1,  2691,    -1,    -1,
      -1,  2695,    -1,    -1,    -1,    -1,    -1,  2701,  2702,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1135,  1136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1144,  1145,    -1,    -1,  1148,  1149,  2147,
      -1,    -1,  2150,    -1,    -1,    -1,  1157,  1158,    -1,  1160,
    1161,    -1,    -1,    -1,  1165,    -1,    -1,    -1,  1169,  1170,
    1171,  1172,    -1,  1174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1182,  1183,    -1,  1185,  1186,    -1,    -1,    -1,    -1,
      -1,  1192,    -1,    -1,  1195,  1196,  1197,  1198,  1199,  1200,
      -1,  1202,  2786,    -1,  1205,  1206,    -1,    -1,    -1,  1210,
      -1,    -1,    -1,  1214,  1215,  1216,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1227,  1228,  1229,    -1,
      -1,    -1,    -1,    -1,  1235,  1236,  1237,  1238,  1239,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2835,  2836,  2837,  1255,  1256,    -1,    -1,    -1,    -1,
      -1,    -1,  1263,  2276,  1265,  1266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2864,    -1,    -1,    -1,    -1,    -1,  2284,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1306,    -1,  2305,    -1,  2307,
      -1,  2309,  2310,    -1,  2312,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    21,    -1,    -1,  2913,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,  2923,
      -1,  2925,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2376,    -1,  2363,    -1,    -1,    63,  2367,
      -1,    -1,    -1,    -1,  2372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
    2403,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2398,  2399,  2400,  2401,    -1,    -1,    -1,  2420,    -1,    -1,
      -1,  2995,    -1,    -1,  1415,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,  2430,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2458,  2459,  1448,    -1,    -1,
      -1,    -1,    -1,  2466,    -1,    -1,  2454,  2455,    -1,    -1,
      -1,   156,    -1,   158,    -1,    14,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    -1,  1506,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1525,    -1,    -1,    -1,    -1,    -1,
      79,    -1,    -1,    -1,    -1,  2548,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,  1579,    -1,
      -1,    -1,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,
      -1,    -1,    -1,  3257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,   404,
      -1,  3295,    -1,    -1,    -1,   264,    -1,    -1,    -1,  3303,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3330,  3331,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3366,    -1,  3368,    -1,  3370,    -1,   483,  2787,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1813,    -1,    -1,    -1,  1817,    -1,  3402,    -1,
      -1,    -1,    -1,  3407,    -1,  3409,  1827,    -1,    -1,    -1,
      -1,    -1,    -1,   382,    -1,    -1,    -1,  2835,  2836,  2837,
      -1,    -1,    -1,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,  3443,
      -1,    -1,    -1,    -1,    -1,    -1,   415,    -1,  2866,   564,
      -1,   566,   567,    -1,    -1,    -1,    -1,   426,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3479,    -1,  3481,    -1,   448,
      -1,    -1,   451,    -1,   453,    -1,    -1,   456,   603,    -1,
    1911,  1912,  1913,  2911,    -1,    -1,    -1,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,   620,    -1,   476,    -1,   478,
      -1,    -1,    -1,    -1,    -1,    -1,  3520,    -1,   487,    -1,
      -1,    -1,   637,    -1,   493,    -1,  1947,    -1,    -1,    -1,
      -1,    -1,   501,    -1,    -1,    -1,    -1,   506,   507,   508,
      -1,    -1,    -1,    -1,    -1,  1966,    -1,    -1,    -1,  3553,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1978,    -1,  1980,
      -1,    -1,    -1,  2981,    -1,    -1,    -1,    -1,    -1,    -1,
     539,    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,
    3013,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3014,   566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3027,
     725,  3029,  3030,  3031,  3032,    -1,  3034,  3035,    -1,    -1,
      -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,  3632,    -1,
      -1,    -1,    -1,   602,   749,   750,    -1,   606,    -1,    -1,
      -1,    -1,    -1,    -1,   759,   614,    -1,    -1,    -1,    -1,
      -1,   620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     775,    -1,    -1,   778,    -1,    -1,    -1,    -1,   637,    -1,
      -1,    -1,    -1,    -1,    -1,  3093,   645,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3106,    -1,
      -1,    -1,   661,   662,   663,   664,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3167,    -1,    -1,  2158,    -1,    -1,
      -1,  2162,    -1,    -1,   713,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3187,
      -1,    -1,  3190,  3191,    -1,    -1,  3194,  3195,  3196,  3197,
    3198,  3199,  3200,  3201,    -1,    -1,  3204,    -1,  3206,    -1,
    3208,  3209,    -1,    -1,  3212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3235,  3236,  3237,  3238,   775,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3824,  3825,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3257,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,  3865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    -1,  3896,    -1,  3898,    -1,    58,  3901,  3902,    -1,
    3904,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3915,    -1,    -1,    -1,    -1,  3920,    79,    -1,  3923,
      -1,    -1,  3926,  3927,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,  3948,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3962,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4008,    -1,    -1,    -1,   170,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4043,
    4044,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,   218,    -1,  4062,    -1,
      -1,    -1,    -1,  2484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,    -1,   285,    -1,    -1,    -1,  4131,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2562,    -1,    -1,    -1,  3563,    -1,    -1,    -1,    -1,
    2571,  2572,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3585,    -1,    -1,
    2591,  2592,    -1,  2594,    -1,    -1,  2597,  2598,  2599,  2600,
    2601,    -1,  3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2613,    -1,    -1,    -1,    -1,  2618,    -1,  2620,
      -1,  2622,  2623,    -1,  2625,    -1,    -1,    -1,    -1,  2630,
    2631,  2632,    -1,    -1,    -1,  2636,  2637,  2638,    -1,  2640,
     382,  2642,    -1,  2644,    -1,  2646,    -1,  2648,    -1,    -1,
    4234,  4235,  2653,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4266,  4267,   426,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2695,    -1,    -1,    -1,    -1,    -1,
    2701,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,   451,
      -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
      -1,    -1,    -1,    -1,   506,   507,   508,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2786,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3806,  3807,    -1,    -1,   539,    -1,    -1,
      -1,  3799,    -1,    -1,   546,  4389,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   566,  3823,  4410,    -1,  4412,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,   620,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2913,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   676,    -1,    -1,    -1,    -1,    -1,
    4524,    -1,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   713,    -1,  4557,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2995,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   775,    -1,    -1,   123,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,    -1,    -1,    17,  4632,    -1,
      -1,  4635,    -1,    -1,    -1,   142,    -1,    27,    28,    -1,
      -1,    -1,    -1,    -1,  4648,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    61,    62,    63,    64,    -1,    -1,    -1,  4096,    69,
     187,    71,   189,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,  4695,    -1,    83,    84,    -1,    -1,    87,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
     247,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,
      -1,    -1,    -1,   260,   144,    -1,  4189,  4190,    -1,    -1,
      -1,  4179,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4814,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4842,    -1,
     347,   348,   349,   233,    -1,   235,    -1,   354,    -1,    -1,
     357,    -1,   242,    -1,  4272,  4273,  4274,  4275,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4283,    -1,    -1,   375,   376,
      -1,    -1,   262,    -1,  3295,    -1,    -1,    -1,    -1,  4297,
      -1,    -1,  3303,    -1,    -1,    -1,  4890,    -1,    -1,    -1,
      -1,  4895,    -1,    -1,    -1,   285,    -1,  4901,    -1,    -1,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,  3330,
    3331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4922,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,    -1,   322,    -1,    -1,  3356,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3366,    -1,  3368,    -1,  3370,
     340,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4981,    -1,    -1,
      -1,    -1,    -1,  4987,  4988,    -1,    -1,    -1,    -1,    -1,
     497,    -1,   382,    -1,   501,    -1,    -1,    -1,   388,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3443,    -1,    -1,  5029,    -1,    -1,    -1,    -1,
    4448,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5042,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5061,  3479,    -1,
    3481,   451,   452,   453,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,  5081,    -1,  5083,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5093,
      -1,  5095,  5096,   483,    -1,    -1,    -1,    -1,    -1,  3520,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5112,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,
      -1,  4539,  4540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,   539,
     540,   541,   542,    -1,    -1,  4573,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4586,  5173,
      -1,  5175,    -1,    -1,   564,    -1,    -1,   567,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5190,  5191,    -1,    -1,
    4608,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5203,
     590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3632,    -1,   603,    -1,    -1,    -1,  5221,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5231,  5232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5244,  5245,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,
     640,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5262,    -1,
      -1,    -1,    -1,    -1,    -1,  5269,    -1,    -1,  5272,    -1,
      -1,    -1,    -1,  5277,    -1,    -1,    -1,    -1,    -1,    -1,
    5284,    -1,    -1,    -1,    -1,    -1,    -1,  5291,    -1,  5293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4733,  4734,  4735,    -1,    -1,  5309,    -1,  5311,    -1,  5313,
      -1,    -1,    -1,    -1,  4732,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5335,    -1,    -1,    -1,   725,   726,   727,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5353,
    5354,    -1,    -1,    -1,    -1,    -1,  5360,    -1,    -1,   749,
     750,    -1,    -1,    -1,  5368,    -1,  5370,  5371,    -1,   759,
      -1,  5375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4859,    -1,    -1,  4862,
    4863,  4864,  4865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     7,    -1,    -1,  3865,    -1,    12,    -1,    14,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    34,    35,  4877,
    4878,    27,    28,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,    -1,    -1,  3896,    -1,  3898,    -1,    -1,
    3901,  3902,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    -1,  3915,    -1,    -1,    63,    64,  3920,
      -1,    -1,  3923,    69,    -1,  3926,  3927,    -1,    -1,    -1,
      -1,    77,    -1,    -1,  4947,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,  4956,  4957,    -1,    -1,  3948,    -1,    -1,
      96,    -1,  4965,    -1,    -1,   112,    -1,  4955,   115,    -1,
      -1,    -1,    -1,    -1,    -1,   111,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
      -1,    -1,    -1,   129,    -1,   142,    -1,    -1,    -1,    -1,
      -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,   159,    -1,    -1,    -1,   152,  4008,    -1,    -1,
      -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4043,  4044,  5042,    -1,   192,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4062,    -1,    -1,    -1,    -1,    -1,    -1,  5066,  5067,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,
     247,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4131,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    35,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,   322,    61,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    73,
     347,   348,   349,    -1,   340,    -1,    -1,   354,   344,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    97,    -1,    99,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4234,  4235,    -1,   382,    -1,    -1,    -1,
      -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,    -1,   395,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,   404,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   157,   158,    -1,    -1,    -1,   435,   163,
      -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     436,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   451,   452,   453,    -1,    -1,
      -1,    -1,    -1,    -1,   198,    -1,   200,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
     497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4389,    -1,
      -1,    -1,    -1,   539,   540,   541,   542,    -1,   282,    -1,
      -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4410,
      -1,  4412,    -1,    -1,    -1,    -1,   573,    -1,   564,   576,
      -1,   567,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,   637,    -1,   650,   640,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4524,   408,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   419,   420,    -1,   422,   423,
     424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   112,  4557,    -1,   115,    -1,
     444,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   725,
     726,   727,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   759,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   780,    -1,    -1,    -1,   511,    -1,    -1,
     187,  4632,   189,    -1,  4635,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4648,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,  4695,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   586,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,    -1,
     624,    -1,    -1,    -1,    -1,    -1,    -1,   631,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4814,    -1,    -1,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,    -1,
      -1,   755,   756,   757,   758,    -1,   760,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4890,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4922,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4981,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,    -1,  5029,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5081,    -1,  5083,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5093,   650,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,  5269,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,  5284,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,  5360,
     125,   126,   127,    -1,   129,    -1,    -1,  5368,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,   566,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,   268,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,   769,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,   769,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,   767,   768,    -1,    -1,    -1,    -1,   773,    -1,
     775,    -1,    -1,    -1,   779,    -1,    -1,    -1,   783,   784,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,   620,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,   761,    -1,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
     775,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   784,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,   761,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   775,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   784,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
     761,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,   775,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,   784,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,    -1,   755,   756,   757,   758,   759,
     760,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
     780,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,   758,   759,   760,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   779,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   779,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,   758,   759,
     760,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   779,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   779,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,   758,   759,   760,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   779,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     779,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,   758,   759,   760,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   779,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   779,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
     758,   759,   760,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   776,    20,
      -1,   779,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   779,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,   758,   759,   760,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   779,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
     637,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   775,   776,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,   758,   759,
     760,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   776,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   776,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,   275,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,   519,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
     566,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,   620,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,   758,   759,   760,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   775,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,   758,   759,
     760,   761,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   775,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   775,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   775,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   775,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     775,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
     769,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,   769,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,   769,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,   769,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,   769,     8,     9,    10,    11,    12,
      13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,   506,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
     587,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,   609,   610,   611,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    14,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,   210,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,
     611,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,    -1,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,   521,   522,   523,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,
      19,    20,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,   387,    -1,
      -1,   390,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,   648,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,   372,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    95,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,   522,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,   660,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,    -1,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,    -1,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
      -1,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,   452,   453,   454,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,    -1,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,    -1,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,    -1,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,   634,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,    -1,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,    -1,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,    -1,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,    -1,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,    -1,   755,   756,   757,   758,   759,   760,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,    -1,   755,   756,
     757,   758,   759,   760,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,    -1,   755,   756,   757,   758,   759,   760,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,    -1,
     755,   756,   757,   758,   759,   760,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,    -1,   755,   756,   757,   758,
     759,   760,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,    -1,   755,   756,   757,   758,   759,   760
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   775,   787,   788,   791,   792,   793,   794,
     795,   797,   802,   804,   829,   830,   831,   832,   834,   837,
     860,   882,   889,   890,  1126,  1127,  1129,  1131,  1133,  1136,
    1138,  1139,  1140,  1141,  1142,  1144,  1145,  1180,  1181,  1188,
    1189,  1192,  1206,  1208,  1212,  1215,  1216,  1220,  1222,  1227,
    1231,  1237,  1238,  1239,  1240,  1241,  1242,  1243,  1248,  1249,
    1373,  1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,  1414,
    1415,  1416,  1417,  1418,  1419,  1420,  1421,  1422,  1430,  1431,
    1452,  1453,  1457,  1461,  1467,  1483,  1484,  1486,  1490,  1499,
    1508,  1512,  1514,  1515,  1583,  1585,  1587,  1609,  1616,  1618,
    1619,  1620,  1622,  1626,  1628,  1654,  1660,  1661,  1662,  1663,
    1699,  1706,  1707,  1709,  1710,    12,   108,   127,   200,   243,
     286,   420,   499,   564,   566,   600,   612,   708,  1673,  1674,
    1675,  1678,   282,   371,  1221,  1655,   572,  1558,   235,     5,
       6,     8,     9,    10,    11,    12,    15,    20,    23,    25,
      26,    27,    28,    29,    30,    32,    36,    40,    43,    44,
      45,    47,    49,    50,    53,    56,    57,    59,    60,    61,
      63,    65,    66,    67,    68,    69,    70,    72,    73,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      87,    88,    90,    91,    92,    93,    94,    98,   103,   106,
     110,   111,   112,   115,   120,   121,   126,   127,   129,   135,
     136,   137,   138,   139,   143,   146,   147,   148,   152,   154,
     155,   157,   158,   159,   162,   163,   165,   166,   167,   168,
     169,   170,   173,   174,   175,   176,   177,   180,   181,   183,
     184,   185,   186,   187,   190,   191,   195,   196,   198,   202,
     204,   205,   206,   207,   209,   211,   215,   216,   218,   221,
     222,   226,   227,   228,   229,   232,   233,   234,   237,   242,
     243,   244,   248,   252,   253,   255,   256,   260,   262,   265,
     266,   269,   272,   273,   279,   280,   282,   284,   286,   287,
     295,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   316,
     317,   318,   320,   321,   322,   323,   325,   326,   331,   332,
     333,   334,   335,   336,   339,   340,   342,   344,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   357,   358,   361,
     362,   363,   364,   365,   369,   370,   374,   376,   377,   379,
     380,   381,   384,   394,   395,   396,   398,   400,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   413,   415,
     416,   417,   419,   421,   422,   423,   424,   425,   427,   428,
     429,   432,   436,   437,   439,   440,   443,   444,   445,   446,
     447,   449,   450,   452,   453,   454,   457,   458,   459,   460,
     461,   462,   463,   464,   466,   468,   469,   471,   472,   473,
     475,   478,   479,   480,   481,   483,   485,   486,   487,   488,
     489,   491,   492,   496,   497,   498,   499,   503,   507,   509,
     510,   511,   512,   514,   515,   516,   517,   518,   524,   525,
     526,   528,   531,   534,   536,   538,   539,   540,   541,   542,
     543,   546,   547,   550,   551,   552,   553,   554,   555,   558,
     559,   560,   561,   563,   564,   567,   568,   569,   570,   573,
     574,   576,   577,   578,   579,   585,   586,   590,   591,   592,
     595,   596,   598,   599,   601,   602,   605,   608,   610,   612,
     613,   619,   621,   624,   628,   630,   631,   632,   633,   640,
     641,   642,   644,   645,   646,   647,   650,   653,   654,   655,
     656,   657,   659,   668,   669,   670,   672,   673,   674,   676,
     679,   681,   688,   689,   692,   694,   696,   697,   701,   702,
     703,   704,   705,   706,   707,   708,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     746,   747,   748,   749,   750,   751,   752,   754,   755,   756,
     757,   758,   759,   760,   854,  1555,  1564,  1574,  1575,  1576,
    1578,  1579,  1582,   316,   457,   563,   566,  1612,  1612,   641,
    1656,   108,   199,   286,   390,   499,   519,   564,   569,   600,
     604,   612,   654,   708,   753,   754,  1102,  1103,  1426,  1670,
    1674,  1675,  1676,  1677,  1678,     8,    23,    29,    35,    37,
      38,    39,    41,    54,    55,    61,    62,    69,    72,    96,
      97,   102,   104,   107,   108,   113,   114,   115,   120,   122,
     125,   171,   178,   179,   188,   195,   205,   207,   213,   219,
     226,   230,   241,   245,   271,   279,   290,   319,   324,   335,
     339,   341,   345,   346,   347,   348,   349,   356,   366,   367,
     368,   372,   373,   397,   409,   410,   412,   427,   455,   456,
     475,   477,   484,   485,   491,   544,   545,   552,   556,   557,
     562,   572,   576,   577,   578,   579,   588,   589,   590,   594,
     597,   612,   616,   617,   618,   620,   625,   627,   632,   633,
     650,   665,   666,   671,   677,   678,   680,   683,   684,   685,
     686,   687,   691,   693,   695,   746,   767,   768,   769,   773,
     775,   779,   783,   784,  1075,  1241,  1259,  1260,  1263,  1264,
    1265,  1267,  1271,  1274,  1276,  1277,  1279,  1280,  1281,  1288,
    1289,  1290,  1311,  1312,  1536,  1538,  1541,  1542,  1543,  1544,
    1545,  1547,  1550,  1552,  1555,  1564,  1665,  1667,   108,   167,
     200,   235,   286,   420,   499,   519,   564,   587,   600,   612,
     628,   654,   708,   754,  1426,  1564,  1221,   103,   536,   891,
      13,    14,    99,   130,   144,   167,   170,   183,   210,   235,
     241,   274,   285,   421,   425,   441,   449,   457,   493,   506,
     507,   558,   587,   609,   611,  1555,  1558,  1565,  1569,  1576,
    1579,  1580,  1582,  1632,  1633,  1553,  1564,   803,   566,   128,
     220,   293,  1432,   407,   659,    87,   428,  1513,   111,   235,
     647,  1516,   243,   563,  1610,  1612,  1221,  1564,  1509,   487,
     612,  1612,  1221,   128,   293,  1433,  1456,   653,  1500,   522,
     879,   883,   884,  1564,    13,   425,  1632,  1656,  1564,    13,
     140,   220,   527,   528,   530,   531,   532,   549,  1250,  1251,
    1252,  1668,    61,    62,   125,   209,   282,   352,   404,   498,
     585,   653,   654,   672,   708,   779,  1077,  1555,  1567,  1575,
    1576,  1578,  1579,  1581,  1584,  1594,  1599,  1600,  1468,   883,
     204,   511,   585,   204,   511,  1553,  1564,   566,  1462,   407,
     659,   243,  1612,  1617,  1564,   484,  1442,  1446,   660,  1374,
    1375,  1564,    32,    79,   154,   415,   437,   478,   539,  1702,
    1267,  1564,  1555,   401,   995,   775,  1666,  1667,   243,   282,
    1238,  1239,  1241,  1373,     0,   156,   789,   415,   104,   274,
     612,  1153,  1558,  1564,  1568,  1570,  1571,  1644,  1646,   126,
     404,   612,  1182,  1183,  1184,  1185,  1186,  1187,   608,  1190,
    1204,   194,   246,   285,  1253,  1254,  1404,   388,   603,  1386,
    1387,   276,   603,  1387,  1392,  1240,  1241,   130,   609,    17,
     195,  1487,  1488,  1553,   160,  1157,  1564,   160,   854,   137,
     152,   449,   480,  1621,   212,   854,  1568,  1564,  1553,   564,
     230,  1425,   212,   167,  1135,  1673,  1612,  1656,  1228,  1229,
    1553,   775,   861,   781,   583,   185,  1423,  1553,  1423,    19,
    1657,   230,  1024,   235,   212,   456,  1568,   235,   717,  1564,
     564,   263,   753,  1024,  1024,   212,   263,   604,  1024,   235,
     566,  1669,  1669,  1673,  1678,   775,   775,   775,  1274,   775,
     775,   775,  1263,  1324,   775,   775,   775,   775,   775,   775,
     775,   775,  1262,  1262,   775,  1062,   775,   775,   775,   572,
     775,   775,   775,  1666,   775,   775,   775,   775,   775,   775,
     775,   775,   775,  1263,   775,   775,   775,  1322,  1323,  1550,
    1564,   775,   775,   775,   775,   775,   775,   775,   775,   775,
    1263,  1062,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,  1062,   572,
     775,   775,   775,   572,   775,   775,   775,    37,   219,   572,
     775,  1262,  1062,  1062,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,  1274,  1274,  1274,   620,  1239,
    1241,  1263,   779,  1313,  1568,  1564,   780,    18,    19,    21,
     387,   390,   572,   648,  1261,  1268,  1269,  1563,  1564,   160,
     161,   201,   214,   254,   267,   294,   359,  1272,    33,   141,
     249,   275,   345,   366,   367,   442,   504,   505,   517,   722,
     765,   766,   767,   768,   769,   770,   771,   772,  1270,  1274,
      71,   389,   572,  1559,   259,   652,   775,   781,  1425,  1425,
    1425,  1564,   212,  1425,  1425,   717,  1564,  1425,   564,  1425,
    1425,  1425,   212,  1425,  1612,   798,  1491,   135,   419,  1631,
     481,   481,   564,   569,   612,   628,   654,   654,   385,   775,
    1647,   563,   378,  1647,    67,   511,  1647,   109,   628,  1647,
     779,  1647,   378,   583,   780,   381,    68,   433,   781,  1568,
     197,   231,  1176,  1564,  1558,  1708,  1263,   246,    85,   293,
    1518,   194,   194,  1611,  1612,   197,    35,   316,   751,  1473,
    1510,  1564,  1224,  1571,  1223,  1612,   246,  1434,  1425,  1502,
     316,   511,   751,  1501,  1503,   621,   880,   501,   885,  1631,
     378,   197,   378,   583,  1657,  1259,  1252,   501,   654,   781,
      35,   125,   160,   502,  1078,  1443,  1568,   194,   583,  1443,
     255,   433,  1601,  1602,  1604,  1606,    13,   125,   365,  1569,
    1572,  1640,   212,   779,  1568,    35,   125,  1080,  1081,  1568,
     781,   125,   585,  1590,  1598,  1600,   780,  1591,  1443,    36,
      61,    72,    97,    99,   109,   158,   163,   166,   176,   198,
     200,   209,   211,   282,   316,   381,   408,   419,   420,   423,
     424,   444,   498,   511,   547,   566,   631,   752,   755,   756,
     757,   758,   760,  1077,  1469,  1473,  1474,  1476,  1477,  1478,
    1595,   885,   447,   534,  1201,  1202,  1203,   433,   637,  1193,
    1194,  1195,  1201,  1553,  1564,  1708,   775,   780,  1374,   780,
     775,  1376,    37,   219,  1537,  1559,  1701,  1701,  1701,    96,
    1700,  1701,  1701,   156,   781,   775,    48,   156,   156,   197,
     111,   776,   776,  1253,   776,   778,  1564,  1262,   775,   138,
     228,   779,   125,   138,   228,  1642,   465,   780,  1649,   160,
     160,   160,   780,   300,   301,   445,   446,   524,   525,   526,
     827,  1205,   612,  1196,  1197,   503,   609,  1255,   146,   392,
     779,  1402,  1403,  1405,  1568,   249,  1254,  1404,  1253,    48,
      13,   140,  1664,  1391,  1392,   290,   373,   594,  1393,  1394,
    1538,  1564,  1664,  1391,  1386,  1387,  1392,   231,   293,   429,
    1459,  1460,  1456,   195,  1487,   160,   194,  1237,  1430,  1431,
    1452,  1457,  1485,  1489,  1537,  1564,   333,   570,   596,  1128,
    1571,  1132,  1564,  1564,   747,  1568,  1564,  1130,   384,     7,
      26,    84,   144,   237,   323,   370,   451,   630,   749,   759,
     962,   963,   976,   977,   978,   984,   986,   987,   988,   989,
    1474,     7,    12,    14,    17,    27,    28,    58,    63,    64,
      69,    77,    83,    84,    87,    96,   111,   125,   129,   137,
     138,   144,   152,   158,   169,   192,   233,   235,   242,   262,
     285,   322,   340,   344,   382,   388,   395,   404,   436,   451,
     452,   453,   483,   539,   540,   541,   542,   547,   564,   567,
     590,   603,   637,   640,   725,   726,   727,   749,   750,   759,
    1025,  1028,  1030,  1031,  1084,  1158,  1159,  1161,  1162,  1164,
    1166,  1167,  1168,  1169,  1171,  1173,  1564,   171,  1564,   854,
     533,  1679,  1680,  1134,  1423,   249,   780,   235,   263,   401,
    1099,  1234,  1235,  1263,  1320,  1321,  1564,   805,   806,   176,
     429,   780,  1207,    59,   176,   180,   194,   331,   429,  1217,
    1218,  1219,    57,   369,   369,   448,  1658,  1270,  1564,  1564,
    1564,   519,   193,  1564,   709,     7,   956,  1564,   263,  1571,
    1643,  1645,  1640,  1564,   263,  1564,  1564,  1024,    11,   167,
     200,   420,   587,   841,  1672,  1680,  1686,  1688,  1689,  1694,
     200,   841,  1671,  1680,  1686,  1689,  1694,  1669,  1263,  1263,
      13,   140,  1318,  1369,  1318,  1318,  1318,   634,  1326,  1263,
    1263,  1321,  1321,  1263,  1263,   140,  1318,  1369,   776,   373,
     776,   776,  1263,  1263,  1263,  1263,  1550,   116,   117,   118,
     119,   120,   223,   224,   225,   226,   335,   337,   338,   339,
     346,   427,   490,   491,   632,   649,   650,  1364,  1365,  1263,
    1320,   112,   115,   576,   579,  1366,   140,  1314,  1263,  1263,
    1263,  1263,  1364,  1263,  1321,  1323,    10,   780,   781,   140,
    1318,  1263,  1263,   140,  1318,  1263,  1263,  1321,  1321,  1321,
    1263,  1321,  1267,  1263,  1263,  1263,  1263,  1263,  1263,   776,
    1263,  1318,  1318,  1263,  1263,   140,  1318,  1263,  1365,  1365,
    1263,    46,   268,   584,  1263,  1263,   776,  1551,  1552,  1564,
    1318,  1318,  1263,  1263,  1263,  1318,  1318,  1321,   776,   776,
    1263,  1263,  1263,  1263,  1263,  1274,   776,   776,   776,  1274,
    1253,   776,   780,   209,   282,   498,  1596,   502,  1263,  1260,
    1563,  1564,  1263,  1263,  1263,   179,   372,   589,   605,  1270,
      13,    20,  1265,  1273,  1267,  1267,   775,  1666,  1274,  1267,
    1267,  1267,  1267,   275,   667,  1266,  1267,  1267,   245,  1267,
     245,  1267,  1267,  1267,  1267,  1267,    33,   249,   275,   442,
    1568,  1274,  1559,  1559,  1263,  1285,  1286,  1287,   769,  1564,
    1564,   854,  1564,   378,  1564,   854,  1568,   709,   984,   986,
    1427,  1428,  1429,   854,  1564,  1571,  1639,  1423,  1640,  1564,
    1564,  1425,   615,   799,    35,   158,   162,   202,   222,   287,
     383,   419,   443,   468,   512,   543,   751,   752,   755,   756,
     757,   758,  1492,  1496,  1497,  1612,    86,   779,   892,   893,
     894,   895,  1564,  1629,   563,  1564,  1648,  1571,  1568,   200,
     420,   566,  1630,  1639,  1633,    21,  1367,  1368,   186,   363,
    1564,  1623,  1564,  1708,  1434,   516,   780,    50,   282,  1517,
      30,    30,  1553,  1613,  1614,  1423,   779,   796,  1558,    31,
     287,   780,   583,  1225,  1226,  1553,  1423,  1553,  1564,  1505,
    1504,   780,  1559,    56,    66,    76,    90,    91,    92,   106,
     334,   351,   489,   551,   568,   886,   888,   780,  1627,  1571,
    1639,  1630,   487,  1659,  1658,   197,  1244,  1245,  1404,    13,
     365,  1640,  1564,    71,  1083,  1263,  1571,   733,   572,  1561,
     273,   380,   643,   780,  1605,   780,  1603,   658,  1586,   779,
     780,  1564,   209,   282,   498,   653,   672,  1597,  1443,  1564,
    1601,  1591,  1443,  1592,  1593,  1594,  1599,    13,    35,   125,
     192,   378,   484,   709,  1263,  1608,   166,   275,   635,  1371,
    1482,   775,   108,   167,   200,   420,   566,   587,   612,   628,
    1482,    13,  1568,  1391,   197,   249,  1475,  1479,   198,    70,
     543,   194,   543,   563,    70,   543,    13,    43,    94,    98,
     253,   332,   396,   518,   560,  1463,  1464,  1465,   166,   222,
     543,   543,  1391,  1482,  1482,  1482,  1482,  1482,   211,  1482,
     287,   157,   422,   586,   234,   235,   261,  1101,    73,   563,
     543,   624,   780,   380,   643,    88,   780,   194,   828,   125,
    1263,  1447,  1448,  1449,  1446,  1375,  1377,  1564,    21,   780,
     379,  1704,   559,  1705,   646,   258,   471,  1703,  1564,  1263,
     277,   280,   430,   996,   997,  1571,   136,   776,   156,   790,
     776,   729,    48,  1568,   654,   729,    48,   637,    65,   256,
     365,   535,   553,   644,  1636,  1637,  1571,  1644,   637,  1150,
    1556,  1558,  1556,  1556,  1184,   160,   160,   160,   160,   160,
     160,   780,   160,  1191,   404,  1198,   667,   668,   670,  1256,
    1257,  1258,   572,  1560,  1560,  1568,   780,   503,  1263,  1388,
    1548,  1241,  1242,   377,   780,  1241,  1242,  1391,  1391,   197,
    1424,  1554,  1564,  1459,  1176,  1568,    87,  1022,  1023,  1030,
    1031,  1032,  1084,   855,  1564,  1564,   194,   369,   316,   709,
       7,   855,   775,   110,   973,  1443,  1444,  1444,   973,  1444,
    1444,   583,  1444,  1444,   780,  1027,   158,    74,    89,   199,
     401,   519,  1040,  1042,  1099,  1175,  1444,    64,    89,   235,
    1175,   401,  1444,  1444,  1175,  1444,   401,   401,  1444,  1444,
    1444,  1444,   583,   136,  1444,   261,   401,   564,    64,    89,
     193,   401,   418,  1099,  1175,   261,  1444,   401,   401,   564,
     136,  1444,  1444,  1444,  1444,  1444,  1175,   401,    48,  1444,
    1444,   401,    21,    74,   160,   583,  1099,  1179,   401,   401,
    1444,   585,  1444,  1444,  1444,   139,   332,  1444,  1444,   401,
    1444,   619,   619,  1444,  1444,  1444,  1444,  1028,    71,  1077,
     450,   995,  1160,   780,   780,   501,   710,  1714,  1137,   492,
     628,  1680,   144,   609,  1214,   125,  1230,  1564,  1229,  1553,
     775,   775,  1235,   776,   780,   232,   295,   296,   297,   298,
     299,   302,   303,   304,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   317,   318,   711,   712,   732,   734,
     735,   736,   737,   738,   741,   820,   821,   827,   458,   459,
     460,   461,   462,   463,   464,   807,   808,  1553,   610,  1218,
      57,   448,   171,   833,   378,     7,   717,   111,   378,  1024,
     973,   614,   957,     7,   228,   125,   780,   836,   592,   775,
     592,   615,  1115,  1116,  1553,   200,  1024,   854,  1564,   854,
     854,  1680,   780,   776,  1318,   776,  1263,   776,   776,   776,
    1263,   150,   634,  1325,    21,   776,   615,   776,   776,   776,
     615,   780,  1321,   776,   769,   776,   780,   780,   776,   776,
     776,   197,   780,   776,   780,  1321,   776,   780,   780,   780,
     768,   780,   776,   776,   775,  1550,  1564,  1318,   776,   776,
     776,  1318,   776,   780,   776,   776,   776,   776,   780,   776,
     249,   776,   780,   780,   776,   780,   780,   776,   776,   776,
     780,   197,   780,  1318,   776,   776,   780,   780,   780,   776,
     197,  1263,   197,  1263,   197,  1263,   197,   776,   780,   776,
     776,   776,   776,   780,    21,   776,   780,   776,   780,   776,
     776,   690,  1296,  1296,   776,   780,  1291,   776,  1291,   780,
     776,  1296,  1296,  1296,   780,  1321,   781,   781,   781,  1568,
    1263,   785,   179,   372,   589,   605,  1666,    19,  1263,   165,
    1267,   775,  1263,  1263,  1267,   775,  1666,  1274,  1267,  1261,
     776,   780,   775,   781,   781,  1553,  1427,  1425,  1027,   964,
     965,   966,   984,   780,    52,   470,  1177,   192,  1720,  1423,
     779,   800,   801,   287,   287,   287,   287,   287,   287,   780,
    1423,  1498,   115,   576,   579,   887,   897,  1312,  1543,  1550,
    1568,   780,   160,   378,   776,   780,   583,   769,  1564,  1573,
    1638,   637,  1634,  1564,   160,   186,   201,   214,   266,   267,
     294,   363,   417,  1624,  1625,  1370,  1371,  1553,  1558,  1558,
    1232,  1233,  1553,   236,  1368,   780,  1568,   122,   188,   219,
     290,   373,   594,  1399,  1400,  1401,    31,   583,  1511,  1571,
    1571,   780,   583,   176,   429,   613,  1209,  1210,  1211,   401,
    1335,  1336,   583,  1507,    13,  1506,  1503,   780,   160,   210,
     378,   197,  1638,  1564,   145,   700,   720,   761,   775,   784,
    1246,  1247,  1327,  1329,  1337,  1338,  1339,  1340,  1341,  1342,
    1343,  1553,  1666,  1370,  1244,   583,   583,   583,    35,  1082,
    1568,   583,  1443,   456,  1143,  1143,   433,   454,   496,  1607,
    1604,  1602,  1640,  1568,  1572,   194,   781,   781,   781,   781,
     781,  1600,  1263,  1608,   780,  1598,   249,  1480,  1559,  1263,
     769,  1024,   854,   854,   854,  1553,   854,  1571,  1553,   287,
     350,   543,  1472,  1472,  1482,  1564,   854,  1482,  1571,  1475,
     854,  1482,   252,   561,   181,   194,  1466,   780,  1480,   828,
    1475,   194,  1475,  1479,  1479,  1475,  1482,  1482,  1203,   514,
    1195,    60,   776,   780,   776,   780,  1666,  1537,   405,   194,
     781,   776,    73,   775,    73,   775,   402,   999,   216,   263,
     782,  1444,   404,   572,   733,    13,   365,  1640,   404,   572,
     733,  1561,  1568,   572,   572,   572,    19,  1635,   320,   321,
     325,   326,  1151,  1152,     5,   404,   739,   740,  1147,  1148,
    1149,  1556,   122,   188,   290,   373,   594,  1398,  1556,   122,
     188,   219,   290,   373,   594,  1396,  1558,  1558,   827,  1558,
     828,   160,   126,  1199,  1424,   669,  1257,  1077,  1079,  1403,
     342,    22,   131,  1389,  1390,   780,  1394,  1394,  1424,  1553,
    1564,   197,   780,   781,  1458,  1247,   219,   290,   373,   594,
    1397,  1400,  1023,    84,    77,    93,   265,   343,   369,   431,
     533,   857,   859,    60,   478,   263,   263,   598,   975,   108,
     221,   394,   404,   411,   515,   612,   839,   840,  1558,   961,
     962,   990,  1399,  1555,  1558,   961,   990,   990,  1564,  1558,
    1721,  1397,   963,  1444,  1123,  1564,  1099,  1100,  1221,  1100,
      64,   193,   418,  1041,  1098,  1103,  1114,  1123,  1564,   775,
    1564,   125,  1172,  1564,  1564,  1564,  1564,  1564,  1221,  1398,
    1396,  1564,  1396,    13,  1165,  1363,  1564,  1221,  1558,  1558,
    1558,  1558,  1077,  1444,  1396,  1165,  1564,  1564,   263,  1363,
     263,  1564,  1564,  1568,  1564,  1165,  1444,   186,   266,   369,
    1034,  1396,   125,  1174,  1564,  1398,  1398,  1564,  1221,  1384,
    1385,  1551,   125,  1029,  1396,  1558,  1221,  1564,  1564,  1553,
    1221,  1221,    80,    82,   125,   148,   187,   440,  1033,  1029,
    1029,   125,  1396,  1564,  1396,  1165,   775,   372,  1568,  1721,
    1721,  1397,  1444,  1444,   403,     7,   144,  1025,  1168,  1169,
    1162,  1166,  1169,   718,   719,   974,  1444,   707,  1718,   378,
     849,  1154,   127,   248,  1553,   673,   673,  1165,   418,  1359,
    1360,  1361,  1564,   249,  1263,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   780,   828,   160,   160,   160,
     160,   160,   160,   160,   780,   828,  1021,  1022,  1553,   975,
     709,   642,  1553,  1399,   286,    77,   177,   184,   364,   958,
     959,   960,   976,   977,   978,   979,   982,   983,   984,   985,
     986,   987,   988,   989,   973,    48,   637,   654,  1643,  1649,
    1444,   597,   838,  1312,  1536,    47,   216,   486,  1118,  1118,
     378,    21,   231,   275,   456,   775,   991,   992,   993,   994,
     995,  1026,  1028,  1239,  1241,  1439,  1520,  1564,   854,   775,
     473,  1695,     9,    31,   954,   245,  1263,   776,  1295,  1296,
    1295,  1295,  1295,   575,  1263,  1263,   154,    35,    62,   112,
     115,   123,   142,   189,   260,   354,   357,   435,   509,   579,
     607,  1051,  1055,  1319,  1078,  1078,  1319,   776,  1295,   776,
     245,   245,  1263,  1263,  1263,   388,  1316,  1263,  1263,  1263,
    1263,  1263,  1267,   776,  1295,   776,  1295,  1263,  1263,  1263,
    1263,  1263,  1263,  1321,  1295,  1295,   245,  1263,  1263,  1263,
     776,  1295,  1263,  1263,  1263,  1263,   197,  1263,   197,  1263,
     197,  1263,  1263,  1295,  1295,  1263,    35,    62,  1396,  1318,
    1295,   775,  1297,  1298,  1299,  1564,   231,   694,  1293,  1538,
    1544,   776,  1293,   776,  1274,  1296,  1536,   776,   781,  1124,
    1265,   776,   780,  1274,  1274,  1364,  1364,    19,  1263,   165,
    1287,  1320,   769,  1564,  1564,  1170,  1171,  1173,  1399,  1429,
    1027,  1571,  1177,  1568,   780,   828,  1497,  1493,   895,   898,
     899,   894,   374,   485,   896,  1630,  1564,  1639,   781,   781,
     583,   655,  1370,   775,  1391,  1335,   780,  1234,  1235,  1560,
     293,   433,   643,  1615,  1614,  1263,  1558,   583,  1226,  1553,
    1211,   775,   501,   620,   621,   775,  1435,  1436,  1438,  1439,
    1440,  1399,   828,   888,   887,   385,  1630,  1639,   197,   775,
    1666,   775,  1247,  1329,  1338,  1339,  1340,  1341,   731,   780,
     100,   238,   258,   271,   355,   477,   549,  1330,  1331,  1332,
    1335,  1368,   212,  1381,  1370,  1640,  1640,  1640,   733,  1561,
    1561,   728,  1641,  1641,    78,   595,   433,  1397,  1588,  1589,
    1443,  1593,  1558,   197,  1481,   776,  1564,   615,  1482,   428,
    1391,  1465,  1481,  1482,  1571,  1482,  1553,  1553,  1482,   197,
    1556,  1449,  1564,   780,   336,   156,   775,  1267,   775,  1267,
    1397,   555,  1000,   775,    12,   998,  1396,  1560,  1143,   404,
     456,   404,  1641,    21,    48,  1636,  1396,  1396,  1396,  1396,
    1152,   285,   606,   174,   465,   704,   705,   697,  1397,  1397,
      77,   748,  1146,  1149,  1558,   160,   406,  1200,  1078,    73,
    1521,  1548,   615,  1368,   781,  1247,  1554,   769,  1564,   501,
    1444,  1558,   533,   533,   533,   533,   533,   492,  1564,   378,
    1396,  1558,   970,   971,   972,   976,   984,   986,  1558,  1558,
    1558,  1558,  1396,  1558,  1558,   776,   780,  1568,  1123,   402,
     775,  1123,   775,   263,   263,   367,  1043,  1044,  1045,  1114,
    1100,   775,   615,   592,  1036,  1037,  1038,  1040,  1564,    34,
      35,    40,    42,    44,    45,    62,   112,   115,   123,   159,
     187,   189,   205,   206,   247,   260,   279,   288,   289,   291,
     328,   329,   330,   347,   348,   349,   354,   357,   375,   376,
     409,   410,   497,   501,   513,   573,   576,   579,   580,   581,
     582,   622,   623,   650,  1046,  1049,  1050,  1051,  1052,  1053,
    1054,  1055,  1057,  1045,  1045,   656,   657,  1117,   144,   501,
    1165,  1564,  1217,   780,  1397,   125,  1078,  1558,   564,  1564,
    1177,   637,   564,  1558,  1046,  1165,   780,  1389,  1165,   583,
     583,  1363,  1165,  1498,  1082,  1078,   964,   373,  1715,  1716,
    1444,   137,   152,  1719,    81,   488,   451,  1155,  1376,   378,
     378,   776,   776,   780,  1230,   775,  1396,  1556,  1396,  1396,
    1556,  1556,  1396,  1396,  1556,  1556,  1556,  1556,  1556,  1556,
    1556,  1556,  1396,  1396,  1556,  1544,  1556,  1396,  1556,  1558,
    1396,   372,   824,  1570,   372,   826,  1556,  1396,   378,   742,
     743,   825,   821,   775,   809,   809,   775,   814,   814,   775,
     817,   817,   775,   812,   808,   775,   439,   599,   967,   968,
     969,   976,   980,   981,   982,   983,   984,   986,  1399,  1568,
     775,   835,   212,  1444,  1444,  1444,  1444,  1027,   964,   733,
    1561,  1568,  1640,  1150,   612,   709,  1713,   776,  1553,  1439,
    1553,   275,  1036,   993,   992,  1027,  1253,   994,   473,   842,
    1690,   123,   247,   435,   550,  1035,   775,   130,   241,   609,
     955,  1263,   776,  1295,  1263,   575,   775,  1066,  1067,  1067,
     775,  1061,   775,  1059,  1060,  1066,   414,  1056,  1058,  1066,
      62,   247,  1061,   247,  1067,   721,  1275,   776,   776,   776,
    1295,  1295,  1263,  1263,   776,   776,   780,   776,    48,   495,
    1315,   780,   780,   776,   780,   776,   249,  1282,  1283,  1295,
    1295,   776,   776,   776,   776,   780,   776,   776,  1263,   776,
     194,   776,   776,   780,  1295,   776,   780,   780,   776,  1263,
     776,  1263,   776,  1263,   776,   776,   776,   775,  1089,  1089,
     780,   776,  1298,  1300,  1301,   688,   688,  1296,   780,  1292,
    1292,  1293,  1296,  1293,   776,   744,  1278,  1564,  1321,   776,
    1265,   776,   780,  1274,   776,  1173,  1171,   966,   801,   194,
     637,  1494,   160,   780,  1638,   637,  1651,   769,   769,  1564,
    1639,   385,  1391,  1448,   501,  1435,  1436,  1233,  1553,  1235,
     231,  1236,  1519,  1520,   643,   282,  1571,  1362,  1363,  1454,
    1455,  1551,   776,  1437,  1546,  1547,  1551,  1564,   775,  1441,
    1445,   160,   197,  1638,  1639,  1263,  1368,  1263,   780,   776,
     776,   776,   776,   776,  1327,  1328,  1329,  1337,  1327,   258,
     258,   391,  1334,   238,   271,   477,  1333,  1334,  1337,  1327,
    1327,  1368,  1376,    48,   217,  1372,  1381,  1143,  1143,   103,
    1027,  1608,  1398,  1470,   163,   631,  1639,   373,  1471,   615,
    1475,  1475,   498,  1396,  1002,  1564,   776,  1002,   776,    48,
     775,  1004,  1267,   160,   775,   228,  1641,  1143,  1561,   456,
    1641,   219,  1558,  1562,   733,  1561,   125,   245,   361,   103,
     125,  1397,   245,  1559,  1559,  1558,   160,   153,   164,   386,
     571,  1522,  1523,   278,  1524,  1247,  1335,  1564,  1370,   781,
    1458,  1454,  1558,   111,   111,   127,   248,   369,   162,  1027,
     840,   775,  1397,   401,  1005,  1006,   775,  1263,  1123,   730,
     775,   775,  1120,  1121,  1122,  1564,  1118,  1118,   776,   780,
    1046,  1066,  1066,  1067,    23,    35,    49,   601,   626,  1066,
    1077,  1085,  1086,  1087,  1061,   775,  1087,    62,   622,  1052,
    1087,  1087,    62,   623,   623,   626,   775,  1067,  1061,  1061,
    1087,  1066,  1067,   441,  1039,  1092,    27,    71,    75,    77,
     125,   367,   372,   378,   418,   497,   547,   604,   706,   749,
     750,   753,  1042,  1045,  1069,  1070,  1071,  1083,  1091,  1270,
      35,  1066,  1088,  1066,  1066,  1067,   775,  1060,  1068,  1059,
     125,   125,  1046,  1564,  1083,  1083,   566,     9,   186,  1178,
    1385,  1564,  1564,   246,  1209,   776,   767,  1027,   373,   767,
    1717,  1720,   367,   416,    25,   168,   843,   583,   137,   152,
     845,  1681,  1363,  1363,  1360,   822,   823,  1396,   776,   810,
     811,  1564,   776,   815,   816,  1564,  1573,   776,   818,   819,
    1556,  1557,   775,   776,   813,  1121,  1444,  1444,  1027,   835,
     384,  1121,   353,   714,   715,   716,  1564,  1558,   990,   990,
    1397,   960,   404,    21,    48,  1147,  1714,   775,  1553,   776,
    1028,  1035,   378,   862,   863,   864,  1564,   516,  1696,   378,
    1364,  1263,   122,   290,   373,   594,  1087,   373,   373,   776,
    1364,  1364,  1263,  1317,  1548,  1537,   776,  1263,  1263,  1321,
      44,   355,   776,   637,  1284,  1263,  1364,  1263,  1263,  1263,
    1263,   776,   776,   776,  1397,   776,   776,  1396,  1295,   776,
     401,  1302,  1263,  1296,  1296,   197,  1294,  1319,   125,   162,
     372,  1348,  1350,  1351,  1352,   776,  1321,  1495,   433,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   472,   489,
     551,   568,   900,   899,   583,   210,   637,  1650,   776,  1454,
      21,  1450,   378,  1451,  1236,   269,   246,   776,   780,  1443,
    1438,  1439,   776,   780,   781,  1447,   780,   887,  1639,   197,
     780,  1376,   776,  1327,   785,   258,  1334,  1334,   258,   258,
     378,   615,   378,   615,   192,   231,   614,  1354,  1355,  1356,
    1357,  1358,  1263,  1382,  1549,  1263,   698,  1378,  1372,  1641,
    1641,   404,  1397,  1391,  1391,  1639,  1370,  1482,  1263,   776,
     780,   776,   997,  1005,   776,  1397,  1001,  1002,    48,  1641,
    1641,  1561,  1641,   404,   456,  1641,  1397,   125,   723,   125,
    1397,  1558,    48,    48,   153,    48,  1523,   537,   571,  1525,
    1526,  1370,  1370,  1370,   478,   972,  1121,  1564,   776,   780,
    1121,   776,   775,  1121,  1263,   776,   780,   775,  1389,  1037,
    1039,    35,    23,   601,  1077,    35,  1087,  1078,  1125,  1537,
    1087,   626,  1125,  1087,   509,   607,   651,  1063,  1064,  1065,
    1553,  1178,  1082,    82,   125,   148,   187,  1073,  1558,   115,
     576,   579,   767,   768,   775,  1075,  1076,  1539,  1540,  1541,
    1542,   609,   125,   125,   139,   332,  1074,   263,  1399,  1444,
    1444,   263,  1041,    71,  1071,   203,  1047,   263,   372,   724,
    1088,  1087,  1088,  1063,   373,  1063,  1063,   775,  1540,  1178,
    1553,  1564,   775,   373,  1716,   373,   416,  1263,  1263,   378,
     849,   854,   378,    77,   850,    21,   637,  1213,   776,   780,
     776,   780,   776,   780,   781,   776,   780,   811,   776,   780,
     776,   990,   990,   969,   775,   776,  1556,  1556,  1556,  1556,
    1562,   733,  1561,  1146,  1718,  1121,   776,   991,   516,   488,
     776,   780,  1049,  1558,   239,   249,   393,   865,   866,   867,
     868,  1553,   776,   776,   776,   776,   776,   776,   780,   776,
     776,   776,   780,  1295,   776,   780,   776,   342,   265,   428,
     776,   776,   776,   776,   776,   776,  1090,   780,    48,   388,
    1303,   186,   266,  1293,  1539,   776,  1351,  1352,   378,   776,
     175,   285,  1639,   385,   210,    21,  1653,  1370,  1450,  1564,
    1451,   147,   566,  1455,  1449,  1438,  1439,  1546,  1564,   776,
    1445,  1639,  1536,  1368,   776,   258,   258,  1263,   775,  1263,
     775,  1099,  1099,  1355,   639,   780,  1383,  1298,  1379,  1380,
    1378,   828,  1564,   216,   263,   776,   776,  1558,  1641,  1641,
    1561,   120,   120,  1537,  1537,    48,  1537,    48,    48,  1526,
    1386,  1386,   378,   776,   620,  1007,  1006,   776,  1119,  1120,
     776,   776,    77,   262,   749,   750,  1110,  1111,  1112,  1113,
    1116,  1117,  1122,   373,  1078,  1088,   776,   780,   776,  1065,
     775,  1093,   637,  1072,  1544,  1544,  1263,  1075,   621,  1721,
    1721,  1082,    15,    21,  1263,  1163,  1164,  1005,  1364,   511,
    1558,   143,  1156,  1439,  1682,   373,   823,   811,   816,  1564,
     819,   780,   775,   637,  1104,  1105,  1106,  1113,   839,  1107,
    1108,  1109,  1113,   228,   404,  1719,   776,  1558,   843,  1691,
     864,  1083,   776,   780,  1564,   194,   373,  1548,  1263,   342,
     173,   776,  1396,  1382,    48,   430,   482,   682,  1304,  1310,
    1296,   378,   162,   699,  1650,   385,  1571,  1391,  1451,  1376,
     263,  1553,    73,  1344,  1362,  1362,   194,  1353,  1353,  1549,
      21,   780,   775,   998,   111,   465,  1711,  1712,  1641,  1537,
    1537,  1537,   276,  1395,  1395,   162,  1104,   249,   272,    77,
     111,   235,   322,   340,   364,   564,  1018,  1019,  1020,  1474,
    1107,   776,   780,  1110,  1389,  1558,  1444,  1444,  1444,  1112,
     776,  1087,  1537,  1087,  1094,  1564,   319,  1095,   754,   776,
     775,   776,   776,   844,   851,   852,   637,  1683,   674,   811,
     811,   398,  1170,  1106,   776,  1170,  1109,    48,  1110,   848,
     849,   473,  1697,   867,  1049,   149,   776,   776,   776,  1388,
      33,   103,   245,   697,  1305,  1306,  1307,  1538,  1544,  1653,
     637,  1652,   609,  1335,   775,   776,   776,   776,   212,   258,
     388,   775,   775,  1299,  1380,  1267,   775,   136,   369,   535,
    1394,   775,  1009,  1011,   574,  1444,   136,   136,  1444,  1444,
    1444,  1444,   775,  1015,  1020,   158,  1092,  1120,  1396,  1721,
    1721,  1389,   776,   780,   198,   400,   510,   378,  1096,  1564,
    1263,   538,   846,    54,    68,   182,   230,   257,   270,   381,
     474,   853,   904,   906,   907,   908,   910,   911,   912,   913,
     914,   915,   917,   925,   926,   929,   940,   943,   945,   946,
    1555,  1566,  1577,  1578,  1579,  1582,    53,    64,   282,   776,
     780,  1555,  1399,  1170,   845,  1049,   856,  1083,   484,   245,
     697,  1306,  1308,  1538,  1544,   484,  1263,   692,   679,  1309,
     692,   692,   654,  1454,  1079,   701,  1345,  1346,  1564,  1368,
      48,    48,  1359,  1361,   776,  1002,  1444,   535,   775,  1010,
    1011,  1012,   327,  1008,  1011,  1558,  1444,  1444,  1399,  1399,
    1397,  1564,   555,  1016,  1017,  1444,  1564,   130,   609,   776,
    1263,   155,   847,   927,   930,  1564,   197,   363,   918,   905,
    1566,  1566,  1564,   909,   792,   292,   455,   636,   949,    32,
     947,   782,    64,   385,    64,   811,   850,  1083,   134,   857,
     858,  1270,  1698,   191,   413,  1684,  1685,  1263,   681,    19,
     681,   681,  1364,   103,   212,   369,   696,    13,   125,   365,
    1640,   482,  1527,   703,   776,   780,   194,  1049,   776,   776,
     554,  1003,   776,  1560,   776,   780,   327,  1013,  1014,  1267,
    1558,  1558,  1568,   776,   780,  1568,    52,   369,   470,   501,
    1097,  1097,   548,   629,  1048,  1263,  1263,   634,   932,   936,
     197,  1564,   920,   921,  1263,   870,   903,   904,   906,   908,
     910,   912,   913,   914,   915,   917,   925,   940,   943,   945,
     870,   950,   948,   941,   944,   385,   385,   776,   143,  1692,
     134,   903,  1568,  1687,  1364,  1308,   692,   484,   689,  1586,
     228,  1521,  1536,  1346,   702,  1083,  1397,  1003,  1712,  1011,
     776,   780,  1018,  1017,     6,   125,   372,   378,   378,  1069,
     928,   937,   150,   936,   939,   246,   154,  1263,   154,   903,
     778,   608,  1263,   871,   949,   947,   851,   856,   903,   681,
      48,  1524,  1344,   171,  1347,  1014,   609,   130,   634,   931,
     933,  1263,   870,   154,   916,   230,   922,   292,   778,   952,
     951,   124,   869,   872,   942,  1566,   942,  1693,  1537,   231,
    1528,   703,  1097,  1097,   934,   933,   939,   938,    54,   919,
    1564,   575,  1263,   143,    95,   172,   875,   901,  1564,   154,
     903,   778,   903,   373,   775,  1530,  1536,  1263,   154,   575,
     780,   870,   953,   870,   215,   780,  1049,    86,   105,   778,
     278,   482,  1529,   776,   779,  1531,  1532,  1551,   501,  1533,
    1348,  1349,  1351,   935,    54,   870,  1564,   923,   154,   154,
     194,  1564,  1083,   194,   194,  1568,   776,   780,  1534,  1535,
    1551,  1350,  1352,   575,   150,   151,   924,   455,   636,   873,
     125,   902,   878,   879,  1396,   874,  1532,   780,  1443,   378,
     870,   870,   920,   521,   523,   876,   877,   878,   881,  1270,
    1564,  1263,  1237,  1535,  1449,   780,   903,   196,   877
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   786,   787,   787,   787,   787,   787,   788,   789,   788,
     788,   790,   790,   791,   791,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   792,   792,   792,   792,
     792,   792,   792,   792,   792,   792,   793,   794,   794,   795,
     796,   796,   798,   797,   799,   799,   800,   800,   801,   803,
     802,   805,   804,   806,   804,   807,   807,   808,   808,   808,
     808,   808,   808,   808,   809,   809,   810,   810,   811,   812,
     812,   813,   813,   814,   814,   815,   815,   816,   817,   817,
     818,   818,   819,   820,   820,   821,   821,   821,   821,   821,
     821,   821,   821,   821,   821,   821,   821,   821,   821,   821,
     821,   821,   821,   821,   821,   821,   821,   821,   821,   821,
     821,   821,   821,   821,   821,   821,   822,   822,   822,   823,
     824,   824,   825,   825,   825,   826,   826,   827,   827,   827,
     827,   828,   828,   829,   829,   829,   829,   830,   831,   833,
     832,   832,   832,   832,   832,   832,   832,   832,   834,   834,
     835,   835,   835,   835,   835,   836,   836,   837,   837,   837,
     838,   838,   839,   839,   840,   840,   840,   840,   840,   840,
     840,   842,   841,   844,   843,   843,   845,   845,   845,   845,
     846,   846,   847,   847,   848,   848,   849,   849,   850,   850,
     852,   851,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   854,   854,   855,   855,   856,
     856,   857,   857,   857,   857,   857,   857,   857,   858,   858,
     858,   859,   859,   860,   861,   861,   862,   862,   863,   863,
     864,   865,   865,   866,   866,   867,   868,   868,   868,   868,
     869,   869,   870,   870,   871,   871,   872,   872,   873,   872,
     874,   872,   875,   875,   876,   876,   877,   878,   878,   879,
     880,   880,   881,   881,   881,   881,   881,   882,   883,   883,
     884,   884,   885,   885,   886,   886,   887,   887,   887,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   889,   890,   891,   891,   891,   892,   892,   893,   893,
     894,   895,   895,   896,   896,   897,   898,   898,   899,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   901,   901,   902,   902,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   905,
     904,   907,   906,   909,   908,   911,   910,   912,   913,   914,
     916,   915,   917,   918,   918,   918,   919,   919,   921,   922,
     923,   920,   924,   924,   924,   925,   925,   927,   928,   926,
     930,   929,   931,   931,   932,   932,   934,   935,   933,   937,
     938,   936,   939,   939,   941,   940,   942,   942,   944,   943,
     946,   945,   948,   947,   949,   950,   951,   949,   952,   953,
     949,   954,   954,   955,   955,   955,   956,   956,   957,   957,
     958,   958,   959,   959,   960,   960,   960,   960,   960,   960,
     960,   960,   960,   960,   960,   960,   961,   961,   962,   962,
     963,   963,   963,   963,   963,   963,   963,   963,   964,   964,
     965,   965,   966,   967,   967,   968,   968,   969,   969,   969,
     969,   969,   969,   969,   970,   970,   971,   971,   972,   972,
     972,   973,   974,   974,   975,   976,   977,   978,   979,   980,
     981,   982,   983,   984,   985,   986,   986,   987,   988,   989,
     990,   990,   991,   991,   992,   992,   993,   993,   993,   994,
     994,   995,   996,   996,   996,   996,   996,   996,   997,   997,
     998,   998,   999,   999,  1000,  1000,  1000,  1001,  1001,  1002,
    1002,  1003,  1003,  1004,  1004,  1005,  1005,  1006,  1007,  1007,
    1007,  1008,  1008,  1009,  1009,  1010,  1010,  1012,  1011,  1013,
    1013,  1014,  1014,  1015,  1015,  1016,  1016,  1017,  1018,  1018,
    1019,  1019,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,
    1021,  1021,  1022,  1022,  1023,  1023,  1023,  1024,  1024,  1025,
    1025,  1026,  1026,  1027,  1027,  1028,  1028,  1028,  1028,  1028,
    1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,
    1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,
    1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,
    1029,  1029,  1030,  1031,  1032,  1033,  1033,  1033,  1033,  1033,
    1033,  1034,  1034,  1034,  1035,  1035,  1035,  1035,  1036,  1036,
    1037,  1037,  1038,  1039,  1039,  1040,  1040,  1040,  1040,  1040,
    1040,  1041,  1042,  1042,  1043,  1043,  1044,  1044,  1045,  1046,
    1046,  1047,  1047,  1048,  1048,  1048,  1049,  1049,  1049,  1049,
    1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,
    1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,
    1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1049,
    1049,  1049,  1049,  1050,  1050,  1050,  1050,  1050,  1050,  1050,
    1050,  1051,  1051,  1052,  1052,  1053,  1053,  1053,  1053,  1053,
    1054,  1054,  1054,  1054,  1054,  1055,  1055,  1056,  1056,  1057,
    1057,  1057,  1057,  1058,  1058,  1059,  1059,  1059,  1060,  1061,
    1061,  1062,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,
    1065,  1066,  1066,  1066,  1066,  1067,  1067,  1068,  1068,  1069,
    1069,  1070,  1070,  1071,  1071,  1071,  1071,  1071,  1071,  1071,
    1071,  1071,  1071,  1071,  1071,  1071,  1071,  1071,  1071,  1071,
    1071,  1071,  1071,  1071,  1071,  1071,  1072,  1072,  1073,  1073,
    1073,  1074,  1074,  1074,  1075,  1076,  1076,  1077,  1077,  1078,
    1078,  1079,  1079,  1080,  1080,  1081,  1081,  1082,  1082,  1083,
    1083,  1084,  1084,  1085,  1085,  1085,  1086,  1086,  1086,  1087,
    1087,  1087,  1087,  1087,  1087,  1087,  1088,  1088,  1090,  1089,
    1091,  1091,  1092,  1093,  1093,  1094,  1094,  1095,  1095,  1095,
    1095,  1096,  1096,  1096,  1096,  1096,  1097,  1097,  1097,  1097,
    1097,  1098,  1098,  1099,  1099,  1100,  1100,  1101,  1101,  1101,
    1102,  1102,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1104,  1104,  1105,  1105,  1106,  1106,  1107,  1107,  1108,  1108,
    1109,  1110,  1110,  1111,  1111,  1112,  1112,  1113,  1113,  1113,
    1113,  1113,  1114,  1114,  1114,  1115,  1115,  1116,  1116,  1117,
    1117,  1118,  1118,  1118,  1119,  1119,  1120,  1120,  1121,  1121,
    1122,  1122,  1123,  1123,  1124,  1124,  1125,  1125,  1126,  1126,
    1128,  1127,  1130,  1129,  1132,  1131,  1134,  1133,  1135,  1133,
    1137,  1136,  1138,  1139,  1139,  1139,  1139,  1140,  1141,  1142,
    1142,  1142,  1142,  1142,  1142,  1142,  1143,  1143,  1144,  1145,
    1146,  1146,  1146,  1147,  1147,  1148,  1148,  1149,  1149,  1149,
    1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,
    1149,  1149,  1149,  1150,  1150,  1151,  1151,  1152,  1152,  1152,
    1152,  1153,  1154,  1154,  1154,  1154,  1155,  1155,  1156,  1156,
    1157,  1157,  1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,
    1161,  1161,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,
    1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,
    1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,
    1166,  1166,  1166,  1167,  1167,  1168,  1168,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1168,  1169,  1169,  1169,  1170,  1170,  1170,  1170,  1170,  1171,
    1172,  1172,  1173,  1174,  1174,  1175,  1175,  1176,  1176,  1177,
    1177,  1177,  1178,  1178,  1178,  1179,  1179,  1179,  1179,  1180,
    1180,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1184,  1185,
    1186,  1187,  1188,  1188,  1189,  1191,  1190,  1192,  1193,  1193,
    1194,  1194,  1195,  1195,  1195,  1195,  1196,  1197,  1197,  1198,
    1198,  1199,  1199,  1200,  1200,  1201,  1201,  1202,  1202,  1203,
    1203,  1204,  1204,  1205,  1205,  1205,  1205,  1205,  1206,  1207,
    1207,  1207,  1208,  1209,  1209,  1210,  1210,  1211,  1211,  1211,
    1212,  1213,  1213,  1214,  1214,  1214,  1215,  1216,  1217,  1217,
    1218,  1218,  1219,  1219,  1219,  1219,  1219,  1219,  1220,  1221,
    1221,  1221,  1223,  1222,  1222,  1224,  1224,  1225,  1225,  1226,
    1227,  1227,  1228,  1228,  1229,  1230,  1230,  1231,  1231,  1232,
    1232,  1233,  1234,  1235,  1235,  1236,  1236,  1237,  1237,  1237,
    1237,  1238,  1238,  1238,  1238,  1239,  1239,  1239,  1239,  1239,
    1239,  1239,  1240,  1240,  1240,  1240,  1240,  1241,  1241,  1241,
    1242,  1242,  1242,  1243,  1243,  1244,  1244,  1245,  1246,  1246,
    1247,  1247,  1248,  1249,  1250,  1250,  1251,  1251,  1252,  1252,
    1253,  1253,  1254,  1254,  1254,  1255,  1255,  1256,  1257,  1257,
    1258,  1258,  1259,  1259,  1259,  1260,  1260,  1261,  1261,  1261,
    1261,  1261,  1262,  1262,  1263,  1263,  1263,  1263,  1263,  1263,
    1263,  1263,  1263,  1263,  1263,  1264,  1264,  1264,  1264,  1264,
    1265,  1265,  1265,  1265,  1265,  1265,  1265,  1265,  1265,  1265,
    1265,  1265,  1265,  1265,  1265,  1265,  1265,  1266,  1266,  1267,
    1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,
    1267,  1267,  1267,  1267,  1268,  1268,  1269,  1269,  1270,  1270,
    1271,  1271,  1272,  1272,  1272,  1272,  1272,  1272,  1272,  1273,
    1273,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1275,  1275,  1276,  1276,  1276,  1276,
    1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,
    1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,
    1276,  1276,  1276,  1276,  1277,  1277,  1277,  1277,  1277,  1277,
    1277,  1277,  1277,  1277,  1277,  1277,  1277,  1277,  1277,  1277,
    1277,  1277,  1277,  1277,  1277,  1277,  1278,  1278,  1279,  1279,
    1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,
    1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,  1279,
    1279,  1280,  1280,  1280,  1280,  1280,  1280,  1280,  1281,  1281,
    1282,  1282,  1283,  1283,  1284,  1284,  1285,  1285,  1286,  1286,
    1287,  1288,  1288,  1289,  1289,  1289,  1289,  1289,  1289,  1289,
    1289,  1289,  1289,  1289,  1289,  1289,  1289,  1289,  1289,  1289,
    1289,  1289,  1289,  1289,  1290,  1290,  1290,  1290,  1290,  1290,
    1290,  1290,  1290,  1290,  1290,  1291,  1291,  1291,  1292,  1292,
    1293,  1293,  1293,  1294,  1294,  1294,  1295,  1295,  1296,  1297,
    1297,  1298,  1299,  1300,  1301,  1301,  1302,  1302,  1303,  1303,
    1304,  1304,  1305,  1305,  1306,  1306,  1306,  1306,  1306,  1307,
    1308,  1308,  1308,  1308,  1308,  1309,  1309,  1309,  1309,  1309,
    1310,  1310,  1310,  1311,  1312,  1313,  1313,  1313,  1314,  1314,
    1315,  1315,  1316,  1316,  1317,  1317,  1318,  1319,  1319,  1319,
    1319,  1319,  1319,  1319,  1319,  1319,  1319,  1319,  1319,  1319,
    1319,  1320,  1320,  1321,  1321,  1322,  1322,  1323,  1323,  1324,
    1324,  1325,  1325,  1326,  1326,  1327,  1327,  1327,  1328,  1328,
    1329,  1329,  1329,  1329,  1329,  1329,  1330,  1330,  1330,  1331,
    1331,  1331,  1331,  1332,  1332,  1333,  1333,  1334,  1334,  1335,
    1335,  1336,  1337,  1337,  1337,  1337,  1337,  1337,  1338,  1338,
    1339,  1339,  1340,  1341,  1341,  1342,  1342,  1343,  1343,  1344,
    1345,  1345,  1346,  1346,  1346,  1347,  1347,  1348,  1348,  1348,
    1348,  1349,  1349,  1350,  1351,  1352,  1352,  1352,  1353,  1353,
    1353,  1353,  1354,  1354,  1355,  1355,  1356,  1356,  1357,  1357,
    1358,  1359,  1359,  1360,  1360,  1361,  1361,  1362,  1363,  1363,
    1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,
    1364,  1364,  1365,  1365,  1365,  1365,  1365,  1365,  1365,  1365,
    1365,  1366,  1366,  1366,  1366,  1367,  1367,  1368,  1368,  1369,
    1369,  1370,  1370,  1371,  1372,  1372,  1373,  1373,  1374,  1374,
    1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,  1379,  1380,
    1381,  1381,  1382,  1382,  1383,  1383,  1384,  1384,  1385,  1386,
    1386,  1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1391,
    1392,  1393,  1393,  1393,  1394,  1394,  1394,  1394,  1394,  1395,
    1395,  1396,  1396,  1396,  1396,  1396,  1396,  1397,  1397,  1397,
    1397,  1397,  1398,  1398,  1398,  1398,  1398,  1399,  1399,  1399,
    1399,  1399,  1400,  1401,  1401,  1402,  1402,  1403,  1403,  1404,
    1405,  1405,  1405,  1406,  1407,  1408,  1409,  1410,  1410,  1411,
    1412,  1413,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1420,
    1421,  1422,  1423,  1423,  1424,  1424,  1425,  1425,  1426,  1426,
    1427,  1427,  1428,  1428,  1429,  1429,  1430,  1430,  1430,  1431,
    1431,  1431,  1432,  1432,  1432,  1432,  1433,  1433,  1434,  1434,
    1435,  1435,  1435,  1436,  1436,  1436,  1437,  1437,  1438,  1439,
    1439,  1439,  1440,  1440,  1441,  1441,  1442,  1442,  1443,  1443,
    1444,  1444,  1445,  1446,  1447,  1447,  1448,  1448,  1449,  1449,
    1450,  1450,  1451,  1451,  1452,  1453,  1453,  1454,  1454,  1455,
    1456,  1456,  1457,  1457,  1457,  1458,  1458,  1459,  1459,  1460,
    1460,  1460,  1461,  1462,  1462,  1463,  1463,  1464,  1464,  1465,
    1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1466,  1466,
    1468,  1467,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1470,  1469,  1471,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1472,  1472,  1472,
    1473,  1473,  1474,  1474,  1475,  1475,  1476,  1476,  1477,  1477,
    1478,  1478,  1478,  1478,  1479,  1479,  1480,  1480,  1481,  1481,
    1482,  1482,  1482,  1483,  1484,  1485,  1485,  1485,  1485,  1485,
    1485,  1486,  1486,  1487,  1487,  1488,  1488,  1489,  1489,  1489,
    1491,  1490,  1493,  1492,  1492,  1494,  1494,  1495,  1494,  1496,
    1496,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,
    1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1498,
    1498,  1500,  1499,  1499,  1501,  1501,  1502,  1502,  1504,  1503,
    1505,  1503,  1503,  1506,  1506,  1507,  1507,  1509,  1508,  1510,
    1510,  1511,  1511,  1512,  1513,  1513,  1513,  1514,  1515,  1516,
    1516,  1517,  1517,  1518,  1518,  1518,  1519,  1519,  1520,  1520,
    1521,  1521,  1522,  1522,  1523,  1523,  1523,  1523,  1524,  1524,
    1525,  1525,  1526,  1526,  1527,  1527,  1528,  1528,  1529,  1529,
    1530,  1530,  1530,  1531,  1531,  1532,  1532,  1533,  1533,  1534,
    1534,  1535,  1536,  1536,  1536,  1536,  1537,  1537,  1537,  1538,
    1539,  1539,  1539,  1540,  1540,  1541,  1542,  1542,  1542,  1542,
    1542,  1542,  1542,  1542,  1542,  1543,  1543,  1544,  1544,  1544,
    1544,  1544,  1545,  1545,  1545,  1546,  1546,  1547,  1547,  1548,
    1549,  1550,  1550,  1551,  1551,  1552,  1552,  1553,  1553,  1554,
    1554,  1555,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1562,  1563,  1564,  1564,  1565,  1565,  1566,  1566,  1567,  1567,
    1568,  1568,  1568,  1569,  1569,  1569,  1570,  1570,  1571,  1571,
    1572,  1572,  1573,  1574,  1574,  1574,  1574,  1574,  1575,  1575,
    1575,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,
    1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,
    1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,
    1576,  1576,  1576,  1576,  1576,  1576,  1576,  1577,  1577,  1577,
    1578,  1578,  1578,  1578,  1578,  1578,  1578,  1578,  1578,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,
    1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1579,  1580,
    1580,  1580,  1581,  1581,  1581,  1581,  1582,  1582,  1582,  1582,
    1582,  1583,  1584,  1584,  1584,  1584,  1584,  1584,  1584,  1585,
    1585,  1585,  1585,  1585,  1585,  1585,  1586,  1586,  1587,  1587,
    1588,  1588,  1589,  1590,  1590,  1591,  1591,  1592,  1592,  1593,
    1593,  1594,  1594,  1594,  1594,  1594,  1595,  1595,  1595,  1595,
    1596,  1596,  1596,  1596,  1597,  1597,  1597,  1597,  1597,  1597,
    1598,  1599,  1599,  1599,  1599,  1599,  1599,  1599,  1600,  1600,
    1600,  1601,  1601,  1602,  1603,  1603,  1604,  1605,  1605,  1606,
    1606,  1607,  1607,  1607,  1607,  1608,  1608,  1608,  1608,  1608,
    1608,  1608,  1608,  1609,  1610,  1611,  1610,  1610,  1612,  1612,
    1613,  1613,  1614,  1615,  1615,  1615,  1615,  1616,  1617,  1617,
    1618,  1619,  1620,  1621,  1621,  1621,  1621,  1621,  1621,  1621,
    1621,  1621,  1622,  1622,  1622,  1622,  1622,  1623,  1623,  1624,
    1624,  1624,  1624,  1625,  1625,  1625,  1625,  1625,  1626,  1626,
    1627,  1626,  1626,  1626,  1628,  1628,  1629,  1628,  1628,  1630,
    1630,  1630,  1630,  1631,  1631,  1632,  1632,  1633,  1633,  1633,
    1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,
    1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,
    1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,
    1633,  1634,  1634,  1635,  1635,  1636,  1636,  1637,  1637,  1637,
    1638,  1638,  1638,  1638,  1638,  1639,  1639,  1640,  1640,  1641,
    1641,  1642,  1642,  1643,  1643,  1643,  1643,  1643,  1643,  1643,
    1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,
    1645,  1645,  1646,  1646,  1647,  1647,  1648,  1648,  1649,  1649,
    1649,  1649,  1649,  1650,  1650,  1651,  1651,  1652,  1652,  1652,
    1652,  1652,  1653,  1653,  1655,  1654,  1656,  1656,  1657,  1657,
    1657,  1658,  1658,  1658,  1659,  1659,  1660,  1661,  1661,  1662,
    1663,  1664,  1664,  1664,  1665,  1666,  1667,  1668,  1668,  1668,
    1668,  1668,  1668,  1668,  1668,  1669,  1670,  1670,  1670,  1671,
    1671,  1671,  1671,  1671,  1672,  1672,  1672,  1672,  1672,  1672,
    1673,  1673,  1674,  1675,  1676,  1676,  1676,  1677,  1678,  1678,
    1678,  1679,  1679,  1679,  1681,  1680,  1682,  1683,  1683,  1683,
    1683,  1684,  1684,  1685,  1685,  1687,  1686,  1688,  1688,  1690,
    1691,  1692,  1693,  1689,  1695,  1696,  1697,  1698,  1694,  1699,
    1699,  1699,  1699,  1699,  1699,  1700,  1700,  1701,  1701,  1701,
    1702,  1702,  1703,  1703,  1703,  1704,  1704,  1705,  1705,  1705,
    1706,  1706,  1707,  1707,  1708,  1708,  1709,  1710,  1710,  1711,
    1711,  1712,  1712,  1712,  1713,  1713,  1714,  1714,  1715,  1715,
    1716,  1716,  1717,  1717,  1718,  1718,  1719,  1719,  1719,  1720,
    1720,  1721
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     3,     9,     6,     7,     9,     4,    10,     0,
       6,     2,     9,     7,     6,     7,    11,     7,     8,     7,
       0,     3,     3,     6,     3,     0,     3,    12,    11,    11,
       1,     1,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     0,    12,     0,     6,     2,     0,     1,     3,     1,
       0,     2,     0,     2,     0,     1,     3,     4,     0,     2,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     3,     0,     3,     0,     1,     3,     1,
       3,     0,     1,     3,     1,     4,     0,     1,     1,     1,
       0,     3,     2,     3,     0,     3,     5,     5,     0,     7,
       0,     6,     1,     1,     1,     3,     1,     1,     1,     3,
       0,     1,     1,     1,     1,     2,     1,     3,     1,     1,
       0,     1,     0,     2,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     4,     0,     1,     1,     1,     3,     1,     3,
       3,     1,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     0,     3,     0,     2,     2,     2,     2,
       0,     6,     2,     0,     2,     1,     1,     3,     0,     0,
       0,     7,     0,     2,     2,     1,     1,     0,     0,     8,
       0,     6,     1,     2,     1,     2,     0,     0,     6,     0,
       0,     6,     0,     2,     0,     5,     0,     1,     0,     5,
       0,     2,     0,     5,     4,     0,     0,     8,     0,     0,
       8,     1,     1,     1,     1,     1,     0,     2,     0,     4,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     1,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     1,
       1,     2,     1,     1,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     3,     1,     1,     3,     3,     3,
       1,     1,     2,     1,     2,     1,     0,     2,     1,     2,
       1,     6,     6,     5,     4,     5,     4,     5,     0,     1,
       0,     3,     0,     2,     0,     8,     9,     0,     1,     1,
       3,     0,     2,     0,     3,     1,     3,     5,     0,     4,
       3,     1,     1,     1,     3,     1,     3,     0,     4,     1,
       3,     1,     1,     0,     3,     1,     3,     3,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     4,     4,     3,
       0,     1,     1,     2,     1,     1,     1,     0,     3,     1,
       2,     1,     3,     0,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     1,     1,     3,
       4,     4,     3,     2,     2,     3,     3,     2,     3,     3,
       1,     1,     4,     4,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     0,     1,     6,     7,     7,     7,     8,
       3,     4,     0,     2,     0,     1,     0,     1,     2,     2,
       9,     0,     2,     0,     1,     1,     3,     3,     3,     1,
       2,     1,     1,     3,     2,     3,     2,     2,     1,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     1,
       1,     1,     2,     3,     2,     3,     2,     2,     5,     5,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     2,     0,     1,     1,
       1,     1,     1,     0,     1,     0,     1,     1,     5,     0,
       3,     0,     2,     3,     0,     1,     2,     1,     1,     1,
       1,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     2,     2,     4,     3,     1,
       3,     2,     1,     2,     1,     2,     2,     2,     2,     3,
       2,     2,     2,     1,     3,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     0,
       2,     0,     1,     1,     2,     2,     1,     2,     2,     0,
       1,     1,     1,     3,     1,     3,     0,     1,     0,     4,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       0,     1,     1,     2,     1,     2,     2,     3,     2,     3,
       0,     1,     1,     2,     1,     3,     0,     1,     1,     2,
       1,     0,     1,     1,     2,     1,     1,     3,     2,     1,
       3,     3,     1,     3,     3,     0,     1,     2,     2,     1,
       1,     1,     1,     1,     3,     1,     2,     5,     3,     1,
       1,     4,     0,     1,     0,     2,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     4,     7,     7,     6,
       8,     7,     5,     5,     5,     5,     0,     2,     8,     3,
       0,     2,     2,     0,     1,     1,     2,     2,     2,     2,
       5,     3,     3,     3,     3,     5,     4,     3,     4,     4,
       2,     2,     2,     0,     2,     2,     1,     2,     2,     2,
       2,     3,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     1,     2,     1,     3,     1,     2,     0,     1,
       1,     3,     2,     2,     3,     6,     5,     3,     4,     4,
       4,     4,     5,     4,     3,     3,     8,     7,     4,     4,
       1,     1,     0,     1,     2,     2,     1,     1,     1,     3,
       3,     1,     3,     1,     3,     6,     5,     2,     6,     5,
       4,     4,     3,     3,     3,     3,     2,     2,     6,     8,
       5,     4,     4,     4,     3,     5,     5,     5,     5,     1,
       3,     1,     1,     1,     0,     1,     1,     2,     2,     3,
       1,     1,     3,     1,     1,     0,     1,     0,     1,     0,
       1,     1,     0,     2,     1,     0,     1,     1,     1,     2,
       2,     2,     0,     1,     1,     3,     1,     1,     1,     3,
       3,     3,     2,     4,     3,     0,     4,     3,     0,     1,
       1,     3,     3,     6,     2,     2,     4,     0,     3,     0,
       3,     0,     3,     0,     3,     0,     1,     1,     3,     1,
       1,     0,     2,     1,     3,     3,     3,     1,     4,     0,
       1,     1,     5,     0,     1,     1,     2,     1,     1,     1,
       5,     0,     3,     0,     5,     4,     2,     4,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     4,     0,
       1,     1,     0,     4,     3,     3,     5,     1,     3,     3,
       5,     7,     1,     3,     2,     1,     1,     8,     5,     1,
       3,     3,     4,     0,     4,     0,     2,     1,     2,     1,
       1,     3,     2,     3,     3,     3,     4,     3,     4,     2,
       3,     2,     1,     4,     4,     4,     4,     3,     3,     4,
       1,     1,     1,     9,     8,     0,     1,     2,     1,     1,
       1,     3,     2,     2,     0,     1,     2,     1,     1,     1,
       2,     1,     3,     4,     4,     1,     1,     2,     0,     1,
       2,     1,     3,     1,     1,     1,     2,     0,     2,     2,
       1,     1,     0,     2,     3,     3,     3,     2,     3,     4,
       3,     4,     3,     4,     1,     3,     4,     3,     4,     1,
       3,     4,     5,     7,     6,     8,     6,     5,     6,     4,
       3,     5,     4,     6,     3,     4,     1,     1,     0,     3,
       3,     3,     3,     3,     3,     5,     5,     3,     3,     3,
       3,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     3,     2,     2,     2,     2,     1,     3,     5,
       6,     2,     4,     7,     2,     7,     5,     6,     6,     4,
       4,     5,     3,     3,     0,     1,     4,     6,     2,     4,
       4,     4,    10,     6,     8,     8,     6,     4,     4,     6,
       4,     4,     4,     6,     4,     7,     7,     7,     6,     6,
       6,     6,     3,     4,     6,     8,     2,     2,     8,     8,
       6,     6,     1,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     2,     2,     2,     0,     2,     4,     4,
       4,     4,     3,     8,     6,     8,     4,     6,     4,     6,
       8,     4,     3,     6,     4,     6,     4,     7,     7,    10,
       1,     4,     4,     4,     4,     4,     6,     4,     4,     6,
       2,     3,     0,     4,     0,     3,     0,     1,     1,     3,
       2,     1,     1,     5,     6,     5,     5,     5,     7,     5,
       6,     5,     6,     5,     6,     5,     6,     5,     5,     5,
       5,     5,     6,     8,     4,     4,     4,     4,     4,     5,
       7,     7,     6,     6,     9,     0,     3,     3,     0,     2,
       0,     2,     2,     0,     2,     2,     0,     1,     2,     1,
       1,     1,     3,     4,     0,     1,     0,     3,     0,     3,
       0,     3,     1,     1,     2,     2,     2,     4,     2,     4,
       1,     2,     2,     2,     4,     0,     3,     2,     2,     3,
       1,     1,     1,     4,     2,     3,     1,     4,     0,     1,
       0,     2,     0,     3,     3,     1,     2,     2,     3,     2,
       1,     2,     1,     2,     1,     2,     2,     2,     1,     1,
       2,     0,     1,     1,     3,     1,     3,     1,     3,     0,
       1,     0,     2,     4,     5,     1,     1,     4,     1,     1,
       5,     7,     5,     7,     3,     3,     3,     4,     4,     1,
       2,     2,     1,     3,     3,     0,     1,     0,     1,     0,
       1,     4,     1,     1,     1,     1,     1,     1,     3,     5,
       3,     3,     4,     3,     3,     3,     4,     8,     5,     4,
       1,     3,     3,     7,     4,     0,     1,     0,     1,     1,
       2,     1,     2,     3,     3,     1,     1,     2,     0,     2,
       3,     3,     1,     1,     6,     6,     1,     2,     0,     1,
       1,     0,     1,     1,     1,     1,     3,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     2,     0,     2,     2,     3,     3,     1,
       4,     0,     3,     1,     3,     0,     2,     1,     3,     3,
       0,     4,     3,     1,     0,     1,     3,     1,     2,     0,
       1,     3,     3,     1,     0,     1,     1,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     2,     6,     6,     4,     6,     4,     5,
       4,     4,     5,     4,     4,     4,     5,     5,     4,     4,
       6,     4,     1,     3,     1,     3,     0,     2,     0,     1,
       0,     1,     1,     3,     1,     1,     9,    10,     8,     6,
       7,     6,     0,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     4,     1,     3,     4,     3,     1,     2,     1,
       2,     1,     1,     1,     3,     1,     3,     1,     1,     1,
       0,     1,     3,     4,     0,     1,     3,     1,     1,     1,
       0,     3,     0,     5,    10,     0,     1,     3,     1,     3,
       0,     1,    10,     7,     8,     0,     2,     0,     2,     1,
       1,     1,     3,     0,     1,     0,     1,     1,     3,     1,
       1,     2,     2,     2,     1,     1,     1,     1,     0,     3,
       0,     3,     2,     4,     4,     3,     4,     4,     1,     3,
       3,     6,     2,     2,     0,     6,     0,     7,     6,     2,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     1,     3,     5,     2,     4,     6,     4,     3,
       3,     2,     3,     2,     2,     2,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     3,     2,     1,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     3,     1,     0,     2,     0,     4,
       0,     3,     1,     0,     1,     0,     2,     0,     3,     3,
       3,     2,     2,     3,     0,     1,     1,     2,    18,     1,
       1,     0,     1,     0,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     3,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     2,     1,     1,     3,     5,     2,
       1,     1,     1,     1,     1,     3,     5,     1,     3,     2,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     5,     5,     7,     7,     3,
       3,     3,     6,     6,     6,     4,     0,     2,     4,     6,
       1,     3,     1,     2,     2,     0,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     2,     1,     3,
       3,     2,     2,     1,     0,     2,     3,     0,     2,     2,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     0,     3,     3,     1,     1,
       1,     3,     3,     1,     1,     2,     2,     2,     1,     1,
       1,     1,     3,     4,     5,     4,     2,     6,     5,     9,
       3,     3,     4,     3,     6,     7,    10,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     7,
       0,     9,     8,     6,     5,     9,     0,    11,     7,     0,
       1,     1,     1,     0,     1,     1,     3,     2,     3,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     2,     2,
       2,     0,     3,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     3,     1,     3,     1,     3,     0,
       3,     0,     3,     4,     5,     4,     6,     6,     7,     1,
       7,     9,     5,     6,     8,     4,     7,     7,     8,     2,
       1,     3,     1,     3,     0,     3,     1,     3,     0,     2,
       2,     2,     2,     0,     3,     0,     3,     0,     3,     4,
       3,     3,     0,     3,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     1,     2,     1,     2,     3,     3,
       3,     0,     3,     3,     0,     7,     2,     0,     3,     4,
       4,     1,     1,     0,     2,     0,    12,     7,     6,     0,
       0,     0,     0,    14,     0,     0,     0,     0,    11,     4,
       4,     3,     4,     3,     3,     0,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     3,
       5,     3,     3,     3,     1,     3,     4,     6,    10,     1,
       5,     0,     2,     3,     1,     1,     0,     3,     1,     3,
       1,     3,     1,     2,     0,     3,     0,     1,     1,     0,
       1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 23679 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 23693 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 23715 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23723 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23739 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23766 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2118 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23781 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23787 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23799 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23805 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23811 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23817 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23823 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23829 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23835 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23841 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23847 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23853 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23859 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23865 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23871 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23877 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23883 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23889 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23895 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23901 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23907 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23913 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23919 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23925 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23931 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23937 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23943 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23955 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23961 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23967 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23973 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23979 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23985 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23991 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23997 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24003 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24009 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24015 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24021 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24027 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24033 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24039 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24045 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24051 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24057 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24063 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24069 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 24075 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24081 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24087 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24093 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24099 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24105 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24111 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24117 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24123 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 24134 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 24155 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 24166 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 24177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 24188 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2278 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24194 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 24205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 24217 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 24227 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 24242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2335 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24248 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24262 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24268 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 24279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 24290 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 24301 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 24312 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 24323 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 24335 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 24346 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24356 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24364 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24375 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24384 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 24395 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24405 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24413 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 24425 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 24435 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24445 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24453 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24464 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 24486 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24496 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24504 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24515 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24524 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24535 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24543 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24551 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24559 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24567 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24581 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24589 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24597 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24606 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24621 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24630 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24638 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24646 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 24654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 24662 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 24670 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 24678 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24687 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 24695 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24703 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 24711 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24721 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24759 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24767 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24783 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24807 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24815 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24825 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24835 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 24843 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 24851 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 24859 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24868 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24877 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24885 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24905 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24913 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24924 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2816 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24933 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2821 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24962 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24975 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24983 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24991 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24999 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 25009 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 25021 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 25032 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2903 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25038 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 25052 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25075 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25097 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25120 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 25137 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 25151 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 25159 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 3011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 25167 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 25177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25193 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25209 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 25226 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 25250 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 25258 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25269 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25280 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25291 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3120 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 25297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 25327 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 25335 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 25343 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 25351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 25360 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 25368 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 25376 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25396 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25408 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25419 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25435 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25445 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25455 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25465 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25476 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25486 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25496 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25502 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25512 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 25522 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25528 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 25537 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25587 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25601 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25619 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 25639 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3412 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25645 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3413 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25651 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3417 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25657 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3418 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25663 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3424 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25669 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3426 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25675 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3428 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25681 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3430 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25687 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3432 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25693 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3434 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25699 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3436 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25705 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3441 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25711 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3442 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 25717 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3443 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 25723 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25731 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25739 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 25747 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 25753 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3467 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 25761 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25813 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25876 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25882 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25888 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25894 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3608 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25900 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25908 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25933 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3646 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 26032 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26053 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 26098 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 26136 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3836 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 26149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3845 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 26214 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26220 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26226 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26232 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 26238 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 26262 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3945 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26277 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3960 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26300 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3981 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26306 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3982 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26312 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 26320 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26337 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 4004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26347 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 4010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26357 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26367 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26381 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 26411 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26417 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 26423 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 26435 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 26441 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26451 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26461 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4102 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26491 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4124 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26497 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 26503 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 26509 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 26515 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 26521 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 26527 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 26533 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 26539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 26545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 26551 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 26557 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 26563 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 26569 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26584 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26601 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26607 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26613 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26619 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26629 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26639 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 26649 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26659 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26669 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26701 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 26710 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26716 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26722 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26728 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 26738 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26748 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26758 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26764 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26770 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26776 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26782 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26788 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26794 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26800 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26806 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26812 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26818 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26824 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26830 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26836 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26860 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 4358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26884 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 4381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26893 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 4386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26902 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4410 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26908 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26918 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26931 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26983 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4480 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26995 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4488 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27045 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4536 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 27060 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27073 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27131 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27179 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27203 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27227 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4706 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27233 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27257 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27301 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4778 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27313 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4786 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27354 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4824 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 27376 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4842 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27389 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4865 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 27403 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4875 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27449 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4920 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 27457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 27465 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 27473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4951 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27485 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4959 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27530 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 5001 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5009 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27551 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5017 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27592 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5055 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27601 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27619 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 27641 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 27662 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 27668 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 27674 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 27694 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 27713 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5157 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 27728 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 27737 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5176 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 27754 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 27788 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27805 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5238 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27817 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5246 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27859 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5287 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27878 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5304 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27890 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5312 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27932 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27938 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27944 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27950 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27956 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27962 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27968 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5382 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27976 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27982 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27990 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5396 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27996 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 5402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28006 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 5408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28016 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 5431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28022 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 5437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28032 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 5443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28042 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28048 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28058 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28068 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28074 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 5492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28084 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28094 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28100 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28110 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28120 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28126 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 28132 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 28138 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28144 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 28152 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 28160 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 28168 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 28176 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 28184 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 28192 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 28200 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 28208 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28216 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 28224 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 28232 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 28240 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 28248 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 28256 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 28264 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 28270 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 28320 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 28329 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 28338 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 28349 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28360 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28371 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28377 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28383 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 28391 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 28399 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 28407 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28415 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 28423 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28431 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 28439 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28445 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28451 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 28457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 28475 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28481 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 28500 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 28508 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 28516 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5880 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 28522 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28532 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28542 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5902 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28548 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28561 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 28567 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 28573 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28583 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28593 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28602 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28610 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28619 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 28628 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 28634 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 28642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 28650 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28661 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28671 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 28686 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 6004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 28694 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 6011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28704 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28714 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 28720 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 6026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 28726 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 28732 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 28738 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28748 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28758 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 28766 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 28772 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28782 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28792 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 28798 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 28804 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28810 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28816 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28822 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28828 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6091 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28834 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28840 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6101 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28846 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6102 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28852 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6106 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28858 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6107 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28873 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28882 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28898 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28904 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28910 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28920 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28930 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28940 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28950 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28958 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28966 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28974 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28982 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28990 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28998 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29006 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 29014 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 29022 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	        }
#line 29030 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 29038 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 29046 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 29054 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 29062 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 29070 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 29091 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 29099 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 29107 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 29115 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 29123 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 29131 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 29139 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 29147 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 29155 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 29163 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29171 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29179 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29187 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 29195 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 29203 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 29211 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 29219 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 29227 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29235 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29243 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 29261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 29267 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29273 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 29279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 29285 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 29291 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 29297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 29303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 29309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 29315 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 29321 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 29327 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 29333 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 29339 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6377 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 29345 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6378 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 29351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6379 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 29357 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6380 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 29363 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29373 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29383 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 29389 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 29395 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 29403 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 29409 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 29418 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29427 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29436 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29444 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29464 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 29476 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 29485 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 29491 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 29497 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29503 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29509 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29515 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29521 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 29527 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 29533 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 29541 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 29562 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29568 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29574 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 29580 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 29588 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29596 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29604 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 29612 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 29620 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29628 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29636 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29645 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29667 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29680 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29688 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 29696 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29705 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29718 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29726 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 29753 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 29761 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 29769 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 29777 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 29785 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 29793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 29801 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29809 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 29817 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29825 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29834 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29843 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29852 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29861 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29878 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29886 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29895 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29903 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29911 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29917 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29923 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6726 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29929 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6728 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29935 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6730 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29941 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29947 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29953 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29959 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6740 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29965 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6741 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29971 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6745 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29977 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6746 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29983 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6750 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29989 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6751 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29995 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6752 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30001 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6753 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30007 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6754 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30013 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 30019 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 30025 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 30031 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 30037 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 30043 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 30052 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 30058 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 30064 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30070 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30076 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30082 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 30091 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 30100 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 30109 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 30118 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 30127 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 30133 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30139 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30145 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30151 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6832 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 30160 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 30166 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 30174 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 30180 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 30186 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 30197 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30203 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30209 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6866 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30221 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 30227 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 30236 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 30242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 30265 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 30285 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 30293 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 30301 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 30309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 30317 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 30325 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30333 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 30341 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 30349 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 30357 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30365 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30373 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30381 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30389 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 30397 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 30405 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 30413 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 30421 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 30429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 30442 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 30450 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 30458 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30466 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30474 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 30480 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 30488 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 30494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 30500 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 30506 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 30512 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 30518 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 30524 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30532 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30540 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 30553 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30559 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 30565 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30571 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30584 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30590 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 30596 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 30602 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 30612 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30618 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 30624 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30630 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7126 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30636 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7127 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 30648 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30657 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30666 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 30678 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 30688 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 30698 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30707 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30716 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30725 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30734 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30745 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 30755 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30767 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30773 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 30782 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7220 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 30794 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30800 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 30812 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 30818 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 30824 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30835 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30846 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 30852 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 30858 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 30864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 30870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30879 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30888 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30897 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30906 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30915 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30921 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30927 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30933 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30939 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30945 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30951 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 30957 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7325 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30963 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7326 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30969 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30975 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7335 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30981 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30987 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7337 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30993 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30999 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 31007 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 31015 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 31023 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 31031 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31039 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31047 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31055 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31063 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31069 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31079 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31089 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31104 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31110 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31120 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31130 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31136 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31146 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31156 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 31162 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 31168 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 31174 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31182 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 31190 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31198 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31206 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 31212 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 31218 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 31224 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 31230 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 31236 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 31242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 31248 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 31254 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 31260 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 31266 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 31272 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31282 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 31293 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31329 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31340 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31350 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31356 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 31362 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31368 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 31378 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 31387 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 31402 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 31417 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 31429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 31442 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31468 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31483 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31509 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7719 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31515 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31531 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7738 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31537 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31557 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31574 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31597 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31619 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31677 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31701 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 31713 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31731 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31748 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 31758 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 31774 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 31790 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 31805 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 31811 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 31817 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 31826 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 31836 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 8004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 31846 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 31857 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 31868 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8025 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31874 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 31884 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 31894 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31906 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31925 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31937 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 31960 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 31971 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 31982 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 31993 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 32003 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 32013 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 32023 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 32039 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 32055 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 32065 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8165 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32071 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8170 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32077 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8171 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32083 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 32093 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 32103 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 32113 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 32123 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 32138 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32144 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32150 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32156 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32162 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32168 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 32181 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32187 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32193 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 32199 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32221 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 32230 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 32239 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 32247 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 32255 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 32264 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 32273 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 32283 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 32291 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 32299 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 32307 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 32315 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 32323 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 32331 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32339 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32347 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32355 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32364 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32373 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 32381 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 32389 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 32397 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 32405 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 32413 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32421 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 32437 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 32445 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 32451 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 32459 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 32467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 32473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32484 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32493 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32501 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 32510 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32522 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32531 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 32539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 32547 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 32555 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32563 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32571 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 32580 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32588 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 32596 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32604 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32612 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32620 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 32628 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 32636 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 32644 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 32652 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 32660 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 32668 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32676 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32684 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 32692 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32700 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32708 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 32716 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 32726 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 32734 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 32742 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32760 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 32769 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 32775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32784 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32803 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32813 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 32819 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 32827 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32845 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 32851 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 32859 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32877 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32883 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32889 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 32895 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 32901 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8689 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 32907 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 32913 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 32919 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 32925 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8699 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32931 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8700 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32937 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8701 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32943 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 32958 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 32968 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32981 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32995 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 33003 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8772 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33009 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8774 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 33020 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 33035 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33056 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 33073 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 33081 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33089 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33097 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 33105 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 33113 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 33124 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 33132 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 33140 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33148 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 33156 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33164 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 33173 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33181 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 33189 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33197 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 33205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 33213 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33221 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33229 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 33237 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 33245 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 33253 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 33262 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 33288 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 33297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 33306 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 9000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 33314 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 33329 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33335 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 9021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 33341 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 33347 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33356 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33362 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33371 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 33377 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 33383 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 33389 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 33399 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 33405 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 33424 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 33434 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 33445 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 33456 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 33465 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33474 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33480 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33489 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 33495 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 33501 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 33507 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 33513 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 33519 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 33525 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 33533 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 33539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33551 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 33559 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33565 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 33573 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33582 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33591 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33605 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 33613 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 33622 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33632 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 33650 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33656 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 33662 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33670 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 33678 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33688 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33698 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33706 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 33714 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 33720 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 33731 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33737 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33743 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 33751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 33760 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 33768 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 33776 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 33784 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 33792 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 33800 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33808 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33816 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33824 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33832 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33840 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33848 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 33856 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 33864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33872 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33880 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33888 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33896 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 33902 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 33908 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 33916 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 33925 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 33933 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 33946 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33964 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33982 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33988 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 33994 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 34000 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 34010 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 34020 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 34028 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 34040 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 34048 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 34057 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 34065 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 34075 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 34085 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 34095 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 34103 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 34111 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 34119 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 34125 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 34131 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 34137 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 34143 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 34149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 34155 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34165 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34175 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 34186 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9699 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34192 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 34200 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 34206 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34212 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34218 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34224 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34230 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9716 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34236 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9717 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34252 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34271 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 34287 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 34295 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 34303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 34311 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 34319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 34327 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 34335 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 34343 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 34351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 34368 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 34376 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34385 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 34393 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 34404 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 34412 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 34423 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 34431 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 34439 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 34447 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 34459 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 34467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34475 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34484 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34493 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 34505 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34517 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34525 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34533 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34541 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34549 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34557 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34565 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 34573 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 34581 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34589 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34597 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34605 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34613 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34621 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34629 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9961 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 34637 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9972 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 34643 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 34649 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 34655 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 34661 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 34667 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 34673 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 34679 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 34685 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 34691 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 34697 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 34705 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 34711 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34719 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 34727 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 34735 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 34743 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34759 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 34765 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34773 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34781 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34789 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 34797 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 34805 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 34813 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 34821 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 34829 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 34837 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 34845 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 34853 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 34861 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 34869 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 34880 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 34892 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 34898 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 34904 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 34912 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 34920 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 34928 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 34936 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 34944 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 34952 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34960 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34968 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 34976 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 34986 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34994 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 35002 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 35010 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35018 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 35026 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 35034 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 35042 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 35050 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 35059 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 35068 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 35077 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 35085 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 35093 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 35101 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 35109 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 35118 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 35126 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 35134 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 35142 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 35150 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 35158 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35166 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 35174 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 35182 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 35190 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 35198 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35207 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 35215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 35223 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 35231 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35239 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35247 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35255 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35263 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35272 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 35280 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 35288 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 35296 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35304 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35312 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 35320 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 35328 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 35336 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 35344 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 35352 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 35360 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 35368 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35376 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35384 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35392 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 35400 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35408 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 35416 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35424 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35432 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 35440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 35448 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 35456 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 35464 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35472 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 35480 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 35488 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 35496 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 35504 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 35514 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 35524 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 35534 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 35544 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 35554 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35562 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 35572 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35580 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35588 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 35594 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 35608 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35614 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35620 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 35626 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 35632 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35638 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35644 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35664 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 35672 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35680 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35688 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35696 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35704 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 35718 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 35732 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35740 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 35748 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35756 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 35764 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35772 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35780 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35788 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35796 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35804 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35812 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35820 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35828 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35836 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35844 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 35852 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 35860 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 35868 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 35876 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 35884 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 35892 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35900 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35915 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35930 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35938 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35946 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35959 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 35968 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35977 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35986 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 35994 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36002 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 36010 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 36018 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 36026 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 36034 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 36042 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 36050 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 36058 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36066 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36074 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 36082 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36090 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 36098 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 36106 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10852 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 36124 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 36132 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 36140 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 36148 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 36156 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 36164 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 36172 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 36180 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 36188 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 36197 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 36205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 36213 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 36221 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 36229 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 36237 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 36245 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 36253 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 36261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 36269 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 36277 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 36285 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 36293 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 36301 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 36309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 36317 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 36325 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 36332 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 36338 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 36344 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 36350 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 36358 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36364 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 36375 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 36383 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 36391 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36397 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36403 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 36413 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 36419 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 36425 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 36431 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36451 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 36459 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 36470 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 36493 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 36505 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36516 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36527 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36538 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36549 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36560 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36571 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36582 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 36593 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36604 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 36616 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 36627 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 36633 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36643 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36653 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 36659 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 36665 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36675 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36685 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36691 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36697 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36703 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36709 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 36721 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 36731 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36737 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36743 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 36757 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36763 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36769 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36777 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36785 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36801 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 36814 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 36822 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 36828 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 36834 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 36840 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36846 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11398 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36852 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36858 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 36864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 36870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 36876 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11422 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36882 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 36890 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 36896 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 36902 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 36908 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 36914 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 36920 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36930 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36936 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36942 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 36950 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36956 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36962 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36979 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36991 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 37007 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 37022 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 37030 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 37040 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 37050 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 37058 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 37071 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 37079 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 37087 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 37095 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37104 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37113 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37122 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 37131 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11625 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 37137 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 37149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 37155 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 37161 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 37169 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 37177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 37185 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 37193 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 37199 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 37205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 37211 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11668 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 37217 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11669 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 37223 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 37232 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 37241 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 37250 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 37256 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 37267 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 37277 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 37287 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 37297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 37306 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 37319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 37332 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11771 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37338 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 37344 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 37350 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 37356 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11775 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 37362 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 37368 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 37374 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 37380 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 37386 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 37392 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 37398 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 37404 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 37410 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 37416 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11788 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 37422 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 37428 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 37434 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 37440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11792 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 37446 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 37452 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 37458 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11798 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 37464 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11799 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 37470 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11800 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37476 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11801 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37482 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 37488 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 37494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 37500 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 37506 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37512 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 37520 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 37528 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 37536 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 37545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 37555 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 37572 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 37585 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 37593 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 37603 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 37613 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 37621 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 37629 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 37639 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 37649 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 37660 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 37666 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 37674 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37683 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37694 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 37700 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 37706 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37715 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37726 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 37734 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 37740 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 37748 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37757 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37768 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 37774 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 37780 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 37786 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 37792 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 37800 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 37810 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 37820 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 37830 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 37838 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 37846 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37854 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37862 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37876 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37882 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12109 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37888 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37894 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12111 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37900 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12112 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37906 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12113 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37912 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12114 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37918 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12118 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37924 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37930 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12120 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37936 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12121 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37942 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12122 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37948 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12126 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37954 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12127 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37960 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12128 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37966 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12129 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37972 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12130 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37978 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12134 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37984 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37990 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12136 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37996 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12137 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38002 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12138 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 38008 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12143 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 38014 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 38024 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 38034 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 38042 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 38050 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 38058 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 38066 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38074 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 38080 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 38090 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38107 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 38117 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38128 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 38155 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 38191 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 38199 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 38215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 38226 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 38252 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 38264 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38286 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38332 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 38341 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 38351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 38359 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 38367 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38377 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38387 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38397 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38407 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38413 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38419 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 38425 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 38431 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 38437 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38447 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 38473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38488 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38500 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38512 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38527 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 38545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38551 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12644 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 38564 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 38570 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 38576 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12658 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 38589 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38598 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38607 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38616 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38625 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38634 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38643 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38653 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38663 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 38671 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 38677 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 38685 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12737 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 38691 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38700 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38710 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38719 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38729 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38735 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38741 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 38751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38761 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38771 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 38779 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 38788 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 38802 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 38811 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 38819 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38828 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 38834 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 38840 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38851 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38864 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 38873 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 38879 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38885 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38893 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38901 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38909 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38915 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 38921 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 38927 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 38933 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 38939 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 38947 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12988 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 38955 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12992 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 38963 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12996 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 38971 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13000 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 38979 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13004 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 38987 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13008 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 38995 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13012 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 39003 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 39011 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13020 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 39019 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13027 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 39027 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 39039 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 39050 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13055 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 39063 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13064 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 39073 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13070 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 39089 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13082 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 39104 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13093 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 39119 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 39138 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 39149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 39161 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13134 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 39167 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 39189 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 39197 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 39205 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 39214 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 39223 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 39232 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 39241 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 39258 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 39269 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 39281 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 39293 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 39305 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 39317 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 39329 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 39343 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 39369 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 39378 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 39404 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39417 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39430 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 39440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, false);
            MAKE_CMD(tmp);
          }
#line 39449 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, false);
            MAKE_CMD(tmp);
          }
#line 39458 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
            MAKE_CMD(tmp);
          }
#line 39467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, true);
            MAKE_CMD(tmp);
          }
#line 39476 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, true);
            MAKE_CMD(tmp);
          }
#line 39485 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
            MAKE_CMD(tmp);
          }
#line 39494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39504 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 39517 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 39529 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 39537 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 39545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13396 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_CLIENT_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_CLIENT_STATS))
             MYSQL_YYABORT;
          }
#line 39556 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13403 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_USER_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_USER_STATS))
             MYSQL_YYABORT;
          }
#line 39567 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13410 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_THREAD_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_THREAD_STATS))
             MYSQL_YYABORT;
          }
#line 39578 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13417 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_TABLE_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_STATS))
             MYSQL_YYABORT;
          }
#line 39589 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13424 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_INDEX_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_INDEX_STATS))
             MYSQL_YYABORT;
          }
#line 39600 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39611 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39622 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 39632 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39646 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39660 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39669 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39678 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 39687 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 39697 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13495 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 39703 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 39709 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13499 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 39715 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 39721 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 39727 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39733 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39739 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39745 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 39757 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 39763 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 39769 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 39775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13540 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 39781 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13541 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 39787 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13545 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 39793 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13546 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 39799 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 39805 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 39811 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 39817 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 39825 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 39833 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 39841 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 39849 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39867 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 39889 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 39900 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 39906 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 39915 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 39926 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39932 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13674 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39955 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13679 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39961 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39977 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 39989 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 40005 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13717 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40011 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13722 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 40017 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13724 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 40023 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13726 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 40029 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13728 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 40035 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13730 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 40041 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13732 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 40047 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13734 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 40053 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13736 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 40059 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13738 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 40065 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13740 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 40071 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13742 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 40077 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13744 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 40083 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13746 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 40089 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13748 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 40095 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13750 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 40101 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13752 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 40107 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13754 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 40113 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 40119 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 40125 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 40134 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13771 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40140 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 40151 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 40161 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 40171 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13802 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 40177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 40197 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13822 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 40203 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13826 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 40209 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13827 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 40215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40221 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 40236 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 40246 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13853 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40252 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 40263 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 40271 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 40284 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 40297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13898 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 40303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13899 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 40309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13900 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 40315 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 40325 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 40348 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 40354 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 40360 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40366 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40372 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40378 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 40384 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40390 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 40396 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 40402 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 40408 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 40414 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 40420 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 40429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 40438 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 14002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 40448 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 14008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 40457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 40466 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 40472 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 40478 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 40487 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 40496 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 40505 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 40511 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 40517 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40523 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 40529 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40535 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40541 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40547 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40557 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40567 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40575 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14091 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 40581 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 40587 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40599 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40620 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40640 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 40649 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 40659 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40668 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 40677 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40688 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40699 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40710 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 40730 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40736 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 40747 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 40763 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 40769 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 40783 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 40791 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40799 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40807 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40815 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40823 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40831 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40839 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40847 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 40855 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40863 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 40871 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 40879 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 40887 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40895 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40906 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40914 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 40922 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40930 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40938 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40946 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40956 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40966 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40978 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40988 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 41000 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 41006 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41037 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41051 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41065 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41082 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41099 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41117 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 41125 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 41142 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 41148 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41160 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41171 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 41177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41189 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41200 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41206 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41212 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41218 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 41227 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 41236 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 41244 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 41259 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 41268 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 41277 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 41287 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 41295 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 41303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 41311 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 41319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 41330 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 41342 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 41354 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 41367 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 41375 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41384 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41393 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 41402 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 41411 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 41420 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41429 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 41435 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 41441 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 41449 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 41457 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41477 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 41483 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 41494 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 41504 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 41510 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 41516 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41524 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41532 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 41540 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 41546 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41552 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41558 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41564 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41570 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15394 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41576 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15398 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41582 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41588 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41594 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41600 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41606 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41612 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41618 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41624 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41630 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41636 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15414 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41648 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41660 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41668 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 41676 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 41684 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41692 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 41700 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 41711 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 41719 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 41727 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41735 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41743 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 41751 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 41759 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 41767 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 41775 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 41781 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 41787 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 41795 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 41801 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 41807 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15517 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 41813 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 41819 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15522 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 41825 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 41831 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 41837 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 41843 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41849 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 41857 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 41865 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 41873 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 41881 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 41889 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 41897 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 41909 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 41917 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 41925 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15580 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41931 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41942 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 41971 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 41977 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 41983 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 41992 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 41998 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 42010 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42021 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 42029 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 42038 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 42046 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 42055 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 42075 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-3].lexer.lex_str), "INNODB"))
            {
              if ((yyvsp[0].ulong_num) > UINT_MAX32 - 1)
              {
                my_error(ER_SYSTEM_KEY_ROTATION_MAX_KEY_ID_EXCEEDED, MYF(0));
                MYSQL_YYABORT;
              }
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_SYSTEM_KEY, EMPTY_CSTR, (yyvsp[0].ulong_num));
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-3]));
              MYSQL_YYABORT;
            }
          }
#line 42096 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "REDO"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_REDO_SYSTEM_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 42112 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"), 0);
          }
#line 42120 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"), 0);
          }
#line 42128 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)), 0);
          }
#line 42136 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)), 0);
          }
#line 42144 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 42163 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 42182 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 42190 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 42198 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42206 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42225 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 42231 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 42237 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 42243 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 42249 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 42255 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 42261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 42267 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 42273 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 42279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 42285 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 42291 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 42300 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 42319 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 42328 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 42346 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 42355 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 42367 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 42376 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 42395 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 42404 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 42420 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 42434 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 42440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 42446 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 42452 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 42458 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42468 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42478 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 42489 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 42495 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42501 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15995 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42507 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42513 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42519 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 16001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 42525 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 16003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 42531 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 16005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 42537 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 42543 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 42549 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 42555 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 42561 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 42567 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 42573 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 42579 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 42585 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 42594 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 42600 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 42618 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 42624 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 42630 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 42636 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 42642 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 42648 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 42654 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 42660 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 42666 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 42672 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 42678 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 42684 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 42690 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 42696 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 42702 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42708 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16075 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42714 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 16090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 42728 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 16100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 42742 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 42756 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42774 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42790 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42806 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42822 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42840 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42850 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42860 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42870 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42880 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42886 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42892 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42898 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42904 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42919 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42934 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42949 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42966 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42984 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 43000 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 43012 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43030 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43051 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43066 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43081 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 43099 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 43114 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 43131 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 43149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 43165 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 43177 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43186 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43195 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 43204 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43213 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 43219 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 43225 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 43235 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 43245 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 43253 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 43261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 43269 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 43277 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16509 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43283 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16511 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 43289 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43295 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43301 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16520 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 43307 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16522 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 43315 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 43324 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16531 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 43330 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16533 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 43336 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16537 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 43342 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 43351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 43361 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16551 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43367 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16555 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43373 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16556 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43379 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 43385 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 43391 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 43397 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 43403 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 43409 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 43415 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16574 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43421 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16575 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43427 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 43440 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 43453 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43463 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43483 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43489 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43495 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 43501 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 43509 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 43515 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 43521 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 43527 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 43533 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 43539 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 43545 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 43556 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 43562 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 43573 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16687 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43579 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16689 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43585 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16691 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43591 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 43606 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 43614 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16751 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43620 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16753 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43626 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16755 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43632 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16760 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 43638 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16765 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 43644 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16767 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 43650 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16769 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 43656 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16774 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 43662 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16776 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 43668 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16778 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 43674 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 43714 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 43766 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16873 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 43772 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16874 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43778 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43784 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 43790 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 16887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 43796 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 16889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 43802 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16894 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 43811 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16900 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 43820 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16917 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 43856 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16949 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 43887 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43908 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 17004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43929 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 17026 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43956 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 17050 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 43964 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 17056 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 44009 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 44021 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 17105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 44080 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 17164 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 44104 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 17184 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 44112 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 17189 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 44124 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 17197 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 44136 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 17205 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 44149 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 17219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44158 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 17224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44167 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 17229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 44176 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 17234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44185 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 17239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 44194 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 17244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 44203 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 17251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44209 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 17252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44215 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 17256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 44228 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 17265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 44242 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 17275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 44261 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 17292 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44267 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 17293 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44273 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 17297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44279 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 17298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 44285 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 17299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 44291 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 17303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44297 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 17304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 44303 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 17309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44309 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 17311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 44315 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 17313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 44321 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 17318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 44331 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 17324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 44341 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 17333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 44351 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 17339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 44361 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 17348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 44371 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 17354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 44381 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 17363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 44394 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 17381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 44405 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 17391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 44427 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 17412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 44435 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 17416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 44443 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 17423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 44451 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 17427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 44459 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 17431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 44467 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 17437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 44473 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 17438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 44479 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 17443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 44490 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 17449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 44496 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 17454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44507 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 17461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44518 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 17471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 44529 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 44543 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 17490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44549 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44555 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 44561 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 44570 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 44576 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 44585 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 17511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 44594 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 44600 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 44606 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 44623 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 44627 "/mnt/workspace/percona-server-8.0-source-tarballs-cve/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}

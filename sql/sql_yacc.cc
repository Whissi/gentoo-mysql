/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1148
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89863

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  818
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1013
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3227
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5568

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   815,     2,     2,     2,   803,   798,     2,
     807,   808,   801,   800,   812,   799,   813,   802,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   814,   810,
       2,     2,     2,     2,   811,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   804,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   816,   797,   817,   805,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     783,   784,   785,   786,   787,   788,   789,   790,   791,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     792,   793,     2,   794,   795,   796,   806,   809
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2174,  2174,  2175,  2180,  2190,  2208,  2212,  2220,  2233,
    2232,  2257,  2264,  2266,  2270,  2271,  2276,  2277,  2278,  2279,
    2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,  2288,  2289,
    2290,  2291,  2292,  2293,  2294,  2295,  2296,  2297,  2298,  2299,
    2300,  2301,  2302,  2303,  2304,  2305,  2306,  2307,  2308,  2309,
    2310,  2311,  2312,  2313,  2314,  2315,  2316,  2317,  2318,  2319,
    2320,  2321,  2322,  2323,  2324,  2325,  2326,  2327,  2328,  2329,
    2330,  2331,  2332,  2333,  2334,  2335,  2336,  2337,  2338,  2339,
    2340,  2341,  2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,
    2350,  2351,  2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,
    2360,  2361,  2362,  2363,  2364,  2365,  2366,  2367,  2368,  2369,
    2370,  2371,  2372,  2373,  2374,  2375,  2376,  2377,  2378,  2379,
    2380,  2381,  2382,  2383,  2384,  2385,  2386,  2387,  2388,  2389,
    2390,  2391,  2392,  2393,  2394,  2395,  2396,  2397,  2398,  2399,
    2400,  2401,  2402,  2403,  2404,  2405,  2406,  2407,  2408,  2409,
    2410,  2411,  2415,  2425,  2426,  2430,  2450,  2457,  2468,  2467,
    2478,  2480,  2484,  2485,  2489,  2502,  2501,  2520,  2525,  2530,
    2529,  2546,  2545,  2563,  2564,  2567,  2574,  2581,  2588,  2595,
    2602,  2610,  2619,  2625,  2632,  2639,  2647,  2656,  2662,  2668,
    2676,  2684,  2690,  2697,  2704,  2712,  2724,  2730,  2737,  2744,
    2752,  2762,  2763,  2767,  2773,  2777,  2782,  2786,  2792,  2796,
    2801,  2805,  2810,  2814,  2819,  2823,  2828,  2832,  2837,  2841,
    2846,  2850,  2855,  2859,  2864,  2868,  2873,  2877,  2882,  2886,
    2891,  2895,  2900,  2904,  2909,  2913,  2918,  2922,  2927,  2931,
    2936,  2940,  2945,  2949,  2954,  2958,  2963,  2967,  2972,  2976,
    2981,  2985,  2990,  2994,  2998,  3002,  3006,  3010,  3020,  3024,
    3028,  3033,  3044,  3049,  3053,  3057,  3061,  3062,  3066,  3070,
    3074,  3079,  3083,  3087,  3091,  3097,  3131,  3135,  3139,  3143,
    3149,  3150,  3160,  3161,  3177,  3178,  3181,  3183,  3184,  3188,
    3194,  3200,  3209,  3213,  3217,  3224,  3228,  3232,  3246,  3251,
    3259,  3264,  3268,  3273,  3277,  3281,  3297,  3301,  3312,  3313,
    3318,  3328,  3338,  3343,  3351,  3358,  3371,  3370,  3385,  3387,
    3400,  3420,  3439,  3459,  3473,  3487,  3492,  3501,  3506,  3518,
    3530,  3544,  3560,  3564,  3571,  3580,  3588,  3602,  3604,  3625,
    3626,  3630,  3634,  3638,  3642,  3646,  3651,  3655,  3663,  3662,
    3694,  3693,  3702,  3711,  3712,  3718,  3724,  3734,  3740,  3748,
    3750,  3759,  3760,  3764,  3770,  3779,  3780,  3788,  3788,  3846,
    3847,  3848,  3849,  3850,  3851,  3852,  3853,  3854,  3855,  3856,
    3857,  3858,  3862,  3876,  3895,  3896,  3900,  3901,  3906,  3908,
    3910,  3912,  3914,  3916,  3918,  3924,  3925,  3926,  3930,  3934,
    3941,  3948,  3949,  3956,  3958,  3962,  3963,  3967,  4018,  4020,
    4024,  4025,  4029,  4079,  4080,  4081,  4082,  4086,  4087,  4091,
    4092,  4097,  4100,  4124,  4223,  4241,  4240,  4319,  4315,  4392,
    4393,  4398,  4400,  4405,  4428,  4439,  4443,  4465,  4466,  4470,
    4474,  4487,  4493,  4499,  4508,  4521,  4547,  4553,  4554,  4560,
    4561,  4566,  4572,  4585,  4587,  4607,  4613,  4615,  4617,  4619,
    4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4640,  4654,
    4671,  4672,  4674,  4679,  4685,  4694,  4700,  4709,  4717,  4745,
    4753,  4755,  4764,  4769,  4775,  4784,  4792,  4794,  4796,  4798,
    4800,  4802,  4804,  4806,  4808,  4810,  4812,  4814,  4816,  4821,
    4841,  4865,  4869,  4877,  4878,  4879,  4880,  4881,  4882,  4883,
    4884,  4885,  4886,  4887,  4888,  4889,  4894,  4893,  4904,  4904,
    4969,  4968,  5025,  5025,  5047,  5104,  5151,  5175,  5174,  5199,
    5221,  5223,  5224,  5228,  5246,  5267,  5275,  5313,  5267,  5341,
    5343,  5344,  5348,  5349,  5354,  5364,  5353,  5416,  5415,  5429,
    5430,  5434,  5435,  5440,  5448,  5439,  5498,  5506,  5497,  5552,
    5565,  5570,  5569,  5607,  5608,  5613,  5612,  5646,  5646,  5665,
    5664,  5712,  5727,  5735,  5726,  5793,  5801,  5790,  5843,  5845,
    5850,  5852,  5854,  5869,  5870,  5877,  5878,  5885,  5886,  5890,
    5896,  5905,  5906,  5907,  5908,  5909,  5910,  5911,  5912,  5913,
    5914,  5915,  5916,  5920,  5921,  5925,  5931,  5940,  5941,  5942,
    5943,  5944,  5945,  5946,  5947,  5951,  5952,  5956,  5962,  5971,
    5975,  5976,  5980,  5986,  5995,  5996,  5997,  5998,  5999,  6000,
    6001,  6005,  6006,  6010,  6016,  6025,  6026,  6027,  6031,  6035,
    6036,  6040,  6044,  6051,  6058,  6062,  6069,  6076,  6083,  6090,
    6097,  6104,  6111,  6118,  6122,  6129,  6136,  6150,  6157,  6158,
    6233,  6239,  6243,  6248,  6253,  6259,  6267,  6277,  6278,  6292,
    6300,  6304,  6308,  6312,  6316,  6320,  6327,  6328,  6333,  6334,
    6352,  6353,  6365,  6366,  6371,  6380,  6381,  6386,  6392,  6402,
    6403,  6415,  6416,  6420,  6426,  6435,  6444,  6447,  6452,  6460,
    6461,  6465,  6469,  6476,  6483,  6493,  6492,  6510,  6516,  6525,
    6526,  6531,  6532,  6536,  6542,  6551,  6558,  6559,  6563,  6569,
    6578,  6580,  6582,  6584,  6586,  6588,  6590,  6592,  6601,  6602,
    6606,  6607,  6628,  6629,  6633,  6634,  6638,  6643,  6648,  6663,
    6664,  6668,  6674,  6683,  6689,  6697,  6699,  6703,  6707,  6711,
    6715,  6719,  6723,  6727,  6731,  6735,  6739,  6743,  6754,  6758,
    6762,  6766,  6770,  6787,  6791,  6795,  6799,  6803,  6807,  6811,
    6815,  6819,  6823,  6827,  6831,  6835,  6839,  6843,  6847,  6851,
    6855,  6859,  6863,  6870,  6884,  6888,  6892,  6896,  6900,  6901,
    6902,  6903,  6904,  6905,  6909,  6910,  6911,  6915,  6916,  6917,
    6918,  6922,  6928,  6937,  6938,  6942,  6949,  6950,  6958,  6964,
    6970,  6975,  6992,  7000,  7008,  7012,  7013,  7017,  7018,  7022,
    7023,  7027,  7031,  7035,  7056,  7058,  7062,  7063,  7064,  7068,
    7072,  7076,  7080,  7084,  7088,  7092,  7096,  7101,  7106,  7115,
    7124,  7128,  7132,  7137,  7146,  7150,  7173,  7177,  7181,  7185,
    7189,  7193,  7197,  7198,  7202,  7206,  7210,  7215,  7220,  7225,
    7230,  7235,  7239,  7243,  7248,  7252,  7259,  7261,  7263,  7265,
    7267,  7269,  7271,  7273,  7278,  7279,  7283,  7284,  7288,  7289,
    7290,  7291,  7292,  7296,  7297,  7298,  7299,  7300,  7304,  7309,
    7313,  7315,  7319,  7320,  7321,  7322,  7327,  7331,  7340,  7344,
    7349,  7353,  7362,  7363,  7367,  7368,  7369,  7377,  7378,  7382,
    7386,  7390,  7391,  7392,  7401,  7402,  7403,  7404,  7407,  7408,
    7413,  7417,  7421,  7422,  7426,  7445,  7464,  7468,  7472,  7476,
    7480,  7484,  7488,  7492,  7496,  7500,  7504,  7508,  7512,  7516,
    7520,  7524,  7528,  7532,  7536,  7545,  7550,  7563,  7567,  7571,
    7578,  7579,  7586,  7587,  7588,  7592,  7593,  7594,  7598,  7604,
    7608,  7612,  7613,  7617,  7626,  7630,  7631,  7635,  7644,  7648,
    7649,  7653,  7659,  7663,  7664,  7668,  7669,  7674,  7675,  7679,
    7686,  7694,  7700,  7710,  7714,  7719,  7724,  7729,  7736,  7742,
    7753,  7754,  7762,  7761,  7773,  7775,  7779,  7794,  7795,  7799,
    7806,  7816,  7817,  7818,  7819,  7824,  7828,  7833,  7838,  7844,
    7853,  7854,  7855,  7856,  7857,  7861,  7862,  7867,  7868,  7872,
    7873,  7877,  7878,  7879,  7883,  7884,  7888,  7892,  7896,  7900,
    7904,  7908,  7912,  7916,  7922,  7923,  7927,  7933,  7942,  7943,
    7957,  7958,  7962,  7968,  7977,  7981,  7982,  7986,  7992,  8001,
    8002,  8007,  8008,  8012,  8016,  8020,  8044,  8045,  8046,  8050,
    8051,  8055,  8056,  8060,  8061,  8065,  8066,  8067,  8071,  8077,
    8087,  8093,  8108,  8114,  8124,  8125,  8134,  8135,  8139,  8140,
    8144,  8150,  8162,  8173,  8188,  8187,  8208,  8207,  8229,  8228,
    8250,  8249,  8268,  8262,  8285,  8284,  8320,  8342,  8361,  8381,
    8389,  8411,  8435,  8446,  8448,  8463,  8477,  8483,  8495,  8507,
    8521,  8522,  8526,  8536,  8546,  8551,  8558,  8567,  8568,  8572,
    8573,  8577,  8583,  8589,  8597,  8612,  8620,  8628,  8635,  8642,
    8649,  8656,  8662,  8668,  8674,  8686,  8698,  8707,  8708,  8712,
    8713,  8717,  8723,  8729,  8735,  8744,  8758,  8759,  8760,  8761,
    8765,  8766,  8778,  8779,  8783,  8784,  8788,  8789,  8804,  8809,
    8817,  8821,  8829,  8833,  8838,  8839,  8848,  8852,  8863,  8867,
    8871,  8875,  8879,  8884,  8889,  8894,  8899,  8906,  8910,  8914,
    8918,  8923,  8928,  8933,  8938,  8942,  8949,  8950,  8954,  8958,
    8965,  8966,  8974,  8981,  8986,  8990,  8995,  9006,  9007,  9015,
    9019,  9023,  9027,  9031,  9035,  9040,  9044,  9048,  9052,  9056,
    9060,  9064,  9068,  9072,  9076,  9081,  9085,  9089,  9093,  9097,
    9101,  9105,  9109,  9113,  9119,  9123,  9130,  9135,  9140,  9148,
    9149,  9154,  9159,  9165,  9174,  9178,  9182,  9199,  9203,  9207,
    9223,  9225,  9229,  9230,  9234,  9235,  9236,  9240,  9241,  9242,
    9246,  9247,  9248,  9249,  9253,  9254,  9262,  9270,  9272,  9276,
    9277,  9281,  9282,  9283,  9287,  9299,  9312,  9319,  9320,  9324,
    9339,  9354,  9338,  9378,  9395,  9398,  9405,  9409,  9416,  9420,
    9427,  9431,  9438,  9441,  9448,  9451,  9458,  9461,  9468,  9471,
    9479,  9482,  9489,  9493,  9500,  9504,  9512,  9516,  9541,  9542,
    9543,  9548,  9553,  9560,  9574,  9575,  9576,  9580,  9589,  9590,
    9594,  9595,  9603,  9604,  9605,  9609,  9619,  9620,  9639,  9644,
    9651,  9661,  9669,  9677,  9678,  9682,  9683,  9691,  9693,  9695,
    9697,  9699,  9701,  9706,  9713,  9714,  9715,  9720,  9719,  9725,
    9732,  9737,  9745,  9746,  9750,  9763,  9767,  9776,  9782,  9791,
    9798,  9799,  9803,  9808,  9815,  9821,  9830,  9837,  9844,  9845,
    9855,  9856,  9860,  9864,  9869,  9873,  9909,  9913,  9917,  9921,
    9925,  9964,  9970,  9977,  9983,  9990,  9995, 10001, 10009, 10013,
   10017, 10021, 10025, 10033, 10034, 10035, 10042, 10047, 10051, 10063,
   10085, 10109, 10110, 10114, 10118, 10119, 10123, 10129, 10138, 10145,
   10157, 10160, 10164, 10169, 10173, 10177, 10186, 10192, 10201, 10205,
   10209, 10216, 10217, 10221, 10225, 10226, 10230, 10231, 10235, 10241,
   10247, 10257, 10258, 10266, 10267, 10268, 10269, 10270, 10274, 10275,
   10280, 10286, 10291, 10297, 10301, 10305, 10309, 10313, 10317, 10321,
   10325, 10329, 10333, 10337, 10341, 10354, 10358, 10362, 10367, 10371,
   10378, 10382, 10391, 10395, 10399, 10403, 10411, 10415, 10419, 10424,
   10429, 10437, 10445, 10449, 10450, 10454, 10458, 10462, 10466, 10470,
   10474, 10478, 10482, 10486, 10490, 10494, 10498, 10502, 10506, 10510,
   10514, 10515, 10519, 10520, 10527, 10528, 10532, 10533, 10537, 10538,
   10539, 10540, 10541, 10542, 10543, 10547, 10548, 10552, 10553, 10554,
   10555, 10556, 10557, 10561, 10562, 10563, 10564, 10565, 10566, 10570,
   10574, 10578, 10582, 10586, 10590, 10591, 10595, 10599, 10603, 10607,
   10611, 10615, 10619, 10623, 10631, 10635, 10639, 10643, 10647, 10651,
   10656, 10663, 10674, 10675, 10685, 10689, 10693, 10697, 10701, 10705,
   10709, 10713, 10717, 10721, 10728, 10732, 10736, 10740, 10744, 10748,
   10752, 10756, 10760, 10765, 10770, 10775, 10779, 10783, 10787, 10791,
   10796, 10800, 10819, 10823, 10827, 10831, 10835, 10840, 10845, 10849,
   10853, 10858, 10862, 10866, 10870, 10874, 10878, 10882, 10886, 10891,
   10895, 10899, 10903, 10907, 10918, 10921, 10932, 10936, 10940, 10944,
   10948, 10952, 10956, 10960, 10964, 10968, 10972, 10976, 10980, 10984,
   10988, 10992, 10996, 11000, 11004, 11008, 11012, 11016, 11020, 11024,
   11030, 11036, 11042, 11048, 11054, 11058, 11076, 11080, 11087, 11089,
   11102, 11103, 11107, 11108, 11112, 11113, 11117, 11123, 11132, 11139,
   11140, 11144, 11148, 11152, 11156, 11160, 11170, 11180, 11184, 11188,
   11192, 11196, 11205, 11209, 11213, 11217, 11221, 11225, 11229, 11233,
   11237, 11241, 11251, 11255, 11259, 11263, 11267, 11271, 11275, 11286,
   11297, 11301, 11305, 11318, 11322, 11334, 11335, 11339, 11340, 11341,
   11346, 11349, 11357, 11360, 11364, 11373, 11376, 11380, 11388, 11391,
   11398, 11405, 11409, 11416, 11423, 11430, 11451, 11454, 11462, 11465,
   11473, 11476, 11484, 11487, 11496, 11501, 11508, 11512, 11516, 11520,
   11524, 11531, 11538, 11542, 11546, 11550, 11554, 11562, 11565, 11569,
   11573, 11577, 11583, 11584, 11585, 11589, 11596, 11600, 11607, 11611,
   11618, 11619, 11624, 11629, 11633, 11634, 11638, 11643, 11653, 11660,
   11667, 11686, 11694, 11701, 11708, 11715, 11722, 11729, 11736, 11743,
   11750, 11757, 11764, 11772, 11782, 11783, 11787, 11793, 11802, 11803,
   11807, 11813, 11822, 11823, 11827, 11828, 11832, 11840, 11849, 11850,
   11851, 11864, 11865, 11946, 11950, 11955, 11959, 11963, 11973, 11980,
   11981, 11982, 11986, 11987, 11988, 11989, 11992, 11993, 11996, 11998,
   12001, 12003, 12011, 12012, 12016, 12045, 12046, 12047, 12048, 12050,
   12052, 12056, 12057, 12066, 12067, 12071, 12078, 12079, 12083, 12096,
   12107, 12120, 12134, 12141, 12147, 12156, 12160, 12170, 12177, 12180,
   12191, 12195, 12200, 12205, 12214, 12215, 12226, 12229, 12232, 12236,
   12240, 12248, 12251, 12252, 12253, 12257, 12258, 12262, 12268, 12277,
   12278, 12286, 12287, 12291, 12296, 12302, 12306, 12312, 12321, 12327,
   12335, 12339, 12348, 12360, 12361, 12362, 12363, 12364, 12365, 12366,
   12367, 12368, 12369, 12370, 12371, 12375, 12376, 12377, 12378, 12379,
   12380, 12381, 12382, 12383, 12387, 12388, 12389, 12390, 12393, 12395,
   12399, 12400, 12403, 12405, 12409, 12410, 12414, 12418, 12419, 12426,
   12430, 12437, 12442, 12451, 12468, 12476, 12483, 12489, 12499, 12502,
   12509, 12515, 12524, 12538, 12539, 12546, 12551, 12562, 12563, 12578,
   12583, 12593, 12600, 12601, 12605, 12612, 12617, 12627, 12628, 12632,
   12633, 12637, 12638, 12642, 12649, 12655, 12661, 12670, 12674, 12678,
   12682, 12686, 12693, 12694, 12698, 12699, 12700, 12701, 12702, 12703,
   12707, 12708, 12709, 12710, 12711, 12715, 12716, 12717, 12718, 12719,
   12723, 12724, 12725, 12726, 12727, 12731, 12736, 12737, 12741, 12747,
   12756, 12760, 12767, 12774, 12780, 12784, 12792, 12805, 12821, 12830,
   12840, 12863, 12898, 12905, 12920, 12930, 12945, 12954, 12965, 12985,
   13007, 13030, 13035, 13044, 13051, 13058, 13064, 13073, 13079, 13088,
   13089, 13093, 13094, 13098, 13099, 13103, 13109, 13118, 13119, 13126,
   13146, 13166, 13184, 13197, 13214, 13230, 13231, 13232, 13241, 13245,
   13246, 13257, 13259, 13263, 13268, 13273, 13281, 13286, 13291, 13299,
   13305, 13314, 13321, 13322, 13326, 13330, 13331, 13335, 13340, 13350,
   13355, 13364, 13365, 13368, 13370, 13374, 13378, 13383, 13388, 13392,
   13398, 13407, 13408, 13416, 13420, 13434, 13438, 13447, 13464, 13465,
   13469, 13476, 13488, 13496, 13497, 13503, 13516, 13526, 13539, 13541,
   13545, 13546, 13550, 13551, 13552, 13556, 13562, 13564, 13568, 13569,
   13573, 13574, 13578, 13579, 13580, 13581, 13582, 13583, 13584, 13585,
   13586, 13590, 13591, 13603, 13609, 13616, 13623, 13630, 13637, 13644,
   13651, 13658, 13665, 13672, 13689, 13696, 13703, 13710, 13717, 13725,
   13742, 13749, 13756, 13763, 13770, 13777, 13788, 13795, 13802, 13809,
   13816, 13823, 13830, 13837, 13841, 13845, 13849, 13853, 13857, 13864,
   13871, 13878, 13885, 13892, 13900, 13904, 13908, 13912, 13916, 13923,
   13930, 13937, 13944, 13951, 13958, 13965, 13972, 13979, 13986, 13987,
   13991, 13992, 13995, 13997, 14001, 14002, 14006, 14007, 14011, 14012,
   14016, 14017, 14018, 14019, 14023, 14024, 14028, 14029, 14033, 14034,
   14038, 14039, 14040, 14045, 14052, 14059, 14060, 14061, 14062, 14063,
   14064, 14071, 14072, 14077, 14080, 14096, 14114, 14124, 14125, 14130,
   14138, 14137, 14150, 14149, 14163, 14167, 14168, 14181, 14180, 14203,
   14204, 14209, 14211, 14213, 14215, 14217, 14219, 14225, 14227, 14229,
   14231, 14233, 14235, 14237, 14239, 14241, 14243, 14245, 14247, 14252,
   14253, 14258, 14257, 14264, 14274, 14275, 14280, 14285, 14295, 14294,
   14306, 14305, 14313, 14312, 14329, 14334, 14335, 14339, 14340, 14355,
   14354, 14365, 14366, 14376, 14380, 14394, 14406, 14407, 14408, 14414,
   14425, 14464, 14465, 14469, 14470, 14474, 14475, 14476, 14480, 14481,
   14485, 14486, 14490, 14491, 14495, 14500, 14504, 14509, 14515, 14520,
   14528, 14529, 14533, 14538, 14542, 14547, 14555, 14556, 14560, 14561,
   14565, 14566, 14570, 14571, 14572, 14576, 14582, 14591, 14592, 14599,
   14600, 14604, 14612, 14632, 14653, 14658, 14664, 14669, 14677, 14684,
   14691, 14701, 14720, 14721, 14722, 14732, 14733, 14737, 14752, 14753,
   14754, 14755, 14759, 14763, 14767, 14771, 14775, 14782, 14783, 14787,
   14788, 14792, 14803, 14804, 14805, 14810, 14814, 14818, 14825, 14826,
   14835, 14836, 14840, 14844, 14854, 14861, 14868, 14872, 14876, 14880,
   14884, 14888, 14897, 14903, 14914, 14920, 14931, 14932, 14962, 14975,
   14988, 15004, 15020, 15037, 15041, 15042, 15049, 15065, 15066, 15077,
   15078, 15088, 15089, 15100, 15101, 15111, 15112, 15113, 15117, 15118,
   15119, 15123, 15128, 15136, 15140, 15154, 15159, 15167, 15191, 15192,
   15193, 15194, 15195, 15202, 15203, 15204, 15211, 15212, 15213, 15214,
   15215, 15216, 15217, 15218, 15219, 15220, 15221, 15222, 15223, 15224,
   15225, 15226, 15227, 15228, 15229, 15230, 15231, 15232, 15233, 15234,
   15235, 15236, 15237, 15238, 15239, 15240, 15241, 15242, 15243, 15244,
   15245, 15246, 15261, 15262, 15263, 15270, 15271, 15272, 15273, 15274,
   15275, 15276, 15277, 15278, 15286, 15287, 15288, 15289, 15290, 15291,
   15292, 15293, 15294, 15295, 15296, 15297, 15298, 15299, 15300, 15301,
   15302, 15303, 15304, 15305, 15306, 15307, 15308, 15309, 15310, 15311,
   15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321,
   15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331,
   15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340, 15341,
   15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351,
   15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360, 15361,
   15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371,
   15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379, 15380, 15381,
   15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389, 15390, 15391,
   15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15400, 15401,
   15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410, 15411,
   15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419, 15420, 15421,
   15422, 15423, 15424, 15425, 15426, 15427, 15428, 15429, 15430, 15431,
   15432, 15433, 15434, 15435, 15436, 15437, 15438, 15439, 15440, 15441,
   15442, 15443, 15444, 15445, 15446, 15447, 15448, 15449, 15450, 15451,
   15452, 15453, 15454, 15455, 15456, 15457, 15458, 15459, 15460, 15461,
   15462, 15463, 15464, 15465, 15466, 15467, 15468, 15469, 15470, 15471,
   15472, 15473, 15474, 15475, 15476, 15477, 15478, 15479, 15480, 15481,
   15482, 15483, 15484, 15485, 15486, 15487, 15488, 15489, 15490, 15491,
   15492, 15493, 15494, 15495, 15496, 15497, 15498, 15499, 15500, 15501,
   15502, 15503, 15504, 15505, 15506, 15507, 15508, 15509, 15510, 15511,
   15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519, 15520, 15521,
   15522, 15523, 15524, 15525, 15526, 15527, 15528, 15529, 15530, 15531,
   15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539, 15540, 15541,
   15542, 15543, 15544, 15545, 15546, 15547, 15548, 15549, 15550, 15551,
   15552, 15553, 15554, 15555, 15556, 15557, 15558, 15559, 15560, 15561,
   15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569, 15570, 15571,
   15572, 15573, 15574, 15575, 15576, 15577, 15578, 15579, 15580, 15581,
   15582, 15583, 15584, 15585, 15586, 15587, 15588, 15589, 15590, 15591,
   15592, 15593, 15594, 15595, 15596, 15597, 15598, 15599, 15600, 15601,
   15602, 15603, 15604, 15605, 15606, 15607, 15608, 15609, 15610, 15611,
   15612, 15613, 15614, 15615, 15616, 15617, 15618, 15619, 15620, 15621,
   15622, 15623, 15624, 15625, 15626, 15627, 15628, 15629, 15630, 15631,
   15632, 15633, 15634, 15635, 15636, 15637, 15638, 15639, 15640, 15641,
   15642, 15643, 15644, 15645, 15646, 15647, 15648, 15649, 15650, 15651,
   15652, 15653, 15654, 15655, 15656, 15657, 15658, 15659, 15660, 15661,
   15662, 15663, 15664, 15665, 15666, 15667, 15668, 15669, 15670, 15671,
   15672, 15673, 15674, 15675, 15676, 15677, 15678, 15679, 15680, 15681,
   15682, 15683, 15684, 15685, 15686, 15687, 15688, 15689, 15690, 15691,
   15692, 15693, 15694, 15695, 15696, 15697, 15698, 15699, 15700, 15701,
   15702, 15703, 15704, 15705, 15706, 15718, 15719, 15720, 15732, 15733,
   15734, 15735, 15744, 15745, 15746, 15747, 15748, 15759, 15768, 15772,
   15776, 15780, 15787, 15795, 15803, 15815, 15819, 15824, 15829, 15834,
   15839, 15844, 15852, 15853, 15857, 15861, 15868, 15874, 15883, 15888,
   15895, 15905, 15906, 15911, 15915, 15923, 15927, 15931, 15932, 15933,
   15934, 15935, 15939, 15940, 15941, 15942, 15946, 15947, 15948, 15949,
   15953, 15954, 15955, 15956, 15957, 15958, 15963, 15971, 15977, 15981,
   15986, 15990, 15997, 16001, 16008, 16012, 16016, 16023, 16027, 16034,
   16041, 16042, 16046, 16053, 16054, 16058, 16059, 16063, 16064, 16065,
   16066, 16070, 16071, 16072, 16076, 16080, 16084, 16088, 16092, 16101,
   16112, 16117, 16116, 16122, 16132, 16133, 16137, 16138, 16142, 16170,
   16171, 16172, 16177, 16181, 16192, 16199, 16207, 16215, 16222, 16229,
   16245, 16262, 16274, 16278, 16282, 16285, 16288, 16303, 16325, 16329,
   16333, 16342, 16353, 16369, 16370, 16374, 16375, 16376, 16377, 16381,
   16382, 16383, 16384, 16385, 16391, 16396, 16412, 16411, 16430, 16435,
   16446, 16451, 16468, 16467, 16484, 16497, 16498, 16499, 16500, 16503,
   16505, 16509, 16515, 16524, 16531, 16533, 16535, 16537, 16539, 16541,
   16543, 16545, 16547, 16549, 16551, 16553, 16555, 16557, 16559, 16561,
   16563, 16568, 16570, 16584, 16586, 16588, 16590, 16592, 16594, 16596,
   16598, 16600, 16602, 16604, 16606, 16608, 16610, 16615, 16616, 16619,
   16621, 16625, 16626, 16630, 16640, 16650, 16663, 16677, 16689, 16701,
   16713, 16730, 16736, 16745, 16751, 16760, 16761, 16765, 16766, 16769,
   16780, 16791, 16802, 16815, 16829, 16841, 16852, 16866, 16884, 16895,
   16906, 16920, 16931, 16945, 16960, 16973, 16984, 16989, 16997, 17002,
   17010, 17011, 17015, 17021, 17029, 17031, 17035, 17039, 17043, 17050,
   17051, 17056, 17057, 17061, 17062, 17066, 17071, 17073, 17078, 17079,
   17087, 17086, 17096, 17097, 17102, 17103, 17104, 17109, 17110, 17111,
   17115, 17116, 17120, 17132, 17141, 17151, 17160, 17174, 17175, 17176,
   17180, 17184, 17188, 17195, 17196, 17197, 17198, 17199, 17200, 17201,
   17207, 17218, 17227, 17229, 17231, 17236, 17237, 17238, 17239, 17240,
   17244, 17245, 17246, 17247, 17248, 17249, 17259, 17260, 17265, 17278,
   17291, 17293, 17295, 17300, 17305, 17307, 17309, 17315, 17316, 17318,
   17324, 17323, 17363, 17414, 17415, 17416, 17417, 17427, 17429, 17435,
   17440, 17458, 17448, 17525, 17543, 17567, 17591, 17597, 17638, 17564,
   17705, 17725, 17730, 17738, 17703, 17759, 17764, 17769, 17774, 17779,
   17784, 17792, 17793, 17796, 17805, 17815, 17833, 17834, 17838, 17839,
   17840, 17844, 17845, 17850, 17851, 17853, 17858, 17864, 17873, 17879,
   17888, 17894, 17903, 17920, 17929, 17952, 17956, 17964, 17967, 17971,
   17978, 17979, 17984, 17990, 17994, 18001, 18011, 18018, 18031, 18032,
   18036, 18037, 18045, 18046, 18051, 18059, 18060, 18065
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM",
  "CHANGED_PAGE_BITMAPS_SYM", "CLIENT_STATS_SYM", "CLUSTERING_SYM",
  "COMPRESSION_DICTIONARY_SYM", "INDEX_STATS_SYM", "TABLE_STATS_SYM",
  "THREAD_STATS_SYM", "USER_STATS_SYM", "ENCRYPTION_KEY_ID_SYM",
  "EFFECTIVE_SYM", "SEQUENCE_TABLE_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_source", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "create_compression_dictionary_allowed_expr",
  "server_options_list", "server_option", "event_tail", "$@7",
  "ev_schedule_time", "$@8", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "ts_option_engine_attribute",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "alter_database_options",
  "alter_database_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt", "show_stats_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@55", "grant", "$@56", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@57", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@58",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@59", "udf_tail",
  "sf_tail", "$@60", "$@61", "$@62", "$@63", "sp_tail", "$@64", "$@65",
  "$@66", "$@67", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1300,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  1308,  1350,  1351,  1353,  1354,  1355,   124,    38,    45,
      43,    42,    47,    37,    94,   126,  1356,    40,    41,  1357,
      59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4348

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4348)))

#define YYTABLE_NINF -3030

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7759,  3781,   279, -4348,   -92,   336, 72225,   937,  2114,  2114,
     -57,  3197, -4348, -4348, -4348, 12726,  3795, -4348, 72225,   279,
     258, 48585, 72225, -4348,   763,  2171,    45,   286,   166,  1295,
     279, 72225, -4348,  1138,  2058,   279,  1692,  1052, 64345, 49373,
     -57, 72225,  3051, 30442,  9236, -4348, 64345,   710,   801, 72225,
    1216,  1071,  1451, 72225,  1563, 65133,  1901, 22470,  2481,  1475,
    1275,   291, -4348, 16786,  2141,  2102, -4348,  2011, -4348, -4348,
    1779, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, 56465, -4348,   638,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348,  2453,    41,  1733, -4348, -4348, -4348,
   -4348,  1662, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348,   470, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, 65921, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
    2153, 72225,  2325, 72225,  1756,  2223, 72225, 62769, 72225, 72225,
    1935,  2331,  2314,  2410, -4348, -4348,  2488, -4348, -4348,  2114,
     -57, -4348, -4348, 72225, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
    1822, -4348,  1776, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
    1050,  2057, -4348, -4348, 72225, 72225, -4348,  2627,  2424,  2460,
    2476,  2265, 62769,    54, 72225, -4348,  2166,    17,  2424,  2424,
    2523,   911,  2424,  2510, -4348,  2192, -4348, -4348, -4348,  2488,
    2752, -4348,  1990,  2022,  2024, 22470, -4348,  2030,  2033,  2051,
   16786,  2056,  2061,  2070,  2082,  2087,  2100,  2103,  2118,  2118,
    2123,  2135,  2168,  2174,  1104,  2176, -4348,  2182,  1275,  2195,
   -4348, -4348,  2200,  2203,  2217,  2220, -4348,  2242,  2247,  2250,
   17598,  2253,  2276, -4348, 41487,  2280,  2289,  2298,  2304,  2321,
    2328,  2336,  2365,  2373, -4348, -4348, 16786,  2123, -4348, -4348,
   -4348,  2380,  2401,  2418,  2421,  2472,  2473,  2485,  2494,  2505,
    2506,  2528,  2536,  2539,  2541,  2551,  2553,  2123, -4348,  1159,
    2563,  2576,  1237,  2582, -4348,  2590, -4348,   446,  2595,  2118,
    2123,  2123,  2596,  2602,  2603,  2611,  2613,  2616,  2619,  2622,
    2628,  2630,  2637,  2668,  2671,  2681,  2693,  2696,  2703,  2705,
    2721,  2723,  2724, 22470, 22470, -4348, 22470, 11102, 31231, -4348,
   72225, -4348, -4348,  2053, -4348, 51737,  3344, -4348,  3152, 22470,
    1227, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348,  2313, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
     120, -4348,  2731,  2134, -4348, -4348,  2331,  2331,  2331, 72225,
    2746,  2331,  2331,  2346, 72225,  2331,  2588,  2331,  2331,  2331,
    2877,  2331,  2114, -4348, -4348, -4348, -4348,  2964,  2785,  2730,
    3184, -4348,  2583, -4348, -4348, -4348,  2860, -4348,  2739, -4348,
    2768, -4348,  2890,  2739, -4348,   607,  2739,   463, -4348, -4348,
   -4348,  2739, -4348, -4348, -4348, -4348,   539, -4348, -4348, -4348,
   -4348,  1103, -4348,  2957,   138, 62769,  3172, -4348, -4348, -4348,
    3153, 72225,   -92, -4348, -4348, 16786, -4348,  3139, -4348,   370,
    3354,  3360, -4348, -4348,  2114,  3365,   213, 72225, 57253, -4348,
    2114, -4348, -4348,  3311, -4348,   248,  1009,  2943, -4348, -4348,
    3076, -4348,  2785,  3191,   111,   368, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, 12726,  3051, -4348, -4348,
      80,  3089,  1421, -4348, -4348, 52525,  1588, -4348,  1019, -4348,
   76165, -4348,  3384, 32020, 54101, -4348,  2789, -4348, -4348, -4348,
   -4348, -4348, -4348, 74589,  2795,  1101, -4348,  3446, -4348,   184,
    2815,  2865,   184, 58041,  3338,   358,   215,   234,   255, -4348,
    3435, -4348,  3090,  3075, -4348, -4348,   290,  2977, -4348,  3480,
   -4348,  3427, -4348,  3105,  3338, -4348, -4348,   184,   184,   184,
     184,   184,  3442,   184,  3115,  3371,  3502,   897,  2191,   411,
     -24,  3076, -4348, -4348,    24,  1850, -4348,  1850, -4348,  2848,
   -4348, 72225, 72225,   -92, -4348, -4348, -4348, -4348,  2855,  2853,
   -4348, 72225,  2859, -4348,  2866, -4348,   473,   473,   473,  3571,
     473, -4348,   473,  3350,  2862,  2869,  3624,  3521,  2704,  3522,
   -4348,  3483,  3570,   400,  2875,   278,   246,  1662, -4348, -4348,
    2874, 72225,  2118, -4348,  2880,   374, -4348, -4348,  2881, -4348,
    2530, -4348,   -49,  3530,  3536,  3538, -4348,  2887, -4348, -4348,
   -4348, -4348,  1697, 29653,  3455,  2453, -4348,   303,  3659,  1246,
    3338, -4348, 54889,  1246,  3338, -4348, -4348,    41,  1424,  2048,
    3415,  3523,  3556, -4348,  2407, 58829,  1540, -4348, -4348, 57253,
   -4348, 72225, 72225,  2974, 62769, -4348, 72225, -4348,  3336,  2938,
    9445, 72225,  3551, -4348, 72225, 72225,  3192, -4348, 72225, -4348,
     221, -4348,  2275, 16786, -4348, 72225, -4348, -4348, -4348,   190,
   -4348,   236,  1259,  1392,   188, 72225, 72225, 72225,  3208,  3534,
   72225,  3020,  3727, 72225, -4348,  3473, 57253, 79317, 72225, -4348,
    3474, 72225, 72225,  2424,  1634,  2133, -4348, -4348, 16786, 16786,
    2039,  3667,  3728,  3728,  3728,  1262,  3111, 16786, 16786, 16786,
   16786, 16786, 16786,  2128,  2937, -4348, -4348,   -35, -4348,  2940,
   16786, 16786, -4348, 16786, 16786, 72225, -4348,  5344, 16786, 16786,
     554,  3610, 16786, 16786, 16786, 11102,  5162, 16786, 16786, 72225,
    3741,  2941, -4348,  2942,  2187, 16786, 16786,  2190, 16786, 16786,
   16786, 16786, 16786, -4348, -4348, 16786, 16786, 22470, 16786, 16786,
   16786, 16786, 16786, 16786,  2946, 16786,  3728,  3728, 16786, 16786,
    2209, -4348, -4348, 16786,  2633,  2633, -4348, 16786, 11914, 16786,
   -4348, -4348, -4348,  2949, -4348, -4348, -4348, 72225,  3728,  3728,
   16786, 16786, 16786,  3728,  3728, 16786,  2950,  2955, 16786, 16786,
   16786, 16786, 16786, 28864,  2958,  2959,  2960, 22470,  3667,  3667,
    3667,   783,   263,   909,   228,   225, -4348,  3268, 16786, 16786,
   -4348, -4348, 66709, -4348, -4348, -4348, 16786, -4348, 16786, 16786,
   -4348, -4348, -4348, -4348, -4348, -4348,  1958, -4348, -4348, -4348,
   18410, 22470, 22470,  2963, 22470, 22470, -4348, -4348, 22470, 22470,
   22470,  3497,  3107, 22470, 22470, 23282, 24094, 22470, 22470, 22470,
   22470,  1857,  3667, 62769, 22470, -4348, -4348,  2313,  2313, 16786,
   44639, 72225, 72225, 72225,  3400, 72225, 72225, 62769,  3071,  1558,
   72225, 72225, 57253, 72225, 79317, 72225, 72225,  2331,  3167,  3676,
   34387, -4348, -4348, -4348, -4348, -4348,  3220, -4348, -4348, -4348,
   -4348, -4348, 72225, -4348, -4348, 57253, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, 62769, -4348,   168, 57253, 50161,   174, -4348,
   73013, 72225, -4348,   -92, -4348,  3311,  3269, -4348,  2978,  1262,
    3735, -4348, -4348,  3505,  3764,  3768, 72225, 72225,  -132, -4348,
    3770,  3519, -4348, -4348,  2995,  3227, 72225, 72225, -4348, 72225,
   72225, -4348, -4348, -4348, -4348, -4348,  2998, -4348, -4348,  2313,
    4892, -4348,  3003, 57253, 57253,   168,  3330,  1392,   196, -4348,
   -4348, 77741, 72225, -4348, -4348, -4348, -4348,  3746, 16786, -4348,
   57253,  3086,  3248,  3547,  1224, -4348,  3010,  3012, -4348,  3169,
   -4348, -4348,  3019, -4348,  3021, 72225,  1044,  1101, -4348, -4348,
   -4348, -4348, -4348, 72225,  3018,  1019, -4348,  2795,  1101, 32809,
   -4348, 10290,  3583,  2313, 16786, -4348, -4348,  3034,  2424, 72225,
   72225, 72225, 72225, 72225, 57253, 72225, -4348, -4348,   159, -4348,
   -4348, -4348, -4348, -4348,   184, 72225, -4348, 72225,   184, 57253,
   -4348,   358, 72225,   184, -4348,  3584,  3279, -4348, -4348, -4348,
    3660, -4348, -4348,  3646,  3031, -4348,  3583, -4348,   358, -4348,
   -4348, -4348, -4348, -4348, -4348,  3650, -4348,  3653, -4348, -4348,
   -4348,   358, -4348, -4348, -4348,   358,   358,   358,   184,   184,
   -4348,  1255,  3761, -4348,  3040, -4348, -4348, -4348, -4348,  3044,
   -4348,  3653, -4348, -4348,  2978, 19222,  1563,  2859, 72225, 72225,
    3836, -4348, -4348,  3048, -4348,  3486,  3303, -4348,  3221, -4348,
   -4348,   200, -4348, 72225, 16786,  2333, -4348,   909, -4348, 57253,
    3729, -4348, -4348, -4348,   283, -4348,  3711, -4348, -4348,  3061,
    3142,  3828, 62769,  3224,  3151,   244, -4348,  1609, 57253,  3244,
     -92,   -92,   -92,   638, -4348, -4348,  2928,  3313,  3313, 62769,
    3070, -4348, -4348, -4348,  3385, -4348, -4348,   303, 16786, -4348,
   -4348,  1662, -4348, -4348, -4348, -4348, -4348,   378, -4348, -4348,
    1662, -4348,  3338,  3338, -4348, -4348, -4348, -4348, 67497,  2048,
    3153,  3556, -4348, 62769,  3799, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348,  1184, -4348, -4348,
   72225, 72225,  1780,   344,  3881, -4348,  3087,  3783,  1101,  1101,
    3783,  1101,  1101, -4348,  3317, -4348,  1101,  1101,   105, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  3743,
    3014,  1101,  3038,  3506,  1101,  1101,  3833,  1101,  3510,  3511,
    1101,  1101,  1101,  1101,  3320,  3777, -4348,  1101,  3654,    81,
    3425,  3656,  1101,  3518, -4348,  1331,  3785,  1101,  1101,  1101,
    1101,  1101,  3833,  3525,  3878,  1101,  1101,  3531,   531,  3532,
    3535,  1101,  3352,  1101,  1101,  1101,   309,  1101,  1101,  3537,
    1101,  3316,  3321,  1101, -4348, -4348,  1101,  1101,  1101, -4348,
    4185, -4348, -4348, -4348,  2655, -4348, -4348,  1846, -4348, -4348,
    3130,  3131, -4348, -4348, -4348, -4348,  3444, -4348,  3236, -4348,
    3456,  3331, -4348,  3192,   177, 68285, 72225, -4348, -4348,  3158,
    3159,  1072, -4348,  1262,  3161,  3164, -4348,  3578, 89081, -4348,
   -4348, 72225, -4348, -4348, -4348, -4348,  3361, -4348, -4348, -4348,
   -4348,  2666, -4348,  3914,  3533, -4348, -4348,  3806, -4348,  3607,
    3978,  3270,  3877,  3612,  2424,  3783,  3377,  3984, -4348,  3766,
   -4348,   154,  3021,  3401, -4348,  3190,   738, 72225,  3798,  2424,
   72225, 72225, 72225, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   72225, -4348, -4348, -4348, -4348, -4348, -4348,  3192,   359,  1092,
   -4348,  3728,  3193, 16786,  3196,  3199,  3200, 16786,   440,  2239,
    1162,  1416,  1696,  1320,   212, 16786,  3201, 13538, -4348,  3202,
   -4348, -4348,   363,   367,  1370,  1394,  3204, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348,  3802, -4348,   371,
    3207, -4348, -4348, -4348, -4348,  3205, -4348, 16786,  1429,   379,
     392,   237,  3218,   435,  1878,  1920,  3198, 72225, 72225,  3728,
    3211,  1447,  1467,  3728,  3213,   445,  1517,  1977,  2002,  2012,
     455,  2026,  4101,  1579,   457,   472,  1619,   476,   487, -4348,
    1639,  3214,  3215,   513,   272,  3728,  3217,   310,  3230,  3231,
    1645, 14350, 15162, 15974,   425,   556, -4348,  3225, -4348,  2942,
    3238,  3242,   330,   325,  1650,  3240,  3245,  2035,  3343,  3343,
    1659,   567,  1665,   567,   578, 62769,  3246, -4348, -4348, -4348,
   -4348,  3343,  3343,  3343,   158,   295, -4348, 16786,  3247,  3251,
    3252, 62769, 16786,   206, -4348, -4348, -4348,  2684,   250, -4348,
   -4348, -4348, -4348, -4348,  1607, -4348,  3262, -4348,  1275,  2564,
    3266, 11102, -4348,  1569,  3266,  4067,  1041,  1041, 22470, -4348,
    3265,  2003,  2419, 17598,   469, 17598,   469,  3266,  3266,  3266,
   -4348, 22470,  3267, 22470, 22470, -4348,  3667, -4348, -4348, 51737,
    3272,  3243, -4348, -4348,  1653, -4348, -4348,  3260, 72225,  1558,
   -4348, -4348,  2331, -4348, -4348, -4348,   253, -4348, -4348,   204,
   -4348,  3263,   176,  3021,  3884, -4348, 72225,  3274, -4348,  3790,
    3796,  3800,  3801, -4348, -4348, -4348, -4348,  3803, -4348,  3805,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  3281, -4348,
   72225, 28075, 62769, -4348,  3283, -4348,  3937, -4348,  3730, -4348,
   -4348,  2041,  3524, -4348, -4348, -4348, -4348, 45427,  -171, -4348,
   -4348, 72225, -4348,   220,   269,  3465,  3476, -4348,  2978, 72225,
     -92,   -92, 72225, -4348,  3872, -4348, -4348,  1217,  3300, -4348,
    3302, 62769, -4348, -4348,  2492,   245, 57253, 57253,  3304, -4348,
    3539,    83,  3713, -4348,  3540,  4102,  4102,  1009, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348,  3305,  3959,  3910,  3747,  3926,  3263, 45427, -4348, 72225,
   -4348, 25700,  3476, -4348,  3928,  3545,  3546,  -114, -4348, 59617,
   -4348,  1262,  1130,  3674, -4348,  3674,    84, -4348, -4348,  3875,
   -4348,  3703, -4348, 79317, -4348, 62769, 79317,  3942,  3327,  3329,
    3333,  3342,  3346, 75377, 16786, -4348, -4348, -4348, 10290,  3348,
   -4348, 75377, -4348, -4348, 22470,  2182, -4348, -4348,  2505, -4348,
    1262, -4348,   -92,  3960, -4348,  1262,  3353, 72225, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348,  3548,   184, -4348, -4348, -4348, -4348, -4348,  3736,
    3338,  2977,  3960,   184, 57253,  4109, -4348,   184, 72225, 72225,
     184, -4348, -4348, -4348, -4348,  3657,    24,  3565,  1850, -4348,
    2182,  1262,  3366,  3363, -4348, -4348, -4348,  2108, -4348,  1275,
     473,  3769, -4348,  3983, -4348, -4348, -4348, -4348, -4348,  1714,
    1695, -4348,   161,   187,  3778,  2226,  3367,  1101, -4348, -4348,
   -4348, -4348,  3786,  -119, -4348, 78529,  3789,  1131, 62769,  3613,
    3617, -4348, -4348,  3622, -4348, -4348,   326,  1831, -4348,  2990,
     205, -4348, -4348, -4348, -4348, -4348, 72225,  3526, -4348,  2077,
   -4348, -4348, -4348, -4348,  2907, -4348, 33598,  3854,  1377,  3386,
   -4348, -4348, -4348, 54889, 54889, -4348, -4348, -4348, -4348, 72225,
     118, -4348,  3383, -4348, 26494, -4348,  3110,  3818,   119, -4348,
   -4348, -4348, -4348, -4348,  2808,  2608, -4348, -4348,  4143,  3738,
    3943,  3944,  3608,  2608,  2228,   -92,  2415, -4348,  3219,   -92,
    2415,  3219,  3219, 72225,   -92,  3110, -4348,  2345,  1101, -4348,
   72225,  1072,   279,  1072, -4348,   214, 72225, 42275, 69073, 72225,
   72225, 72225, 72225,   279,  1666,  3297, 72225,  3297, 69861,   279,
     -92,   -92,   -92,   -92,  2907,  1101,  3297, -4348, 69861, -4348,
   72225, 72225,  3953, 72225,  3957, 72225, 72225, -4348, 62769, 72225,
   69861, -4348,  1101,  1881,  3297, 70649,  1666,  1666, 72225,   279,
   72225,  1691,   -92,   279, -4348, 72225, -4348, -4348, 72225, 72225,
     279,   279,  2326, -4348,  1691,  1691,  2562, -4348, -4348, 72225,
    3297, 69861,  3416, -4348, -4348, 60405,   -92,   -92,  3110, -4348,
    1101,  1101,  3820, -4348, -4348,  8046, 88771,  2282,  1101,  3529,
    3847,  1129, 72225, -4348,  3553,  3557, -4348, -4348, -4348, -4348,
   -4348,  1072, 69861, 71437,  3979, -4348, 16786,  4076,  4079,  4080,
    4083,  4084,  4085,  4089,    73, -4348,  4091, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  4092,
    4093, -4348, -4348,  4094, -4348, -4348,  4097, -4348,  4098,  4099,
    4100,  4103, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,   126,
    4104,  4105,  4114,  4116,  4117,  4120,  4121,  4123,  4124,  4125,
    4127,  4128,  4129,  4130,  4132,  4135,  4137,  4138,  4139,  4140,
    4141,  4145,  4146,  4148,  4149, -4348,  4151,  4152, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348,   171, 72225,  3608,  3595,  3645,
   72225,  2492, -4348,  4029,  2879,  3783,   256,  3666, 57253,  3858,
    1101,  1366,  1257,  1257,  3946, -4348,  6313, 72225, 72225,  3517,
     910, -4348,   533, -4348, 20034, -4348,  3520,  3343,  1262,  3343,
    3343,  3343,  2462, 16786, 16786,  4176,  4635,   156, -4348, 61193,
   -4348, -4348, -4348, 61193,  4635,  2120,  3343,  3527, -4348,  4087,
    4088, -4348, -4348, -4348, 16786, 16786, -4348, 16786,   315, -4348,
   16786, 16786, 16786, 16786, 16786, -4348, -4348, 22470, -4348,  3528,
    3541,  3343, -4348, -4348,  3543,  3343, 16786, -4348, -4348, -4348,
   -4348, 16786, -4348, 16786, -4348, 16786, 16786, -4348, 16786, 16786,
   -4348,  3343,  3343, 20846, 16786, 16786,  3544,  3343, -4348, 16786,
   16786, 16786, -4348, 16786,  2552, 16786,  2639, 16786,  2644, 16786,
   -4348, 16786, -4348,  3343,  3343, -4348, 16786,   500, -4348,  3297,
   -4348,  3728,  3343, -4348, 43063, -4348, -4348,   421, 28864,  3549,
     421,  3554, 22470, -4348,  3343, -4348, -4348, -4348,  1390,  2145,
   -4348, -4348, -4348,  3542,  1262, -4348, -4348, -4348, -4348, -4348,
   -4348, 22470,   332, 22470,  4067, 22470,  5162,  5162,  2577, 11102,
   -4348,  1702,  4067, -4348, -4348, 16786, 16786, 46215, 72225,   391,
   -4348,  2492,  1418, -4348,   195, -4348, -4348, 57253, -4348, -4348,
   -4348, -4348, -4348,   176, 62769,  3552, -4348, -4348, -4348, -4348,
   -4348,  3653, -4348,  3889,  3302, -4348,  3763,  3771,  3774, -4348,
   35965, -4348, -4348, -4348, -4348, 35965,   128,   168, -4348, 72225,
   57253,  3561,  3563,  3564,  3755,  3685, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348,  3476,  3559,  3338,
   -4348,  3713, -4348, -4348,  3555, -4348,  2275,  3313,  1357, 72225,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   16786,   -92, -4348,  3758, -4348, 72225, 72225, -4348, -4348, -4348,
   -4348,  1155, -4348,  3562,  2375, -4348,  2492, -4348, -4348,  3653,
    3653, -4348,  4892, 28075,  3963,   168, 57253,  4156, -4348, -4348,
    3572,  1275,  3576, 24906,  3618, -4348,  3574,  1559, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348,  3713,  3702,  4142,  3476,
   79317, 79317, 79317, -4348, -4348, -4348,  3627,  3248,  3248,  3634,
    3634,   354,  3956, -4348, -4348, -4348, -4348,  3021, -4348, -4348,
    3110, -4348, -4348, -4348, -4348, -4348,  1101,  1262, -4348, 32809,
   -4348, -4348,  1666,  3338,   479, -4348, 57253, -4348,  4021, -4348,
   -4348,  3338, -4348,  3782,   -92, -4348,   358,   358, -4348,  4198,
   -4348,  3027,  3787, -4348, -4348, 19222, -4348, 72225, -4348,  3585,
   -4348,  4068, 72225,  4248,  3598, 22470,  3600, 22470,  3110,  3856,
    3601,  4400,  3297,  3313, -4348,  3674,  4013, -4348, -4348,  3021,
   -4348,  3962,  4015,  3634,   517, -4348, -4348, -4348, -4348,   293,
    3297,  3297,  3297,  3297,  2990, -4348,   942,  1201,  1801,  3110,
     134,   205, -4348,  3609, -4348, -4348, 61193,  4346, -4348, -4348,
   -4348, -4348, -4348, -4348, 16786, -4348, -4348,  1151,   191,  1368,
   26494, 72225, 47003, -4348,  -108, -4348, -4348, -4348, -4348, -4348,
   -4348,  1101, -4348,  1101,   -92,  3891,  3894,  3897,  3908,  3912,
    3951, -4348, -4348, 72225,  4069, -4348,  3297,   -92,  1468,   -92,
     -92,   -92,   -92,  3297,   -92,   -92,  2158, -4348, -4348, -4348,
     273, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, 62769, -4348, -4348, -4348, 72225,   822, 72225,
    3642,  4188,  4189,    40, 72225,  1072,  3648,  3842,  3866, 53313,
   89073, -4348, -4348, -4348,  4095,  4095,  2478,  1058, 69861, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, 72225, -4348, -4348,  2666,  3655, -4348,  3110, -4348,
   -4348, -4348, -4348, 55677,   -92, -4348,  3895, -4348, -4348, 72225,
    3655, -4348, -4348,   678, -4348,  3826,  3905,   -92, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, 89073, 69861,
    3661, -4348,   480, -4348, -4348, -4348, -4348, 69861,  3887,  3892,
   -4348, 72225, 69861, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, 72225, -4348, -4348,
   -4348, -4348, -4348, 59617, 61193, -4348,  1633,  3033,  4185, -4348,
   -4348, -4348,  3130, -4348, -4348, -4348,   204,  4106,  1101,  2379,
    1173, -4348,  4025, -4348, -4348,  2866,  4108,  4110,  3663, -4348,
    3668, -4348,  3665, -4348, 68285,  1262,  3672,  3672,  3673,  3673,
    3679,  3679,  3682,  3578, -4348,  3683,   -92,  3297,   -92, 61981,
    3297,  1194,  3110,  1048, 89081, -4348,  3297,   -92,   -92,   -92,
     -92,  3297,  3297,  3297,  3297,  3297,   -92,   -92,   -92,   -92,
     -92,   -92,  3297,   -92,   116,   -92,   -92,  3297,  1729,   -92,
    3297,   -92,  1666, -4348,   211, -4348,  3684,  2555,  2492, 62769,
    3686, -4348,  4269,  1101,  1101,  1101,  1101, -4348,   277, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348,   204,  1154, 62769, 79317, -4348,  3244,  1583,  3921,
    3688, -4348,  2313, -4348, -4348, -4348, -4348, -4348, 72225,  2704,
   -4348, 72225, -4348, 39910, -4348, -4348, -4348, -4348,  2142,  1658,
   -4348,   303,  1424, -4348,   505,  4026, -4348, -4348,  1868,  3690,
   -4348, -4348,   558, 17598,  1732,  3343, -4348, -4348, -4348, -4348,
   -4348, 16786,  1262,  2664, -4348,  3692,  3692,  3693, -4348,  3694,
    4107,  3692, -4348,  4443, -4348, -4348,  4260,  3693,  4261, -4348,
    3692, -4348,  3793,  4494,  3765,  3709,  3710,  3714,  3343, -4348,
    3343, 16786, 16786,  1760,   338,  1766,  4477,  4032,   585,   597,
     346, -4348,  1785,  4126,  3343, -4348,  3343, -4348,  1803,  1828,
    1858,  1862,   675,  1864,  2180, -4348, -4348, 17598,  1883,   481,
     351,  3343, -4348,  1931,   850,   869,  1975, 16786,  1979, 16786,
    1983, 16786,  1988,  2004, -4348, -4348,  2014,  3720,  3720,  3716,
    3724, -4348, 72225, -4348, -4348, -4348, -4348,  3846,  3848,  3343,
    3722,   421,  3343,   421,   155, -4348,  1095, -4348, 72225, -4348,
   -4348, -4348, 16786,  1227,   172, -4348, -4348, 22470,   353, 22470,
   -4348,  3731, -4348, -4348, -4348, -4348,  4251,  4526, -4348, -4348,
    3994, -4348, -4348, -4348,  3274, -4348, -4348,   165,  4382,  3734,
   -4348, -4348, -4348, -4348, -4348, 45427, -4348,  -150,  3742, 47791,
   57253,  4163,  3338, 19222, -4348,  3209, 72225,  1072,  4317,   235,
    3907,  4270, -4348, -4348, -4348,  1262, -4348, 57253, -4348, -4348,
   -4348, 72225, 72225,  1563, -4348, 37543, -4348, -4348, -4348, -4348,
    3748, -4348, -4348, -4348,  4397, -4348,  4361, 45427,  3263, 57253,
   16786,  3702, 16786,  3750,  3756,  3757,  3759,  3767,  3772, 26494,
   26494,  4305,  4314, -4348,  4184,   209,  4184, -4348, 40698, 26494,
   26494,  3249,  2866,  4525,  4359,  4142,  3021,  3021,  3021,  3674,
    3674, -4348,  4474, -4348, -4348, -4348, -4348, -4348, -4348,   284,
   -4348, 10290, -4348, -4348, -4348, -4348, -4348,  3263, -4348,  3653,
   57253, -4348,  3476,   184,  4081,  4422, -4348,  4425, -4348,  3775,
    4426,  4186, -4348, -4348,  3297, -4348, -4348, 72225,  3301, 72225,
    3635, -4348,  4542,  3784, 22470,  4433,  3794,  4366, -4348,  3634,
    3674,  3248,   -18, -4348,   175,  1611, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348,  1677,  4493,  2647,  4352, -4348, -4348,
   -4348,  2313,  2313, -4348, -4348, -4348,   296,  4322, -4348, 26494,
    3713, 47003,  1215, -4348, -4348,  3804, 72225,  1691,   -92, -4348,
   -4348, -4348,  4491, -4348,  4495,  1845,  4239,  4446, -4348, -4348,
   -4348,   285, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348,  2228, -4348,  3807,  3110,  4209,  3809,
   16786, 72225, -4348, -4348,  3882, -4348, -4348,  3811, -4348, 43851,
    1257,  1257,  2193, -4348, -4348, -4348, 89073, -4348,  3692,  3692,
    3692, -4348, -4348,   365,  3693, -4348, -4348,  3812, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348,   586,  1252, -4348, -4348,
     586, -4348, -4348, -4348,   261,  2148, -4348, -4348, -4348, -4348,
   -4348,  3821, -4348,  3692,  3693,  3693, -4348, -4348,   586,  3692,
   -4348,  3692,  4172,  4007, -4348,   197,  3692,  3692,  3692,  3827,
    3694, -4348, -4348, -4348, -4348, -4348,  4488,   514, -4348, 89073,
   -4348, 72225, -4348,  3746,  3746, -4348, -4348, -4348, -4348,  4070,
   -4348, -4348,  1798, -4348, 72225, -4348, -4348, 72225, 72225,    27,
    1155,  3825, -4348, -4348, -4348,  3838,     8, -4348,   -55, -4348,
   -4348,  3884,  2044,  2151,  4056,  2396, -4348, 72225, 72225, -4348,
   -4348, 71437, -4348, 38332, -4348, -4348, 39121, -4348, -4348,  1187,
   -4348, -4348,  2352, -4348, -4348,  3297, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, 43851,  1101,  1101, -4348,   289, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348,  4256, 43851,  1893,
   72225,   -92,  3219,  3219,  3110,  3637, -4348,  4238, -4348,  1294,
    3021,   205, -4348, -4348,  3236, -4348,  3835, -4348, -4348, 72225,
    2227, -4348, -4348,  7065,   303, -4348,  1868,  4266, 72225, -4348,
   -4348, -4348, -4348,  4131, -4348, -4348, -4348, -4348,  4268,  5162,
   -4348, -4348,  1262, 16786,  1156, -4348, -4348,   586,  4275, -4348,
    1605, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348,  3840,  4635,  4404, -4348, -4348, -4348,
   -4348, -4348,  5162,  5162, -4348, -4348, 16786, -4348, 16786,   473,
    3845, 16786, 16786, -4348, 16786, -4348,  1328,  3849,  4014, -4348,
   -4348, -4348, -4348, -4348, -4348, 16786, -4348, -4348,  5162, -4348,
   16786, -4348, -4348, 16786, -4348, -4348, 16786, 16786, -4348,  2042,
   -4348,  2047, -4348,  2068, -4348, -4348, -4348,  3110,  3850,  3851,
    3297,  3343, -4348,  3852,  4254, -4348, -4348, -4348, 16786, -4348,
    3343, -4348,  3343,  4458,  4635,  1782, -4348,  2243, -4348, -4348,
   -4348, 16786,  1227, -4348, -4348, -4348, -4348, -4348, -4348,  4229,
   -4348,  5046, 35965,  4082,  4455, -4348, -4348, -4348, -4348,  1036,
   -4348, -4348,  2261, 72225,  4645,  4291, -4348,  1072,  4317,  4402,
   -4348,  4423, -4348, -4348, -4348, -4348,  3867,  3655,  3862, -4348,
    1101,  2512,  2296, -4348, -4348, -4348,  3868, 19222,  3879, -4348,
   28075, 57253,  4483,  3263,   916,  2866,  2093, 26494, -4348, -4348,
   -4348, -4348, -4348,  1559,  3876,  3883,  3885,  1559, -4348, -4348,
   -4348,  4434, -4348,  4184,  4184,  4437,  4438, -4348,  1791,  3068,
    1034, -4348, 16786, 16786,  4001,  4359,  3634,  3634,  4296,  3110,
   -4348, -4348,  3263, -4348, -4348, 16786,   -92,   -92,  1651,   -92,
    4543,  4578, -4348,  2305, -4348, -4348,  2337, -4348,  4428,  4209,
   -4348,  3823,  3110, 72225,  4658, -4348,  3634,  3634,  3248, -4348,
   -4348, -4348,  3634,  4304,   805, -4348,  3110, -4348,   297, -4348,
   -4348,  2973, -4348, -4348,  4660,  4661,  4557,  4663,   296, -4348,
    1535, -4348,  1215,  3476,  1542, -4348,  3913, -4348,  1228, -4348,
   -4348, -4348, -4348, -4348, -4348,  4236, -4348,  1195, -4348, 43851,
   -4348, 72225,  2357, -4348, 43851,  2178,  3909, -4348, 43851, 16786,
   -4348,  2392, -4348,   180, -4348, -4348, -4348, 53313,  4172, -4348,
   -4348, -4348,  4680,   459, -4348,  4682, -4348,   586, 61193, -4348,
   -4348, -4348, -4348,   473, -4348,  1787, -4348,   586, -4348, -4348,
    4096, -4348, -4348, -4348,   473,   586, -4348, -4348, -4348, -4348,
    1664, 72225,  1798, -4348, -4348, 59617,  2883,   -92,  3168,  3989,
   -4348,  4111, -4348,  4595,  2115,  4459,  2492,  1101,  1101,  4464,
    4664, -4348, -4348,  5811, -4348,  4527,  4466, -4348,   802, -4348,
    4698, -4348,   586,  4698,  1664,  4362, -4348,  1664,  1664, -4348,
    3334, -4348,  1798, -4348, -4348, -4348, 72225, 72225, -4348, -4348,
   -4348, -4348, -4348,  3931, -4348, -4348,  4363,  4106, -4348,  4369,
   -4348, -4348,  4327, -4348, 16786, 16786,  4368, 72225,  4372, -4348,
    4666,  4725,  3655,  1192, -4348, -4348,  2403, -4348, -4348, -4348,
    2429, -4348, -4348,  3939, -4348,  2435, -4348, -4348, -4348, 72225,
   -4348,  2438,  2443, -4348, -4348,  2466,  3219,  3219,  2975,  1893,
    3947,  2477,   -92,   -92,   -92,   -92, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348,   175,  1644,   134,  3529, 43851,  3949,  6663,
   -4348,  4244,  4273,  3954,  3955, -4348, 89073,   -92,   254, 72225,
    1508,  1262,  3958,  3964,  3965,  3966, -4348,  3971,  2524, -4348,
    3793, -4348,  2313,  3972,  3973,  2264,  3970, -4348, -4348,  3343,
    2292,   994,  2545,  4420,  4498, -4348,  4337, -4348,  2338,  1596,
    2344,  2362,  2366,  2437, -4348, -4348, -4348, -4348, -4348, -4348,
    3974, -4348, -4348,  4720,  4384,  1262, -4348, -4348,   318,   421,
   -4348,  3345, -4348, -4348,  3975,  1782, -4348,  4407, -4348,  2578,
    4610,  4503, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, 57253,  4405,  4580,
    4770,  3476,   170, 72225,  4291,  4646, -4348, -4348, -4348,  4230,
   -4348, 72225, 19222, -4348, -4348,  2512, 72225, 44639,  3986,  3748,
   -4348,  3263, 57253,  1390, -4348,  2542,   413, -4348, -4348,  4538,
    4539, -4348, -4348, 16786,  3992, 16786,  3993, -4348, -4348,  1072,
    1072, -4348,  1034, -4348, -4348,  1262,  1462, -4348,  1262, 72225,
   -4348,  4001, -4348, -4348, -4348, -4348,  1262, -4348, -4348, -4348,
   -4348,   -92,  4642,  4399, -4348, 72225, -4348,  2255,  2651, -4348,
   -4348,  3999,  3996,   -92, -4348, -4348,  3634, -4348,  3634,  3248,
   -4348,  4689, -4348, -4348, -4348,  4690,   473,   473,  4763,   473,
   -4348,  4764,  4765,  1535, -4348, -4348,  4427,  4427,  4441, -4348,
    2656,  4196, -4348,  4209,  2657, -4348, 72225,  2669,  2444,  1484,
   43851,  4447, -4348, -4348, -4348, -4348, -4348, -4348, 61193, -4348,
   -4348,  4698,  2678, -4348, -4348, -4348,  2685, -4348, -4348, -4348,
   -4348, -4348,  1664, -4348,  4016, -4348,   450,  4191, -4348, -4348,
   -4348, -4348, -4348,  3763,  3771,  3774,  1729,  1729, 16786, -4348,
   -4348, -4348, -4348, -4348, -4348,  4453,  4202, -4348, -4348, -4348,
   -4348, -4348, -4348,   -92,   -92, -4348, -4348, 59617, -4348,  4814,
    4809, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  4019, -4348,
   -4348, 16786, -4348, -4348,  2140, -4348,  4209, -4348, -4348, -4348,
   -4348,  1262,  5162,  4752, -4348, -4348,  4324,   -92,  4692,  2704,
    4467, -4348, -4348, 72225, -4348, 72225, 72225, -4348,   -92,  4024,
   -4348,  4031, -4348,  3297,  1944, -4348, -4348, -4348,  2228,   595,
   -4348, -4348, -4348,  4612, -4348,  4439, -4348, -4348,  2379,  2690,
   -4348, -4348,   -92,  2151, -4348, 72225,  3746, -4348, -4348, -4348,
   -4348,  4033,  4034, -4348, 72225,  4650, -4348, -4348, -4348, -4348,
   -4348, -4348,  4473,  4039,  4828, -4348, -4348, -4348, 16786, -4348,
   -4348, 16786, -4348, -4348,  4511,  4686, -4348, -4348, -4348, -4348,
   -4348, -4348,  4045,  3297, 16786,  4807,  1740, -4348, -4348,  3343,
   -4348, -4348, -4348,  4484,   124, -4348, -4348, -4348,  1036, -4348,
    4476, 57253, -4348,  3338,  4291,  2866, -4348,  4599, 72225, -4348,
   -4348, -4348, -4348, -4348,  4050, -4348, -4348,  3263,   503, -4348,
   -4348, -4348, -4348,  1262, 72225,  1262, 72225,  4678,  4678, -4348,
   -4348, 16786, -4348,  4852,  4062, -4348, -4348, -4348,   -92,  4715,
   -4348, -4348,  4073,  4400, -4348, -4348,  1051, -4348, -4348,  3634,
   -4348, -4348, -4348, -4348,   473, -4348,   473,   473, -4348,  4600,
    4600,  4721,  1944,  2117,  3450, -4348,   595,  2707, -4348,  1484,
     480,   -92,  1101,  1101,  1101, -4348,  1484, -4348, -4348, -4348,
   -4348, -4348,  4077, -4348, -4348,   586,   473,   586, -4348, 72225,
    4559,  4122, -4348, -4348, -4348,  2468, -4348, -4348, -4348, -4348,
   -4348, -4348,  4086,  2517, -4348, -4348,  2729, -4348, -4348, -4348,
   -4348, -4348,  4250, -4348,  4211, -4348, -4348, -4348, -4348, 72225,
   72225, -4348,  4490,   391,  1944, -4348, -4348,  2735,   391,   595,
   -4348, -4348,  4840, -4348, -4348,  1484, -4348,  4368,  4419, -4348,
   -4348, -4348,  2149, 89073,  4743,  4112, -4348,  4785, -4348,  2526,
   -4348, -4348, -4348,  4113,  4119, 16786, -4348, -4348, -4348, -4348,
    2521, -4348,  4744, -4348, -4348,  4770, -4348,  4271, -4348, -4348,
   -4348,  4302,  3713,  4115,  4133,  4134,  4147,  1742,  4144,  4150,
   -4348,  4153, 72225, -4348,   -92,  3653, 22470,  4154,  4775,   149,
   -4348, -4348, -4348, -4348, -4348, -4348, 54889, -4348, -4348, -4348,
   -4348,  4158,  4339,  1101,  4778,  4779,  1101,  1101,  1101,  1101,
    4159,  3450, -4348,  4759, -4348,  4172, 72225, -4348, -4348, -4348,
    3297,   -92,   -92, -4348,   480, -4348, -4348, -4348,  2747, -4348,
    1362,  4541, 72225, -4348, 16786, -4348, -4348,  4395, -4348, 86409,
    1835, -4348, -4348,  4161,  4155,  2481, -4348, -4348, -4348, -4348,
   -4348,  2492,   391,  2396, -4348, 89073, -4348, -4348,  3746,  4436,
   -4348,  3693, -4348, -4348,  3386,  2758,  4452, 16786,  4245,  4259,
   -4348, -4348,  4255,  4258, -4348,  4286, -4348, 72225,  2907, 73801,
    2542, -4348, -4348,  4897, -4348,  4899, 71437, 71437, -4348, -4348,
   -4348, -4348,  3886, 72225,  1101,  4416, -4348, -4348,  4164, -4348,
   -4348,   -17,   -92,  1101,  1101,  2492,  2492,  3110, 72225,  4418,
   -4348, -4348,  1101, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   72225, -4348, -4348, -4348,   504, -4348, -4348,  2547, 16786,  4798,
    4321, 72225,  1536, -4348, 87985, 87985, 72225, -4348, -4348, -4348,
   -4348,  4351, -4348, -4348,  1108, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348,  4927, -4348,  4160, -4348,
   -4348, -4348, -4348,  4909,  4591,  4913, -4348, 72225, -4348, -4348,
   -4348,  4666,  3746,  3952, -4348,   294,  4170, 16786,  1654, -4348,
    4960,  1743,  1899, -4348,  5162, -4348,   321, -4348, -4348, -4348,
   76953,  3862,  4499,  4279,  2748, -4348, 88747, -4348, -4348, -4348,
    4177,  2757,  4440,  2762,  3313, -4348, -4348,  2763, -4348, 21658,
   -4348, -4348, -4348, -4348,   -92,   -92, -4348, -4348, -4348, -4348,
   62769,  2780, -4348, 62769, -4348,   282,   282,   721,  1262, 16786,
   -4348, 16786,  4353, -4348, -4348,  4792, 72225, -4348, -4348, -4348,
   -4348, 16786, -4348, 86409, 86409, -4348, -4348, -4348, -4348,  4962,
    4613, -4348,  4615,  4192,  4853, -4348, -4348, -4348, -4348,  4868,
   86409, -4348, -4348, 62769, -4348, -4348,  5162, -4348,  2758, -4348,
   -4348,  4312,  4521, -4348,  4319, -4348,  3169, -4348, -4348,  3021,
    4777,  4346,  1390, -4348, 73801,  4307,  3746, -4348, -4348,  3110,
   -4348,  4440,  4545, -4348,  4164, -4348,  2807, -4348,  4067, -4348,
   -4348,  3450, -4348,  4418, -4348, -4348,  5004, -4348,   311,  4634,
    4636, -4348, -4348,  5811,  1262,  1262, -4348,   474, -4348, -4348,
    4766,  4860, 16786,  1262, 82469,  4205, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, 87197,
   16786, -4348,  1108,  4927, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, 86409,  1980, -4348, -4348, -4348, -4348, -4348,  4968,
    4322,   503, -4348, -4348,  4846, -4348, -4348, -4348, -4348, -4348,
   21658, -4348, -4348, -4348, -4348, -4348,  4410,  4889, -4348,  4388,
   16786, 86409, -4348,  4869, -4348,  4794,  1262,  4730,  4215, -4348,
    4214,  1262,  4905, 87985, 87985, -4348,  3952, -4348, -4348,   473,
    4801, -4348, -4348,  4331, -4348,   282,   282, -4348,   475, -4348,
    1262, 83257,  4980, 72225, -4348,  4461, -4348, -4348, 16786,  4893,
   63557, 84045,  4227, -4348, -4348, -4348, 86409, -4348,  4667,  4231,
    1390, -4348, -4348, 16786, -4348,  4887,  4469, -4348,  4232, -4348,
   86409,  1262, 86409, -4348, -4348,  4831,  8596,  2052, -4348,  4237,
   -4348, -4348,  1433, 35176,  4548,  1062,  1262,  4995, 86409, 72225,
   80105,  4898, 84833,  4857, 72225,  3746,  4859,  4863, -4348, -4348,
   -4348, -4348, -4348, 62769,  2840, -4348, -4348, 72225, -4348, -4348,
   -4348,  1782,  4480, -4348, 80893, -4348,  3016,  4605,  4429, -4348,
   -4348,  4935,  3282, -4348, -4348, -4348, 36754,  4249, -4348,  1101,
   -4348,  4685, 86409, 86409, -4348, -4348, -4348, -4348, 50949, 16786,
   -4348, -4348, -4348, -4348,  2141, -4348, 72225, 19222,  4367, 81681,
   85621, -4348, -4348, -4348, 27287, -4348, -4348, -4348,  4871, -4348,
    1262, -4348, -4348, -4348, 50949, -4348, -4348, -4348
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2038,  3138,  1334,  3090,     0,     0,     0,     0,     0,     0,
    3092,  3138,   153,  2161,  2162,     0,  1981,     8,     0,  1334,
     470,     0,     0,   165,     0,  1995,     0,  2226,     0,     0,
    1334,     0,  2219,     0,     0,  1334,  2043,  2201,   447,     0,
    3092,     0,  1400,     0,  2138,  2946,     0,     0,     0,     0,
    2056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2947,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   142,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1257,
     145,   144,   143,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1365,  1362,  1902,  1364,  1378,  1386,  1387,
    1388,  2039,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   149,     0,    44,   146,   111,   137,   138,   117,   136,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   140,   116,   130,   129,   135,   128,
     139,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     134,   106,   105,   108,   127,   119,   126,   118,   104,   109,
      45,    64,  2163,    65,    86,    81,    74,   150,    75,    93,
      95,    94,    76,   148,   141,    88,    19,    69,    89,    68,
      15,    36,    90,    91,    82,   151,    73,   147,    71,    35,
       0,  1154,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1979,     0,  1092,  3136,  3137,  3138,  1336,  1335,     0,
    3092,  2330,  1321,     0,  2415,  2414,  2417,  2419,  2420,  2421,
    2422,  2423,  2424,  2366,  2426,  2428,  2429,  2430,  2431,  2432,
    2367,  2433,  2434,  2435,  2436,  2437,  2438,  2368,  2369,  2440,
    2441,  2442,  2443,  2445,  2370,  2371,  2446,  2447,  2448,  2450,
    2451,  2452,  2453,  2454,  2455,  2456,  2373,  2457,  2374,  2458,
    2459,  2461,  2462,  2494,  2463,  2464,  2465,  2466,  2467,  2468,
    2376,  2469,  2470,  2471,  2472,  2473,  2474,  2475,  2476,  2477,
    2377,  2478,  2479,  2481,  2483,  2484,  2485,  2486,  2487,  2378,
    2488,  2489,  2490,  2492,  2379,  2495,  2497,  2498,  2500,  2502,
    2501,  2503,  2504,  2405,  2505,  2506,  2363,  2508,  2509,  2510,
    2511,  2512,  2514,  2515,  2406,  2516,  2517,  2518,  2519,  2380,
    2381,  2521,  2522,  2523,  2524,  2531,  2525,  2526,  2527,  2842,
    2530,  2382,  2532,  2383,  2536,  2535,  2537,  2326,  2538,  2327,
    2539,  2384,  2542,  2543,  2544,  2545,  2385,  2547,  2548,  2549,
    2550,  2551,  2552,  2554,  2386,  2555,  2556,  2557,  2558,  2559,
    2560,  2843,  2562,  2563,  2564,  2565,  2567,  2568,  2570,  2572,
    2573,  2574,  2575,  2577,  2578,  2588,  2579,  2580,  2581,  2583,
    2582,  2584,  2585,  2586,  2589,  2569,  2591,  2592,  2593,  2594,
    2595,  2596,  2597,  2599,  2600,  2601,  2602,  2603,  2604,  2605,
    2606,  2607,  2608,  2609,  2610,  2611,  2612,  2613,  2614,  2615,
    2616,  2617,  2618,  2620,  2621,  2622,  2623,  2407,  2387,  2625,
    2627,  2628,  2630,  2633,  2634,  2635,  2637,  2641,  2642,  2643,
    2644,  2645,  2647,  2646,  2648,  2651,  2653,  2654,  2652,  2655,
    2656,  2657,  2388,  2389,  2659,  2660,  2661,  2408,  2663,  2665,
    2664,  2409,  2666,  2667,  2668,  2670,  2671,  2672,  2673,  2674,
    2676,  2677,  2678,  2679,  2680,  2410,  2681,  2683,  2390,  2684,
    2411,  2686,  2688,  2687,  2689,  2691,  2692,  2690,  2391,  2696,
    2698,  2699,  2701,  2703,  2705,  2392,  2707,  2708,  2709,  2711,
    2710,  2712,  2393,  2713,  2714,  2720,  2721,  2722,  2723,  2846,
    2724,  2725,  2365,  2394,  2726,  2395,  2728,  2729,  2730,  2731,
    2732,  2756,  2761,  2762,  2763,  2764,  2765,  2766,  2768,  2769,
    2396,  2770,  2771,  2772,  2773,  2397,  2774,  2776,  2777,  2778,
    2779,  2780,  2781,  2413,  2782,  2783,  2784,  2785,  2786,  2787,
    2788,  2790,  2791,  2792,  2793,  2799,  2797,  2798,  2800,  2802,
    2803,  2398,  2804,  2805,  2807,  2808,  2809,  2810,  2399,  2400,
    2811,  2812,  2813,  2814,  2816,  2817,  2818,  2819,  2821,  2823,
    2824,  2825,  2826,  2827,  2828,  2829,  2830,  2401,  2831,  2832,
    2833,  2844,  2706,  2418,  2546,  2822,  2460,  2727,  2561,  2624,
    2845,  2533,  2439,  2372,  2507,  2520,  2626,  2640,  2658,  2697,
    2796,  2806,  2619,  2638,  2650,  2534,  2704,  2767,  2794,  2412,
    2820,  2576,  2528,  2364,  2480,  2482,  2639,  2675,  2416,  2540,
    2425,  2598,  2636,  2718,  2715,  2717,  2719,  2700,  2632,  2496,
    2631,  2571,  2669,  2566,  2590,  2662,  2587,  2694,  2649,  2513,
    2695,  2775,  2629,  2702,  2553,  2801,  2427,  2499,  2716,  2736,
    2834,  2693,  2685,  2682,  2529,  2733,  2734,  2735,  2737,  2738,
    2739,  2740,  2741,  2742,  2743,  2744,  2745,  2746,  2754,  2748,
    2747,  2749,  2750,  2752,  2751,  2753,  2755,  2757,  2758,  2759,
    2760,  2444,  2449,  2375,  2541,  2789,  2795,  2815,  2493,  2491,
     401,  2337,   383,  2338,  2359,  2360,  2361,  2358,  2362,   167,
       0,     0,  2935,  2934,     0,     0,  3093,  3094,   739,     0,
       0,     0,     0,     0,     0,  1982,     0,  1026,   739,   739,
       0,  1028,   739,     0,  1025,     0,   318,  3121,  3121,  3138,
    3140,  3142,  2417,  2366,  2431,     0,  2294,     0,     0,     0,
    1752,     0,  2370,     0,  2451,  2453,     0,     0,  1428,  1428,
     904,     0,     0,     0,  2476,  2477,  2300,     0,     0,     0,
    2291,  2301,  2521,  2525,  2527,     0,  2293,  2537,     0,     0,
       0,     0,  2559,  2303,     0,     0,  2602,  2604,     0,     0,
    2608,  2609,  2610,  2611,  2275,  1487,     0,   904,  2287,  2302,
    2281,  2655,  2656,     0,  2666,     0,     0,  2705,     0,     0,
    2710,  2720,     0,     0,  2778,     0,     0,   904,  2274,  2799,
    2797,  2798,  2800,     0,  2292,  2398,  2304,     0,  2814,  1428,
     904,   904,     0,     0,     0,  2825,  2826,  2833,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2553,     0,     0,  1420,     0,     0,     0,  1486,
       0,  1570,  3112,  1956,  1419,  1423,  1440,  1445,  1462,     0,
    1479,  1498,  1499,  1501,  1608,  1500,  1506,  1629,  1507,  1630,
    1505,  2288,  1504,  2298,  2297,  1503,  2289,  2299,  2290,  1421,
    1497,  2317,  2337,  2316,  1513,  3110,  1979,  1979,  1979,     0,
       0,  1979,  1979,     0,     0,  1979,     0,  1979,  1979,  1979,
       0,  1979,     0,   158,  2170,   471,   472,     0,  2989,  3002,
    3003,  2999,  3004,  3022,  3005,  3009,     0,  3001,  3070,  2350,
       0,  3008,     0,  3070,  3006,     0,  3070,     0,  3007,  3012,
    3023,  3070,  3000,  2339,  2349,  2348,  3070,  2836,  2835,  2340,
    2837,     0,  2991,     0,  2322,     0,     0,  1997,  1998,  1996,
    1242,     0,     0,  2227,  2228,     0,  2231,     0,  2232,  2235,
       0,  2935,  2929,  2931,     0,     0,     0,     0,     0,  1337,
       0,  2000,  2044,  2001,  1999,  1979,     0,   437,   446,   448,
     449,   445,  2989,     0,     0,  3094,  3105,  3120,  3115,  3114,
    3117,  3118,  3119,  1405,  3116,  3113,     0,  1401,  1403,  1404,
     962,     0,     0,  2877,  2880,  2614,  2648,  2881,  2802,  2878,
    2706,  2879,  2412,     0,     0,  2343,  2904,  2839,  2840,  2841,
    2838,  2344,  2847,     0,  2871,     0,  2131,     0,   962,  2150,
       0,     0,  2150,     0,  1911,  2134,  2139,  2137,     0,  2883,
    2103,  2884,  2130,     0,  2079,  2102,     0,  2058,  2095,     0,
    2885,  1267,  2133,     0,  1911,  1268,  2086,  2150,  2150,  2150,
    2150,  2150,     0,  2150,     0,     0,     0,     0,     0,     0,
       0,   449,  1256,  1267,  1274,  1290,  1255,  1290,  1399,  2322,
    2057,     0,     0,     0,  2944,  2945,  2943,  2229,     0,  1398,
    2020,     0,  1879,  1882,  1884,  3186,     0,     0,     0,  3181,
       0,  3187,     0,     0,  2316,     0,     0,     0,     0,     0,
    3111,     0,     0,     0,     0,     0,     0,     0,     1,    11,
       0,     0,  1428,  2347,  2814,     0,  2346,  2345,  2351,  2353,
    3047,  3068,  3074,     0,     0,     0,  1254,  1258,  1259,  1261,
    1262,  1263,     0,     0,     0,  1363,  1407,  1367,     0,  3107,
    1911,  1903,     0,  3107,  1911,  1375,  1370,  1902,  1377,  2050,
    2043,  2163,  2521,  2166,  2038,  2167,     0,  1084,  1155,     0,
    1088,     0,     0,     0,     0,  2948,     0,  1086,     0,  2132,
    1162,     0,     0,  1113,     0,     0,  3147,  1090,     0,  3091,
       0,  1347,  1358,  1744,   400,     0,   171,   168,   169,  1304,
    1975,  1323,     0,  3097,     0,     0,     0,     0,  3143,     0,
       0,     0,   583,     0,  1027,  1030,     0,     0,     0,  1029,
    1032,     0,     0,   739,  3147,  3147,  3121,  3141,     0,     0,
    1872,  1520,  1872,  1872,  1872,  1753,     0,     0,     0,     0,
       0,     0,     0,  1872,     0,  1564,  1536,     0,  1565,     0,
       0,     0,  2305,     0,     0,     0,  1517,     0,     0,  1744,
       0,  1720,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1748,  1750,  2316,  1872,     0,     0,  1872,     0,     0,
       0,     0,     0,  1433,   958,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1872,  1872,     0,     0,
    1872,  1578,  2307,     0,     0,     0,  2306,     0,     0,     0,
    2296,  2295,  2276,     0,  1581,  1583,  1582,     0,  1872,  1872,
       0,     0,     0,  1872,  1872,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1510,  1509,
    1511,     0,     0,  3112,     0,  2886,  1716,  1718,     0,     0,
    1483,  1482,     0,  1481,  1480,  2336,     0,  1422,     0,     0,
    1427,  1426,  1488,  1489,  1490,  1491,     0,  1492,  1493,  1494,
       0,     0,     0,     0,     0,     0,  1485,  1484,     0,     0,
       0,     0,  1464,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1512,     0,     0,  2331,  2277,     0,     0,  1624,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1983,
       0,     0,     0,     0,     0,     0,     0,  1979,   160,     0,
       0,  2990,  2982,  3020,  3019,  3024,     0,  3021,  3017,  3025,
    3026,  3010,     0,  2996,  3014,     0,  2998,  3016,  3015,  2995,
    3011,  3018,  2997,     0,  2993,  2985,     0,     0,  1868,  2959,
       0,     0,   166,     0,  1243,  2001,     0,  3200,  3197,  2225,
       0,  2236,  2237,  2233,     0,     0,     0,     0,     0,  2130,
       0,     0,  2220,  3106,  1339,     0,     0,     0,  2002,     0,
       0,  2203,  2212,  2208,  2210,  2214,  2202,  2205,   438,     0,
       0,   468,  2976,     0,     0,  2985,  3100,  3097,  1391,  1402,
     961,     0,     0,   964,  2903,  2021,  2022,   973,     0,   963,
       0,     0,     0,     0,     0,  2849,  2913,  2910,  2909,  2862,
    2857,  2856,  2355,  3043,  2855,     0,  2890,     0,   968,   970,
     969,  2900,   967,     0,     0,  2802,  2850,  2871,     0,     0,
    2848,     0,  2146,     0,     0,  2152,  2101,     0,   739,     0,
       0,     0,     0,     0,     0,     0,  2073,  2129,     0,  2128,
    2094,  1912,  2144,  2145,  2150,     0,  2143,     0,  2150,     0,
    2112,  2134,     0,  2150,  2070,     0,     0,  2062,  2067,  2063,
       0,  2069,  2068,  2071,  2059,  2060,  2146,  2085,  2134,  2093,
    2114,  2118,  2117,  2116,  2115,  2106,  2100,   308,  2084,  2090,
    2098,  2134,  1023,  1022,  1021,     0,     0,  2134,  2150,  2150,
     444,     0,     0,  1273,  1275,  1276,  1295,  1294,  1270,  1291,
    1292,   308,  2055,  3198,  3199,  2027,     0,  1880,     0,     0,
       0,  2280,  2279,  3183,  2278,  3191,  3193,  3177,     0,  3180,
    3179,  3188,     3,     0,     0,   676,     4,     0,     6,     0,
       0,     7,  1366,  1384,     0,  1383,    12,   152,  2354,     0,
       0,     0,     0,     0,     0,     0,  3065,     0,     0,  1137,
       0,     0,     0,     0,  1412,  1411,  1414,  2488,     0,     0,
    1955,  1949,  1952,  1951,     0,  1406,  1369,  1368,     0,  3109,
    3108,     0,  1371,  1920,  1921,  1919,  1913,  1914,  1918,  1917,
       0,  1373,  1911,  1911,  1376,  2054,  2053,  2052,     0,  2050,
    1242,     0,  2165,     0,     0,  2155,  2156,  2157,  2158,  2159,
    2154,  2153,  2168,  2169,  3145,  3146,  3144,   975,  3139,   384,
       0,     0,  2952,     0,     0,   384,     0,     0,  2023,  2023,
       0,  2023,  2023,   654,     0,   653,  2023,  2023,   745,   605,
     607,   608,   643,   609,   610,   611,   612,   613,   614,     0,
    1240,  2023,  1240,     0,  2023,  2023,  1240,  2023,     0,     0,
    2023,  2023,  2023,  2023,     0,     0,   976,  2023,     0,     0,
    1240,     0,  2023,     0,  1224,     0,     0,  2023,  2023,  2023,
    2023,  2023,  1240,     0,     0,  2023,  2023,     0,  1250,     0,
       0,  2023,     0,  2023,  2023,  2023,     0,  2023,  2023,     0,
    2023,     0,     0,  2023,  1184,  1185,  2023,  2023,  2023,   782,
    1195,   741,   769,   770,     0,  1082,  1083,  1156,  1158,  1228,
    1164,  1163,  1192,  1197,  1226,  1227,     0,  1980,  3212,  1094,
       0,     0,  1093,  3147,  1318,     0,     0,  1018,  1017,     0,
       0,  1358,  1349,  1746,     0,  1745,   382,     0,     0,  1306,
    1305,     0,  1303,  1331,  1330,  1328,     0,  1329,  1327,  1322,
    1324,  1325,  3096,     0,     0,  3098,  3102,     0,   316,     0,
       0,     0,     0,     0,   739,     0,   585,     0,  1031,  3055,
    3066,   332,   314,     0,  1033,     0,  1059,     0,     0,   739,
       0,     0,     0,  3135,  3123,  3130,  3131,  3134,  3133,  3132,
       0,  3129,  3122,  3125,  3126,  3128,  3127,  3147,     0,     0,
    1873,  1872,     0,     0,     0,     0,     0,     0,  1754,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1429,     0,
     905,  1590,     0,     0,     0,     0,     0,  1844,  1845,  1846,
    1847,  1855,  1848,  1849,  1850,  1857,  1862,  1851,  1852,  1858,
    1859,  1860,  1853,  1861,  1856,  1854,  1863,     0,  1843,     0,
       0,  1867,  1864,  1866,  1865,     0,  1721,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1872,
       0,     0,     0,  1872,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1600,
       0,     0,     0,     0,     0,  1872,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1560,     0,  2319,  2318,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1663,     0,  1663,     0,     0,     0,  1666,  1667,  1665,
    1668,     0,     0,     0,     0,     0,  1514,     0,     0,     0,
       0,     0,     0,     0,  1418,  1425,  1424,  1431,  1430,  1432,
    1436,  1441,  1434,  1438,     0,  1495,  2424,  1443,     0,     0,
    1476,     0,  1446,  1456,  1477,  1460,  1467,  1468,     0,  1463,
       0,  1465,  1466,     0,  1470,     0,  1469,  1473,  1474,  1475,
    1478,     0,     0,     0,     0,  1502,  1508,  1530,  1531,  1423,
       0,  1625,  1626,  2312,  2320,  1959,  1966,  1961,     0,  1983,
    1963,  1971,  1979,  1987,  1988,  1968,   745,  1985,  1967,   615,
    3041,  1964,  1244,  1974,  3225,  1972,     0,     0,   159,     0,
       0,     0,     0,  2187,  2189,  2197,  2188,     0,  2196,     0,
    2190,  2198,  2191,  2195,  2194,  2193,  2192,  2171,  2174,  2180,
    2199,     0,     0,   469,   473,   475,     0,   478,     0,  3013,
    3072,     0,     0,  2994,  2987,  2988,  2986,     0,  3027,  2992,
    1869,     0,  2958,  2518,  2622,     0,  1874,  2323,  3202,     0,
       0,     0,     0,  2234,     0,  2933,  2930,  1868,  2932,  2936,
    1333,     0,   155,   156,     0,     0,     0,     0,  1338,  1342,
       0,  1308,  1782,  2207,  2217,  2215,  2215,     0,   436,   461,
     456,   464,   458,   460,   459,   465,   466,   467,   462,   457,
     463,   450,     0,     0,     0,     0,  2974,     0,  3101,     0,
    3103,     0,  1874,  1392,  1391,     0,     0,     0,  2906,     0,
    2902,  2901,     0,  1110,  2333,  1110,     0,  2915,  2916,     0,
    2907,     0,  2908,     0,  2861,     0,     0,  2864,     0,     0,
       0,     0,     0,     0,     0,  2905,  2870,  2869,     0,  2872,
    2873,     0,  2876,  2924,  2925,  2922,  2928,  2923,  2926,  2927,
    2921,  2897,     0,  2148,  2151,  1876,     0,     0,  2126,  2120,
    2119,  2110,  2121,  2127,  2111,  2080,  2081,  2082,  2076,  2135,
    2125,  2123,  2104,  2150,  2124,  2122,  2064,  2065,  2066,     0,
    1911,     0,  2148,  2150,     0,     0,  2113,  2150,     0,     0,
    2150,  2097,  2099,  1280,  1281,     0,     0,  1296,     0,  1269,
    2032,  2031,     0,  2028,  2030,  2019,  1881,     0,  1886,     0,
       0,     0,  3178,  3194,  3176,  3182,  3189,  3190,  3175,  2320,
       0,   677,     0,     0,   680,     0,     0,  2023,  1385,    13,
      10,  1145,     0,     0,  2352,     0,     0,     0,     0,     0,
       0,  3078,  3076,     0,  3077,  3075,  3032,  3047,  3069,     0,
    1117,  1266,  2328,  1265,  1264,  1260,     0,     0,  1417,  1414,
    1408,  1415,  2332,  1954,   965,  1950,     0,     0,  1907,  1904,
    1906,  1381,  1379,     0,     0,  1382,  1380,  1372,  1374,     0,
       0,  1977,  2048,  2051,     0,  2164,     0,     0,   975,   728,
     730,   737,   736,   738,     0,  1089,  2957,  2956,     0,     0,
       0,     0,     0,  1087,     0,     0,   603,  2024,     0,     0,
     603,     0,     0,     0,     0,     0,   746,  2132,  2023,  1241,
    1076,  1019,  1334,  1019,  1201,     0,  1076,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,     0,  2023,     0,  1210,     0,  1166,
       0,     0,     0,     0,     0,     0,     0,  1211,     0,     0,
       0,  1167,  2023,     0,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,  1334,  1253,     0,  1252,  1251,     0,     0,
    1334,  1334,     0,   779,     0,     0,     0,   775,   776,     0,
       0,     0,     0,  1188,  1189,     0,     0,     0,     0,   742,
    2023,  2023,     0,  1160,  1157,   975,   975,     0,  2023,  3220,
    1146,     0,     0,  1091,     0,     0,  1315,  1351,  1345,  1350,
    1348,  1358,     0,  1834,     0,   402,     0,     0,     0,     0,
       0,     0,     0,     0,   308,   173,     0,   203,   207,   215,
     219,   205,   300,   302,   211,   213,   217,   225,   237,   223,
     241,   227,   229,   231,   233,   221,   235,   209,   247,     0,
       0,   243,   245,     0,   249,   251,     0,   239,     0,     0,
       0,     0,   246,   204,   208,   250,   216,   220,   248,   206,
     301,   303,   212,   214,   244,   218,   222,   224,   226,   242,
     228,   230,   232,   234,   236,   240,   238,   210,   252,   308,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   201,     0,     0,   285,  1976,
    1332,  1326,  3095,  3099,   740,   975,     0,     0,     0,     0,
       0,     0,   584,     0,   587,     0,     0,     0,     0,  3074,
    2023,     0,     0,     0,     0,  1060,   975,     0,     0,     0,
     383,  3170,     0,  3124,     0,  1586,     0,  1678,  1728,  1678,
    1678,  1678,     0,     0,     0,     0,     0,     0,  1587,     0,
    1534,  1588,  1589,     0,     0,     0,  1678,     0,   906,     0,
       0,  1537,  1538,  1527,     0,     0,  1609,     0,  1724,  1539,
       0,     0,     0,     0,     0,  1610,  1749,     0,  1751,  2320,
       0,  1678,  1594,  1545,     0,  1678,     0,  1546,  1611,  1612,
    1613,     0,  1615,     0,  1596,     0,     0,  1599,     0,     0,
    1548,  1678,  1678,     0,     0,     0,     0,  1678,  1550,     0,
       0,     0,  1549,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,  1528,  1678,  1678,  1602,     0,     0,  1604,     0,
    1561,  1872,  1678,  1715,     0,  1655,  1654,  1672,     0,     0,
    1672,     0,     0,  1669,     0,  1656,  1653,  1652,     0,     0,
    2887,  2888,  2889,  1078,  1717,  1518,  1437,  1442,  1435,  1439,
    1444,     0,     0,     0,  1455,     0,     0,     0,     0,     0,
    1447,  1458,  1461,  1628,  1616,     0,  1744,     0,     0,  1229,
    1970,     0,  2132,  1969,   616,   617,   619,     0,  1246,  1245,
    1965,  3226,  1962,  1244,     0,   161,   163,  2185,  2182,  2181,
    2183,   308,  2184,     0,  2200,  2172,  2476,  2799,  2800,   482,
       0,   454,   453,   455,   479,     0,     0,  2985,  3071,     0,
       0,  3036,  3039,     0,     0,     0,  2980,  1871,  2969,  2965,
    2970,  2972,  2968,  2971,  2973,  2966,  2967,  1874,     0,  1911,
    1875,  1782,  3196,  3201,  1353,  1354,  1358,     0,     0,     0,
     157,  1946,  1947,  1941,  1943,  1940,  1942,  2222,  1944,  1945,
       0,     0,  2221,     0,  1340,     0,     0,  1313,  1312,  1314,
    1307,  1309,  1310,     0,     0,  1783,     0,  2213,  2216,   308,
     308,  2204,     0,     0,     0,  2985,     0,     0,  3104,  1394,
       0,     0,     0,     0,     0,  1393,  1395,  1396,  1759,  1758,
    1789,  1786,  1785,  1788,  1787,  1790,  1782,  1868,  1893,  1874,
       0,     0,     0,   972,   974,   971,     0,     0,     0,  3045,
    3045,     0,     0,  2920,  2912,  2914,  2911,  2863,  2356,  3044,
       0,  2893,  2894,  2895,  2891,  2892,     0,  2898,  2896,     0,
    2875,  2147,     0,  1911,     0,  2109,     0,  2078,     0,  2096,
    2061,  1911,  2077,  2107,     0,  2075,  2134,  2134,  2074,  1278,
    1277,     0,  1282,  1293,  2026,     0,  1885,     0,  1883,  3184,
    3192,     0,     0,     0,     0,     0,     0,     0,     0,   682,
       0,   678,     0,     0,  1106,  1110,     0,  1107,  1108,  1109,
    3048,  2333,     0,  3045,  3061,  3035,  3034,  3033,  3030,     0,
       0,     0,     0,     0,  1138,  1140,     0,     0,     0,     0,
    1114,  1118,  1119,  1413,  1416,  1409,     0,  2242,  1948,  1410,
    1909,  1910,  2314,  1908,     0,  1916,  1915,     0,  1868,  2322,
       0,     0,     0,  2324,     0,  1931,  1932,  1930,  1933,  2160,
    1934,  2023,   729,  2023,     0,     0,     0,     0,     0,     0,
       0,   385,   394,     0,     0,  2949,  2951,     0,   631,     0,
       0,     0,     0,     0,     0,     0,     0,   339,   638,  1097,
     745,   644,   658,   659,   655,  1098,   642,   645,  1099,  3227,
     657,   656,   606,     0,   816,  1077,  1020,  1076,  1168,  1076,
       0,     0,     0,   819,  1076,  1019,     0,  1056,  1077,   815,
       0,  1235,  1234,  1236,   817,   817,     0,     0,     0,  1938,
    1939,  1937,  1935,  1936,   758,  1928,  1929,  1925,  1926,  1924,
    1927,   752,     0,   764,  1190,  1323,  1191,  1841,     0,   754,
     755,   756,   777,     0,     0,   766,     0,  1208,  1209,     0,
    1171,  1206,  1207,  1244,   747,     0,     0,     0,   795,   796,
     794,   771,   778,  1238,  1237,  1239,   750,   751,     0,     0,
    1225,  1900,  1907,   784,   759,   783,   753,     0,     0,     0,
    1219,  1179,     0,   793,   791,   788,   790,   789,   792,   767,
     760,   761,   763,   762,   774,   765,  1178,  2199,   748,   749,
     780,   781,   757,     0,     0,  1161,  1240,  1240,  1196,  1193,
    1194,  1159,  1165,  1198,   639,   640,   615,     0,  2023,  3222,
       0,  1148,  1150,  3148,  3149,  1884,     0,     0,     0,  1837,
       0,  1838,  1835,  1836,     0,  1747,     0,     0,     0,     0,
       0,     0,     0,     0,   172,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   317,   975,   734,     0,   620,     0,     0,
       0,   327,     0,  2023,  2023,  2023,  2023,   321,   745,   589,
     591,   592,   593,   594,   595,   598,   596,   599,   597,   600,
     601,   602,   615,     0,     0,     0,  3067,  1137,     0,     0,
       0,   338,   337,  1065,  1067,  1066,  1062,  1061,     0,     0,
    2241,     0,  2240,   815,   311,   661,   663,   666,   664,   745,
     743,  2012,  2014,   668,     0,     0,   348,  3165,     0,     0,
     579,   578,     0,     0,     0,  1678,  1631,  1679,  1633,  1634,
    1637,     0,  1755,     0,  1524,   918,   918,   902,  1736,   898,
     890,   896,  1741,     0,   874,   888,  1732,   902,  1734,  1737,
     918,  1742,  1532,     0,     0,     0,     0,     0,  1678,  1639,
    1678,     0,     0,     0,     0,     0,     0,  1722,     0,     0,
       0,  1529,     0,  1620,  1678,  1643,  1678,  1641,     0,     0,
       0,     0,     0,     0,     0,  1647,  1645,     0,     0,     0,
       0,  1678,  1649,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1646,  1648,     0,     0,     0,     0,
       0,  1635,  1686,  1680,  1681,  1682,  1683,     0,     0,     0,
    1670,  1672,     0,  1672,     0,  1657,  1584,  1515,     0,  1719,
    1453,  1448,     0,  1457,     0,  1472,  1471,     0,     0,     0,
    1627,     0,  2313,  2321,  1960,  1958,  1231,  1230,  1973,  1986,
    2132,  3042,  1957,   164,     0,  2186,  2179,  2175,     0,   474,
     483,   476,   480,   481,   477,     0,  3073,  3081,     0,     0,
       0,     0,  1911,     0,  2960,     0,     0,  1358,  1360,  2238,
       0,  2939,  2940,  2938,  2937,  2224,  2223,     0,  1343,  1344,
    1311,     0,     0,  2016,  2015,     0,  1992,  1994,  2003,  2006,
       0,  2218,  2209,  2211,     0,   451,     0,     0,  2979,     0,
       0,  1868,     0,     0,  1759,  1789,  1786,  1785,  1788,     0,
       0,     0,     0,  1772,  1780,  1778,  1780,  1775,     0,     0,
       0,  1868,  1884,     0,  1877,  1893,  2860,  2859,  2858,  1110,
    1110,  1111,     0,  2852,  2851,  2918,  2917,  2919,  2866,   745,
    2865,     0,  2874,  2149,  2087,  2092,  2091,  2105,  2072,   308,
       0,   309,  1874,  2150,     0,     0,  1302,     0,  1298,  1297,
       0,  1284,  2029,  1887,     0,  3195,     5,     0,     0,     0,
       0,   681,     0,   691,     0,     0,     0,     0,  3203,  3045,
    1110,     0,  3045,  3058,     0,     0,  3031,  1143,  1141,  1142,
    1144,  1139,  1122,  1121,  1123,     0,     0,     0,  1136,  1135,
    1134,     0,     0,  1103,  1120,   966,     0,  2250,  1905,     0,
    1782,     0,  1874,  1978,  2049,  2048,     0,     0,     0,   388,
     391,   389,     0,   390,     0,     0,  2954,     0,  2950,   641,
    1096,   745,   633,   635,   636,   637,   343,   342,   344,   345,
     347,   346,   341,  1102,     0,   651,     0,     0,     0,     0,
       0,  1076,  1015,   818,     0,   813,   820,     0,  1016,     0,
       0,     0,     0,   801,   803,   804,     0,   887,   841,   832,
     918,   835,   834,   983,   902,   846,   893,     0,   895,   892,
     867,   866,   883,   865,   870,   854,   983,   983,   853,   886,
     983,   871,   869,   873,     0,   874,   894,   879,   868,   872,
     864,     0,   885,   918,   902,   902,   850,   884,   983,     0,
     877,   918,   806,   922,   852,   990,     0,     0,   918,   920,
     898,  1217,  1218,  1064,  1063,  1216,     0,     0,  1174,     0,
    1175,     0,  1177,   973,   973,   772,  1182,  1205,  1204,     0,
    1183,   773,  1247,  1173,     0,  1901,  1172,     0,     0,     0,
    1308,     0,   786,   785,  1101,  3216,  3213,  3214,     0,  3224,
    3223,  3225,     0,     0,     0,   353,  3150,     0,     0,  1357,
    1359,     0,  1346,     0,   175,   176,     0,   177,   178,     0,
     179,   180,     0,   181,   174,   286,   306,   307,   254,   291,
     280,   290,   281,   293,   292,   294,   282,   283,   296,   297,
     295,   284,   202,   279,   253,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   268,   271,   272,   269,   270,
     265,   299,   266,   298,   267,   273,   274,   275,   277,   278,
     304,   305,   735,     0,  2023,  2023,   320,   745,   622,   624,
     625,   626,   627,   630,   628,   629,   327,     0,     0,   326,
       0,     0,     0,     0,     0,  2132,   322,     0,  3049,  3051,
     333,  1117,  3210,  3211,  3212,   324,     0,   667,   312,     0,
       0,   662,   660,   975,  2013,   665,     0,     0,   403,   799,
     800,   798,   797,     0,  3171,   582,   580,   581,     0,     0,
    1562,  1632,  1756,     0,     0,   919,  1729,   983,     0,  1739,
       0,  1740,   900,   899,   891,   889,  1743,   897,   875,  1733,
    1738,  1735,  1731,  1533,     0,     0,  2308,  1535,  1526,  1525,
    1640,  1638,     0,     0,  1568,  1592,     0,  1569,     0,     0,
       0,     0,     0,  1541,     0,  1544,     0,     0,  1622,  1644,
    1642,  1595,  1614,  1571,  1597,     0,  1547,  1516,     0,  1572,
       0,  1577,  1575,     0,  1650,  1551,     0,     0,  1558,     0,
    1556,     0,  1557,     0,  1559,  1601,  1603,     0,     0,     0,
       0,  1678,  1687,     0,  1688,  1674,  1673,  1660,     0,  1664,
       0,  1661,     0,  1675,     0,  1810,  1079,     0,  1452,  1454,
    1450,     0,  1459,  1617,  1233,  1232,   618,   162,  2177,     0,
    2173,     0,     0,     0,     0,  2984,  3038,  3037,  3040,  3079,
    3028,  2961,     0,     0,  2033,  2035,  1355,  1358,  1360,     0,
    1356,     0,  2239,  2941,  2942,  1341,     0,  1840,  1993,  2041,
       0,     0,     0,  2010,  2311,  2310,  2318,  2027,  2011,  2018,
       0,     0,     0,  2975,     0,  1884,     0,     0,  1797,  1791,
    1793,  1794,  1796,     0,     0,  1759,  1758,  1397,  1774,  1773,
    1781,     0,  1779,  1780,  1780,     0,     0,  1768,  1767,     0,
    1831,  1798,     0,     0,  1888,  1877,  3045,  3045,     0,     0,
    2899,  2088,  2108,  2089,  2083,     0,     0,     0,     0,     0,
       0,  1286,  3185,     0,   687,   674,     0,   672,   676,     0,
     669,     0,     0,   685,     0,  1105,  3045,  3045,     0,  3059,
    2335,  2334,  3045,     0,  3045,  1126,     0,  1125,  1131,  1128,
    1127,     0,  1116,  1115,     0,     0,     0,     0,  2243,  2245,
       0,  1953,  1874,  1874,  2323,  2046,     0,  2325,  1874,   731,
     787,   393,   392,   398,   399,     0,  2953,  2132,   340,     0,
    1170,     0,     0,   693,     0,     0,     0,   821,     0,     0,
    1074,     0,  1073,  1907,  1057,  1058,  1200,   815,   806,   840,
     833,   851,   977,   988,   986,   980,   876,   983,     0,   984,
     985,   837,   849,     0,   860,     0,   855,   983,   863,   859,
     875,   878,   880,   882,     0,   983,   848,   847,   857,   844,
     907,     0,  1247,   807,   932,     0,     0,     0,     0,  1484,
     926,     0,   995,     0,     0,   935,     0,  2023,  2023,   937,
       0,   946,   822,   923,   925,   824,     0,   949,     0,   991,
     990,   839,   983,   990,   907,     0,   921,   907,   907,  1214,
       0,  1215,  1247,  1842,  1223,  1222,     0,     0,  1249,  1203,
    1899,  1221,  1220,     0,  1176,   768,     0,     0,  3218,     0,
    3221,  1112,     0,   363,     0,     0,  1147,     0,   356,   354,
     365,     0,  1320,  1316,  1839,   182,     0,   184,   186,   191,
       0,   193,  2357,     0,   196,     0,   198,  2329,   200,     0,
     187,     0,     0,   287,   289,     0,     0,     0,  2132,   325,
       0,     0,     0,     0,     0,     0,   586,   650,   646,   652,
     649,   590,  3050,     0,     0,  1114,  3220,     0,     0,   975,
     744,     0,     0,     0,   404,   406,     0,     0,   413,     0,
       0,  1757,     0,     0,     0,     0,  1730,     0,     0,  1521,
    1532,  2309,     0,     0,     0,     0,  1725,  1727,  1723,  1678,
       0,     0,     0,     0,     0,  1519,     0,  1618,     0,     0,
       0,     0,     0,     0,  1555,  1553,  1554,   992,  1606,  1605,
       0,  1636,  1684,     0,  1690,  1671,  1659,  1658,     0,  1672,
    1585,     0,  1818,  1819,     0,  1811,  1812,     0,  1449,     0,
       0,     0,   491,   486,   494,   488,   490,   489,   495,   496,
     497,   498,   492,   487,   493,   485,   484,     0,     0,     0,
    3088,  1874,  2033,     0,  2035,     0,  1991,  1352,  1361,     0,
    1784,     0,     0,  2004,  2007,     0,     0,     0,     0,     0,
     452,  2978,     0,     0,  1799,  1868,  1397,  1760,  1776,     0,
       0,  1769,  1777,     0,     0,     0,     0,  1825,  1826,     0,
       0,  1829,  1832,  1833,  1795,  2315,  1897,  1896,  1878,     0,
    1390,  1888,  2854,  2853,  3046,  2867,  1279,  1301,  1300,  1299,
    1283,     0,     0,  1288,   675,     0,   673,     0,     0,   671,
     679,     0,   686,     0,  1104,  3056,  3045,  3062,  3045,     0,
    3063,     0,  1132,  1133,  1130,     0,     0,     0,     0,     0,
    2244,     0,     0,  2251,  2253,  2047,  1902,  1902,     0,   634,
       0,   696,  1169,     0,     0,   814,     0,     0,     0,  1045,
       0,     0,  1070,   802,   805,   979,   978,   982,     0,   981,
     836,   990,     0,  1080,   856,   881,     0,   858,   911,   912,
     913,   845,   908,   910,   997,  1199,   940,   950,   952,   954,
     953,   941,   939,     0,     0,     0,     0,     0,     0,   959,
     929,  2285,   960,  2286,  2282,     0,     0,   955,   956,   957,
     943,   936,   944,     0,     0,   938,   945,     0,   924,     0,
       0,   934,   927,   928,   838,   842,   843,   829,     0,   830,
     831,     0,  1212,  1202,  1186,  1248,     0,  3217,  3215,  3219,
     364,   352,     0,     0,  1149,  1151,     0,     0,  1152,     0,
       0,  1319,   183,     0,   192,     0,     0,   197,     0,     0,
     188,     0,   276,     0,  1034,   648,   647,   623,     0,  1040,
     328,   329,   331,     0,  3052,     0,  3053,   319,  3222,     0,
     313,   310,     0,     0,  3166,     0,   973,  3164,   416,   414,
     415,     0,   409,   411,     0,     0,  1563,   916,   914,   917,
     915,   903,     0,     0,     0,  1566,  1567,  1593,     0,  1651,
    1591,     0,  1542,  1619,     0,     0,  1598,  1573,  1576,  1574,
    1579,  1580,     0,     0,     0,     0,  1692,  1676,  1677,     0,
    1820,  1543,  1813,     0,     0,  1451,  2178,  2176,  3079,  3082,
       0,     0,  2981,  1911,  2035,  1884,  1989,     0,     0,  2040,
    2042,  2005,  2008,  2009,  2320,  2025,  2017,  2977,     0,  1801,
    1792,  1771,  1770,  1763,     0,  1765,     0,  1821,  1821,  1830,
    1898,     0,  1894,     0,  1889,  1890,  1389,  1285,     0,     0,
    1271,   688,     0,   678,   692,   670,  3207,  3060,  3064,  3045,
    1124,  1129,  2248,  2249,     0,  2246,     0,     0,  2252,  1922,
    1922,     0,  1034,     0,   716,   694,  1040,     0,  1069,  1045,
    1907,     0,  2023,  2023,  2023,   808,  1046,  1047,  1049,  1050,
    1053,  1072,     0,   989,   987,   983,     0,   983,   909,     0,
    1001,     0,   942,  2284,  2283,     0,   931,   933,   947,   948,
     940,   825,     0,     0,  1181,  1187,     0,   350,   355,   366,
     367,  1095,  3153,  3151,     0,   185,   194,   195,   199,     0,
       0,   288,     0,  1229,  1035,  1036,  1038,     0,  1229,  1041,
    1042,  1044,     0,  3054,   315,  1045,  3163,   361,     0,   405,
     407,  3172,   413,     0,     0,     0,  1522,     0,  1726,     0,
    1621,  1623,   993,     0,  1689,     0,  1713,  1712,  1714,  1685,
       0,  1662,     0,  1817,  1816,  3088,  3080,  3083,  2962,  1990,
    2034,     0,  1782,     0,     0,     0,     0,     0,     0,     0,
    1895,     0,     0,  1287,     0,   308,     0,     0,     0,     0,
    3204,  3205,  3057,  2247,  2255,  2254,     0,  2045,  2037,  2955,
     809,     0,     0,  2023,     0,     0,  2023,  2023,  2023,  2023,
     711,   717,   719,     0,   810,     0,     0,   811,  1075,  1052,
       0,     0,     0,  1048,  1907,   861,  1081,   862,     0,  1000,
       0,  1005,     0,   930,     0,  1213,  1180,   357,  1153,   518,
       0,  3152,  1317,     0,     0,     0,   335,  1037,   323,   336,
    1043,     0,  1229,   353,   362,     0,   386,   410,   973,     0,
     901,   902,  1540,  1607,  1691,     0,     0,     0,     0,  1707,
    1694,  1695,     0,     0,  2983,     0,  3089,     0,   965,     0,
    1868,  1764,  1766,     0,  1822,     0,  1834,     0,  1892,  1891,
    1289,  1272,     0,     0,  2023,     0,  3208,  1923,   705,   698,
     701,     0,     0,  2023,  2023,     0,     0,     0,     0,     0,
     695,   718,  2023,   812,  1068,  1051,  1054,  1055,  1071,   998,
       0,  1002,  1003,  1004,     0,   996,   951,     0,     0,   359,
     544,  2450,   530,   516,     0,     0,  2635,   520,   368,   371,
     369,  2038,   370,   376,     0,   377,   378,   379,   380,   381,
     372,   542,   543,   375,   373,   374,     0,  2341,     0,  2342,
    2403,  2402,  2404,     0,     0,     0,   189,     0,  1039,   330,
     334,   365,   973,  3173,   412,  3159,     0,     0,     0,  1702,
       0,     0,     0,  1700,     0,  1696,     0,  1693,  1698,  1697,
       0,  2036,  2256,  2619,     0,  1803,     0,  1800,  1824,  1823,
       0,     0,   689,     0,     0,  3209,   705,     0,   703,     0,
     699,   697,   700,   727,     0,     0,   723,   724,   722,   720,
       0,     0,   713,     0,   999,     0,     0,   826,   358,     0,
     351,     0,     0,   529,   532,     0,     0,   535,   525,   524,
     526,     0,   519,   518,   518,   572,   523,   569,   568,   561,
       0,  3154,     0,     0,     0,  3167,   396,   395,   387,     0,
     518,  3157,  3158,     0,  3161,  1523,     0,  1703,     0,  1705,
    1704,     0,     0,  1709,     0,  1710,  2862,  3087,  3086,  3084,
       0,  2242,     0,  1802,     0,     0,   973,  1828,  1827,     0,
     683,   689,  3207,   702,     0,   709,     0,   707,   710,   725,
     726,   716,   712,     0,   721,  1011,     0,  1010,     0,  1007,
    1006,   828,   827,   922,   360,   545,   556,   559,   551,   531,
       0,     0,     0,   521,   518,     0,   505,   503,   504,   510,
     511,   512,   513,   514,   515,   506,   509,   507,   508,   518,
       0,   421,     0,     0,  3155,  3156,   190,   367,   386,   397,
    3174,  3160,   518,     0,  1701,  1699,  1708,  1711,  3085,     0,
    2250,     0,  1804,  1805,  1808,   690,   684,  3206,   704,   706,
       0,   715,   714,  1013,  1014,  1012,     0,     0,   823,     0,
       0,   518,   552,     0,   527,     0,   536,     0,     0,   419,
     575,   573,   417,   563,   563,   349,  3168,  3162,  1706,     0,
    2258,  1807,  1809,     0,   708,     0,     0,   553,   559,   549,
     557,   518,     0,     0,   517,     0,   571,   420,     0,     0,
       0,   518,     0,   562,   564,   566,   518,  2257,     0,  2262,
       0,  1009,  1008,     0,   550,     0,     0,   548,   528,   533,
     518,   576,   518,   430,   429,     0,     0,   499,   570,     0,
     422,  3169,     0,     0,  2269,  1810,   554,     0,   518,     0,
     518,     0,   518,     0,     0,   973,     0,     0,   418,  2260,
    2261,  2259,  2264,     0,     0,  2266,  2267,     0,  2230,  1814,
    1806,  1812,     0,   546,   518,   534,   539,     0,     0,   425,
     500,   501,     0,   427,  2268,  2263,     0,  2270,  2272,     0,
    1815,     0,   518,   518,   535,   538,   577,   574,     0,     0,
     423,   424,   435,   434,     0,  2265,     0,     0,     0,   518,
     518,   540,   443,   441,   518,   431,   439,   433,     0,   440,
     502,   428,  2271,  2273,     0,   426,   442,   432
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4348, -4348, -4348, -4348, -4348, -4348,  -103, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348,  1496, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348,  1738,  1745, -4348, -4166, -4348, -4348,  1744,
   -4348,   329,  1746, -4348,   327, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348,  1734, -4348,   323, -4348, -4348, -4348, -4348, -4348, -4348,
   -2897, -1609, -4348, -4348, -4348, -4348, -4348, -4348,  1105, -4348,
   -4348, -4348,   322,  1305,  3829, -4348,   312, -4348,    -1, -4348,
   -4348, -4348, -4132,  -118,  -291, -4348, -4348,    28,  3322,  -290,
   -4068, -4348, -4348, -4348, -4348, -4348, -4348,   314, -4348, -4348,
     121, -4348, -4348, -2216, -4348, -4348, -4348, -4348, -4348, -4348,
    -474,  -431,  2556, -4348, -4348, -4348,  5048, -4348,  3991, -4348,
   -2817,  2113, -4348, -4348, -4348, -4348, -4348,  2181, -2751, -4348,
   -4348, -4348,   965, -4348, -4348, -4348,  -327,    29, -4348,    31,
   -4348,    36, -4348,    37, -4348,    38,    39,    44,    46, -4348,
      47, -4348, -4348,  -435, -4348, -4348, -4348, -4348,    49, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348,  -334, -4348, -4348,  -238,
   -4348, -4348,  -319,    51, -4348,  -303,    56, -4348,    57, -4348,
    -246, -4348,  -244, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348,  1145,  2653,  3922,  2648, -2808, -4348,  1564,
   -4348, -4348,   711, -4348, -4348,   863, -1589, -4348,  2434, -2601,
   -2583, -1170, -2571, -4348, -4348, -4348, -3217, -3210, -1387, -4348,
   -1394, -2563, -2562, -2527, -2370,   693,  1716,  1719,  1717,    30,
   -4348,   920,   280, -4348, -4348, -4348, -3553,  -167, -4348, -3890,
     507, -4348, -4348, -4348, -4348, -3006, -4348, -4348,  -243, -4348,
   -4348,  -177,  -172, -4348,   123, -4348,  2708, -4348, -4348, -2463,
    -430,  2586, -4348, -2051, -1793, -2336, -1655, -1654, -4348, -4348,
   -4348,  1161,  1739,   871, -4348,   872, -1682,   819, -3726, -4348,
   -4348, -2646, -2743, -4348, -4348, -4248, -4348, -2592,  1354, -4348,
   -4348, -2569, -4348, -4348, -4348,  1322,  1324, -3373,  2269, -1569,
   -4348,   502,   387,  -662, -4348,  -168, -4348,   824, -4348, -4348,
   -4348, -3964, -4348,   -42, -2666,    71, -4348, -4348, -3151, -3748,
   -1650, -4348, -4348, -3421, -2405,  1655, -4348, -4348,   137, -4348,
   -4348, -4348, -4348, -3460, -4348, -1653, -2248, -4348, -4348,  2691,
     298, -4348,   238,   299, -4348,   229, -3146, -4348,   287, -1497,
    2000, -4348,  3271, -3131, -2574, -4348, -3493, -2786,   546, -2340,
   -4348,   874, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -2130,
   -4348, -4348,   754,  1209, -4348,  2090,  1795, -4348,  2099, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  2629, -4348,
     482, -1515,  2631, -4348,  2634,   622, -2470, -1172, -4348, -1169,
   -4348, -1674,  3464, -2485, -2094, -4348, -4348, -4348, -4348, -4348,
    3507, -4348, -4348, -4348,  3187, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348,  2842, -4348, -4348, -4348, -4348,  4136, -4348,  2843,
   -4348, -4348, -4348, -4348, -4348,  1332, -4348,  2244, -4348, -4348,
   -4348, -4348, -4348,  1989,  3315, -4348, -4348,    66, -4348, -4348,
   -4348, -4348,  2252, -4348, -4348,  3355,  1894, -4348, -4348,  1623,
    2274, -1821,  1073, -1184,  5160,    13,    63,     5,   851, -4348,
    2952, -4348, -4348, -2278, -4348, -4348, -4348, -4348,  4203, -1087,
   -1148, -4348, -4348,  2800, -4348,  4206,  3855,  3094,   518,  4875,
   -4348, -1338, -4348,   -54, -4348, -4348,  -882, -4348, -4348, -4348,
    -624,   765, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348,  2361, -4348, -4348, -4348,  3165,  2399, -4348,
   -4348, -2734, -4348, -2469, -2002, -4348, -2596,   239, -4348, -4348,
   -4348, -4348, -4348, -4348,   249, -4348,   -58, -4348, -4348, -4348,
   -2128, -4348, -4348, -4348, -4348, -4348, -1091, -2607, -1185, -1177,
   -4348,  3950, -4348, -4348, -4348, -3020, -4348, -2727, -4348, -4348,
   -4348, -4348, -3127, -2876, -4348,  -975,  2258,  2260,  2263,  2266,
   -4348, -4348,  -146, -4348,   -68, -4348,  -237, -4348,  -257, -4346,
   -4347,   403, -4348,   676, -4348, -4348, -4348,   146,  1364,   150,
   -2035, -2455, -1285,  1924, -4348, -4348, -2179,  3995, -2190, -2132,
    1061,     7,  4162,  3611, -3229, -4348,   679, -4348,   259,  1635,
     478, -4348, -4348,  1422, -1163,  -107,   316, -3162, -4348, -1055,
     -90, -4348, -2389,   405, -2446, -2441, -2337, -2181, -2184, -4348,
   -4348,  2868,     3, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348,  -545,    52,  -724,  5289,  3157, -4348,  2425,  4118,  4157,
   -4348, -4348,  3824,  1723,  1724, -4348, -3400, -2875, -4348, -4348,
   -4348, -1018,  4183,   770,  3675,  1165,  1747, -3019,   793, -3126,
    4165, -4348, -3618,   785,  4168,  4174, -3435,  3602, -4348, -4348,
   -4348, -4348, -4348,  2986, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348,  4343,   -40, -1457, -4348, -4348, -4348,  1686,  3732,  2993,
    -788, -4348, -4348, -4348, -4348,  4171, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348,  2446,  2060, -4348, -4348, -4348,
   -4348,  3106, -4348, -4348, -4348,  3108, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,  1753,
      58, -4348,  1112,   -19, -4348,   740, -4348, -4348, -4348, -4348,
   -4348,  -152, -4348, -4348,  -170, -2685, -1174, -1167,   864,  1007,
   -3047, -2067, -2127, -3295, -1254, -4348, -4348,   825, -3436, -3026,
     521,  -776, -1325, -1327,   192,  2259,  4005, -1418, -4348,  4010,
    -887, -1685, -2310,   935,  4018,    -6, -4348, -2805, -4348,  -104,
     117,  2050,   -78,  3096, -3723, -4348,   -10,    35, -4348,   281,
     292, -4348, -4348,   381, -4348, -4348, -4348,    89, -4348, -4348,
   -4348, -4348,  3830, -4348,  2359,  5358, -4348, -4348, -4348,  3091,
    5360,  -895,  3839,  3117, -4348,  3122, -4348, -4348, -4348, -2188,
   -4348, -4348, -4348,   136, -4348,  2463, -4348, -4348, -4348, -4348,
   -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348, -4348,
   -4348, -1393,  4414,  5377,  3940, -4348, -4348,  2329, -4348, -2114,
   -1400, -1217, -2787, -4348,  2709,  3733, -4348, -4348,  2455, -4348,
    2711,   604, -4348, -4348,   438, -4348, -4348,  1615,  4421,  3911,
   -4348, -4348, -4348, -4348, -4348,  4252, -4348,   -29,    -9, -4348,
    -465, -4348, -4348, -4348,   104,  5428,  5429, -4348, -4348,   198,
   -4348,  -913, -4348, -4348, -4348, -4348, -4348,  4193, -4348, -4348,
    4197, -4348, -4348, -4348, -4348,  4200, -4348, -4348, -4348, -4348,
   -4348, -4348,  2167, -4348, -4348, -4348, -4348, -4348, -4348,  -708,
   -4348, -4348, -4348,   125, -4348,  1449, -4348,  1054, -4348,  1005,
     685,  1567, -2495
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1150,  2400,    67,    68,    69,    70,    71,
    2232,    72,  1448,  2168,  2895,  2896,    73,   975,   731,    74,
    1888,  1887,  2604,  2605,  3904,  4406,  4407,  3913,  4421,  3907,
    4410,  4411,  3910,  4415,  4416,  2669,  2670,  2671,  2672,  2673,
    2674,  2675,  2676,  2677,  2678,  2679,  2680,  2681,  2682,  2683,
    2684,  2685,  2686,  2687,  2688,  2689,  2690,  2691,  2692,  2693,
    2694,  2695,  4422,  4423,  3920,  3926,  3931,  3952,  2696,  2697,
    2698,  2356,    75,    76,    77,    78,  2705,    79,  3979,  2719,
      80,  3410,  3166,  3167,  1933,  4007,  4396,  5067,  4400,  5159,
    5260,  5083,  3311,  4738,  5068,  5069,  5168,  2729,  2465,  5203,
    3151,  5288,  3152,    81,  1224,  4453,  4454,  4455,  4781,  4782,
    4783,  4784,  5451,  5354,  5422,  5452,  5538,  5544,  5475,  5554,
    5555,  5556,  5542,  1519,  5557,    82,  1009,  1010,  1521,  2261,
    2909,  2262,    83,    84,   937,  2193,  2194,  2195,  2196,  3584,
    2910,  3579,  3580,  4535,  5476,  5540,  5355,  5356,  5267,  5357,
    5171,  5358,  5271,  5359,  5174,  5360,  5361,  5362,  5363,  5443,
    5364,  5266,  5468,  5351,  5352,  5445,  5516,  5535,  5365,  5181,
    5261,  5409,  5182,  5262,  5438,  5347,  5439,  5463,  5512,  5348,
    5410,  5466,  5413,  5366,  5372,  5453,  5367,  5373,  5368,  5186,
    5278,  5371,  5276,  5370,  5449,  5448,  5491,  3442,  4018,  1916,
    2714,  3387,  3388,  3389,  3169,  3170,  1779,  2883,  2884,  2885,
    3966,  3967,  3968,  3760,  3761,  3762,  2476,  3306,  3158,  1780,
    1781,  1849,  1783,  3393,  3970,  3971,  3394,  3395,  1784,  3397,
    1785,  1786,  1787,  1788,  3171,  3424,  3425,  3426,  3427,  3428,
    2394,  2395,  3706,  3079,  3703,  4611,  4223,  5320,  4230,  4282,
    4283,  4894,  5241,  5129,  5237,  5130,  5239,  5326,  5327,  5140,
    5251,  5252,  5040,  5041,  5042,  2458,  2459,  3373,  3374,  2460,
    1235,  1850,  3429,  2487,  1851,  3264,  1852,  1853,  2463,  3279,
    3251,  4013,  3792,  3793,  3794,  4332,  3795,  3193,  2495,  3784,
    3785,  4351,  3842,  4710,  5343,  3843,  3844,  3845,  3846,  3847,
    3848,  3849,  4035,  3850,  4036,  4031,  4032,  4029,  1278,  4671,
    4672,  4673,  4025,  4026,  4367,  4352,  4353,  4354,  4922,  4681,
    4700,   881,  4690,  4308,  1537,  3117,  1560,  1561,  3014,  2280,
    1854,  4309,  4310,  4311,  4361,  4098,  4812,  4356,  4333,  4920,
    5058,  5061,  5155,  5339,  3194,  1880,  3187,  1635,   753,   754,
    4953,  4954,  4955,  4958,  4959,  4960,  4905,  4906,  4907,  4908,
    3196,  2724,  4909,  4910,  3416,  4897,  4290,  4291,  4292,  3197,
    3549,  4662,    85,    86,  1757,    87,  1765,    88,  1759,    89,
    1873,  1216,    90,  2580,    91,    92,    93,    94,    95,  3019,
      96,    97,  3733,  3110,  3111,  3112,  2420,  3104,  3105,  1155,
    3312,  3895,  4941,  1197,  1855,  1856,  2574,  1857,  1858,  4934,
    1859,  3225,  1860,  1861,  1862,  1863,  3565,  3566,  3202,  3567,
    3254,  2497,  1485,  2890,  4379,  2549,    98,    99,  1166,  1167,
    1168,  1169,  1170,  1171,  1094,   100,   101,  2367,  5015,   102,
    1643,  1644,  1645,  3691,  4221,  4603,  4870,  1648,  1649,  1650,
    3062,  3689,   103,  1892,   104,  2970,  2971,  2972,   105,  4741,
    2586,   106,   107,  1899,  1900,  1901,   108,   239,   109,  1506,
    1504,  2238,  2239,   110,  1220,  1221,  2588,   111,  2944,  2945,
    1881,  1882,  4150,   112,   113,  3431,   115,   882,   117,   118,
    2272,  2273,  2995,  2996,   119,   120,  1026,  1027,  1028,  1175,
    1176,  1706,  2429,  2430,  2431,   883,   884,  1387,  1275,  1883,
     886,   887,  2120,   888,  1388,  1389,  4358,   889,  1400,  2108,
     890,  4044,   891,   892,  4115,   893,   894,   895,  4067,  4068,
    4487,  2140,  2141,  2142,   896,   897,   898,  2839,  2076,  2077,
    4109,  3539,  4509,  3446,  3447,  3533,  4863,  3535,  4103,  4104,
    4504,  4816,  4989,  5099,  5209,  5101,  5210,  5217,  4990,   899,
     900,  1376,  2007,  4060,  3487,  4476,  1952,  3472,  1884,  1885,
    1300,  1301,  1266,  2745,  1958,  2997,  4184,  2998,  3648,  3649,
    3650,  4195,  4191,  2974,  2975,  2999,  3000,  3001,  3002,  3003,
    3004,  3005,  5004,  5224,  5225,  5433,  4514,  5510,  4515,  4516,
    4517,  5008,  4580,  4581,  4582,  4583,  4584,  3320,  3321,  3322,
    4156,  3226,  1997,  1998,  2005,  2211,  2212,  1953,  2939,  1575,
    4204,  1147,  1122,  1123,  1660,  2377,  4590,  4864,  4865,  3654,
    4586,  4862,  3260,  3261,  1180,  1184,  2439,  3122,  3123,  1590,
    1591,  1726,  1727,  5027,  3265,  3139,  3214,  3172,  3140,  2959,
    1710,  1711,  1177,  1712,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,  2904,  2450,  1213,   755,  2155,  2156,  2157,   139,   140,
     980,  1003,  1509,  3616,  3617,  4162,  3618,  3433,  3620,  4168,
    1119,  2477,  2478,  4169,  1120,  2372,  2373,  2374,  4544,  4546,
     141,   142,  4158,  4159,  1004,   143,  3133,  1738,  1739,   144,
    1111,  1613,  1614,  1615,  2350,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1588,  1095,  1789,  1594,  1097,  1098,  1099,  1595,  2323,  3043,
    1576,   190,   191,  1750,   192,  1193,  1194,  1751,   193,  1449,
    2187,  3577,  4130,  4520,  2188,  2189,  2905,   194,  1006,  1516,
    1511,  1517,  2245,  2246,  2244,  2979,  2977,   195,   996,  1502,
    2962,   196,   985,   197,   198,   989,  2224,  1493,  4151,  3434,
    3737,  4258,  4259,  4261,  4633,  4634,  5311,  5459,  5501,  5484,
    5504,  5505,  5508,  5527,  5528,   901,  1663,   902,  4691,  4692,
     903,   904,   905,   906,   907,   908,  4472,  4163,   909,  2440,
    4587,   910,  4160,   911,  3006,  2451,   721,  4417,  4418,  1156,
    1664,  2433,  2285,  4242,  1390,  1134,   965,  5188,  1046,  1158,
    1552,  1159,  2160,  1553,  2923,   723,   724,   725,  5189,   726,
     727,   969,  1051,   728,   199,  1052,   200,  2294,   201,  3669,
    3670,  1566,  1570,  2309,  2310,  2311,  1100,  2091,  2303,  1567,
    2312,  1055,  1545,  1546,  2292,  1547,  2290,  1548,  3024,  2321,
     202,   992,  1496,   734,  2228,  2229,  3603,   203,  1116,   204,
     205,   206,  1205,   207,  2216,  2937,  2938,   208,  2264,   209,
    2198,  2207,  1452,   971,   972,  2926,  3099,  2415,  2416,  2924,
    2161,  1554,  3663,  1696,  1920,  1161,  1921,  1162,  1463,  2201,
    1699,  4540,  4135,  5106,  4832,   210,   240,   737,  1233,  1906,
    2269,   211,   212,   213,   214,  1721,   914,  3007,   915,  1029,
    1254,   756,  1942,  1934,   233,   234,   235,   759,   760,   236,
    1871,  1872,  4401,  4943,  5071,  5293,  5294,  1936,  5382,  1937,
    1938,  4008,  4968,  5378,  5456,  1939,  3439,  4458,  5086,  5290,
     215,  1669,  1665,  1132,  2388,  2382,  2384,   216,   217,  1488,
     218,   219,  5020,  5021,  3994,  2579,  3886,  3887,  4390,  3309,
    3891,  2892,  3180
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     722,  1044,  1093,  1133,  1096,   116,  1421,   121,  1181,   913,
    1745,  2012,   933,   114,  1426,  1728,   974,  1538,  1542,  1160,
    2058,  1752,  2057,  2434,  1732,   995,  1185,  1715,  1302,  1619,
    1922,  1139,  1011,  1047,   720,  1016,  3412,  1571,  1864,  1782,
    1011,  1865,  2369,  1109,  3181,  2154,  3692,  1117,  2948,  1124,
    2958,  1140,  2153,  2957,  3125,  3126,   967,  2569,  1684,  3221,
    2594,  3223,  2107,  2911,  2912,  3595,  2835,  2836,  3240,  1146,
    3235,  3290,  3291,  3957,   967,  3855,  2208,  1145,  1048,  2845,
    2846,  2847,  3008,  3475,  2940,   934,  3896,  3476,  3252,  1137,
    1717,  1157,  1961,  1962,  4040,  4355,   994,  3093,  3738,  3619,
    3875,  1000,  2461,  2462,  2000,  2882,  3542,  2464,  2494,  2079,
    3283,  3176,  3177,  3390,  3285,  4374,  4375,  4350,  2502,  1186,
    3038,  2014,  2506,  1208,  2266,  1722,  1188,  3292,  4268,  1731,
    3651,  3391,  2267,  2027,  2028,  2029,  2526,  2496,   966,  2031,
    2940,  1261,  3882,  3392,  2343,   735,  4226,  3477,  2538,  3417,
    3184,  3399,  3400,  2987,  3470,  3020,   966,  2525,  1568,  3578,
    3972,  2353,  3470,  3546,  3688,   993,  3625,  3973,  4823,  4822,
     999,  1954,  1955,  1956,  2357,  2548,  3134,  3471,  2067,  4164,
    2360,  2480,  1966,  4413,  1187,  3471,  1109,  3401,  1115,  1229,
    1231,  4543,  1431,  1432,  1433,  2210,  2078,  1436,  1437,  3256,
    3257,  1440,  3120,  1442,  1443,  1444,  1479,  1446,  4776,   761,
    3106,  3731,  2210,  2020,   973,  1198,  2024,   722,  3280,  3281,
     722,  1157,  1209,  1109,  1380,  1381,  1423,  2163,  2888,  1423,
    1380,  1381,  4359,  3664,  3074,  2041,  2042,  1109,  3534,  2046,
   -2370,  1108,  3375,  1423,  1806,  3189,  1380,  1381,  1056,  1368,
    1369,  1200,  1370,  4749,  1207,  1380,  1381,  2060,  2061,  2967,
    3076, -1100,  2065,  2066,  4734,  1422,  3634,  2355,  1380,  1381,
    3448,  3449,  3450,  4383,  1586, -1085,  2960,   986,  3190,  2717,
    1244,  1510,  2421,  2423,  2424,  2085,  4993,  3479, -2142,  1240,
    1380,  1381,  2407,  1255,  2958,  1893,  1806,  2958,  2958,  1620,
    1621,  1622,  1623,  1624,  3403,  1626,  3713, -2141,  1524,  5240,
    4267,  3121,  3495,   968,  2277,  3130,  3497,  4388,  1246,  1247,
    2355,  2584,  1251,  4320,  1049,  1597,  2712,  -732,  1380,  1381,
   -1870,   968,  3505,  3506,  5335,  1050,  1806,  1969,  3512,  4608,
    1217,  1935,  1943,  1380,  1381,  3098,  2827, -1870,  1380,  1381,
    1380,  1381,  1907,  -745,  3524,  3525,  1380,  1381,  2409,  4128,
    1602,   935, -2132,  3531,  1380,  1381,  1889,  -733,  2204,  1380,
    1381,  1380,  1381,   983,  4689,  1218, -2963,  1380,  1381,  1427,
    -745,  1380,  1381,  3529,  1195,  1380,  1381,  1232,  4302,  1380,
    1381, -3029,  3746,  2271,  4240,  4314,  4318,  1380,  1381,  4319,
    4303,   987,   970,  1791, -2206,  1654,  3783,  3191,  3572, -1984,
    1380,  1381,  1894,  1596,  4304,  1697,  1895,  4328,  1380,  1381,
     970,  1210,  4622,  4201,  5302, -2964,  1058,  1031,  1178,  -604,
    1896,  4312,  3665,  -588,  2088,  1222,  5404,  4238,  3473,   241,
   -2868,  -632,  1173,  1380,  1381,  -621,  2335,  4192,  2557,  4254,
    3735,   981,  3085,  1380,  1381,  1491,  1641,  1172,  2386,  1573,
    4255,  4326,  4327,  1380,  1381,  2925,  3420, -1870,  3012,  2804,
    1875,  -974,  1172,  1380,  1381,  1380,  1381,  1172,  1212,   241,
    4193,  2518,  4656,  1340,  1636,  5291,  4134,  3951,  1525,  1172,
    1380,  1381,  1173,  4778,  1380,  1381, -2963,  1172,  3884,  1380,
    1381,  3582,  3120,  4779,  4817,  1380,  1381,  2089,  2336,  1976,
    1661,  2968,  1690,  3641,  2104,  3872,  3021,  5125,  1638,  4196,
    1058,  1031,  1182,  1302,  1173,  4542,  3419,  2958,  1499,  1173,
    3381,  1380,  1381,  5303,  1141,  3527,  1715,  3022,  3714,  2304,
    2137,  2138,  3440,  1424,  3997, -2964,  1424,  3786,  1174,  2410,
    2308,  2457,  2544,  1406,  1407,  1592,  1681,  3763,  3851,  3852,
    1424,   237,  3528,  1174,  3441,  3715,  1897,  3864,  1174,  1715,
    1480,   243,  1470,  1142,  1380,  1381,  5003,  4945, -1870,  3023,
    1174, -2370, -3029,   736,  4818,  1380,  1381,  2205,  1174,  3668,
    2743, -1870,  1383,  3411,  3986,  1384,  1380,  1381,  1383,  1639,
    1189,  1384,  1691,  1380,  1381,  2545,  4466,  1593,  3107,  4302,
    1402,  3121,  3583,  3086,  1383,  1380,  1381,  1384,  1890,  4183,
    4187,  4303,  2819,  1383,  5411,  5411,  1384,  4350,  3883,  4198,
    4199,  3192,  2248,  1178,  5255,  4304,  3707,  3701,  1239,  4370,
    2558,  2887,  3675,  1179,  2519,  2889,  4780,  1058,  1031,   238,
    5336,  3642,  3537,  -974,  3717,  3718,  3719,  3720,  1383,  2470,
    1642,  1384,  2887,  1492,  1898,  1341,  2001,  3729,  3730,  2002,
    2387,  3643,  4901,  1874,  1467,  4080,  1819,  2447,  2448,  2231,
    4612,  4256,  5405,  5126,  3644,  4194,  2324,   241,  4015,  5304,
    3422,  2546,  1662,  1380,  1381,  2969,  1383,  2958,  2296,  1384,
    3568,  2337,  3486,   982,  3640,  3673,  5292,  3660,  3661,  3662,
    3758,  1383,  4357,   984,  1384,  3633,  1383,  3770,  1383,  1384,
    3619,  1384,  2090,  2166,  1383,  5088,  4371,  1384,  1109,  1109,
    2888,  4926,  1383,  2206,  3474,  1384,  1157,  1383,  1242,  1383,
    1384,  -745,  1384,  2084,  4389,  1383,   241,  3592,  1384,  1383,
    1082,  5337,  1384,  1383,  2443,  2154,  1384,  1383,  3868,  1286,
    1384,  4553,  2153,  1698,  1163,  1383,  1877,  3645,  1384,  -817,
    1241,  1428,  2886,  1970,  1377,  2218,  3969, -2142,  1383,  1140,
    2113,  1384,  5338,  5073,  5074,  2585,  1383,  3862,  2755,  1384,
    5236,  1947,  2958,   936,  1878,  3621, -2141,  1598,  1303,  4016,
    2136,  4129,  1245,  2461,  2462,  2940,  2338,  4110,  2464,  4112,
    2341,  1383,   988,  1405,  1384,  2345,  3879,   747,  1574,  3655,
    2486,  1383,  4994,  1927,  1384, -1870,  2753,  2961,  3652,  4267,
    2768,  1383,  1603,  3570,  1384,  5084,  4936,  5202,  3186,  3861,
    3186,  1383,  3545,  1383,  1384,  2413,  1384,  3776,  1183,  3779,
    2361,  2362,  3742,  1386, -2963,  2911,  2912,  4902,  1383,  1386,
    2736,  1384,  1383,  1256,  4263,  1384,  4257,  1383,  1380,  1381,
    1384,  1482,  1157,  1383,  1378,  1386,  1384,  2940, -3029,  1391,
    2408,  3732,  1373,  4321,  1386,  3333,  4660,  1380,  1381,  3646,
    1372,  3917,  3404, -2370,  3922,  1891,  4664,  1386,  2162,  1383,
    3933,  3927,  1384, -2964,  4667,  3938,  3939,  3940,  3941,  3942,
    2849,  3962,  4185,  1434,  1102, -1100,  3949,  2486,  1439,  1386,
    1505,  3956,  4235,  1477,  3959,  4239,  1230,  1230,  2780, -1085,
    3131,  1539,  2784,  3430,  1380,  1381,  4102,  1715,  3344,  1557,
    1562,  4715,  1383,  3108,  3109,  1384,  4564,  3788,  3666,  3740,
    1526,  1481,  2230,  1383,  2806,  3709,  1384,  1386,  1257,  1589,
    2583,  3647,  2241,  4113,  1383,  4305,  2718,  1384,  3075,  1157,
    2848,  1383,  1386,  1637,  1384,  1486,  4021,  1386,  5316,  1386,
    4118,  -732,  4551,  1383, -1870,  1386,  1384,  4651,  1891,  1891,
    4306,  1503,  1157,  1386,  3077,  3334,  1500,    42,  1386,   751,
    1386, -1870,  1891,  3236,  4024,  1106,  1386,  2486,  1379,  4050,
    1386,  4051,  1380,  1381,  1386,  3246,  5305,  1342,  1386,  4623,
     913,  -733,  4413,  2855,  2754,  4069,  1386,  4070,  4970,  1157,
   -2963,  5283,  4477,  1876,  2733,  3961,  2086,  1157,  1157,  1386,
    2087,  1164,  4084,  1047,  1425,  2086,  3286,  1386,  1891,  2772,
    2461,  2462,  2471,  4298,  1685,  2464,  1185,  1157, -2206,  4657,
    3345,  1383,  -408, -1984,  1384,  2486,  4569,  4570,  1447,  1713,
      49,  1683,  1386,  2744,  1425,   967,  3027,  3318,  1190, -2964,
    1181,  1733,  1386,  -604,  2805,  2486,  1683,  -588,  1048,  2486,
    1471,  2398,  1386,  3988, -2868,  -632,  2486,  2486,  1734,  -621,
    1763,  2486,  1386,  2398,  1386,  1109,  1653,  5346,  5437,  3676,
    1380,  1381,  5256,  2547,  3538,  1124,  4372,  1468,  2808,  1386,
    4164,  1758,  2809,  1386,    54,  3598,  3402,  2596,  1386,  2003,
    1497,  4652,  2004,  2828,  1386,  5287,  1507,  2829,  2825,  5511,
    3551,    55,  2826,  1677,  3552,  1687,  4055,  2889,  2327,  1186,
    4056,  1372,  1188,  4898,  4063,  4841,  4157,  4566,  4064,  4082,
    1386,  4120,  5018,  4083,  5531,  4121,  4017,  1157,  1919,  3853,
    3854,  2734,  4024,  4712,  1249,  2759,  1729,  4425,  1716,  2760,
    1380,  1381,  1402,  2765,  4676,  1182,  4305,  4511,  3089,  1753,
    2444,  2770,  4431,  1157,  2958,  1760,  1761,  3976,  1157,   116,
    1764,   121,  3856,  1386,  2771,  1866,  3069,   114,  1868,   722,
    1187,  3972,  1109,  2058,  1386,  3262,  4294,  4295,  3973,  1886,
    1103,  4850,  4357,  3777,  4512,  1386,  4577,  3722,  5495,  1908,
    1909,  1910,  1386,  2820,  1913,  1226,  1383,  1917,  2210,  1384,
    1157,  2778,  1923,  1869,  1386,  1925,  1926,  2774,  4222,  1165,
    3853,  3854,   729,  2298,  3892,  1383,  3313,  2786,  1384,  1719,
    4619,  1535,  3599,  2032,  3017,  4578,  1118,  2791,  5341,  2795,
    1417,  1418,  1419,  1420,  1543,  4302,  1728,  1728,  4462,  1303,
    1380,  1381,   967,  1185,  2796,  4250,  4554,  4303,  2798,  4081,
    1535,  4693,  3575,  1303,  1104,  3049,  1178,  1276,  1423,  2799,
    1373,  4304,  1383,  1652,  3413,  1384,  1782,  1877,  1372,  1806,
    1782,  1103,  1138,  1058,  4315,  4443,  1902,  1782,  1630,  2135,
    3398,  4599,  1386,  4693,  1512,  2803,  2299,  3396,   976,  2722,
    3928,  2967,   968,  2151,  1049,  1878,  4280,  3985,  1380,  1381,
    5204,  2059,  4444,  4903,  4904,  1050,  1462,  2109,  2110,  5342,
    1473,  2114,  2723,  4560,  2115,  2116,  2117,  2080,  5287,  2121,
    2122,  2124,  2126,  2127,  2128,  2129,  2130,  1344,  2821,  2203,
    3622,  3623,  4483,   913,  2112,  3724,  2096,  3314,  4003,  2838,
    1383,  3578,  3438,  1384,  3390,  1405,  1720,  2202,  1380,  1381,
    2842,  4923,  4924,   730,  1140,  1380,  1381,  4061,  3708,  3120,
    5273,  4237,  3391,  1864,  1864,  4244,  1865,  1865,  3036,  4062,
    1230,  4269,  1380,  1381,  3392,  2913,  1568,  1157,  4836,  4592,
    4593,   970,  3399,  3400,  2144,  2145,   722,  2147,  2881,  2149,
     722,  1157,  1771,  4513,   722,  2159,  1157,  1109,  4470,  2164,
    2165,  4286,  4402,  4403,  2197,  2265,  4463,  1380,  1381,  4614,
    4615,  1544,  4175,  3470,  5285,  4617,  2200,  4620,  3401,  1157,
    2146,  4262,  2282,  1085,  2150,  1380,  1381,  1157,  2158,  4424,
    1157,  4133,  4200,  3414,  2215,  2217,  3471,  1112,  1383,   967,
    1475,  1384,  1631,  4210,  2711,  1380,  1381,  4075,  2154,  5221,
    1109,  1109,  4213,  4640,  5055,  2153,  5057,  1386,  4644,  2728,
    1109,  1109,  4647,  1109,  2243,  2569,  2333,  4510,  3121,  2871,
   -1870,  1183,   967,  4172,  1250,  5019,  1386,  1157,  1157,  1513,
    3587,  2342,  3470,  3550,  3585,  4713,  2278,  1044,  4464,  4206,
    4207,  2274,  3662,  4840,  1157,  1380,  1381,  4107,   990,   968,
    4111,  2300,  3186,  4440,  1782,  3471,  2496,  3723,  1383,  2297,
    2940,  1384,  4265,  5144,  1085,  3047,  4930,  2305,  3857,  1047,
    5151,  4901,  5274,  1386,  1773,  3052,   967,  1227,  5394,  3055,
    5233,  3923,  3058,   722,   722,   722,  1109,   722,  1157,  1109,
    4236,  3555,  3556,  2968,  2079,  2190,  3628,  1185,  2404,  2339,
    1347,   722,  3627,  1157,   966,  2849,   722,  1380,  1381,  3682,
    3683,  2396,  1536,  2287,  1048,  2435,  5000,  2328,  2329,  2330,
    2940,  2332,  4438,  4439,  2494,  1424,  2457,  4350,  4209,  3929,
    2417,  2893,  3504,  2526,   997,  2340, -2132,  1903,   970,  3778,
    2344,  1536,  4501,  1425,  2363,  1230,  3681,  1380,  1381,  2455,
    1423,  1386,  4661,  2496,  2525,  1928,  3677,  4579,  1383, -1870,
    3600,  1384,  1124,  2378,  4500,  1015,  4497,  1380,  1381,  3641,
    3893,  4769,  4086,  1380,  1381,  3725,  1425,  2389,  1380,  1381,
    1688,  2078,  4539,  1157,  2409,  1282,  3763,  1380,  1381,  3419,
    4842,  4087,  4484,  1380,  1381,  1476,  1157,  1716,  2227,  1230,
    1261,  3561,  1157,  3858,  1114,  5103,  2301,  -815,  2240,  1230,
    1182,  2242,  3091,  1157,  1005,  1771,  1383,  2489,  4999,  1384,
    4277,  5499,  3016,  1380,  1381,  2302, -2132,  1685,  5206,  2461,
    2462,   814,  2490,  1225,  2464,  2284,  2441,  4462,  4563,  1113,
    1332,  2530,  2452,  5264,  2863,  2445,   968,  1157,  5048,  1386,
    3530,  1082,  3415,  5275,  3873,   814,  4902,  5521,  1535,  4465,
    1380,  1381,  3876,  5047,  2466,  2467,  1383,  3880,   241,  1384,
    1904,  5152,  1514,  1383,  3765,  3739,  1384,  2969,  4595,   968,
    2496,  3764,  4978,  1423,  2331,  4819,  4148,  2334,  1380,  1381,
    1383,  1110,  1540,  1384,  1380,  1381,  2856,  1773,  3209,  3601,
    3930,  4610,  1515,  3656,  3657,  3658,  5340,  3642,  2958,  2958,
    5212,  1929,  4245,  1380,  1381,  4621,  4801,  4377,  1336,  1386,
    4625,  1178,  2571,  3215,  -664,  1383,  3263,  3643,  1384,  5082,
    1001,  1380,  1381,   968,  1775,   970,  -815,  3969,  4740,  4877,
    3644,  4878,  2491,  1383,  1930,  4387,  1384,  1773,  4114,  1905,
    1415,  1416,  1417,  1418,  1419,  1420,  1380,  1381,  2887,  1574,
    1049,   786,  4305,  1383,  3210,  1219,  1384,   991,   970, -1870,
     733,  1050,  1574,  3092,  4942,  2410,  2288,  3559,  1877,  2589,
    1109,  5153,  1754,  4316,  3840,  1136,  1380,  1381,  4848,  3216,
    1380,  1381,  1380,  1381,  3594,  1109,  3987,  2573,  5193,  3420,
    2131,  3641,  5148,  1201,  2531,  4463,  1878,  2364,  5265,  5194,
    2735,  1380,  1381,  1383,  3726,  3727,  1384,  4511,  1202,  1386,
    3217,  1283,   970,  3645,  5500,  1477,  4428,   791,  3916,  2886,
    3918,  1109,  4246,  2951,  2730,   722,   722,  1773,  4616,  3934,
    3935,  3936,  3937,  1125,   722,  3924,  3925,   838,  3943,  3944,
    3945,  3946,  3947,  3948,  4512,  3950,  3953,  3954,  3955,  1380,
    1381,  2612,  2613,  3960,  5113,  4714,  3211,  1424,  4716,  2731,
    2732,   838,  3409,  3131,  1082,  1383,  1333,  1386,  1384,  1694,
    2748,  2843,  4273,  2411,  2468,  5461,  5462,  4468,  2857,  1173,
    1126,  3218, -2048,  3975,  4378,  1002,  3409,  2853,  3674,  2952,
    3974,  4009,  4913,  1380,  1381,  4414,  3679,  1380,  1381,  3602,
    5114,  1380,  1381,  5212,  3861,  1383,  1380,  1381,  1384,  1182,
    4799,  1303,  2779,   732,  1082,  2886,   733,  1386,  3671,   803,
    3135,  4901,  1380,  1381,  1386,  1383,  1183,  3640,  1384,  3642,
    2749,  1383,  1380,  1381,  1384,  3646,  1383,  4247,  3212,  1384,
    4551,  1386,  2911,  2912,  1337,  1383,  1118,  1775,  1384,  3643,
    -815,  1383,  1950,  1931,  1384,  1127,  4755,  4756,  1136,  1695,
    1380,  1381,  3644,  3219,  2864,  1380,  1381,  3248,  2591,  1157,
    4211,  4631,  4635,  4636,  1531,  2722,  1386,  2868,  4637,  2860,
    2872,  1383,  1138,  2699,  1384,  1157,  1380,  1381,  2914,  1536,
    1424,  3136,  5022,  4274,  1386,  2629,  2630,  1775,  2723,  1140,
    4860,   819,  1148,  2870,  1082,  4632,  2132,  3647,  4506,  1755,
    4507,  1380,  1381,  3422,  1386,  4010,  1373,  5195,  1383,  2726,
    1178,  1384,  5238,  1140,  1372,  5242,  5108,  2950,  2752,  5115,
    2940,  2940,  2133,  1391,  4766,  1756,  2940,  2100,  5496,  3853,
    3854,  1950,  1109,  2412,  1402,  3645,  1383,  3249,  2469,  1384,
      42,  2493,  1383,  4513,    42,  1384, -2048,  5497,  2963,  2964,
    1109,  2413,  2958,  3419,  1386,  4702,  1870,  1149,  4573,  4986,
    1541,  1383,  4668,  3137,  1384,  3015,  4394,   878,  2761,  1951,
   -2048,  3741,  2284,  2886,  1109,  1303,  1157,  1775,  3990,  1383,
    4139,  3028,  1384,  1151,  3992,  2858,  1380,  1381,  4465,  1704,
    1950,  2922,  2762,  1950,  1203,  2927,  4902,  2913,  4928,  4929,
    4450,  2859,  4357,  1109,  1383,  2284,  1109,  1384,  3544,  4119,
    1932,  4987,  1950,    49,  2750,  1157,  1386,    49,  2596,  4173,
    1157,  1157,  4903,  4904,  1532,  1204,  -815,  2769,  4675,  3553,
    4697,  3554,  2958,  2958,  1383,  4432,  1136,  1384,  1383,  3250,
    1383,  1384,  2414,  1384,  4698,  2782,  4914,  1380,  1381,  3213,
    2746,  2922,  1140,  2988,  2747,  1109,  1386,  3646,  1965,  1383,
    4669,  4694,  1384,  1157,  4861,  2783,  3053,    54,  4723,  1735,
    4212,    54,  1380,  1381,  3220,  2058,  1386,  1530,  2058,  1157,
    4165,  3993,  1386,  1047,    55,  2572,  1646,  1386,  2134,   977,
    1929,  1047,  4011,  4694,  3094,  1705,  1386,  4424,  2773,  4879,
    1380,  1381,  1386,  1196,  4670,  1128,  4786,  1383,  5398,  4395,
    1384,  3045,   846,  1406,  1407,  2787,  3598,  2019,   967,  2101,
    2023,   967,  1713,  1940,  5297,  1183,  3159,  1129,  1048,  3647,
    2879,  1736,  1386,  4243,  4004,  5215,  1048,  1405,  1157,  2045,
    3068,  4833,  1109,  1109, -2048,  4266,  1380,  1381,  1230,  5268,
    5269,  1383,  1380,  1381,  1384,  1383,  5031,  4983,  1384,  1383,
    1140,  1768,  1384,  3420,  1383,  4117,  4765,  1384,  1130,  1386,
    1380,  1381,  1230,  1647,  1380,  1381,  4849,  2794,  4778,  5032,
    1383,   978,  3116,  1384,  3138,  4125,  2773,  4124,  4779,  4157,
    1383,  4157,  1157,  1384,  4807,  4574,  3273,  1386,  3274,  2940,
    4392,  2941,  4306,  1386,  2946,  2650,  2651,  4012,  -815,  2058,
    2452,  4988,  2571,  5299,  3244,  1632,  1633,  2797,  1383,  1769,
    1157,  1384,  1386,  1383,  5218,  1206,  1384,  1729,  1729,  1131,
     967,  1768,  3080,  3129,  4694,  1140,  4699,  2800,  1109,  3160,
    1386,  3275,  1634,  2812,  1383,  1380,  1381,  1384,  2830,  4393,
    2876,  3289,  1380,  1381,   979,  1138,  2877,  2837,  -664,  1138,
    2486,  4872,  3233,  2840,  3276,  1386,  1737,  3178,  3113,  1383,
    1380,  1381,  1384,  5076,  3185,  1199,  1380,  1381,  5079,  3081,
    3198,  3200,  3203,  3204,  3205,  3206,  3207,  3728,  1211,  1769,
    3222,  3127,  3227,  3073,  2751,  1386,  1409,  1410,  2596,  1386,
    1877,  1386,  3227,  3277,  3237,  3238,  3889,  3227,  4873,  3242,
    3243,  2876,  1157,  3245,  3227,  1426,  1214,  3072,  5563,  3255,
    1386,  3890,  3258,  4398,  2059,  1380,  1381,  4141,  1878,  3268,
    4020,  4780,  3269,  1109,  1380,  1381,  2102,  2058,  4399,  3262,
    3056,  3057,  1931,  3284,  5095,  3227,  5146,  5147,  3188,  1157,
    1402,  1212,  2103,  2210,  1383,  1380,  1381,  1384,  4054,  3208,
    1380,  1381,  2442, -2132,  4057,  3228,  1109,  1215,  1386,  5300,
    4952,  2446,  1771,  2861,  1049,   968,  3227,  3323,   968,  1225,
    5219,  3398,  1049,  4065,  1008,  1050,  3557,  3422,  3396,  3853,
    3854,  1744,  1008,  1050,  5145,  3259,  4433,  4434,  4435,  3267,
    2391,  4071,  5200,  2392,  2951,   222,  3271,  3272,  5454,  5454,
     732,  3161,  1386,   733,  5096,  1383,  1386,  5391,  1384,  1223,
    1386,  3162,  3383,    42,    42,  1386,  4072,  5127,  3163,  1228,
    1919,  3128, -1870,   786,  2496,  1539,  1232,  1172,    25,  1539,
    1383,  1386,  1771,  1384,  1234,  1693,  3430,  1380,  1381,  1426,
    5428,  1386,  1380,  1381,  4186,  1870,  4073,  1772,  1694,   998,
    4074,  5385,  4076,  4197,   970,  1879,   732,   970,  1383,   733,
    2952,  1384,  1380,  1381,  3215,  3144,  2775,  3282,  1237,  1386,
    2596,  4079,  4903,  4904,  1386,  1236,  5248,   968, -1870,  1173,
    1109,  3145,  1380,  1381,  1109,  1402,    49,    49,   367,   791,
     369,  2953,  1157, -2132,  1773,  1386,  1058,  1031,  1402,  1932,
    1238,  3435,   722,  3493,  1383,  1893,  2570,  1384,  2776,  1243,
    1383,  3432,  2017,  1384,  4460,  1248, -1870,  1772,  1174,  4085,
    1386,  3270,  3164,  1157,  2427,  1252,  2428,  1157,  1383,  3517,
    3216,  1384,  1383,  1981, -1870,  1384,  3436,  1253,  1695, -1870,
      54,    54,  2393,  1405,   220,  3278,  5097,  4473,  4474,  2951,
    4322,  4561,  4249,  4323,  3315,  5485,  1841,    55,    55,  1842,
   -1870,  3217,  2954,  4088,  1773,  2788,   970,  4090, -1870,  2596,
    3573,  4092,  1771,  4489,  4027,  4717,  4094,  1258,  4719,  4720,
   -1870,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  4042,  3571,
    2789,   803,  4095, -1870,  2596,  1782,  2058,  4991, -1870,  5005,
    2790,  5006,  4096,  1383,  2596,  1386,  1384, -1870,  3536,  1259,
    1383,  1260,  2080,  1384,  2792,  2952,  3519,  1262,  2596,  3165,
    1263,  3521,  1894,  2833,  4252,  4253,  1895,  2596,  1383,  2918,
    4494,  1384,  3218,  2919,  1383,  4495,  1715,  1384,  1264,  1985,
    1896,  5096,    36,  1267,  2955,  1379,  3135,    42,  1268,  1058,
    1031,  3563,  3564,  3146,  1373,  3612,  4496,  1269,  5395,  2570,
     786,  1157,  1372,  3765,  1425,  4478,  1386,  4482,  1157,  1270,
    3764,  1082,  3143,   819,  1271,  4214, -1870,  2958,  3376,    42,
    5199,  4565,  3380,  1383,  2197,  1768,  1384,  1272,  1405,  2197,
    1273,  1386,  1383,  3586,  1157,  1384,  3066,   820,  3386, -1870,
    3067,  1405,  1409,  1410,  1773,  1274,  4857,  4858,  3478, -1870,
    1277,  5227,  2596,  1383,  3219,  4122,  1384,  3136,  1383,  1386,
      49,  1384,  1279,  1109,  4519,  1767,   791,  1430,    64,  1138,
    3147,  2958,  2958,  3547,  5246,  5247,  3383,  2596,  1435,  1109,
    1109,  1082,  3631,  1769,  1768,  4677,  3773,  1986,  1058,  1031,
    3774,  1989,    49,  1578,  1775,  1280,  3148,  1303,  1990,  3432,
    1157,  1281,  1140,  1284,  1140,  1386,  4645,  1109,  4077,  1285,
    1604,  1386,  2596,  3964,  3613,  3614,  1897,  1044,  1373,  3304,
    3305,  4296,  1287,  5207,    42,  4297,  1372,  1288,  4678,  1386,
    1289,    55,  1539,  1386,  4760,  4761,  4762,  4763, -1870,  3137,
    1605,  3698,  1769,  3700,  1290,  1383,    54,  1291,  1384,  1047,
    1383,  4679,  1579,  1384,  3975,  4449,  3451, -2132,  3149,  4297,
    1157,  3974, -1870,    55,  1775,   967,   967,   967,   803,  1292,
    1383,  4518,  3383,  1384,  1293,  2596,  3384,  1294,  5369,  1991,
    1297,  3693,  1438,  3385,  1017,  1580,  3563,  1409,  1410,  4541,
    4680,  1606,  4797,  3065,  1048,  1607,  5543,    49,  -815,  3775,
    1409,  1410,  1770,  1298,  1386,  2956,  1314,  1304,  2489,  1445,
   -1870,  1386,  5543,  1776,  1898,  2951,  1305,  2520,  4624,  1450,
    4800,  1082,  2499,  2490,  4555,  1306,  1331,  2489,  4556,  1386,
    1157,  1307,  2489,  4604,   846,  1386,  1771,  4605,  5543,  1345,
    1346,  1140,  2521,  1993,  1109,  2452,  3745,  2500,  1308,  1539,
     819,  3613,  3614,  3853,  3854,  1309,  1777,  4828,  4301,  4663,
    3150,  2227,  4552,  1310, -1870,  4606,  4806,  3756,    55,  4605,
    4663,  1441,  4808,  3965,   820,  3220, -1870,  2240,  3609,  4419,
    4420,  2952,  4847,  1776,  1386,  4642,  5533,  5534,  3641,  4643,
    4809,  4325,  1311,  1386,  4810,  1771, -1870,  1157, -1870,  4330,
    1312,  3185,  3615,  3185,  1775,  1401,  4364,  1315,  3198,  3015,
    1539,  1018,  3135,  3796,  1386,  5441,    42,  3300,  3303,  1386,
    4649,  1772,  3227,  1451,  4650,   766,  1777,  -815,  1316,   220,
    1453,  4742,  1771,  2491,    64,  4743,  3859,  5098,  1415,  1416,
    1417,  1418,  1419,  1420,  2058,  1317,  2522,  1157,  1318,  2058,
    1608,  4165,  2951,  3867,  1105,  1107,  1460,  4744,  4023, -1870,
    3138,  4745,  3386,  4747,  1461,  4811,  4750,  4748,  1773,  1877,
    4751,  4752,  4900,  3227,  5490,  4753,  5492,  4956,  2048,  2049,
    1772,  3227,  4961,  3136,  1994,  3227,  3227,  1465,  1877,    49,
    2210,  1019,  5514,  2501,  4754,  3977,  5063,  1878,  4650,  1319,
    1320,  1109,  1996,  4683,  1581,  4759,  1386,  1157,  1157,  4650,
     786,  1386,  1321,  1402,  1666,  1667,  1878,  1670,  2952,  1671,
    3989,  1322,   968,   968,   968,   738,  3642,  1773,  1609,  3100,
    3101,  1386,  1323,  1324,  3102,  3103,  5549,  5550,  2589,  1138,
    1049,  2358,  2359,    54,   222,  5065,  3643,  2612,  2613,  3135,
    1464,  1050,  4789,  1157,  5092,  1325,  4792,  1478,  3386,  3644,
      55,  2951,  1185,  1326,  1773,  3137,  1327,   790,  1328, -1870,
   -1870,   846, -1870,  4802, -1870,  5257,   791,  2596,  1329, -1870,
    1330,  1413,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1483,
    1334,   766,  1610,  1157,  1413,  1414,  1415,  1416,  1417,  1418,
    1419,  1420,   766,  1335,  1484,  1490,  4825,   796,  1774,  1338,
    2596,   970,   970,   970,  2913,  4956,   739,  1339,  1157,  4961,
    3136,  1403,  1343,  1347,  3215, -1870,  5121,  2952,  1466,  1348,
    1349,  1469,  1109,  3964,  2492,  1109,  1472,  3796,  1350,  3215,
    1351,  1474,  3645,  1352,  3432,  1082,  1353,  1404,  1677,  1354,
    1582,  -815, -1024,  3432,  3432,  1355,  1372,  1356,  2953,  3432,
     967, -1870,  1402, -1870,  1357,  4575,   367,  4937,   369,  4683,
    2524,  1583,  4882,  4883,  5208,  4885,   786,  4956,   803,  4874,
    4683, -1870,  4961,  4643,  4892,  4896, -1870,   786,  4650,  4650,
    3216,  2629,  2630,  4889,  4890,  1358,  1584,  4899,  1359,  1230,
   -1870,  4650,  3137,   740,  1082,  3216,  4915, -1870,  1360,  2520,
    4916,  1402,  1585,  4917,  1611, -1870,  1405,  4916,  4965,  2489,
    1361,  3217,  4650,  1362,  1392,  1393,  1672, -1870,  1775,  2954,
    1363,  1138,  1364,   790,  2521,  5045,  3217,  1406,  1407,  5046,
   -1870,  1082,   791,   814,   790, -1870,  3536,  5033,  1365,  4155,
    1366,  1367,  2493,   791, -1870,   817,  1612,  5066,  1429,   818,
     819,  4643,  4116,  5078,  3646,  1394,  1462,  3774,  1494,  5322,
    3685,  3686,  3687,   796,  1495,  5149,  5313,  1508,  1395,  5150,
    5314,  5034,  1498,  1518,   796,  5318,  3138,  1775,  1523,  3901,
    5321,  5323,  3218,  3965,  4605,  5324,  1520,  1020,  1021,  2922,
    1022,  1023,  1024,  4138,  1157,  4794,   741,  3218,  5332,  1530,
    1109,  2955,  5333,  1408,  2426,  2427,  1555,  2428,  1396,  1025,
    3432,  1157,  1563, -1870,  1775,  3227,  2059,  1569, -2132,  4166,
    3996,  1397,  1572,  3998,  1182,  5399,  3647,  -815,  2522,  5400,
    1677,  2922,  1577,  1157,   803,  2928, -1870,  1776,  1372,  1599,
    1140,  1140,  1600,  1109,  1109,   803, -1870,  1601,  1398,  1140,
    1140,  1140,  1109,  1109,  1109,  1405,  1616,  1618,  5525,  1617,
    4231,  2929,  5526,  1625,  3219,  1409,  1410,  1627,  1628,  1629,
    1877,  1481,  1655,  1768,  1454,  1656,  2930,  1668,  1411,  3219,
    1777,  1658,  1675,  1659,  1157,  1673,  1674,  1676,  1678,  2931,
    1679,  1680,  4576,  1682,  1686,  5035,  1776,  1689,  1878,   814,
    1700,  4224,  1692,  4224,  1405,   742,  1701,   968,  1702,  1703,
     814,    42,  1399,  3138,  1714,   818,   819,  1718,  1002,  4143,
    5023,  2169,  5024,  5025,  3383,   743,  1743,   819,  1741,  1766,
    1762,  1769,  1867,  2210,  1870, -1870,  1911,  1912,  1914,  1777,
    1140,  2932,  2933,  1109,  1915,  4264,  1918,  1924,  1423,   838,
    2059,  1950,  5056,  4684,  1957,  1968,  4685,  1455,  1971, -1870,
    2006,  2016,  1456,  2017,  2039,  2018,   844,  2056,  2068,  2934,
     744,   846, -1981,  2069,   847,   745,  2081,  2082,  2083,  2092,
    2111,  5036,  2118,  2119,    49,  3185,  1402,  2148,  4998,  2152,
    2058,  2167,  2199,  4293,  2220,  2222,   970,  2223,  4147,  5037,
    2221,  2650,  2651,   220,  2225,  1457,   746, -1870,  2226,  -815,
     747,  2234, -1870,  1007,  1409,  1410,  2235,  2236,   748,  2237,
    2247,  1458,  2956,  5038,  3384,  2263,  2268,  2279,  2283,  2284,
    2286,  3385,  2289,  5102,  2291,  2523,  2293,  2935,  3613,  3614,
    2295,  1532,  2322,  2296,  2170,  2326,  2346,  1459,  2171,  2347,
    2349,  2348,  2524,  2351,  2354,    55,  4033,  2355,  4037,  2365,
     749, -1870,  2366,  1409,  1410,  4373,  2368,  2379, -1870,  1728,
    2380,  2383, -1870, -1870,  2381,  2397,  2385,  2399,  2059,  2401,
    2402,  4381,  4382,  1412,  1771,  3220,  2403,  2405,  2172,  2406,
    2419,  2936,  2436, -1870,  2432, -1870,  2456,  2437,  2472,   221,
    3220,  3227,  3227,  2475,  2474,  3323, -1870,  4408,  2173,  2483,
    4412,  2488,  2514,   916,   750,   838,  2503,  2489,   222,  4684,
    2508,  2509,  4685,  2515, -1870,  2517,   838,  2527,  2529, -1870,
    4684,  2532,   844,  4685,  2169,  2539,  2540,   846,  5211,  5301,
     847,  2543,  2550,   844,  2563,  2551,  2553,  2561,   846,  2564,
   -1870,   847,  2575,  2576,  2577,  2578, -1870,  2581, -1870,  1413,
    1414,  1415,  1416,  1417,  1418,  1419,  1420,  4293,  2582,  1772,
   -1870,  1426,   917,  2174,  1402,  2592,  2593,  4686,  4687,  2595,
    2700,  2702,  4293, -1870,  4436,  4688,  2596,  2704, -1870,  1405,
    2703,   223,   751,   752,  2706,  2707,  2708, -1870,  2709,  2710,
    2713,  2715,  2720,  1109,  2716,   918,  1082,  2721,  2727,  2764,
    3386,  2737,  4456,  5309,  2739,  2777,  1773,  2740,  2741,  2756,
    2758,  5383,  2763,  5039,   242,  2766,  3615,  2767,  2773,  2781,
     912,  2785,  2801,  2802,   224,  2807,   963,  1402,  -973,  3144,
     919,   964,  2834,  2822,  4334,  2597,  2598,  2599,  2600,  2601,
    2602,  2603,  2810,  2811,   963,  3145,  2823,  2170,  1045,   964,
    2824,  2171,  2831,  2832,  2844,  2875, -1870, -1870,  2175, -1870,
    2850, -1870,   912,  1135,  2851,  2852, -1870,   225,   912, -1496,
    1420,  -815,  2865,  2878,  2869,  2887,  2891,  2897,  4335, -1870,
    2874,   920,  4336,  2898,  4337,  2894,  5286,  2899,  2900, -1870,
    2901,  2172,  2902,  2903,  2176,  2915,  2490,  2916,  1413,  1414,
    1415,  1416,  1417,  1418,  1419,  1420,  2920,  2917,  2947,  4225,
    1574,  2173,  2949,  2973,  1891,  2978,  2965,  2982,  2177,  2983,
    2984,  2966,  2976,  2986,  2985,  2271,  2197,  3010,  3011,  3018,
    1543,  5211,  4338,  4686,  4687,  1544,  3030,  2059,  1409,  1410,
    3031,  4721,  3032,  2178,  4686,  4687,  3033,  1413,  1414,  1415,
    1416,  1417,  1418,  1419,  1420,  3034,  2058,  3042,  5506,  3035,
    3039,  3044,  3046,  3048,  1303,  1157,  3432,  1405,  1140,  3054,
    3059,  1109,  3061,  3070,  3064,  3065,  2174,  3071, -1870,  3078,
    2058,  3082,  5529,  1082,  3095,  4299,  4300,  2179,  3096,  3084,
    4307,  4448,  3090,  3097,  3114,  3119,  3132,  3141,  3124,  2058,
     226,  5506, -1870,  3153,  1539,  3157,  3155,  3156,  1402,  -154,
    -973,  1768,  1794,  1795,   921,  3154,  3239,  3146,  2180,  2058,
    3241,  5529,  3295,  3287,  3310,  3316,  4329,  4224,  3324,  3317,
    1405,  3015,  4360,  4362,  4363,  3308,  3326,  4033,   732,  3327,
    3328,   733,  1402,  3329,  3330,  3331,  -975,  -975,  1797,  3332,
   -1870,  3335,  3336,  3337,  3338,  5457,  -975,  3339,  3340,  3341,
    3342,  4658,  1800,  3343,  3346,  3347,  1775,  1402,  1801,  1802,
    -994,  2175,  1803,  4293,  3348,  4641,  3349,  3350,  4293,   227,
    3351,  3352,  4293,  3353,  3354,  3355,  3379,  3356,  3357,  3358,
    3359,  3796,  3360,   922,  3147,  3361,  1805,  3362,  3363,  3364,
    3365,  3366,  1157,  3378, -1870,  3367,  3368,  2176,  3369,  3370,
    1806,  3371,  3372,   923,  1807,  3382, -1870,  1406,  1407,  3405,
    3148,  5289,  1697,  3418,  3437,  1109,  1409,  1410,  3445,  1157,
    3454,  2177,  3481,  3482,  1282,  3480, -1870,  3590, -1870,  3591,
    3607,  3072,  1332,  1812,   228,  1336,   229,  3626,  3639,  3494,
    2793,  3496,  3511,  3629,  3653,  3548,  2178,  3541,   924,  3659,
    5561,  3662,  3543,   745,  3574,     1,  3593,  3596,     2,  3611,
    1109,  4725,  1406,  4339,  3588,  4066, -2357,  3589,  4340,  3630,
     230,   925,  3149,  3632,  4341,  1776,  3640,     4,  3667,  1409,
    1410,   722,   231,  3678,   926,  3684,  3680,  3694,  3690, -1870,
    2179,     5,     6,  3695,  3696,  3697,   927,  3699,  3704,     7,
    3702,  1405,  3705,  4408,     8,     9,  3710,  3711,  3712,  3736,
    1816,  3131,   928,  3750,  4342,  4735,  3751,  1817,  1777,  3752,
      10,  2180,  1413,  1414,  1415,  1416,  1417,  1418,  1419,  1420,
    3753,  4293,  3755,  4227,  3754,  1405,  3757,  1818,   929,  3780,
      11,  3781,  3782,  1109,  3432,  3789,  3790,  3791,  3866,  2181,
    2182,  3783,  3869,  2183,  2184,  2185,  2186,  3861,  3870,  3877,
    1405,  3899,    12,  3874,  3878,  3894,  3900,  3901,  3885,  3903,
    3906,  3980,    13,    14,  3150,  3897,  3909,  3898,   232,  3912,
    3915,  3963,  1342,  3978,    15,    16,  3995,  4014,  4006,  4024,
    4028,  4030,   930,  4343,  1426,  4038,  1820,  4039,  4041, -1870,
   -1870,  5547, -1870,  4043, -1870,  4045,  4046,  4047,  4048, -1870,
    4034,    18,  4049,  4674,  1821,  4058,  4059,  4097,  4100,  1181,
    1181,  1157,  4101,  4105,  4108,  4106,  1819,  4835,  1791,  4123,
    1082,    19,  4131,  4136,  5289,  2059,  4132,  4140,  4149,  4153,
    4166,  4844,  4154,  4344,  1539,  4167,  1157,  4170,  4171,    20,
    3432,    21,  4177,  4188,  4178,  4179,    22,  4180,  4724,    23,
    1409,  1410,  4189,  4202,  4190,  4181,  4203,  4208,  4215,  1825,
    4182,   931,  4216,  3536,    24,  4217,  4219,  4218,  1826,  4220,
    4228,  4229,    25,  4232,  4234,    26,  4248,  4251,  1426,  4871,
    4260,  4233,  4271,  3015,  1409,  1410,  4272,  4275,  4276,  4281,
    4345,  4287,  4331,  4369,  4279,    27,  4284,  4266,  4288,  4313,
    1413,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  4324,  1409,
    1410,  4609,    28,  4385,  4365,  4376,    29,  4386,  4397,  4430,
    4293,  4442,  4447,  4452,  4293,  4459,  4457,  4467,  4469,  4471,
    4486,  4785,  1157,  4479,  4503,  4508,  5558,  4485,  4498,  4499,
    4502,  4521,  3853,  3854,  4537,  4538,  4543,  1831,  4545,  4549,
    3455,  4548,  2181,  2182,  4551,  4550,  2183,  2184,  2185,  2186,
    4562,  4557,  5558,  1413,  1414,  1415,  1416,  1417,  1418,  1419,
    1420,  4559,  4568,  4567,  5232,  4571,  4572,  3456,  4589,  4594,
   -1762,  1157, -1761,  4601,  4602,  2391,  4613,  4618,  4626,  4627,
    4628,  4629,  4346,  4638,  3744,  4655,  4646,  4659,  -818,  4695,
    4696,  4665,  4701,  1832,  1833,  1834,  1835,  4705,  3190,  4711,
    4709,  1836,    30,  4359,  4718,  4727,  -817,  4408,  4726,  4412,
    4947,  4729,  4730,  4737,  3432,  4733,  4739,  3457,  1837,  4736,
    3458,  1838,  4746,  4997,  4758,  4347,  4348,  4770,  3459,  4772,
    4773,  4803,  4774,  4804,  4805,    31,  4787,  4775,  4814,  4456,
     912,  4815,  4788,  4789,  4790,   912,    32,  3460,  4973,  4791,
    4795,  4796,  4798,  4821,  4824,  4826,  4813,  1840,  4827,  4829,
    4830,  4831,  4349,  4837,  4845,  4838,  4851,  4852,    33,  4854,
    4856,    34,  4868,    35,  4869,   912,    36,  4875,  4605,  4880,
    4881,  4884,  4886,  4887,  1178,  4893,    37,    38,  4891,  4912,
     817,   912,  4927,  4919,  3461,  1157,    39,  4921,    40,  4931,
    4932,  4792,  1109,  3892,  4938,  4940,  4949,    41,  4950,  4944,
    4962,  4971,  4963,    42,  4974,  4975,  4972,  4976,  3227,  4977,
    3227,    43,  4980,  4982,  5043,  4985,    44,    45,    46,  4981,
    4996,  4992,  5001,  2877,  1413,  1414,  1415,  1416,  1417,  1418,
    1419,  1420,  5007,  5011,  5012,  5014,  5026,  5060,   912,   912,
    5016,   912,   912,  5029,  5072,  5054,  5070,  5075,  5081,    47,
     885,  5085,  5089,  5064,   912,  3462,    48,  5091,  1413,  1414,
    1415,  1416,  1417,  1418,  1419,  1420,  4993,  5105,  5062,  1843,
    5107,  5124,  5131,  5059,  5133,  5134,    49,  5142,  5154,  5205,
    5090,  5093,  5109,  1413,  1414,  1415,  1416,  1417,  1418,  1419,
    1420,  4861,  5158,  1846,  1847,  5213,  5215,  5216,  1143,  5220,
      50,  5110,  5111,  4408,  4408,  5228,  5218,  5229,  2249,  5219,
    5235,  5116,    51,  5259,  -547,  5112,    52,  5117,  2250,  5277,
    3532,  5123,  5122,  5380,    53,  5128,  5139,  5197,  2251,  5196,
      54,  5236,  5250,  5280,  5279,  5281,  1848,  5282,  5295,  5298,
    5310,  5312,  2252,  2253,  2254,  5317,  5346,    55,  3463,  5349,
     912,  3464,  1487,  5319,  -565,    56,  5377,  5374,  2255,  5375,
    5376,  5043,  5379,  5385,  5386,  5389,  3536,  5387,  5393,  5019,
    5403,  5406,  5414,  5407,  5415,  5419,  5429,  5432,  5435,  5436,
    1729,  5437,  5446,  5442,  5444,  5447,    61,  5418, -2812,  5450,
    5002,   912,  5458,  5460,  5467,  5470,  5472,  5480,  5483,  5482,
    4293,  5487,  5418,  5488,  5489,   963,  5493,  5498,  5507,  5513,
     964,  5519,  5517,  5522,  5532,  5427,  5156,  5523,  1045,  5536,
    5539,  5546,  5548,    62,  5537,  4994,  3116,  5566,  5272,  3465,
    4127,  3914,  3905,  3908,  4946,  4948,  4951,  3911,  3932,  4278,
    4957,  4429,  5201,  5284,  1941,  4967,  5425,  2473,  5426,  4969,
    5567,  5541,  1640,  5087,  1101,  3624,  3581,  4536,  5169,  5551,
    5170,  2059,  4522,  5226,  5464,  5172,  5173,  5175,  5176,  5412,
    3323,  3323,  4523,  5177,  5418,  5178,  5179,  4224,  5180,  5465,
    5183,  5455,  4524,  1487,  5479,  5184,  5185,  5424,  5423,  5481,
    4441,  1778,  5249,  3175,  4126,  3182,  4525,  4526,  4527,  4757,
    4639,  3377,  4771,  3466,  5254,  4002,  5331,  4001,  4607,  5334,
    4895,  4005,  4528,  5017,  5396,  5263,  5402,  5434,    64,  5401,
    5270,  3298,  4000,  5418,  5141,  5418,  3142,  4451,  4653,  4706,
    4654,  4317,  4368,  4366,  4918,  5408,   116,  4708,   121,  5222,
    1380,  1381,  5143,  4099,   114,  5328,  3195,  5418,  5080,  5381,
    5030,  4408,  5077,  5053,  3787,  5044,  4911,  2725,  4666,  4767,
    4445,  3734,  3991,  3721,  2454,  3301,  4935,  3302,  3060,  3299,
    2425,  3063,  4384,  3467,  3860,  3610,  2701,  3608,  3902,  4146,
    3597,  4547,  5418,  5418,  1144,  2256,  3009,  5565,   912,  3115,
    1529,  2590,  1528,  2873,  2094,  4793,  3560,  3540,  2841,  5100,
    5384,  3468,  2257,  1651,  1157,  5431,  5392,  1157,  5509,  2015,
    5118,  3635,   963,  3636,  5530,   967,  3637,   964,  4859,  3638,
    5350,  5009,  5230,   912,   912,  4404,  4591,  5231,  1967,  2376,
    4866,  5119,   912,   912,   912,   912,   912,   912,  1977,  1978,
    1979,  1980,  1981,  1657,  3469,   912,   912,  1157,   912,   912,
    4205,  5043,  4984,   912,   912,  5028,  4380,   912,   912,   912,
     912,  5094,   912,   912,  3118,   932,  2880,  3569,  5226,  2219,
     912,   912,  1746,   912,   912,   912,   912,   912,  4144,  4145,
     912,   912,   912,   912,   912,   912,   912,   912,   912,  4846,
     912,  2375,  4558,   912,   912,  4834,  4839,  3050,   912,  1501,
    4142,  2453,   912,   912,   912,  3051,  5328,  3881,  2352,  3576,
    5190,  1747,  4152,  2981,  2980,   912,   912,   912,  1740,  1748,
     912,  5191,  1742,   912,   912,   912,   912,   912,  1749,  5390,
    4630,  5430,   912,  4888,  5545,  4820,  5562,  4722,  4764,  4529,
    2258,  4843,  5010,   912,   912,  1982,  1983,  1984,  1985,  3921,
    3743,   912,  3029,   912,   912,  5388,  4530,  2307,  3672,  5524,
    2095,  1053,  3040,  1054,  2306,   912,   912,   912,  3026,   912,
     912,  3025,  3604,   912,   912,   912,  1014,  2209,   912,   912,
     912,   912,   912,   912,   912,   912,  1522,  3406,  3716,   912,
    3407,  2418,  4995,  5104,   912,  1730,  1527,  5469,  2270,   757,
     758,  4728,  2259,  4446,  5477,  5190,  5190,  5397,  1944,   963,
    5192,  4768,  1945,  4964,   964,  1946,  5191,  5191,  4391,  2260,
    1977,  1978,  1979,  1980,  1981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2059,     0,     0,
       0,     0,   963,  5515,     0,     0,     0,   964,  5520,     0,
       0,     0,     0,  1487,     0,     0,  1986,  1157,  1987,  1988,
    1989,  2059,     0,     0,     0,     0,     0,  1990,  2233,     0,
       0,     0,   968,     0,     0,     0,     0,  4531,     0,     0,
    2059,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5559,     0,  4532,     0,   963,     0,     0,     0,
    2059,   964,     0,   912,     0,  5192,  5192,     0,  1383,   116,
       0,  1384,     0,     0,  5190,  5190,     0,   114,  5559,     0,
       0,     0,     0,     0,     0,  5191,  5191,  1982,  1983,  1984,
    1985,  5190,     0,     0,  1045,     0,   912,     0,     0,   912,
       0,     0,  5191,     0,     0,     0,     0,     0,  1991,     0,
       0,     0,     0,     0,     0,     0,  4533,     0,     0,     0,
       0,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4534,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5190,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1265,  5191,     0,     0,     0,
    5190,  1992,  1993,     0,  5192,  5192,     0,     0,     0,     0,
     912,  5191,     0,  5190,     0,     0,     0,     0,     0,     0,
       0,  5192,     0,     0,  5191,  1296,     0,     0,  1986,   912,
    1987,  1988,  1989,     0,     0,     0,     0,     0,     0,  1990,
       0,  1313,  5190,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5191,  5190,  5190,     0,     0,     0,     0,
    2422,  2422,  2422,     0,     0,  5191,  5191,     0,     0,     0,
       0,     0,  5190,   912,     0,     0,     0,     0,     0,     0,
       0,     0,  5190,  5191,     0,  5192,     0,  5190,     0,     0,
       0,     0,     0,  5191,     0,     0,     0,     0,  5191,     0,
    5192,  5190,  1374,  5190,     0,     0,     0,     0,     0,     0,
       0,     0,  5191,  5192,  5191,     0,     0,     0,     0,  5190,
    1991,  5190,     0,  5190,     0,     0,     0,     0,     0,     0,
    5191,     0,  5191,     0,  5191,     0,     0,     0,     0,     0,
       0,     0,  5192,  1994,     0,  5190,     0,     0,     0,     0,
       0,     0,     0,     0,  5192,  5192,  5191,     0,     0,  1386,
    1995,  1996,     0,  5190,  5190,     0,     0,     0,     0,     0,
       0,     0,  5192,     0,  5191,  5191,     0,     0,     0,     0,
    5190,  5190,  5192,  1992,  1993,  5190,     0,  5192,  4334,     0,
       0,  5191,  5191,     0,     0,     0,  5191,     0,     0,     0,
       0,  5192,     0,  5192,     0,     0,     0,     0,     0,     0,
    1489,     0,     0,     0,     0,     0,     0,     0,     0,  5192,
       0,  5192,     0,  5192,     0,  -815,     0,     0,     0,     0,
       0,     0,  4707,     0,     0,     0,  4336,     0,  4337,     0,
       0,     0,     0,     0,     0,  5192,     0,     0,     0,     0,
    2490,   885,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5192,  5192,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5192,  5192,     0,     0,     0,  5192,  4338,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2479,     0,  2481,  2482,     0,     0,   912,  2484,
    2485,     0,   912,     0,     0,     0,     0,     0,     0,     0,
     912,     0,   912,     0,  2498,  1994,     0,  2504,  2505,     0,
    2507,     0,     0,  2510,  2511,  2512,  2513,     0,     0,     0,
    2516,     0,  1995,  1996,     0,  2528,     0,     0,     0,     0,
    2533,  2534,  2535,  2536,  2537,     0,     0,     0,  2541,  2542,
       0,     0,   912,     0,  2552,     0,  2554,  2555,  2556,     0,
    2559,  2560,     0,  2562,     0,     0,  2565,     0,     0,  2566,
    2567,  2568,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,   912,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -994,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,   912,     0,     0,     0,     0,   912,     0,
     912,     0,     0,  1948,  1949,     0,   912,     0,   912,   912,
       0,     0,  1959,  1960,     0,     0,  1963,  1964,     0,     0,
       0,     0,     0,     0,     0,  1972,  1973,     0,  1974,  1975,
       0,     0,     0,  1999,     0,     0,     0,  2008,  2009,  2010,
    2011,     0,  2013,     0,     0,     0,  1406,  4339,     0,     0,
    2021,  2022,  4340,  2025,  2026,     0,     0,     0,  4341,     0,
    2030,     0,     0,  2033,  2034,  2035,  2036,  2037,  2038,     0,
    2040,     0,     0,  2043,  2044,     0,     0,     0,  2047,     0,
       0,     0,  2050,  2054,  2055,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2062,  2063,  2064,  4342,     0,
    2942,  2943,     0,  2070,  2071,  2072,  2073,  2074,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2093,   885,     0,     0,     0,     0,     0,
       0,  2097,     0,  2098,  2099,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   963,     0,
       0,   963,     0,   964,  2139,     0,   964,  4343,  1045,   912,
       0,     0,     0,   912,     0,     0,  1045,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3041,     0,  3419,     0,     0,     0,     0,  1768,
    1794,  1795,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4344,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1797,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1800,     0,     0,     0,     0,     0,  1801,  1802,     0,     0,
    1803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     963,     0,     0,  2281,  4345,   964,     0,     0,     0,     0,
       0,     0,     0,     0,  1805,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1806,     0,
       0,     0,  1807,     0,     0,     0,  2320,     0,     0,  2325,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3853,  3854,     0,  -664,
       0,  1812,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3173,     0,  3168,  3173,  3173,     0,  3174,
       0,     0,     0,     0,  3179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4346,     0,     0,     0,
    3229,  3230,  3231,  3232,     0,     0,     0,     0,     0,     0,
    2371,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    -817,     0,     0,     0,  3420,     0,     0,     0,  1816,  2390,
       0,     0,  3266,     0,     0,  1817,     0,     0,     0,  4347,
    4348,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1818,  3179,  3179,     0,     0,
    3083,     0,     0,     0,     0,     0,     0,     0,  3421,     0,
       0,     0,     0,  2438,     0,     0,  4349,     0,     0,     0,
       0,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1820,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3419,     0,     0,     0,     0,  1768,
    1794,  1795,     0,     0,     0,     0,     0,     0,  3234,     0,
       0,     0,     0,     0,     0,     0,     0,  1825,     0,     0,
       0,     0,     0,  1136,     0,  3247,  1826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1797,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   912,
    1800,     0,     0,     0,     0,     0,  1801,  1802,   912,   912,
    1803,     0,     0,  3293,  3294,     0,     0,     0,     0,     0,
       0,  3307,     0,     0,     0,     0,     0,     0,  3422,   912,
     912,     0,   912,     0,  1805,   912,   912,   912,   912,   912,
       0,     0,   912,     0,     0,     0,     0,     0,  1806,     0,
       0,   912,  1807,     0,     0,  1831,   912,     0,   912,     0,
     912,   912,     0,   912,   912,    42,     0,     0,   912,   912,
     912,     0,     0,     0,   912,   912,   912,     0,   912,  -664,
     912,  1812,   912,     0,   912,     0,   912,     0,  2738,     0,
       0,   912,  2742,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2738,     0,     0,     0,     0,   912,     0,     0,
       0,  1832,  1833,  1834,  1835,     0,     0,     0,     0,  1836,
       0,     0,     0,     0,     0,     0,   912,     0,   912,     0,
     912,     0,     0,     0,   912,     0,  1837,     0,    49,  1838,
     912,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3420,     0,     0,     0,  1816,     0,
       0,     0,     0,  3408,     0,  1817,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1840,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1818,  2814,  2816,  2818,     0,
       0,     0,    54,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,  2854,     0,     0,
       0,  3606,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1820,     0,  2862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2866,     0,
    2867,     0,  1821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   963,   963,   963,     0,     0,
     964,   964,   964,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1843,     0,     0,
       0,     0,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1825,     0,     0,
       0,  1846,  1847,  1136,  2422,     0,  1826,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,   912,     0,     0,     0,     0,     0,     0,     0,
       0,  1768,  1794,  1795,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1848,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3422,     0,
    3423,     0,     0,  -664,     0,     0,     0,     0,  1797,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1800,     0,     0,  1831,     0,     0,  1801,  1802,
       0,     0,  1803,     0,  3749,    42,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3759,     0,  3766,
    3767,  3768,  3769,     0,  3771,  3772,  1805,     0,     0,  3037,
       0,     0,     0,  2320,     0,     0,     0,     0,     0,     0,
    1806,     0,     0,     0,  1807,     0,     0,     0,     0,     0,
       0,  1832,  1833,  1834,  1835,     0,     0,     0,     0,  1836,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1812,     0,     0,  1837,     0,    49,  1838,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3865,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3871,     0,     0,
       0,     0,     0,     0,     0,  1840,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    54,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    1816,     0,     0,     0,     0,     0,     0,  1817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3747,     0,  3748,  1818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2422,     0,  2422,     0,
       0,     0,     0,     0,     0,     0,     0,  2422,  2422,  2422,
    2422,     0,     0,     0,     0,     0,  2422,  2422,  2422,  2422,
    2422,  2422,     0,  2422,  2422,  2422,  2422,     0,     0,  3958,
       0,  2422,     0,     0,     0,     0,  1820,  1843,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1821,     0,     0,     0,     0,     0,
     963,  1846,  1847,     0,     0,   964,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,     0,  1848,     0,   912,     0,     0,  1825,
       0,     0,     0,     0,     0,     0,     0,     0,  1826,     0,
    1138,  3325,     0,  -664,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,   912,     0,     0,
       0,  3888,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,   912,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1831,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,   912,     0,   912,     0,  3981,  3982,  3983,  3984,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,  1832,  1833,  1834,  1835,     0,     0,  3444,
       0,  1836,     0,     0,     0,     0,     0,     0,  3452,  3453,
       0,     0,     0,     0,     0,     0,     0,     0,  1837,     0,
       0,  1838,     0,     0,     0,   912,     0,   912,     0,  3483,
    3484,     0,  3485,     0,     0,  3488,  3489,  3490,  3491,  3492,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3498,     0,     0,     0,     0,  3499,  1840,  3500,     0,
    3501,  3502,     0,  3503,     0,     0,   912,     0,  3508,  3509,
    3510,     0,     0,     0,  3513,  3514,  3515,     0,  3516,     0,
    3518,     0,  3520,     0,  3522,     0,  3523,     0,     0,     0,
       0,  3526,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4241,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3558,     0,     0,     0,     0,     0,
    2139,     0,     0,     0,     0,     0,     0,     0,  4270,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     1,     0,     0,     2,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,     0,  1843,
       0,     3,     0,     0,     0,     4,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     5,
       6,     0,     0,  1846,  1847,     0,     0,     7,     0,     0,
       0,     0,     8,     9,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3605,     0,     0,    10,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1848,     0,    11,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      12,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,    14,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    16,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    17,     0,     0,     0,  2422,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2371,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,    21,
       0,     0,     0,     0,    22,     0,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3173,  3173,     0,
       0,  4437,    24,     0,     0,     0,     0,     0,     0,  2438,
      25,     0,     0,    26,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    27,     0,     0,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,  3296,     0,     0,     0,     0,  1791,     0,
    1792,   912,     0,   912,     0,     0,   912,   912,     0,   912,
       0,     0,  1768,  1794,  1795,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,   912,     0,     0,   912,     0,
       0,   912,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1796,     0,     0,     0,     0,  1797,
       0,     0,     0,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1800,     0,     0,   912,     0,     0,  1801,
    1802,     0,     0,  1803,     0,     0,     0,     0,     0,     0,
      30,     0,  1804,     0,     0,     0,     0,  4426,  4427,     0,
       0,     0,     0,     0,     0,     0,     0,  1805,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1806,   912,    31,     0,  1807,     0,     0,     0,     0,
       0,     0,     0,  1808,    32,     0,     0,     0,     0,     0,
    3297,     0,     0,     0,     0,     0,     0,     0,  1811,     0,
       0,     0,     0,     0,  1812,     0,    33,   912,   912,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
     912,     0,     0,     0,    37,    38,  4597,  4598,     0,  4600,
       0,     0,     0,     0,    39,     0,    40,     0,  1814,     0,
       0,     0,     0,     0,     0,    41,     0,     0,     0,     0,
       0,    42,     0,     0,     0,     0,     0,     0,     0,    43,
       0,     0,     0,     0,    44,    45,    46,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,     0,     0,     0,     0,     0,     0,  1817,     0,
       0,     0,     0,     0,   912,     0,     0,    47,     0,     0,
       0,     0,     0,     0,    48,     0,     0,     0,  1818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4019,     0,
       0,     0,     0,     0,    49,     0,  4022,     0,     0,     0,
       0,  1819,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4682,    50,     0,
       0,     0,     0,     0,     0,     0,  4052,  4053,     0,     0,
      51,     0,     0,     0,    52,     0,     0,  1820,     0,     0,
       0,     0,    53,     0,     0,     0,     0,     0,    54,     0,
       0,     0,  4078,     0,     0,  1821,     0,     0,     0,  1822,
       0,     0,  4089,     0,  4091,    55,  4093,     0,     0,   912,
     912,     0,     0,    56,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    57,
      58,    59,    60,     0,     0,     0,     0,     0,     0,     0,
       0,  3173,  3173,  1824,    61,     0,     0,     0,     0,     0,
    1825,     0,  2422,  2422,  2422,  2422,     0,     0,     0,  1826,
       0,     0,     0,  4241,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4777,  2371,     0,
       0,    62,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1828,     0,     0,     0,
       0,     0,     0,     0,     0,  4174,     0,  4176,     0,     0,
       0,    63,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1831,     0,
    4703,  4704,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2320,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,    64,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
     912,     0,     0,     0,  1832,  1833,  1834,  1835,     0,     0,
       0,     0,  1836,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1837,
       0,  4867,  1838,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4876,     0,     0,     0,     0,     0,     0,
    3797,  3798,     0,     0,     0,     0,  3799,     0,  3800,     0,
    3801,  3802,     0,     0,     0,     0,     0,     0,  1840,     0,
       0,     0,     0,     0,     0,  4285,     0,     0,  3803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1841,     0,     0,  1842,     0,     0,     0,     0,
       0,     0,     0,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3804,     0,
       0,  3805,     0,  3179,  3179,     0,     0,     0,     0,  3806,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3460,     0,
       0,     0,     0,     0,     0,     0,     0,  4939,     0,     0,
       0,     0,     0,     0,     0,  3807,     0,     0,  2422,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1843,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4966,  3808,     0,  3809,     0,     0,     0,     0,
       0,     0,     0,     0,  1846,  1847,     0,     0,     0,     0,
       0,  3810,  3811,   912,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1848,     0,     0,
       0,     0,     0,  3812,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3813,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,  3814,     0,     0,  5013,     0,
       0,     0,     0,     0,  3815,  3816,     0,  3817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4461,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5049,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3818,  3819,  3820,     0,     0,     0,     0,
       0,  4475,     0,  2438,     0,     0,  4480,  4481,     0,     0,
       0,     0,  3821,  3822,  3823,     0,     0,     0,     0,  3824,
    4488,     0,  3825,     0,     0,  4490,     0,     0,  4491,     0,
       0,  4492,  4493,     0,     0,     0,     0,     0,     0,     0,
    3826,  3827,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4505,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3828,  3829,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,     0,  5120,     0,     0,     0,     0,     0,
    3465,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2371,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3179,  3179,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,  5187,     0,     0,  4585,  4588,     0,
    5198,     0,     0,     0,     0,  5050,  5051,  5052,     0,     0,
    4596,     0,  3830,     0,     0,     0,  3831,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,     0,  3832,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5243,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,  4648,     0,     0,     0,  3833,  5187,
    5187,  3834,     0,     0,  3835,  3836,  3837,  3838,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,  5132,  3839,  3840,  5135,
    5136,  5137,  5138,     0,     0,   963,     0,     0,     0,     0,
     964,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,  3841,     0,     0,     0,     0,
       0,     0,     0,     0,  5329,  5330,     0,     0,     0,     0,
       0,     0,     0,     0,   912,     0,   912,     0,     0,  4731,
    4732,  1056,  1057,     0,     0,     0,   912,     0,  5187,  5187,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5187,     0,  1058,  1031,     0,
       0,     0,     0,     0,     0,     0,     0,  5234,  1059, -2140,
       0,     0,     0,     0,     0,     0,  5244,  5245,     0,     0,
       0,     0,     0,     0,     0,  5253,     0,     0,     0,     0,
       0,     0,     0,  1060,     0,  1061,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,  5187,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5187,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5187,     0,     0,
       0,     0,     0, -2132,  1063,     0,     0,     0,     0,  1064,
       0,     0,  1065,     0,     0,   912,     0,     0,  5494,     0,
       0,     0,  1066,     0,     0,   912,  5187,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2371,  5187,  5187,
       0,     0,     0,     0,  1067,     0,  1068,     0,     0,     0,
       0,     0,     0,     0,     0,  1069,  5187,  1070,  4853,     0,
    4855,     0,  1790,   912,     0,     0,  5187,  1791,     0,  1792,
       0,  5187,  1793,     0,     0,     0,     0,     0,   912,     0,
       0,  1768,  1794,  1795,     0,  5187,     0,  5187,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5187,     0,  5187,     0,  5187,     0,     0,
       0,     0,     0,  1796,     0,     0,  -975,  -975,  1797,  1798,
       0,     0,     0,     0,  1799,     0,  -975,     0,  1071,  5187,
       0,     0,  1800,     0,     0,     0,     0,     0,  1801,  1802,
       0,     0,  1803,     0,     0,     0,     0,  5187,  5187,     0,
       0,  1804,     0,     0,   912,     0,     0,     0,     0,     0,
       0,  1072,   912,     0,  5187,  5187,  1805,     0,     0,  5187,
       0,     0,     0,  4925,     0,     0,     0,     0,     0,     0,
    1806,     0,     0,     0,  1807,     0,     0,     0,     0,     0,
       0,     0,  1808,  1809,     0,     0,     0,     0,     0,  1810,
       0,     0,     0,     0,     0,     0,  4933,  1811,     0,     0,
       0,     0,     0,  1812,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1813,     0,  1073,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1814,     0,     0,
       0,     0,     0,  1074,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,  1076,     0, -2136,  1077,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2438,     0,     0,  4979,     0,  1815,  1079,
    1816,     0,     0,     0,     0,     0,     0,  1817,     0,  4585,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1819,     0,     0,  1080,     0,     0,  4585,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1081,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1820,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2882,     0,
       0,     0,  1082,     0,  1821,     0,     0,     0,  1822,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2140,     0,
       0,  1083,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2136,     0,     0,     0,     0,  1823,     0,     0,     0,
       0,     0,  1824,     0,     0,     0,     0,     0,     0,  1825,
       0,     0,     0,     0,     0,     0,     0,     0,  1826,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2882,
    2438,     0,     0,     0,     0,     0,  1084,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1827,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1828,  1829,  1830,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1831,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5157,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5214,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1832,  1833,  1834,  1835,     0,     0,  1085,
    1086,  1836,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1837,     0,
       0,  1838,     0,     0,     0,     0,     0,     0,     0,     0,
    1087,     0,     0,  1088,  1089,  1090,  1091,     0,  1092,     0,
       0,     0,     0,  5258,  1839,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1840,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1841,  5296,     0,  1842,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5344,     0,  5345,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5353,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1843,
    1844,  1845,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1846,  1847,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5416,     0,     0,
       0,     0,     0,     0,     0,     0,  1848,     0,     0,     0,
       0,     0,     0,     0,     0,  5421,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5440,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   244,   245,     0,   762,   247,
     248,   249,   250,  2313,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   763,     0,   254,   255,   256,   257,   764,
     259,     0,   260,  5471,     0,  2314,   261,   766,   767,   768,
     262,   769,     0,   263,   264,   265,     0,   266,  5486,   267,
     268,     0,     0,   269,   770,   771,   270,   271,     0,   272,
     273,   772,   773,   275,     0,   276,   277,   278,   279,   774,
     281,     0,   775,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   776,   777,   302,     0,
       0,     0,   778,   303,   779,     0,   304,   780,   781,     0,
     305,   306,   307,   782,   783,   784,     0,     0,     0,     0,
     785,   310,   786,     0,  5560,  2315,   311,   312,     0,   313,
       0,     0,  2371,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   788,     0,   337,   338,   339,   340,   341,   789,   790,
     342,   343,     0,   344,   345,   346,   347,   348,   791,     0,
     349,   350,  2316,     0,     0,   792,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   793,   357,   794,     0,   359,
       0,   360,     0,   795,     0,   361,   362,     0,   363,   796,
       0,   364,   365,     0,     0,     0,   797,   367,   368,   369,
     798,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   799,   374,   375,   376,   800,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   801,   387,   388,     0,     0,     0,     0,     0,   802,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     803,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   804,   416,
     417,   418,   419,   805,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   806,   427,     0,     0,   807,   429,
     808,   430,     0,   431,   809,   810,   811,   812,   813,   436,
     437,   438,   439,   440,     0,   814,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   815,   816,   817,   448,   449,
       0,   818,   819,   450,     0,   451,   452,  2317,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   820,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   821,   822,
     471,   823,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   824,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   825,   826,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   827,     0,   828,   515,   516,   517,
     518,     0,   519,  2318,   830,   521,   522,   523,   524,     0,
     831,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   832,   833,   555,   556,     0,     0,   557,
     558,   834,   560,   561,   562,   835,   836,   563,   564,   565,
     566,   837,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   838,   573,   574,     0,   839,   840,   841,   842,     0,
       0,     0,     0,     0,   579,   580,     0,   843,   844,   845,
     582,   583,     0,   846,   584,   585,   847,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   848,   594,     0,     0,   849,   850,   851,   595,   852,
     596,     0,     0,   597,   853,     0,   854,   598,     0,   599,
     600,   855,   856,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   857,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   858,   859,     0,   617,   618,   619,
     860,   620,   621,   622,     0,   623,   861,   862,   624,   863,
     625,     0,   864,   865,   866,   867,   868,   626,   627,     0,
     869,   628,   870,   629,   871,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,  2319,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   872,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,     0,     0,     0,     0,     0,     0,   873,
     874,     0,     0,     0,     0,   876,     0,   877,     0,     0,
       0,   878,     0,     0,     0,   879,   880,   244,   245,     0,
     762,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   763,     0,   254,   255,   256,
     257,   764,   259,     0,   260,     0,     0,   765,   261,   766,
     767,   768,   262,   769,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   770,   771,   270,   271,
       0,   272,   273,   772,   773,   275,     0,   276,   277,   278,
     279,   774,   281,     0,   775,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   776,   777,
     302,     0,     0,     0,   778,   303,   779,     0,   304,   780,
     781,     0,   305,   306,   307,   782,   783,   784,     0,     0,
       0,     0,   785,   310,   786,     0,     0,   787,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   788,     0,   337,   338,   339,   340,   341,
     789,   790,   342,   343,     0,   344,   345,   346,   347,   348,
     791,     0,   349,   350,     0,     0,     0,   792,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   793,   357,   794,
       0,   359,     0,   360,     0,   795,     0,   361,   362,     0,
     363,   796,     0,   364,   365,     0,     0,     0,   797,   367,
     368,   369,   798,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   799,   374,   375,   376,   800,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   801,   387,   388,     0,     0,     0,     0,
       0,   802,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   803,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     804,   416,   417,   418,   419,   805,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   806,   427,     0,     0,
     807,   429,   808,   430,     0,   431,   809,   810,   811,   812,
     813,   436,   437,   438,   439,   440,     0,   814,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   815,   816,   817,
     448,   449,     0,   818,   819,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   820,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     821,   822,   471,   823,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   824,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   825,   826,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   827,     0,   828,   515,
     516,   517,   518,     0,   519,   829,   830,   521,   522,   523,
     524,     0,   831,   526,    42,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   832,   833,   555,   556,     0,
       0,   557,   558,   834,   560,   561,   562,   835,   836,   563,
     564,   565,   566,   837,   567,   568,     0,    49,   569,   570,
     571,   572,     0,   838,   573,   574,     0,   839,   840,   841,
     842,     0,     0,     0,     0,     0,   579,   580,     0,   843,
     844,   845,   582,   583,     0,   846,   584,   585,   847,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   848,   594,     0,     0,   849,   850,   851,
     595,  1371,   596,     0,     0,   597,   853,     0,   854,   598,
       0,   599,   600,   855,   856,     0,     0,     0,    55,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   857,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   858,   859,     0,   617,
     618,   619,   860,   620,   621,   622,     0,   623,   861,   862,
     624,   863,   625,     0,   864,   865,   866,   867,   868,   626,
     627,     0,   869,   628,   870,   629,   871,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   872,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,     0,     0,     0,     0,
       0,   873,   874,     0,     0,     0,     0,   876,     0,   877,
       0,     0,     0,   878,     0,     0,     0,   879,   880,   244,
     245,     0,   762,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   763,     0,   254,
     255,   256,   257,   764,   259,     0,   260,     0,     0,   765,
     261,   766,   767,   768,   262,   769,     0,   263,   264,   265,
    2051,   266,     0,   267,   268,     0,     0,   269,   770,   771,
     270,   271,     0,   272,   273,   772,   773,   275,     0,   276,
     277,   278,   279,   774,   281,     0,   775,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     776,   777,   302,     0,     0,     0,   778,   303,   779,     0,
     304,   780,   781,     0,   305,   306,   307,   782,   783,   784,
       0,     0,     0,     0,   785,   310,   786,     0,     0,   787,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   788,     0,   337,   338,   339,
     340,   341,   789,   790,   342,   343,     0,   344,   345,   346,
     347,   348,   791,     0,   349,   350,     0,     0,     0,   792,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   793,
     357,   794,     0,   359,     0,   360,     0,   795,     0,   361,
     362,     0,   363,   796,     0,   364,   365,     0,     0,     0,
     797,   367,   368,   369,   798,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   799,   374,   375,   376,   800,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,  2052,   386,     0,   801,   387,   388,     0,     0,
       0,     0,     0,   802,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   803,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   804,   416,   417,   418,   419,   805,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   806,   427,
       0,     0,   807,   429,   808,   430,     0,   431,   809,   810,
     811,   812,   813,   436,   437,   438,   439,   440,     0,   814,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   815,
     816,   817,   448,   449,     0,   818,   819,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     820,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   821,   822,   471,   823,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     824,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   825,   826,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   827,     0,
     828,   515,   516,   517,   518,     0,   519,   829,   830,   521,
     522,   523,   524,     0,   831,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   832,   833,   555,
     556,     0,     0,   557,   558,   834,   560,   561,   562,   835,
     836,   563,   564,   565,   566,   837,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   838,   573,   574,     0,   839,
     840,   841,   842,     0,     0,     0,     0,  2053,   579,   580,
       0,   843,   844,   845,   582,   583,     0,   846,   584,   585,
     847,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   848,   594,     0,     0,   849,
     850,   851,   595,   852,   596,     0,     0,   597,   853,     0,
     854,   598,     0,   599,   600,   855,   856,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   857,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   858,   859,
       0,   617,   618,   619,   860,   620,   621,   622,     0,   623,
     861,   862,   624,   863,   625,     0,   864,   865,   866,   867,
     868,   626,   627,     0,   869,   628,   870,   629,   871,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   872,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,     0,     0,
       0,     0,     0,   873,   874,     0,     0,     0,     0,   876,
       0,   877,     0,     0,     0,   878,     0,     0,     0,   879,
     880,   244,   245,     0,   762,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   763,
       0,   254,   255,   256,   257,   764,   259,     0,   260,     0,
       0,   765,   261,   766,   767,   768,   262,   769,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     770,   771,   270,   271,     0,   272,   273,   772,   773,   275,
       0,   276,   277,   278,   279,   774,   281,     0,   775,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   776,   777,   302,     0,     0,     0,   778,   303,
     779,     0,   304,   780,   781,     0,   305,   306,   307,   782,
     783,   784,     0,     0,     0,     0,   785,   310,   786,     0,
       0,   787,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   788,     0,   337,
     338,   339,   340,   341,   789,   790,   342,   343,     0,   344,
     345,   346,   347,   348,   791,     0,   349,   350,     0,     0,
       0,   792,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   793,   357,   794,     0,   359,     0,   360,     0,   795,
       0,   361,   362,     0,   363,   796,     0,   364,   365,     0,
       0,     0,   797,   367,   368,   369,   798,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   799,   374,   375,
     376,   800,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   801,   387,   388,
       0,     0,     0,     0,     0,   802,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   803,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   804,   416,   417,   418,   419,   805,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     806,   427,     0,     0,   807,   429,   808,   430,     0,   431,
     809,   810,   811,   812,   813,   436,   437,   438,   439,   440,
       0,   814,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   815,   816,   817,   448,   449,     0,   818,   819,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   820,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   821,   822,   471,   823,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   824,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     825,   826,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     827,     0,   828,   515,   516,   517,   518,     0,   519,   829,
     830,   521,   522,   523,   524,     0,   831,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   832,
     833,   555,   556,     0,     0,   557,   558,   834,   560,   561,
     562,   835,   836,   563,   564,   565,   566,   837,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   838,   573,   574,
       0,   839,   840,   841,   842,     0,     0,     0,     0,     0,
     579,   580,     0,   843,   844,   845,   582,   583,     0,   846,
     584,   585,   847,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   848,   594,     0,
       0,   849,   850,   851,   595,   852,   596,     0,     0,   597,
     853,     0,   854,   598,     0,   599,   600,   855,   856,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   857,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     858,   859,     0,   617,   618,   619,   860,   620,   621,   622,
       0,   623,   861,   862,   624,   863,   625,     0,   864,   865,
     866,   867,   868,   626,   627,     0,   869,   628,   870,   629,
     871,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   872,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,     0,   713,   714,   715,   716,   717,   718,   719,     0,
       0,     0,     0,     0,     0,   873,   874,   875,     0,     0,
       0,   876,     0,   877,     0,     0,     0,   878,     0,     0,
       0,   879,   880,   244,   245,     0,   762,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   763,     0,   254,   255,   256,   257,   764,   259,     0,
     260,     0,     0,   765,   261,   766,   767,   768,   262,   769,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   770,   771,   270,   271,     0,   272,   273,   772,
     773,   275,     0,   276,   277,   278,   279,   774,   281,     0,
     775,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   776,   777,   302,     0,     0,     0,
     778,   303,   779,     0,   304,   780,   781,     0,   305,   306,
     307,   782,   783,   784,     0,     0,     0,     0,   785,   310,
     786,     0,     0,   787,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   788,
       0,   337,   338,   339,   340,   341,   789,   790,   342,   343,
       0,   344,   345,   346,   347,   348,   791,     0,   349,   350,
       0,     0,     0,   792,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   793,   357,   794,     0,   359,     0,   360,
       0,   795,     0,   361,   362,     0,   363,   796,     0,   364,
     365,     0,     0,     0,   797,   367,   368,   369,   798,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   799,
     374,   375,   376,   800,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   801,
     387,   388,     0,     0,     0,     0,     0,   802,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   803,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   804,   416,   417,   418,
     419,   805,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   806,   427,     0,     0,   807,   429,   808,   430,
       0,   431,   809,   810,   811,   812,   813,   436,   437,   438,
     439,   440,     0,   814,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   815,   816,   817,   448,   449,     0,   818,
     819,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   820,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   821,   822,   471,   823,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   824,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   825,   826,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   827,     0,   828,   515,   516,   517,   518,     0,
     519,   829,   830,   521,   522,   523,   524,     0,   831,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   832,   833,   555,   556,     0,     0,   557,   558,   834,
     560,   561,   562,   835,   836,   563,   564,   565,   566,   837,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   838,
     573,   574,     0,   839,   840,   841,   842,     0,     0,     0,
       0,     0,   579,   580,     0,   843,   844,   845,   582,   583,
       0,   846,   584,   585,   847,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   848,
     594,     0,     0,   849,   850,   851,   595,   852,   596,     0,
       0,   597,   853,     0,   854,   598,     0,   599,   600,   855,
     856,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   857,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   858,   859,     0,   617,   618,   619,   860,   620,
     621,   622,     0,   623,   861,   862,   624,   863,   625,     0,
     864,   865,   866,   867,   868,   626,   627,     0,   869,   628,
     870,   629,   871,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   872,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,     0,   713,   714,   715,   716,   717,   718,
     719,     0,     0,     0,     0,     0,     0,   873,   874,  2757,
       0,     0,     0,   876,     0,   877,     0,     0,     0,   878,
       0,     0,     0,   879,   880,   244,   245,     0,   762,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   763,     0,   254,   255,   256,   257,   764,
     259,     0,   260,     0,     0,   765,   261,   766,   767,   768,
     262,   769,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   770,   771,   270,   271,     0,   272,
     273,   772,   773,   275,     0,   276,   277,   278,   279,   774,
     281,     0,   775,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   776,   777,   302,     0,
       0,     0,   778,   303,   779,     0,   304,   780,   781,     0,
     305,   306,   307,   782,   783,   784,     0,     0,     0,     0,
     785,   310,   786,     0,     0,   787,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   788,     0,   337,   338,   339,   340,   341,   789,   790,
     342,   343,     0,   344,   345,   346,   347,   348,   791,     0,
     349,   350,     0,     0,     0,   792,   352,  2813,   353,     0,
       0,     0,   354,     0,   355,   793,   357,   794,     0,   359,
       0,   360,     0,   795,     0,   361,   362,     0,   363,   796,
       0,   364,   365,     0,     0,     0,   797,   367,   368,   369,
     798,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   799,   374,   375,   376,   800,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   801,   387,   388,     0,     0,     0,     0,     0,   802,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     803,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   804,   416,
     417,   418,   419,   805,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   806,   427,     0,     0,   807,   429,
     808,   430,     0,   431,   809,   810,   811,   812,   813,   436,
     437,   438,   439,   440,     0,   814,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   815,   816,   817,   448,   449,
       0,   818,   819,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   820,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   821,   822,
     471,   823,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   824,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   825,   826,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   827,     0,   828,   515,   516,   517,
     518,     0,   519,   829,   830,   521,   522,   523,   524,     0,
     831,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   832,   833,   555,   556,     0,     0,   557,
     558,   834,   560,   561,   562,   835,   836,   563,   564,   565,
     566,   837,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   838,   573,   574,     0,   839,   840,   841,   842,     0,
       0,     0,     0,     0,   579,   580,     0,   843,   844,   845,
     582,   583,     0,   846,   584,   585,   847,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   848,   594,     0,     0,   849,   850,   851,   595,   852,
     596,     0,     0,   597,   853,     0,   854,   598,     0,   599,
     600,   855,   856,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   857,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   858,   859,     0,   617,   618,   619,
     860,   620,   621,   622,     0,   623,   861,   862,   624,   863,
     625,     0,   864,   865,   866,   867,   868,   626,   627,     0,
     869,   628,   870,   629,   871,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   872,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,     0,     0,     0,     0,     0,     0,   873,
     874,     0,     0,     0,     0,   876,     0,   877,     0,     0,
       0,   878,     0,     0,     0,   879,   880,   244,   245,     0,
     762,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   763,     0,   254,   255,   256,
     257,   764,   259,     0,   260,     0,     0,   765,   261,   766,
     767,   768,   262,   769,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   770,   771,   270,   271,
       0,   272,   273,   772,   773,   275,     0,   276,   277,   278,
     279,   774,   281,     0,   775,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   776,   777,
     302,     0,     0,     0,   778,   303,   779,     0,   304,   780,
     781,     0,   305,   306,   307,   782,   783,   784,     0,     0,
       0,     0,   785,   310,   786,     0,     0,   787,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   788,     0,   337,   338,   339,   340,   341,
     789,   790,   342,   343,     0,   344,   345,   346,   347,   348,
     791,     0,   349,   350,     0,     0,     0,   792,   352,  2815,
     353,     0,     0,     0,   354,     0,   355,   793,   357,   794,
       0,   359,     0,   360,     0,   795,     0,   361,   362,     0,
     363,   796,     0,   364,   365,     0,     0,     0,   797,   367,
     368,   369,   798,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   799,   374,   375,   376,   800,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   801,   387,   388,     0,     0,     0,     0,
       0,   802,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   803,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     804,   416,   417,   418,   419,   805,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   806,   427,     0,     0,
     807,   429,   808,   430,     0,   431,   809,   810,   811,   812,
     813,   436,   437,   438,   439,   440,     0,   814,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   815,   816,   817,
     448,   449,     0,   818,   819,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   820,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     821,   822,   471,   823,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   824,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   825,   826,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   827,     0,   828,   515,
     516,   517,   518,     0,   519,   829,   830,   521,   522,   523,
     524,     0,   831,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   832,   833,   555,   556,     0,
       0,   557,   558,   834,   560,   561,   562,   835,   836,   563,
     564,   565,   566,   837,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   838,   573,   574,     0,   839,   840,   841,
     842,     0,     0,     0,     0,     0,   579,   580,     0,   843,
     844,   845,   582,   583,     0,   846,   584,   585,   847,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   848,   594,     0,     0,   849,   850,   851,
     595,   852,   596,     0,     0,   597,   853,     0,   854,   598,
       0,   599,   600,   855,   856,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   857,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   858,   859,     0,   617,
     618,   619,   860,   620,   621,   622,     0,   623,   861,   862,
     624,   863,   625,     0,   864,   865,   866,   867,   868,   626,
     627,     0,   869,   628,   870,   629,   871,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   872,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,     0,     0,     0,     0,
       0,   873,   874,     0,     0,     0,     0,   876,     0,   877,
       0,     0,     0,   878,     0,     0,     0,   879,   880,   244,
     245,     0,   762,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   763,     0,   254,
     255,   256,   257,   764,   259,     0,   260,     0,     0,   765,
     261,   766,   767,   768,   262,   769,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   770,   771,
     270,   271,     0,   272,   273,   772,   773,   275,     0,   276,
     277,   278,   279,   774,   281,     0,   775,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     776,   777,   302,     0,     0,     0,   778,   303,   779,     0,
     304,   780,   781,     0,   305,   306,   307,   782,   783,   784,
       0,     0,     0,     0,   785,   310,   786,     0,     0,   787,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   788,     0,   337,   338,   339,
     340,   341,   789,   790,   342,   343,     0,   344,   345,   346,
     347,   348,   791,     0,   349,   350,     0,     0,     0,   792,
     352,  2817,   353,     0,     0,     0,   354,     0,   355,   793,
     357,   794,     0,   359,     0,   360,     0,   795,     0,   361,
     362,     0,   363,   796,     0,   364,   365,     0,     0,     0,
     797,   367,   368,   369,   798,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   799,   374,   375,   376,   800,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   801,   387,   388,     0,     0,
       0,     0,     0,   802,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   803,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   804,   416,   417,   418,   419,   805,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   806,   427,
       0,     0,   807,   429,   808,   430,     0,   431,   809,   810,
     811,   812,   813,   436,   437,   438,   439,   440,     0,   814,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   815,
     816,   817,   448,   449,     0,   818,   819,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     820,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   821,   822,   471,   823,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     824,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   825,   826,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   827,     0,
     828,   515,   516,   517,   518,     0,   519,   829,   830,   521,
     522,   523,   524,     0,   831,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   832,   833,   555,
     556,     0,     0,   557,   558,   834,   560,   561,   562,   835,
     836,   563,   564,   565,   566,   837,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   838,   573,   574,     0,   839,
     840,   841,   842,     0,     0,     0,     0,     0,   579,   580,
       0,   843,   844,   845,   582,   583,     0,   846,   584,   585,
     847,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   848,   594,     0,     0,   849,
     850,   851,   595,   852,   596,     0,     0,   597,   853,     0,
     854,   598,     0,   599,   600,   855,   856,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   857,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   858,   859,
       0,   617,   618,   619,   860,   620,   621,   622,     0,   623,
     861,   862,   624,   863,   625,     0,   864,   865,   866,   867,
     868,   626,   627,     0,   869,   628,   870,   629,   871,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   872,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,     0,     0,
       0,     0,     0,   873,   874,     0,     0,     0,     0,   876,
       0,   877,     0,     0,     0,   878,     0,     0,     0,   879,
     880,   244,   245,     0,   762,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   763,
       0,   254,   255,   256,   257,   764,   259,     0,   260,     0,
       0,   765,   261,   766,   767,   768,   262,   769,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     770,   771,   270,   271,     0,   272,   273,   772,   773,   275,
       0,   276,   277,   278,   279,   774,   281,     0,   775,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   776,   777,   302,     0,     0,     0,   778,   303,
     779,     0,   304,   780,   781,     0,   305,   306,   307,   782,
     783,   784,     0,     0,     0,     0,   785,   310,   786,     0,
       0,   787,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   788,     0,   337,
     338,   339,   340,   341,   789,   790,   342,   343,     0,   344,
     345,   346,   347,   348,   791,     0,   349,   350,     0,     0,
       0,   792,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   793,   357,   794,     0,   359,     0,   360,     0,   795,
       0,   361,   362,     0,   363,   796,     0,   364,   365,     0,
       0,     0,   797,   367,   368,   369,   798,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   799,   374,   375,
     376,   800,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   801,   387,   388,
       0,     0,     0,     0,     0,   802,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   803,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   804,   416,   417,   418,   419,   805,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     806,   427,     0,     0,   807,   429,   808,   430,     0,   431,
     809,   810,   811,   812,   813,   436,   437,   438,   439,   440,
       0,   814,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   815,   816,   817,   448,   449,     0,   818,   819,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   820,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   821,   822,   471,   823,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   824,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     825,   826,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     827,     0,   828,   515,   516,   517,   518,     0,   519,   829,
     830,   521,   522,   523,   524,     0,   831,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   832,
     833,   555,   556,     0,     0,   557,   558,   834,   560,   561,
     562,   835,   836,   563,   564,   565,   566,   837,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   838,   573,   574,
       0,   839,   840,   841,   842,     0,     0,     0,     0,     0,
     579,   580,     0,   843,   844,   845,   582,   583,     0,   846,
     584,   585,   847,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   848,   594,     0,
       0,   849,   850,   851,   595,   852,   596,     0,     0,   597,
     853,     0,   854,   598,     0,   599,   600,   855,   856,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   857,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     858,   859,     0,   617,   618,   619,   860,   620,   621,   622,
       0,   623,   861,   862,   624,   863,   625,     0,   864,   865,
     866,   867,   868,   626,   627,     0,   869,   628,   870,   629,
     871,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   872,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,     0,   713,   714,   715,   716,   717,   718,   719,     0,
       0,     0,     0,     0,     0,   873,   874,     0,     0,     0,
       0,   876,     0,   877,     0,     0,     0,   878,     0,     0,
       0,   879,   880,   244,   245,     0,   762,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   763,     0,   254,   255,   256,   257,   764,   259,     0,
     260,     0,     0,   765,   261,   766,   767,   768,   262,   769,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   770,   771,   270,   271,     0,   272,   273,   772,
     773,   275,     0,   276,   277,   278,   279,   774,   281,     0,
     775,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   776,   777,   302,     0,     0,     0,
     778,   303,   779,     0,   304,   780,   781,     0,   305,   306,
     307,   782,   783,   784,     0,     0,     0,     0,   785,   310,
     786,     0,     0,   787,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   788,
       0,   337,   338,   339,   340,   341,   789,   790,   342,   343,
       0,   344,   345,   346,   347,   348,   791,     0,   349,   350,
       0,     0,     0,   792,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   793,   357,   794,     0,   359,     0,   360,
       0,   795,     0,   361,   362,     0,   363,   796,     0,   364,
     365,     0,     0,     0,   797,   367,   368,   369,   798,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   799,
     374,   375,   376,   800,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   801,
     387,   388,     0,     0,     0,     0,     0,   802,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   803,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   804,   416,   417,   418,
     419,   805,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   806,   427,     0,     0,   807,   429,   808,   430,
       0,   431,   809,   810,   811,   812,   813,   436,   437,   438,
     439,   440,     0,   814,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   815,   816,   817,   448,   449,     0,   818,
     819,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   820,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   821,   822,   471,   823,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   824,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   825,   826,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   827,     0,   828,   515,   516,   517,   518,     0,
     519,   829,   830,   521,   522,   523,   524,     0,   831,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   832,   833,   555,   556,     0,     0,   557,   558,   834,
     560,   561,   562,   835,   836,   563,   564,   565,   566,   837,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   838,
     573,   574,     0,   839,   840,   841,   842,     0,     0,     0,
       0,     0,   579,   580,     0,   843,   844,   845,   582,   583,
       0,   846,   584,   585,   847,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   848,
     594,     0,     0,   849,   850,   851,   595,   852,   596,     0,
       0,   597,   853,     0,   854,   598,     0,   599,   600,   855,
     856,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   857,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   858,   859,     0,   617,   618,   619,   860,   620,
     621,   622,     0,   623,   861,   862,   624,   863,   625,     0,
     864,   865,   866,   867,   868,   626,   627,     0,   869,   628,
     870,   629,   871,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   872,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,     0,   713,   714,   715,   716,   717,   718,
     719,     0,     0,     0,     0,     0,     0,   873,   874,     0,
       0,     0,     0,   876,     0,  1295,     0,     0,     0,   878,
       0,     0,     0,   879,   880,   244,   245,     0,   762,   247,
     248,   249,   250,  2105,     0,   251,     0,     0,     0,     0,
    2106,     0,     0,   763,     0,   254,   255,   256,   257,   764,
     259,     0,   260,     0,     0,   765,   261,   766,   767,   768,
     262,   769,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   770,   771,   270,   271,     0,   272,
     273,   772,   773,   275,     0,   276,   277,   278,   279,   774,
     281,     0,   775,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   776,   777,   302,     0,
       0,     0,   778,   303,   779,     0,   304,   780,   781,     0,
     305,   306,   307,   782,   783,   784,     0,     0,     0,     0,
     785,   310,   786,     0,     0,   787,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   788,     0,   337,   338,   339,   340,   341,   789,   790,
     342,   343,     0,   344,   345,   346,   347,   348,   791,     0,
     349,   350,     0,     0,     0,   792,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   793,   357,   794,     0,   359,
       0,   360,     0,   795,     0,   361,   362,     0,   363,   796,
       0,   364,   365,     0,     0,     0,   797,   367,   368,   369,
     798,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   799,   374,   375,   376,   800,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   801,   387,   388,     0,     0,     0,     0,     0,   802,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     803,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   804,   416,
     417,   418,   419,   805,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   806,   427,     0,     0,   807,   429,
     808,   430,     0,   431,   809,   810,   811,   812,   813,   436,
     437,   438,   439,   440,     0,   814,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   815,     0,   817,   448,   449,
       0,   818,   819,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   820,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   821,   822,
     471,   823,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   824,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   825,   826,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   827,     0,   828,   515,   516,   517,
     518,     0,   519,   829,   830,   521,   522,   523,   524,     0,
     831,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   832,   833,   555,   556,     0,     0,   557,
     558,   834,   560,   561,   562,   835,   836,   563,   564,   565,
     566,   837,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   838,   573,   574,     0,   839,   840,   841,   842,     0,
       0,     0,     0,     0,   579,   580,     0,   843,   844,   845,
     582,   583,     0,   846,   584,   585,   847,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   848,   594,     0,     0,   849,   850,   851,   595,   852,
     596,     0,     0,   597,   853,     0,   854,   598,     0,   599,
     600,   855,   856,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   857,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   858,   859,     0,   617,   618,   619,
     860,   620,   621,   622,     0,   623,   861,   862,   624,   863,
     625,     0,   864,   865,   866,   867,   868,   626,   627,     0,
     869,   628,   870,   629,   871,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   872,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,     0,     0,     0,     0,     0,     0,   873,
     874,     0,     0,     0,     0,   876,     0,   877,     0,     0,
       0,   878,     0,     0,     0,   879,   880,   244,   245,     0,
     762,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   763,     0,   254,   255,   256,
     257,   764,   259,     0,   260,     0,     0,   765,   261,   766,
     767,   768,   262,   769,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   770,   771,   270,   271,
       0,   272,   273,   772,   773,   275,     0,   276,   277,   278,
     279,   774,   281,     0,   775,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   776,   777,
     302,     0,     0,     0,   778,   303,   779,     0,   304,   780,
     781,     0,   305,   306,   307,   782,   783,   784,     0,     0,
       0,     0,   785,   310,   786,     0,     0,  2370,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   788,     0,   337,   338,   339,   340,   341,
     789,   790,   342,   343,     0,   344,   345,   346,   347,   348,
     791,     0,   349,   350,     0,     0,     0,   792,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   793,   357,   794,
       0,   359,     0,   360,     0,   795,     0,   361,   362,     0,
     363,   796,     0,   364,   365,     0,     0,     0,   797,   367,
     368,   369,   798,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   799,   374,   375,   376,   800,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   801,   387,   388,     0,     0,     0,     0,
       0,   802,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   803,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     804,   416,   417,   418,   419,   805,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   806,   427,     0,     0,
     807,   429,   808,   430,     0,   431,   809,   810,   811,   812,
     813,   436,   437,   438,   439,   440,     0,   814,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   815,   816,   817,
     448,   449,     0,   818,   819,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   820,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     821,   822,   471,   823,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   824,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   825,   826,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   827,     0,   828,   515,
     516,   517,   518,     0,   519,   829,   830,   521,   522,   523,
     524,     0,   831,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   832,   833,   555,   556,     0,
       0,   557,   558,   834,   560,   561,   562,   835,   836,   563,
     564,   565,   566,   837,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   838,   573,   574,     0,   839,   840,   841,
     842,     0,     0,     0,     0,     0,   579,   580,     0,   843,
     844,   845,   582,   583,     0,   846,   584,   585,   847,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   848,   594,     0,     0,   849,   850,   851,
     595,   852,   596,     0,     0,   597,   853,     0,   854,   598,
       0,   599,   600,   855,   856,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   857,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   858,   859,     0,   617,
     618,   619,   860,   620,   621,   622,     0,   623,   861,   862,
     624,   863,   625,     0,   864,   865,   866,   867,   868,   626,
     627,     0,   869,   628,   870,   629,   871,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   872,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,     0,     0,     0,     0,
       0,   873,   874,     0,     0,     0,     0,   876,     0,   877,
       0,     0,     0,   878,     0,     0,     0,   879,   880,   244,
     245,     0,   762,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   763,     0,   254,
     255,   256,   257,   764,   259,     0,   260,     0,     0,   765,
     261,   766,   767,   768,   262,   769,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   770,   771,
     270,   271,     0,   272,   273,   772,   773,   275,     0,   276,
     277,   278,   279,   774,   281,     0,   775,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     776,   777,   302,     0,     0,     0,   778,   303,   779,     0,
     304,   780,   781,     0,   305,   306,   307,   782,   783,   784,
       0,     0,     0,     0,   785,   310,   786,     0,     0,   787,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   788,     0,   337,   338,   339,
     340,   341,   789,   790,   342,   343,     0,   344,   345,   346,
     347,   348,   791,     0,   349,   350,     0,     0,     0,   792,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   793,
     357,   794,     0,   359,     0,   360,     0,   795,     0,   361,
     362,     0,   363,   796,     0,   364,   365,     0,     0,     0,
     797,   367,   368,   369,   798,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   799,   374,   375,   376,  3443,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   801,   387,   388,     0,     0,
       0,     0,     0,   802,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   803,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   804,   416,   417,   418,   419,   805,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   806,   427,
       0,     0,   807,   429,   808,   430,     0,   431,   809,   810,
     811,   812,   813,   436,   437,   438,   439,   440,     0,   814,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   815,
     816,   817,   448,   449,     0,   818,   819,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     820,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   821,   822,   471,   823,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     824,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   825,   826,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   827,     0,
     828,   515,   516,   517,   518,     0,   519,   829,   830,   521,
     522,   523,   524,     0,   831,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   832,   833,   555,
     556,     0,     0,   557,   558,   834,   560,   561,   562,   835,
     836,   563,   564,   565,   566,   837,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   838,   573,   574,     0,   839,
     840,   841,   842,     0,     0,     0,     0,     0,   579,   580,
       0,   843,   844,   845,   582,   583,     0,   846,   584,   585,
     847,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   848,   594,     0,     0,   849,
     850,   851,   595,   852,   596,     0,     0,   597,   853,     0,
     854,   598,     0,   599,   600,   855,   856,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   857,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   858,   859,
       0,   617,   618,   619,   860,   620,   621,   622,     0,   623,
     861,   862,   624,   863,   625,     0,   864,   865,   866,   867,
     868,   626,   627,     0,   869,   628,   870,   629,   871,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   872,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,     0,     0,
       0,     0,     0,   873,   874,     0,     0,     0,     0,   876,
       0,   877,     0,     0,     0,   878,     0,     0,     0,   879,
     880,   244,   245,     0,   762,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   763,
       0,   254,   255,   256,   257,   764,   259,     0,   260,     0,
       0,   765,   261,   766,   767,   768,   262,   769,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     770,   771,   270,   271,     0,   272,   273,   772,   773,   275,
       0,   276,   277,   278,   279,   774,   281,     0,   775,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   776,   777,   302,     0,     0,     0,   778,   303,
     779,     0,   304,   780,   781,     0,   305,   306,   307,   782,
     783,   784,     0,     0,     0,     0,   785,   310,   786,     0,
       0,   787,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   788,     0,   337,
     338,   339,   340,   341,   789,   790,   342,   343,     0,   344,
     345,   346,   347,   348,   791,     0,   349,   350,     0,     0,
       0,   792,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   793,   357,   794,     0,   359,     0,   360,     0,   795,
       0,   361,   362,     0,   363,   796,     0,   364,   365,     0,
       0,     0,   797,   367,   368,   369,   798,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   799,   374,   375,
     376,  3507,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   801,   387,   388,
       0,     0,     0,     0,     0,   802,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   803,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   804,   416,   417,   418,   419,   805,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     806,   427,     0,     0,   807,   429,   808,   430,     0,   431,
     809,   810,   811,   812,   813,   436,   437,   438,   439,   440,
       0,   814,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   815,   816,   817,   448,   449,     0,   818,   819,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   820,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   821,   822,   471,   823,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   824,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     825,   826,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     827,     0,   828,   515,   516,   517,   518,     0,   519,   829,
     830,   521,   522,   523,   524,     0,   831,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   832,
     833,   555,   556,     0,     0,   557,   558,   834,   560,   561,
     562,   835,   836,   563,   564,   565,   566,   837,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   838,   573,   574,
       0,   839,   840,   841,   842,     0,     0,     0,     0,     0,
     579,   580,     0,   843,   844,   845,   582,   583,     0,   846,
     584,   585,   847,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   848,   594,     0,
       0,   849,   850,   851,   595,   852,   596,     0,     0,   597,
     853,     0,   854,   598,     0,   599,   600,   855,   856,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   857,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     858,   859,     0,   617,   618,   619,   860,   620,   621,   622,
       0,   623,   861,   862,   624,   863,   625,     0,   864,   865,
     866,   867,   868,   626,   627,     0,   869,   628,   870,   629,
     871,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   872,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,     0,   713,   714,   715,   716,   717,   718,   719,     0,
       0,     0,     0,     0,     0,   873,   874,     0,     0,     0,
       0,   876,     0,   877,     0,     0,     0,   878,     0,     0,
       0,   879,   880,   244,   245,     0,   762,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   763,     0,   254,   255,   256,   257,   764,   259,     0,
     260,     0,     0,   765,   261,   766,   767,   768,   262,   769,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   770,   771,   270,   271,     0,   272,   273,   772,
     773,   275,     0,   276,   277,   278,   279,   774,   281,     0,
     775,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   776,   777,   302,     0,     0,     0,
     778,   303,   779,     0,   304,   780,   781,     0,   305,   306,
     307,   782,   783,   784,     0,     0,     0,     0,   785,   310,
     786,     0,     0,   787,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   788,
       0,   337,   338,   339,   340,   341,   789,   790,   342,   343,
       0,   344,   345,   346,   347,   348,   791,     0,   349,   350,
       0,     0,     0,   792,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   793,   357,   794,     0,   359,     0,   360,
       0,   795,     0,   361,   362,     0,   363,   796,     0,   364,
     365,     0,     0,     0,   797,   367,   368,   369,   798,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   799,
     374,   375,   376,   800,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   801,
     387,   388,     0,     0,     0,     0,     0,   802,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   803,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   804,   416,   417,   418,
     419,   805,   420,   421,  5325,     0,     0,     0,   422,   423,
     424,   425,   806,   427,     0,     0,   807,   429,   808,   430,
       0,   431,   809,   810,   811,   812,   813,   436,   437,   438,
     439,   440,     0,   814,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   815,     0,   817,   448,   449,     0,   818,
     819,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   820,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   821,   822,   471,   823,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   824,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   825,   826,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   827,     0,   828,   515,   516,   517,   518,     0,
     519,   829,   830,   521,   522,   523,   524,     0,   831,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   832,   833,   555,   556,     0,     0,   557,   558,   834,
     560,   561,   562,   835,   836,   563,   564,   565,   566,   837,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   838,
     573,   574,     0,   839,   840,   841,   842,     0,     0,     0,
       0,     0,   579,   580,     0,   843,   844,   845,   582,   583,
       0,   846,   584,   585,   847,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   848,
     594,     0,     0,   849,   850,   851,   595,   852,   596,     0,
       0,   597,   853,     0,   854,   598,     0,   599,   600,   855,
     856,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   857,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   858,   859,     0,   617,   618,   619,   860,   620,
     621,   622,     0,   623,   861,   862,   624,   863,   625,     0,
     864,   865,   866,   867,   868,   626,   627,     0,   869,   628,
     870,   629,   871,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   872,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,     0,   713,   714,   715,   716,   717,   718,
     719,     0,     0,     0,     0,     0,     0,   873,   874,     0,
       0,     0,     0,   876,     0,   877,     0,     0,     0,   878,
       0,     0,     0,   879,   880,   244,   245,     0,   762,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   763,     0,   254,   255,   256,   257,   764,
     259,     0,   260,     0,     0,   765,   261,   766,   767,   768,
     262,   769,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   770,   771,   270,   271,     0,   272,
     273,   772,   773,   275,     0,   276,   277,   278,   279,   774,
     281,     0,   775,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   776,   777,   302,     0,
       0,     0,   778,   303,   779,     0,   304,   780,   781,     0,
     305,   306,   307,   782,   783,   784,     0,     0,     0,     0,
     785,   310,   786,     0,     0,   787,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   788,     0,   337,   338,   339,   340,   341,   789,   790,
     342,   343,     0,   344,   345,   346,   347,   348,   791,     0,
     349,   350,     0,     0,     0,   792,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   793,   357,   794,     0,   359,
       0,   360,     0,   795,     0,   361,   362,     0,   363,   796,
       0,   364,   365,     0,     0,     0,   797,   367,   368,   369,
     798,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   799,   374,   375,   376,   800,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   801,   387,   388,     0,     0,     0,     0,     0,   802,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     803,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   804,   416,
     417,   418,   419,   805,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   806,   427,     0,     0,   807,   429,
     808,   430,     0,   431,   809,   810,   811,   812,   813,   436,
     437,   438,   439,   440,     0,   814,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   815,     0,   817,   448,   449,
       0,   818,   819,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   820,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   821,   822,
     471,   823,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   824,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   825,   826,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   827,     0,   828,   515,   516,   517,
     518,     0,   519,   829,   830,   521,   522,   523,   524,     0,
     831,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   832,   833,   555,   556,     0,     0,   557,
     558,   834,   560,   561,   562,   835,   836,   563,   564,   565,
     566,   837,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   838,   573,   574,     0,   839,   840,   841,   842,     0,
       0,     0,     0,     0,   579,   580,     0,   843,   844,   845,
     582,   583,     0,   846,   584,   585,   847,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   848,   594,     0,     0,   849,   850,   851,   595,   852,
     596,     0,     0,   597,   853,     0,   854,   598,     0,   599,
     600,   855,   856,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   857,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   858,   859,     0,   617,   618,   619,
     860,   620,   621,   622,     0,   623,   861,   862,   624,   863,
     625,     0,   864,   865,   866,   867,   868,   626,   627,     0,
     869,   628,   870,   629,   871,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   872,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,     0,     0,     0,     0,     0,     0,   873,
     874,     0,     0,     0,     0,   876,     0,   877,     0,     0,
       0,   878,     0,     0,     0,   879,   880,   244,   245,     0,
     762,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   763,     0,   254,   255,   256,
     257,   764,   259,     0,   260,     0,     0,   765,   261,   766,
     767,   768,   262,   769,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   770,   771,   270,   271,
       0,   272,   273,   772,   773,   275,     0,   276,   277,   278,
     279,   774,   281,     0,   775,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   776,   777,
     302,     0,     0,     0,   778,   303,   779,     0,   304,   780,
     781,     0,   305,   306,   307,   782,   783,   784,     0,     0,
       0,     0,   785,   310,   786,     0,     0,   787,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   788,     0,   337,   338,   339,   340,   341,
     789,   790,   342,   343,     0,   344,   345,   346,   347,   348,
     791,     0,   349,   350,     0,     0,     0,   792,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   793,   357,   794,
       0,   359,     0,   360,     0,   795,     0,   361,   362,     0,
     363,   796,     0,   364,   365,     0,     0,     0,   797,   367,
     368,   369,   798,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   799,   374,   375,   376,  2123,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   801,   387,   388,     0,     0,     0,     0,
       0,   802,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   803,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     804,   416,   417,   418,   419,   805,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   806,   427,     0,     0,
     807,   429,   808,   430,     0,   431,   809,   810,   811,   812,
     813,   436,   437,   438,   439,   440,     0,   814,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   815,     0,   817,
     448,   449,     0,   818,   819,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   820,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     821,   822,   471,   823,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   824,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   825,   826,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   827,     0,   828,   515,
     516,   517,   518,     0,   519,   829,   830,   521,   522,   523,
     524,     0,   831,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   832,   833,   555,   556,     0,
       0,   557,   558,   834,   560,   561,   562,   835,   836,   563,
     564,   565,   566,   837,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   838,   573,   574,     0,   839,   840,   841,
     842,     0,     0,     0,     0,     0,   579,   580,     0,   843,
     844,   845,   582,   583,     0,   846,   584,   585,   847,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   848,   594,     0,     0,   849,   850,   851,
     595,   852,   596,     0,     0,   597,   853,     0,   854,   598,
       0,   599,   600,   855,   856,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   857,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   858,   859,     0,   617,
     618,   619,   860,   620,   621,   622,     0,   623,   861,   862,
     624,   863,   625,     0,   864,   865,   866,   867,   868,   626,
     627,     0,   869,   628,   870,   629,   871,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   872,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,     0,     0,     0,     0,
       0,   873,   874,     0,     0,     0,     0,   876,     0,   877,
       0,     0,     0,   878,     0,     0,     0,   879,   880,   244,
     245,     0,   762,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   763,     0,   254,
     255,   256,   257,   764,   259,     0,   260,     0,     0,   765,
     261,   766,   767,   768,   262,   769,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   770,   771,
     270,   271,     0,   272,   273,   772,   773,   275,     0,   276,
     277,   278,   279,   774,   281,     0,   775,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     776,   777,   302,     0,     0,     0,   778,   303,   779,     0,
     304,   780,   781,     0,   305,   306,   307,   782,   783,   784,
       0,     0,     0,     0,   785,   310,   786,     0,     0,   787,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   788,     0,   337,   338,   339,
     340,   341,   789,   790,   342,   343,     0,   344,   345,   346,
     347,   348,   791,     0,   349,   350,     0,     0,     0,   792,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   793,
     357,   794,     0,   359,     0,   360,     0,   795,     0,   361,
     362,     0,   363,   796,     0,   364,   365,     0,     0,     0,
     797,   367,   368,   369,   798,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   799,   374,   375,   376,  2125,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   801,   387,   388,     0,     0,
       0,     0,     0,   802,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   803,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   804,   416,   417,   418,   419,   805,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   806,   427,
       0,     0,   807,   429,   808,   430,     0,   431,   809,   810,
     811,   812,   813,   436,   437,   438,   439,   440,     0,   814,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   815,
       0,   817,   448,   449,     0,   818,   819,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     820,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   821,   822,   471,   823,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     824,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   825,   826,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   827,     0,
     828,   515,   516,   517,   518,     0,   519,   829,   830,   521,
     522,   523,   524,     0,   831,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   832,   833,   555,
     556,     0,     0,   557,   558,   834,   560,   561,   562,   835,
     836,   563,   564,   565,   566,   837,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   838,   573,   574,     0,   839,
     840,   841,   842,     0,     0,     0,     0,     0,   579,   580,
       0,   843,   844,   845,   582,   583,     0,   846,   584,   585,
     847,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   848,   594,     0,     0,   849,
     850,   851,   595,   852,   596,     0,     0,   597,   853,     0,
     854,   598,     0,   599,   600,   855,   856,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   857,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   858,   859,
       0,   617,   618,   619,   860,   620,   621,   622,     0,   623,
     861,   862,   624,   863,   625,     0,   864,   865,   866,   867,
     868,   626,   627,     0,   869,   628,   870,   629,   871,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   872,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,     0,     0,
       0,     0,     0,   873,   874,     0,     0,     0,     0,   876,
       0,   877,     0,     0,     0,   878,     0,     0,     0,   879,
     880,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,    42,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,    49,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,    54,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,    55,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,  2990,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,  2991,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,     0,   713,   714,   715,   716,   717,   718,   719,  2992,
       0,     0,     0,     0,     0,   244,   245,     0,   246,   247,
     248,   249,   250,  2993,     0,   251,     0,     0,     0,     0,
     252,     0,  2994,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,  2989,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,  2990,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,  2991,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,  2992,     0,     0,     0,     0,     0,   244,
     245,     0,   246,   247,   248,   249,   250,  2993,     0,   251,
       0,     0,     0,     0,   252,     0,  2994,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,  2990,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,  2991,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,  2992,     0,     0,
       0,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,  2993,   251,     0,     0,     0,     0,   252,     0,     0,
    2994,     0,   254,   255,   256,   257,   258,   259,     0,  -567,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     269,  5160,     0,   270,   271,     0,   272,   273,     0,     0,
       0,     0,   276,   277,   278,  5161,   280,   281,     0,   282,
     283,     0,   284,   285,     0,   287,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
       0,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
       0,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,     0,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,  5162,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,     0,   362,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,  5163,     0,   370,
       0,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,     0,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,  5164,     0,     0,   382,     0,   383,
       0,     0,     0,   385,     0,     0,   386,  5165,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,  -522,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,     0,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,  5166,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,     0,
       0,     0,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,     0,
     499,  -522,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,     0,     0,   509,   510,     0,   511,   512,   513,
    5167,   514,     0,     0,     0,   516,   517,   518,     0,   519,
       0,   520,   521,     0,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,     0,     0,     0,   534,     0,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,     0,   551,   552,   553,   554,
       0,     0,     0,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,     0,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,     0,     0,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,  -522,     0,     0,     0,   603,   604,   605,     0,
     606,     0,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,     0,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,     0,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,  5564,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,   766,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
    2906,     0,     0,     0,     0,   309,   310,   786,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,   790,   342,   343,     0,   344,   345,
     346,   347,   348,   791,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,   796,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   803,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
     814,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,   818,   819,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   838,   573,   574,     0,
    2907,   576,   577,  2908,     0,     0,     0,     0,     0,   579,
     580,     0,     0,   844,   581,   582,   583,     0,   846,   584,
     585,   847,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,     0,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,   878,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   803,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,   819,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     820,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,   846,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,  2075,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,  1707,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1153,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,  1708,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1709,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,  1030,  1031,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  1032,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,  1033,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,  1034,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,  1035,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,  1036,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,  1037,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,  1038,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,  1039,  1040,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,  1041,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,  1042,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,  1043,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1153,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  1375,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1153,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   241,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,  1556,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
    1030,  1031,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,  1564,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,  1033,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,  1034,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
    1035,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,  1037,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,  1039,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
    1041,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,     0,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
    1043,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,  1153,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   241,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,     0,   713,   714,   715,   716,   717,   718,
     719,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,  1709,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,  2191,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
       0,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,  2192,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,     0,   713,   714,   715,   716,   717,   718,   719,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  5502,   252,     0,  5503,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,     0,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,  2192,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,     0,
     713,   714,   715,   716,   717,   718,   719,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,  5503,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,    42,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,    49,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,    54,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,    55,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
    1138,  4161,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,     0,   713,   714,
     715,   716,   717,   718,   719,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    4405,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,  4409,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,  2490,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,  2491,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,  1877,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,  1878,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,  3999,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,    42,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,  2493,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,    49,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,    54,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,    55,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,     0,   713,   714,   715,   716,
     717,   718,   719,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,  1138,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,  2990,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,  2991,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,     0,   713,   714,   715,   716,   717,   718,
     719,  2992,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,  2993,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  1299,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,  3199,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    3532,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  4289,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
    2143,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,  2921,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,  3562,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,  3744,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,     0,     0,     0,     0,     0,     0,
     244,   245,  4137,   246,   247,   248,   249,   250,   938,   939,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,   940,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,   941,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,   942,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   943,   334,   335,   944,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   945,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,   946,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     947,     0,   373,     0,     0,     0,   948,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,   949,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
     950,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,     0,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   951,   478,   479,   480,   952,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,   953,     0,   490,   491,   492,
     493,   494,     0,   954,   496,     0,   497,   498,   499,     0,
       0,   955,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,   956,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
     957,   958,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   959,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   241,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,   960,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,   961,   592,   962,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,     0,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,  1012,   939,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,   940,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,   941,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,   942,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     943,   334,   335,   944,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   945,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,   946,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   947,     0,
     373,     0,     0,     0,   948,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,   949,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,   950,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,     0,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   951,   478,   479,   480,  1013,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,   953,     0,   490,   491,   492,   493,   494,
       0,   954,   496,     0,   497,   498,   499,     0,     0,   955,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,   956,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,   957,   958,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     959,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,   960,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   961,   592,   962,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
       0,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,   939,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
     940,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,   941,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,   942,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   943,   334,
     335,   944,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   945,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,   946,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   947,     0,   373,     0,
       0,     0,   948,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   949,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   950,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   951,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,   953,     0,   490,   491,   492,   493,   494,     0,   954,
     496,     0,   497,   498,   499,     0,     0,   955,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,   956,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,   957,   958,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   959,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,   960,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   961,
     592,   962,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,  3215,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,  3216,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,  3217,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,  3218,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,  1406,  1407,     0,   448,   449,     0,
       0,  3219,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,  5552,
    1007,  5553,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,  3220,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,  1380,  1381,   252,  1382,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,  1383,     0,     0,  1384,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,  1385,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,  1386,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
    1533,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1534,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,  1535,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1153,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,  1536,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   241,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,  2490,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,  2491,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,  1877,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,  1878,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,  2493,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1558,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1559,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1153,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,  1723,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,  1724,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,   820,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,  1725,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,  1533,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,  3863,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,  1153,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   241,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,  1152,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1153,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   241,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,  1154,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,  1152,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1153,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,  1587,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1153,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,  1661,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,  1662,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
    1425,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,  3013,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,  1153,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   241,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1153,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,  3288,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   241,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,  1533,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1153,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1153,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,  3919,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,  1153,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     241,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,  5473,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,  5474,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,  1007,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,  1121,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,  1191,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,  1192,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
    1385,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,  2449,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    2587,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  3201,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,  3224,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,  3253,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,  3319,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,  2213,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,  2214,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,  5223,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,  1564,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,     0,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,     0,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,     0,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,  1565,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,     0,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
       0,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,  1564,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,     0,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,     0,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,     0,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,     0,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,     0,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,  1549,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1550,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,     0,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,     0,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,   949,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,  1551,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,     0,   478,   479,   480,     0,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,     0,   496,     0,   497,   498,   499,     0,
       0,     0,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,     0,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,     0,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   241,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,     0,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,   713,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,  5306,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  5307,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
       0,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,   949,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,  5308,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,     0,   478,   479,   480,     0,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,     0,   496,     0,   497,   498,   499,     0,     0,     0,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
       0,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
       0,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,   713,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,  2275,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   949,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  2276,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,   713,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,  3087,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,     0,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,   949,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,  3088,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,     0,
     478,   479,   480,     0,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,     0,   496,     0,
     497,   498,   499,     0,     0,     0,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,     0,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     241,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,     0,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,   713,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,     0,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,   949,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,     0,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,     0,   478,   479,
     480,     0,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,     0,   496,     0,   497,   498,
     499,     0,     0,     0,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,     0,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,     0,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   241,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,     0,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,   713,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,     0,     0,
     254,   255,   256,   257,   258,   259,     0,  -567,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   269,  5160,
       0,   270,   271,     0,   272,   273,     0,     0,     0,     0,
     276,   277,   278,  5161,   280,   281,     0,   282,   283,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,     0,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,     0,     0,
       0,   320,   321,   322,     0,  -537,  -537,   323,     0,  -537,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,  5162,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
       0,   362,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,  5163,     0,   370,     0,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,     0,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,  5164,     0,     0,   382,     0,   383,     0,     0,
       0,   385,     0,     0,   386,  5165,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,  -522,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,     0,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,  5166,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,     0,     0,     0,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,     0,   499,  -522,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
       0,     0,   509,   510,     0,   511,   512,   513,  5167,   514,
       0,     0,     0,   516,   517,   518,     0,   519,     0,   520,
     521,     0,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,     0,     0,     0,   534,     0,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,     0,   551,   552,   553,   554,     0,     0,
       0,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,     0,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,     0,     0,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
    -522,     0,     0,     0,   603,   604,   605,     0,   606,     0,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
       0,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,     0,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,     0,     0,   254,   255,
     256,   257,   258,   259,     0,  -567,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   269,  5160,     0,   270,
     271,     0,   272,   273,     0,     0,     0,     0,   276,   277,
     278,  5161,   280,   281,     0,   282,   283,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,     0,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,     0,     0,     0,   320,
     321,   322,     0,  -558,     0,   323,     0,  -558,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,  5162,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,     0,   362,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,  5163,     0,   370,     0,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,     0,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
    5164,     0,     0,   382,     0,   383,     0,     0,     0,   385,
       0,     0,   386,  5165,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,  -522,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,     0,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,  5166,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,     0,     0,     0,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,     0,   499,  -522,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,     0,     0,
     509,   510,     0,   511,   512,   513,  5167,   514,     0,     0,
       0,   516,   517,   518,     0,   519,     0,   520,   521,     0,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,     0,   534,     0,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,     0,   551,   552,   553,   554,     0,     0,     0,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,     0,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,     0,     0,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,  -558,     0,  -522,     0,
       0,     0,   603,   604,   605,     0,   606,     0,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,     0,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,     0,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5160,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5161,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,  -555,     0,   323,     0,  -555,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5162,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5163,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5164,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5165,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5166,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5167,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,  -555,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,     0,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,     0,     0,   254,   255,   256,   257,   258,   259,
       0,  -567,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,  5160,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,  5161,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,  5417,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,  5162,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,  5163,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,  5164,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,  5165,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,  -522,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,     0,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,  5166,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,     0,     0,     0,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,     0,   499,  -522,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,     0,     0,   509,   510,     0,   511,
     512,   513,  5167,   514,     0,     0,     0,   516,   517,   518,
       0,   519,     0,   520,   521,     0,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,     0,   534,     0,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,     0,   551,   552,
     553,   554,     0,     0,     0,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,     0,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,     0,
       0,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,  -522,     0,     0,     0,   603,   604,
     605,     0,   606,     0,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,     0,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,     0,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
       0,     0,   254,   255,   256,   257,   258,   259,     0,  -567,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     269,  5160,     0,   270,   271,     0,   272,   273,     0,     0,
       0,     0,   276,   277,   278,  5161,   280,   281,     0,   282,
     283,     0,   284,   285,     0,   287,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
       0,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
       0,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,  -560,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,  5162,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,     0,   362,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,  5163,     0,   370,
       0,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,     0,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,  5164,     0,     0,   382,     0,   383,
       0,     0,     0,   385,     0,     0,   386,  5165,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,  -522,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,     0,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,  5166,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,     0,
       0,     0,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,     0,
     499,  -522,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,     0,     0,   509,   510,     0,   511,   512,   513,
    5167,   514,     0,     0,     0,   516,   517,   518,     0,   519,
       0,   520,   521,     0,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,     0,     0,     0,   534,     0,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,     0,   551,   552,   553,   554,
       0,     0,     0,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,     0,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,     0,     0,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,  -522,     0,     0,     0,   603,   604,   605,     0,
     606,     0,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,     0,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,     0,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,     0,     0,
     254,   255,   256,   257,   258,   259,     0,  -567,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   269,  5160,
       0,   270,   271,     0,   272,   273,     0,     0,     0,     0,
     276,   277,   278,  5161,   280,   281,     0,   282,   283,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,     0,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,     0,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,  5478,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,  5162,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
       0,   362,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,  5163,     0,   370,     0,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,     0,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,  5164,     0,     0,   382,     0,   383,     0,     0,
       0,   385,     0,     0,   386,  5165,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,  -522,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,     0,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,  5166,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,     0,     0,     0,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,     0,   499,  -522,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
       0,     0,   509,   510,     0,   511,   512,   513,  5167,   514,
       0,     0,     0,   516,   517,   518,     0,   519,     0,   520,
     521,     0,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,     0,     0,     0,   534,     0,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,     0,   551,   552,   553,   554,     0,     0,
       0,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,     0,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,     0,     0,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
    -522,     0,     0,     0,   603,   604,   605,     0,   606,     0,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
       0,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,     0,   714,   715,   716,   717,   718,   719,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,     0,     0,   254,   255,
     256,   257,   258,   259,     0,  -567,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   269,  5160,     0,   270,
     271,     0,   272,   273,     0,     0,     0,     0,   276,   277,
     278,  5161,   280,   281,     0,   282,   283,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,     0,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,     0,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,  5518,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,  5162,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,     0,   362,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,  5163,     0,   370,     0,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,     0,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
    5164,     0,     0,   382,     0,   383,     0,     0,     0,   385,
       0,     0,   386,  5165,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,  -522,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,     0,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,  5166,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,     0,     0,     0,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,     0,   499,  -522,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,     0,     0,
     509,   510,     0,   511,   512,   513,  5167,   514,     0,     0,
       0,   516,   517,   518,     0,   519,     0,   520,   521,     0,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,     0,   534,     0,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,     0,   551,   552,   553,   554,     0,     0,     0,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,     0,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,     0,     0,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,  -522,     0,
       0,     0,   603,   604,   605,     0,   606,     0,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,     0,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,     0,     0,
     714,   715,   716,   717,   718,   719,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5160,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5161,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  -541,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5162,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5163,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5164,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5165,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5166,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5167,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,     0,     0,   714,   715,
     716,   717,   718,   719,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,     0,     0,   254,   255,   256,   257,   258,   259,
       0,  -567,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,  5160,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,  5161,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,     0,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,  5162,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,  5163,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,  5164,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,  5165,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,  -522,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,     0,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,  5166,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,     0,     0,     0,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,     0,   499,  -522,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,     0,     0,   509,   510,     0,   511,
     512,   513,  5167,   514,     0,     0,     0,   516,   517,   518,
       0,   519,     0,   520,   521,     0,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,     0,   534,     0,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,     0,   551,   552,
     553,   554,     0,     0,     0,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,     0,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,     0,
       0,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,  -522,     0,     0,     0,   603,   604,
     605,     0,   606,     0,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,     0,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,     0,     0,   714,   715,   716,   717,
     718,   719,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
       0,     0,   254,   255,   256,   257,   258,   259,     0,  -567,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     269,  5160,     0,   270,   271,     0,   272,   273,     0,     0,
       0,     0,   276,   277,   278,  5161,   280,   281,     0,   282,
     283,     0,   284,   285,     0,   287,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
       0,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
       0,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,     0,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,  5162,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,     0,   362,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,  5163,     0,   370,
       0,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,     0,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,  5164,     0,     0,   382,     0,   383,
       0,     0,     0,   385,     0,     0,   386,  5165,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,  -522,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,     0,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,  5166,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,     0,
       0,     0,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,     0,
     499,  -522,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,     0,     0,   509,   510,     0,   511,   512,   513,
    5167,   514,     0,     0,     0,   516,   517,   518,     0,   519,
       0,   520,   521,     0,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,     0,     0,     0,   534,     0,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,     0,   551,   552,   553,   554,
       0,     0,     0,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,     0,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,     0,     0,     0,
       0,   590,     0,     0,  5420,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,  -522,     0,     0,     0,   603,   604,   605,     0,
     606,     0,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,     0,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,     0,     0,   714,   715,   716,   717,   718,   719,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,     0,     0,
     254,   255,   256,   257,   258,   259,     0,     0,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,     0,     0,     0,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,     0,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,     0,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,     0,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
       0,   362,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,     0,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,     0,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
       0,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,     0,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,     0,     0,     0,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
       0,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,     0,   516,   517,   518,     0,   519,     0,   520,
     521,     0,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,     0,     0,     0,   534,     0,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,     0,   551,   552,   553,   554,     0,     0,
       0,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,     0,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,     0,     0,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,     0,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
       0,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
       0,     0,   714,   715,   716,   717,   718,   719,  1790,     0,
       0,  3797,  3798,  1791,     0,  1792,     0,  3799,  1793,  3800,
       0,  3801,  3802,     0,     0,     0,     0,  1768,  1794,  1795,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3803,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1796,
       0,     0,     0,     0,  1797,  1798,     0,     0,     0,     0,
    1799,     0,     0,     0,     0,     0,     0,     0,  1800,     0,
       0,     0,     0,     0,  1801,  1802,     0,     0,  1803,  3804,
       0,     0,  3805,     0,     0,     0,     0,  1804,     0,     0,
    3806,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1805,     0,     0,     0,     0,     0,     0,  3460,
       0,     0,     0,     0,     0,     0,  1806,     0,     0,     0,
    1807,     0,     0,     0,     0,     0,  3807,     0,  1808,  1809,
       0,     0,     0,     0,     0,  1810,     0,     0,     0,     0,
       0,     0,     0,  1811,     0,     0,     0,     0,     0,  1812,
       0,     0,     0,     0,  3808,     0,  3809,     0,     0,     0,
    1813,  5315,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3810,  3811,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1814,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3812,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1815,     0,  1816,  3813,     0,     0,
       0,     0,     0,  1817,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3814,     0,     0,     0,
       0,     0,     0,  1818,     0,  3815,  3816,     0,  3817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1819,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3818,  3819,  3820,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1820,  3821,  3822,  3823,     0,     0,     0,     0,
    3824,     0,     0,  3825,     0,     0,     0,  3797,  3798,     0,
    1821,     0,     0,  3799,  1822,  3800,     0,  3801,  3802,     0,
       0,  3826,  3827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3803,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1823,     0,     0,  3828,  3829,     0,  1824,     0,
       0,     0,     0,     0,     0,  1825,     0,     0,     0,     0,
       0,     0,     0,     0,  1826,     0,     0,     0,     0,     0,
       0,  3465,     0,     0,     0,  3804,     0,     0,  3805,     0,
       0,     0,     0,     0,     0,     0,  3806,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1827,     0,     0,     0,
       0,     0,     0,     0,     0,  3460,     0,     0,     0,     0,
       0,  1828,  1829,  1830,     0,     0,     0,     0,     0,     0,
       0,     0,  3807,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3830,     0,     0,     0,  3831,     0,     0,
       0,     0,     0,  1831,     0,     0,     0,     0,     0,  3832,
    3808,     0,  3809,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3810,  3811,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1832,
    1833,  1834,  1835,  2606,     0,     0,     0,  1836,     0,  3833,
    3812,     0,  3834,     0,     0,  3835,  3836,  3837,  3838,     0,
       0,     0,     0,  3813,  1837,     0,     0,  1838,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3814,     0,     0,     0,     0,     0,     0,     0,
    1839,  3815,  3816,     0,  3817,     0,     0,     0,  3839,  3840,
       0,     0,     0,  1840,     0,     0,  2607,  2608,  2609,  2610,
    2611,  2612,  2613,  2614,  2615,  2616,  2617,  2618,  2619,  2620,
    2621,  2622,  2623,  2624,  2625,  2626,  3841,  2627,  2628,     0,
    3818,  3819,  3820,     0,     0,     0,     0,  1841,     0,     0,
    1842,     0,     0,     0,     0,     0,     0,     0,     0,  3821,
    3822,  3823,     0,     0,     0,     0,  3824,     0,     0,  3825,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3826,  3827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3828,  3829,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1843,  1844,  1845,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3465,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1846,
    1847,     0,     0,     0,     0,  2629,  2630,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1848,     0,     0,     0,     0,     0,     0,  3830,
       0,     0,     0,  3831,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3832,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3833,     0,     0,  3834,     0,
       0,  3835,  3836,  3837,  3838,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3839,  3840,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3841,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2631,  2632,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2633,     0,  2634,  2635,  2636,  2637,  2638,     0,
       0,  2639,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2640,     0,     0,     0,     0,  2641,  2642,  2643,  2644,
    2645,  2646,  2647,  2648,  2649,  2650,  2651,  2652,  2653,  2654,
    2655,  2656,  2657,  2658,  2659,  2660,  2661,  2662,  2663,  2664,
    2665,  2666,  2667,  2668
};

static const yytype_int16 yycheck[] =
{
       6,    43,    44,    57,    44,     0,   888,     0,   115,    15,
    1194,  1296,    18,     0,   901,  1182,    22,  1035,  1036,    97,
    1347,  1195,  1347,  1708,  1187,    31,   116,  1175,   804,  1084,
    1247,    60,    38,    43,     6,    41,  2721,  1055,  1210,  1209,
      46,  1210,  1651,    49,  2485,  1439,  3065,    53,  2227,    55,
    2234,    60,  1439,  2234,  2443,  2444,    21,  1850,  1145,  2505,
    1881,  2507,  1400,  2191,  2191,  2941,  2068,  2069,  2523,    64,
    2516,  2566,  2567,  3368,    39,  3206,  1476,    64,    43,  2081,
    2082,  2083,  2272,  2749,  2216,    19,  3315,  2753,  2534,    59,
    1177,    97,  1269,  1270,  3467,  3843,    30,  2407,  3124,  2974,
    3262,    35,  1757,  1757,  1289,  2156,  2840,  1757,  1790,  1363,
    2556,  2481,  2482,  2714,  2560,  3863,  3864,  3843,  1792,   116,
    2308,  1298,  1796,   227,  1524,  1180,   121,  2568,  3746,  1184,
    3006,  2714,  1525,  1310,  1311,  1312,  1810,  1790,    21,  1316,
    2272,   765,  3293,  2714,  1601,     9,  3699,  2754,  1822,  2723,
    2490,  2714,  2714,  2267,  2746,  2285,    39,  1810,  1053,  2910,
    3377,  1618,  2754,  2848,  3061,    29,  2983,  3377,  4515,  4515,
      34,  1262,  1263,  1264,  1631,  1828,  2454,  2746,  1355,  3615,
    1637,  1770,  1273,  3906,   121,  2754,   192,  2714,    52,   734,
     735,    21,   916,   917,   918,    21,  1363,   921,   922,  2536,
    2537,   925,    22,   927,   928,   929,    68,   931,  4456,    11,
       5,    77,    21,  1304,    22,   221,  1307,   223,  2554,  2555,
     226,   227,   228,   229,    18,    19,    71,  1444,    52,    71,
      18,    19,    35,  3020,    73,  1326,  1327,   243,  2834,  1330,
     160,    49,  2705,    71,   125,  2493,    18,    19,    35,   873,
     874,   223,   876,  4419,   226,    18,    19,  1348,  1349,   176,
      73,   156,  1353,  1354,  4396,   889,  2993,   194,    18,    19,
    2739,  2740,  2741,   246,  1062,   156,    31,   111,    64,   125,
     263,  1005,  1700,  1701,  1702,  1372,   162,  2756,    73,   235,
      18,    19,    48,   758,  2478,    59,   125,  2481,  2482,  1087,
    1088,  1089,  1090,  1091,    48,  1093,  3093,    73,   197,   326,
    3745,   131,  2781,    21,  1531,   197,  2785,   372,   748,   749,
     194,   144,   752,    62,    43,    70,  1915,   156,    18,    19,
     156,    39,  2801,  2802,    52,    43,   125,   372,  2807,  4229,
     236,  1254,  1255,    18,    19,    19,    21,   156,    18,    19,
      18,    19,  1234,   158,  2823,  2824,    18,    19,    65,   194,
      70,   103,   158,  2832,    18,    19,   176,   156,   200,    18,
      19,    18,    19,    87,  4338,   239,   156,    18,    19,   259,
     372,    18,    19,  2829,   192,    18,    19,    19,    23,    18,
      19,    65,   500,   197,   219,  3816,  3817,    18,    19,  3820,
      35,   235,    21,    12,   156,  1113,   366,   193,  2893,   156,
      18,    19,   176,   198,    49,   464,   180,  3838,    18,    19,
      39,   229,   125,  3652,   103,   156,    61,    62,   387,   156,
     194,  3804,    78,   156,   209,   243,   125,   455,   282,   571,
     156,   156,   246,    18,    19,   156,   287,   238,   139,   153,
    3116,   406,   571,    18,    19,    85,   432,   194,   258,   275,
     164,  3834,  3835,    18,    19,   636,   231,   276,   582,   197,
     249,    21,   194,    18,    19,    18,    19,   194,   230,   571,
     271,   400,    23,    37,    73,   191,   636,   371,   377,   194,
      18,    19,   246,   239,    18,    19,   276,   194,  3306,    18,
      19,   373,    22,   249,   186,    18,    19,   282,   349,  1285,
      37,   428,   138,   100,  1396,  3258,   432,   368,   542,  3646,
      61,    62,   276,  1299,   246,  4143,    21,  2711,   315,   246,
    2711,    18,    19,   212,   243,    35,  1684,   453,    21,  1557,
    1427,  1428,     9,   388,  3419,   276,   388,  3193,   285,   256,
    1568,   432,    21,   365,   366,   197,   156,  3158,  3204,  3205,
     388,   282,    62,   285,    31,    48,   330,  3233,   285,  1717,
     432,   235,   109,   282,    18,    19,    73,  4743,   387,   495,
     285,   501,   256,   640,   266,    18,    19,   419,   285,  3030,
     150,   400,   386,  2721,  3402,   389,    18,    19,   386,   623,
     130,   389,   228,    18,    19,    74,  4027,   249,   403,    23,
     141,   131,   484,   732,   386,    18,    19,   389,   428,  3639,
    3640,    35,   197,   386,   150,   150,   389,  4353,  3294,  3649,
    3650,   417,  1519,   387,   130,    49,  3082,  3078,   742,   125,
     331,   812,   163,   602,   563,   469,   392,    61,    62,   370,
     368,   238,   231,   203,  3100,  3101,  3102,  3103,   386,   315,
     636,   389,   812,   293,   428,   219,   112,  3108,  3109,   115,
     470,   258,    77,  1218,    67,   194,   285,  1732,  1733,   811,
    4233,   385,   371,   534,   271,   476,  1573,   571,   130,   368,
     455,   160,   219,    18,    19,   612,   386,  2881,   812,   389,
    2881,   542,   387,   658,   812,  3042,   412,  3017,  3018,   727,
    3156,   386,  3843,   427,   389,  2993,   386,  3163,   386,   389,
    3595,   389,   497,  1447,   386,  4973,  3857,   389,   734,   735,
      52,  4695,   386,   565,   578,   389,   742,   386,   744,   386,
     389,   546,   389,  1367,   799,   386,   571,  2937,   389,   386,
     546,   469,   389,   386,   376,  2149,   389,   386,  3243,   788,
     389,  4161,  2149,   812,   126,   386,   235,   354,   389,   729,
     716,   651,  2159,   808,   878,  1483,  3377,   562,   386,   788,
    1404,   389,   500,  4949,  4950,   608,   386,  3228,  1965,   389,
     807,  1256,  2976,   535,   263,  2976,   562,   542,   804,   241,
    1424,   636,   785,  2458,  2458,  2937,  1594,  3541,  2458,  3543,
    1598,   386,   646,   344,   389,  1603,  3271,   603,   634,  3009,
     812,   386,   698,  1253,   389,   634,   614,   582,  3007,  4264,
    2007,   386,   542,  2884,   389,  4967,  4726,  5085,  2491,   812,
    2493,   386,  2844,   386,   389,   552,   389,  3187,   602,  3189,
    1638,  1639,  3130,   647,   634,  2983,  2983,   262,   386,   647,
    1951,   389,   386,   759,  3740,   389,   570,   386,    18,    19,
     389,   975,   878,   386,   880,   647,   389,  3009,   552,   885,
     636,   747,   877,   622,   647,   812,  4307,    18,    19,   476,
     877,  3337,   636,   813,  3340,   812,  4317,   647,  1443,   386,
    3346,  3342,   389,   634,  4325,  3351,  3352,  3353,  3354,  3355,
    2087,  3374,  3639,   919,   204,   810,  3362,   812,   924,   647,
     998,  3367,  3709,   812,  3370,  3712,   734,   735,  2019,   810,
     812,  1035,  2023,  2726,    18,    19,  3532,  2085,   812,  1043,
    1044,  4362,   386,   738,   739,   389,  4175,  3195,   594,  3128,
     582,   813,  1497,   386,  2045,  3085,   389,   647,   760,  1063,
    1873,   548,  1507,   808,   386,   600,   812,   389,   807,   975,
     812,   386,   647,   562,   389,   981,  3445,   647,  5226,   647,
     808,   810,   812,   386,   810,   647,   389,   807,   812,   812,
     625,   997,   998,   647,   807,  2604,   783,   492,   647,   785,
     647,   810,   812,  2518,   807,   204,   647,   812,   812,  3478,
     647,  3480,    18,    19,   647,  2530,   695,   571,   647,   722,
    1026,   810,  4745,   817,   812,  3494,   647,  3496,  4776,  1035,
     810,  5197,  4058,   812,  1947,  3372,   808,  1043,  1044,   647,
     812,   403,  3511,  1053,   571,   808,  2561,   647,   812,   812,
    2705,  2705,   708,  3796,   808,  2705,  1146,  1063,   810,   600,
    2669,   386,   808,   810,   389,   812,  4193,  4194,   932,  1173,
     565,   808,   647,   633,   571,  1040,  2293,  2592,   608,   810,
    1187,  1188,   647,   810,   812,   812,   808,   810,  1053,   812,
     627,   808,   647,  3403,   810,   810,   812,   812,  1188,   810,
    1204,   812,   647,   808,   647,  1111,  1112,   633,   633,   630,
      18,    19,   608,   582,   693,  1121,  3859,   510,   808,   647,
    4556,  1199,   812,   647,   619,  2946,  2715,   812,   647,   575,
     994,  4293,   578,   808,   647,  5203,  1000,   812,   808,  5485,
     808,   636,   812,  1138,   812,  1151,   808,   469,  1578,  1146,
     812,  1138,  1147,  4646,   808,  4555,  3611,  4177,   812,   808,
     647,   808,   111,   812,  5511,   812,   608,  1173,  1246,   655,
     656,   812,   807,   371,   263,   812,  1182,  3963,  1175,   812,
      18,    19,   141,   812,  4335,   276,   600,   125,  2405,  1195,
     812,   812,  3978,  1199,  3378,  1201,  1202,  3378,  1204,  1194,
    1206,  1194,   144,   647,   812,  1211,  2380,  1194,  1214,  1215,
    1147,  4428,  1218,  2540,   647,  2540,  3790,  3791,  4428,  1225,
     510,   808,  4353,   401,   162,   647,   192,   285,  5476,  1235,
    1236,  1237,   647,   808,  1240,   185,   386,  1243,    21,   389,
    1246,  2017,  1248,  1215,   647,  1251,  1252,   812,  3694,   611,
     655,   656,   315,   209,    81,   386,   127,   812,   389,    13,
     455,   160,  2947,  1317,  2282,   231,   483,   812,   547,   812,
     801,   802,   803,   804,   255,    23,  2443,  2444,   122,  1285,
      18,    19,  1247,  1373,   812,  3726,  4161,    35,   812,   808,
     160,  4338,  2901,  1299,   584,  2350,   387,   779,    71,   812,
    1295,    49,   386,  1111,    47,   389,  2476,   235,  1295,   125,
    2480,   510,   807,    61,    62,    21,    57,  2487,   421,  1423,
    2714,  4218,   647,  4370,   315,   812,   282,  2714,   565,   591,
     282,   176,  1040,  1437,  1053,   263,  3777,  3388,    18,    19,
    5088,  1347,    48,   748,   749,  1053,   807,  1401,  1402,   628,
     811,  1405,   614,  4170,  1408,  1409,  1410,  1363,  5426,  1413,
    1414,  1415,  1416,  1417,  1418,  1419,  1420,   849,   812,  1473,
    2979,  2980,    44,  1379,  1403,   174,  1382,   248,  3429,   812,
     386,  4132,   472,   389,  3985,   344,   140,  1465,    18,    19,
     812,  4686,  4687,   456,  1403,    18,    19,   812,  3083,    22,
     292,  3711,  3985,  2575,  2576,  3715,  2575,  2576,  2303,   812,
    1218,  3747,    18,    19,  3985,  2191,  2311,  1423,  4544,  4206,
    4207,  1040,  3985,  3985,  1430,  1431,  1432,  1433,  2152,  1435,
    1436,  1437,   237,   371,  1440,  1441,  1442,  1443,  4045,  1445,
    1446,  3781,  3897,  3898,  1450,  1523,   290,    18,    19,  4236,
    4237,   432,  3631,  4045,  5202,  4242,  1462,  4244,  3985,  1465,
    1432,  3739,  1540,   753,  1436,    18,    19,  1473,  1440,  3915,
    1476,  3585,  3651,   216,  1480,  1481,  4045,   406,   386,  1444,
     377,   389,   585,  3671,  1914,    18,    19,   812,  2882,  5107,
    1496,  1497,  3682,  4279,  4915,  2882,  4917,   647,  4284,  1929,
    1506,  1507,  4288,  1509,  1510,  3298,  1584,  4114,   131,  2133,
     293,   602,  1477,  3627,   603,   464,   647,  1523,  1524,   510,
    2920,  1599,  4114,  2861,  2917,   723,  1532,  1569,   372,  3659,
    3660,  1528,   727,  4552,  1540,    18,    19,  3539,   243,  1247,
    3542,   497,  3195,  3984,  2714,  4114,  3199,   605,   386,  1555,
    3682,   389,  3742,  5046,   753,  2343,  4707,  1563,   500,  1569,
     198,    77,   454,   647,   369,  2353,  1531,   517,  5316,  2357,
    5123,   377,  2360,  1579,  1580,  1581,  1582,  1583,  1584,  1585,
    3710,  2866,  2867,   428,  2838,  1449,  2986,  1677,  1692,  1595,
     807,  1597,  2985,  1599,  1477,  2772,  1602,    18,    19,  3056,
    3057,  1679,   501,   379,  1569,  1709,  4835,  1579,  1580,  1581,
    3742,  1583,  3982,  3983,  3296,   388,   432,  5343,  3669,   571,
    1698,  2166,  2799,  3297,   486,  1597,   158,   368,  1247,   807,
    1602,   501,  4101,   571,   379,  1443,  3054,    18,    19,  1743,
      71,   647,  4308,  3296,  3297,    11,  3046,   613,   386,   432,
     293,   389,  1658,  1659,  4100,    40,  4097,    18,    19,   100,
     487,  4447,   812,    18,    19,   464,   571,  1673,    18,    19,
    1152,  2838,   636,  1679,    65,   571,  4277,    18,    19,    21,
    4555,   812,   354,    18,    19,   582,  1692,  1684,  1496,  1497,
    2314,  2876,  1698,  3208,   243,  4990,   652,    64,  1506,  1507,
     276,  1509,   571,  1709,   652,   237,   386,    74,  4834,   389,
    3761,   278,   582,    18,    19,   671,   158,   808,  5091,  3374,
    3374,   355,    89,   813,  3374,   571,  1721,   122,   812,   658,
     571,   400,  1738,   197,   165,  1730,  1444,  1743,  4900,   647,
    2831,   546,   485,   635,  3259,   355,   262,  5495,   160,   593,
      18,    19,  3267,  4899,  1760,  1761,   386,  3272,   571,   389,
     368,   399,   753,   386,  3158,   614,   389,   612,  4209,  1477,
    3423,  3158,  4798,    71,  1582,  4509,  3597,  1585,    18,    19,
     386,   565,   194,   389,    18,    19,   179,   369,   122,   432,
     742,  4232,   783,  3010,  3011,  3012,  5256,   238,  3982,  3983,
    5095,   167,   125,    18,    19,  4246,   812,     9,   571,   647,
    4251,   387,  1854,   122,   156,   386,   125,   258,   389,  4965,
     128,    18,    19,  1531,   629,  1444,   193,  4428,   636,  4616,
     271,  4618,   199,   386,   200,  3886,   389,   369,   743,   447,
     799,   800,   801,   802,   803,   804,    18,    19,   812,   634,
    1569,   122,   600,   386,   188,   240,   389,   562,  1477,   642,
     565,  1569,   634,   732,  4739,   256,   642,   165,   235,  1875,
    1876,   509,   332,   621,   622,   400,    18,    19,  4563,   188,
      18,    19,    18,    19,  2939,  1891,   732,  1857,    53,   231,
      33,   100,  5054,   137,   563,   290,   263,   642,   362,    64,
     808,    18,    19,   386,   703,   704,   389,   125,   152,   647,
     219,   807,  1531,   354,   481,   812,  3967,   188,  3336,  3306,
    3338,  1927,   245,   122,  1930,  1931,  1932,   369,  4238,  3347,
    3348,  3349,  3350,    32,  1940,   741,   742,   571,  3356,  3357,
    3358,  3359,  3360,  3361,   162,  3363,  3364,  3365,  3366,    18,
      19,   300,   301,  3371,   212,  4360,   290,   388,  4363,  1931,
    1932,   571,   596,   812,   546,   386,   807,   647,   389,   138,
     808,  2075,   127,   364,   194,  5435,  5436,   372,   371,   246,
      79,   290,   614,  3377,   186,   293,   596,  2091,  3043,   188,
    3377,   123,  4658,    18,    19,   808,  3051,    18,    19,   642,
     258,    18,    19,  5298,   812,   386,    18,    19,   389,   276,
    4479,  2017,  2018,   562,   546,  3402,   565,   647,  3036,   290,
     219,    77,    18,    19,   647,   386,   602,   812,   389,   238,
     614,   386,    18,    19,   389,   476,   386,   360,   372,   389,
     812,   647,  4170,  4170,   807,   386,   483,   629,   389,   258,
     417,   386,    13,   419,   389,   154,  4426,  4427,   400,   228,
      18,    19,   271,   372,  2118,    18,    19,   186,  1876,  2075,
    3679,   536,  4262,  4263,   653,   591,   647,  2131,  4268,  2108,
    2134,   386,   807,  1891,   389,  2091,    18,    19,  2192,   501,
     388,   290,  4879,   248,   647,   444,   445,   629,   614,  2108,
     638,   372,     0,  2132,   546,   570,   249,   548,  4110,   569,
    4112,    18,    19,   455,   647,   247,  2111,   282,   386,  1927,
     387,   389,  5128,  2132,  2111,  5131,  5002,  2231,   808,   387,
    4262,  4263,   275,  2139,  4444,   595,  4268,   179,    86,   655,
     656,    13,  2148,   534,   141,   354,   386,   266,   368,   389,
     492,   518,   386,   371,   492,   389,   614,   105,  2236,  2237,
    2166,   552,  4346,    21,   647,  4346,   532,   156,   377,   429,
     582,   386,   508,   372,   389,  2279,    25,   811,   808,   140,
     812,   813,   571,  3570,  2190,  2191,  2192,   629,  3405,   386,
    3590,  2295,   389,   414,   611,   588,    18,    19,   593,   502,
      13,  2207,   808,    13,   448,  2211,   262,  2983,  4703,  4704,
    4003,   604,  5343,  2219,   386,   571,  2222,   389,  2842,  3557,
     586,   481,    13,   565,   808,  2231,   647,   565,   812,  3629,
    2236,  2237,   748,   749,   813,   479,   603,   808,  4332,  2863,
     125,  2865,  4426,  4427,   386,   352,   400,   389,   386,   368,
     386,   389,   643,   389,   139,   808,  4661,    18,    19,   593,
      21,  2267,  2271,  2269,    25,  2271,   647,   476,   140,   386,
     606,  4338,   389,  2279,   812,   808,  2354,   619,  4372,   231,
    3680,   619,    18,    19,   593,  3612,   647,   500,  3615,  2295,
    3615,   708,   647,  2303,   636,   449,   446,   647,   441,   128,
     167,  2311,   434,  4370,  2408,   608,   647,  4753,   800,  4619,
      18,    19,   647,   160,   650,   414,   808,   386,  5324,   168,
     389,  2327,   593,   365,   366,   808,  4147,   140,  2293,   371,
     140,  2296,  2436,   200,   680,   602,   108,   436,  2303,   548,
    2148,   293,   647,   732,  3431,   691,  2311,   344,  2354,   140,
    2379,  4541,  2358,  2359,   812,   813,    18,    19,  2166,  5164,
    5165,   386,    18,    19,   389,   386,   249,  4813,   389,   386,
    2379,    26,   389,   231,   386,  3552,   732,   389,   477,   647,
      18,    19,  2190,   533,    18,    19,  4565,   808,   239,   272,
     386,   220,  2434,   389,   593,  3567,   800,  3566,   249,  4854,
     386,  4856,  2408,   389,   808,   614,    80,   647,    82,  4541,
     366,  2219,   625,   647,  2222,   764,   765,   549,   785,  3746,
    2426,   681,  2464,   680,  2528,   234,   235,   808,   386,    84,
    2436,   389,   647,   386,   691,   212,   389,  2443,  2444,   538,
    2405,    26,   216,  2449,  4511,  2454,   331,   808,  2454,   221,
     647,   125,   261,   808,   386,    18,    19,   389,   808,   415,
     807,  2565,    18,    19,   293,   807,   813,   808,   810,   807,
     812,   216,  2514,   808,   148,   647,   428,  2483,  2426,   386,
      18,    19,   389,  4953,  2490,   160,    18,    19,  4958,   263,
    2496,  2497,  2498,  2499,  2500,  2501,  2502,   696,   563,    84,
    2506,  2449,  2508,   808,   808,   647,   503,   504,   812,   647,
     235,   647,  2518,   187,  2520,  2521,   137,  2523,   263,  2525,
    2526,   807,  2528,  2529,  2530,  3412,   212,   813,  5547,  2535,
     647,   152,  2538,   137,  2540,    18,    19,  3592,   263,  2545,
     808,   392,  2548,  2549,    18,    19,   588,  3874,   152,  3874,
    2358,  2359,   419,  2559,    33,  2561,  5051,  5052,  2492,  2565,
     141,   230,   604,    21,   386,    18,    19,   389,   808,  2503,
      18,    19,  1721,   158,   808,  2509,  2582,   167,   647,   680,
     636,  1730,   237,    19,  2303,  2293,  2592,  2593,  2296,   813,
     691,  3985,  2311,   808,    38,  2303,    19,   455,  3985,   655,
     656,   194,    46,  2311,  5050,  2539,   713,   714,   715,  2543,
     277,   808,  5082,   280,   122,   127,  2550,  2551,  5423,  5424,
     562,   393,   647,   565,   103,   386,   647,  5312,   389,   807,
     647,   403,    77,   492,   492,   647,   808,  5026,   410,   582,
    2718,  2449,   100,   122,  4297,  2749,    19,   194,   241,  2753,
     386,   647,   237,   389,   230,   125,  4449,    18,    19,  3546,
     680,   647,    18,    19,  3639,   532,   808,   322,   138,   611,
     808,   691,   808,  3648,  2293,   400,   562,  2296,   386,   565,
     188,   389,    18,    19,   122,    77,   808,   125,   212,   647,
     812,   808,   748,   749,   647,   235,  5137,  2405,   156,   246,
    2706,    93,    18,    19,  2710,   141,   565,   565,   227,   188,
     229,   219,  2718,   158,   369,   647,    61,    62,   141,   586,
     455,  2727,  2728,  2777,   386,    59,    71,   389,   808,   563,
     386,  2726,   812,   389,  4019,   212,   194,   322,   285,   808,
     647,  2549,   514,  2749,   667,   235,   669,  2753,   386,   197,
     188,   389,   386,   120,   212,   389,  2728,   565,   228,   217,
     619,   619,   429,   344,    12,   439,   245,  4052,  4053,   122,
     622,  4171,   125,   625,  2582,  5460,   636,   636,   636,   639,
     238,   219,   290,   808,   369,   808,  2405,   808,   246,   812,
    2894,   808,   237,  4078,  3456,  4364,   808,   807,  4367,  4368,
     258,   798,   799,   800,   801,   802,   803,   804,  3470,  2887,
     808,   290,   808,   271,   812,  3985,  4143,  4819,   276,  4854,
     808,  4856,   808,   386,   812,   647,   389,   285,  2834,   807,
     386,   807,  2838,   389,   808,   188,   197,   807,   812,   611,
     807,   197,   176,   808,  3731,  3732,   180,   812,   386,   808,
     808,   389,   290,   812,   386,   808,  4004,   389,   807,   226,
     194,   103,   455,   807,   372,   812,   219,   492,   807,    61,
      62,  2877,  2878,   265,  2869,   500,   808,   807,  5319,    71,
     122,  2887,  2869,  4277,   571,  4059,   647,  4064,  2894,   807,
    4277,   546,    84,   372,   807,  3683,   354,  5081,  2706,   492,
    5081,   808,  2710,   386,  2910,    26,   389,   807,   344,  2915,
     807,   647,   386,  2919,  2920,   389,   808,   396,   363,   377,
     812,   344,   503,   504,   369,   807,  4579,  4580,   808,   387,
     807,  5110,   812,   386,   372,  3559,   389,   290,   386,   647,
     565,   389,   807,  2949,  4121,     7,   188,   813,   807,   807,
     342,  5135,  5136,   808,  5135,  5136,    77,   812,   212,  2965,
    2966,   546,  2991,    84,    26,    82,   808,   334,    61,    62,
     812,   338,   565,   108,   629,   807,   368,  2983,   345,  2974,
    2986,   807,  2991,   807,  2993,   647,   808,  2993,   808,   807,
      13,   647,   812,   438,   619,   620,   330,  3039,  2993,   717,
     718,   808,   807,   245,   492,   812,  2993,   807,   125,   647,
     807,   636,  3116,   647,  4432,  4433,  4434,  4435,   476,   372,
      43,  3075,    84,  3077,   807,   386,   619,   807,   389,  3039,
     386,   148,   167,   389,  4428,   808,   574,   158,   430,   812,
    3046,  4428,   500,   636,   629,  3010,  3011,  3012,   290,   807,
     386,   808,    77,   389,   807,   812,   177,   807,  5274,   426,
     807,  3067,   716,   184,    13,   200,  3072,   503,   504,   808,
     187,    94,   808,   812,  3039,    98,  5522,   565,    64,  3183,
     503,   504,   144,   807,   647,   593,   817,   807,    74,   212,
     548,   647,  5538,   748,   428,   122,   807,    64,   125,   135,
     808,   546,    64,    89,   808,   807,   837,    74,   812,   647,
    3116,   807,    74,   808,   593,   647,   237,   812,  5564,   850,
     851,  3130,    89,   490,  3130,  3131,  3132,    89,   807,  3233,
     372,   619,   620,   655,   656,   807,   791,  4537,  3800,  4313,
     532,  2949,  4160,   807,   602,   808,   808,  3153,   636,   812,
    4324,   563,   808,   598,   396,   593,   614,  2965,  2966,   807,
     808,   188,  4562,   748,   647,   808,   150,   151,   100,   812,
     808,  3833,   807,   647,   808,   237,   634,  3183,   636,  3841,
     807,  3187,   807,  3189,   629,    33,  3848,   807,  3194,  3293,
    3294,   140,   219,  3199,   647,  5411,   492,  2575,  2576,   647,
     808,   322,  3208,   418,   812,    37,   791,   193,   807,    12,
     480,   808,   237,   199,   807,   812,  3222,   696,   799,   800,
     801,   802,   803,   804,  4551,   807,   193,  3233,   807,  4556,
     253,  4556,   122,  3239,    47,    48,   653,   808,   574,   697,
     593,   812,   363,   808,   384,   808,   808,   812,   369,   235,
     812,   808,   808,  3259,  5470,   812,  5472,  4754,  1334,  1335,
     322,  3267,  4759,   290,   631,  3271,  3272,   377,   235,   565,
      21,   220,  5488,   235,   808,  3379,   808,   263,   812,   807,
     807,  3287,   649,   115,   419,   808,   647,  3293,  3294,   812,
     122,   647,   807,   141,  1127,  1128,   263,  1130,   188,  1132,
    3404,   807,  3010,  3011,  3012,   108,   238,   369,   331,   319,
     320,   647,   807,   807,   324,   325,  5532,  5533,  3324,   807,
    3039,  1635,  1636,   619,   127,   808,   258,   300,   301,   219,
     562,  3039,   808,  3339,   808,   807,   812,   380,   363,   271,
     636,   122,  3432,   807,   369,   372,   807,   179,   807,   100,
     808,   593,   810,   808,   812,   808,   188,   812,   807,   817,
     807,   797,   798,   799,   800,   801,   802,   803,   804,   197,
     807,    37,   395,  3379,   797,   798,   799,   800,   801,   802,
     803,   804,    37,   807,   231,   246,   808,   219,   450,   807,
     812,  3010,  3011,  3012,  4170,  4892,   199,   807,  3404,  4896,
     290,   249,   807,   807,   122,   156,  5015,   188,   953,   807,
     807,   956,  3418,   438,   400,  3421,   961,  3423,   807,   122,
     807,   966,   354,   807,  3419,   546,   807,   275,  3423,   807,
     565,   417,   235,  3428,  3429,   807,  3423,   807,   219,  3434,
    3405,   192,   141,   194,   807,   377,   227,  4732,   229,   115,
     417,   586,  4626,  4627,   696,  4629,   122,  4954,   290,   808,
     115,   212,  4959,   812,   808,   808,   217,   122,   812,   812,
     188,   444,   445,  4636,  4637,   807,   611,   808,   807,  3287,
     231,   812,   372,   286,   546,   188,   808,   238,   807,    64,
     812,   141,   627,   808,   517,   246,   344,   812,   808,    74,
     807,   219,   812,   807,   160,   161,   156,   258,   629,   290,
     807,   807,   807,   179,    89,   808,   219,   365,   366,   812,
     271,   546,   188,   355,   179,   276,  3532,    77,   807,  3607,
     807,   807,   518,   188,   285,   367,   559,   808,   807,   371,
     372,   812,  3548,   808,   476,   201,   807,   812,   194,  5234,
     523,   524,   525,   219,   194,   808,   808,   246,   214,   812,
     812,   111,   197,   620,   219,   808,   593,   629,   377,   812,
     808,   808,   290,   598,   812,   812,   500,   526,   527,  3585,
     529,   530,   531,  3589,  3590,  4472,   389,   290,   808,   500,
    3596,   372,   812,   441,   666,   667,   212,   669,   254,   548,
    3595,  3607,   813,   354,   629,  3611,  3612,   812,   158,  3615,
    3418,   267,   166,  3421,   276,   808,   548,   603,   193,   812,
    3615,  3627,   807,  3629,   290,   160,   377,   748,  3615,   194,
    3639,  3640,   542,  3639,  3640,   290,   387,   562,   294,  3648,
    3649,  3650,  3648,  3649,  3650,   344,   166,   542,   808,   222,
    3704,   186,   812,   211,   372,   503,   504,   542,   287,   157,
     235,   813,   807,    26,   480,   812,   201,    96,   516,   372,
     791,   812,    48,   807,  3680,   813,   807,   156,   156,   214,
     197,   111,   614,   808,   810,   235,   748,   807,   263,   355,
     160,  3697,   811,  3699,   344,   498,   160,  3405,   160,   812,
     355,   492,   358,   593,   249,   371,   372,    48,   293,   500,
    4884,    35,  4886,  4887,    77,   518,   160,   372,   195,   383,
     746,    84,   171,    21,   532,   476,   518,   193,   708,   791,
    3739,   266,   267,  3739,     7,  3741,   263,   263,    71,   571,
    3746,    13,  4916,   575,   633,   808,   578,   563,   808,   500,
     140,    10,   568,   812,   808,   813,   588,   808,   808,   294,
     563,   593,   565,   808,   596,   568,   808,   808,   808,   501,
     807,   321,   275,   666,   565,  3781,   141,   377,  4833,   708,
    5107,   614,   562,  3789,   515,    50,  3405,   282,  3596,   339,
     812,   764,   765,    12,    30,   611,   599,   548,    30,   785,
     603,    31,   100,   521,   503,   504,   287,   812,   611,   582,
     812,   627,   593,   363,   177,   812,   486,    71,   732,   571,
     273,   184,   812,  4990,   812,   400,   657,   362,   619,   620,
     811,   813,   249,   812,   158,   801,   252,   653,   162,   560,
     194,   181,   417,   812,   194,   636,  3459,   194,  3461,    88,
     653,   602,   812,   503,   504,  3861,   812,    21,   156,  5026,
     812,   558,   613,   614,   378,   136,   645,   156,  3874,   808,
     728,  3877,  3878,   721,   237,   593,    48,   653,   202,   728,
     636,   416,   812,   634,   571,   636,    87,   502,     7,   108,
     593,  3897,  3898,   110,   807,  3901,   194,  3903,   222,   582,
    3906,   158,   582,   108,   707,   571,   400,    74,   127,   575,
     400,   400,   578,   136,   212,   261,   571,   261,   400,   217,
     575,   136,   588,   578,    35,   400,    48,   593,  5095,  5214,
     596,   400,   400,   588,   618,   400,   584,   400,   593,   618,
     238,   596,   812,   812,   500,   709,   697,   491,   246,   797,
     798,   799,   800,   801,   802,   803,   804,  3963,   627,   322,
     258,  4848,   167,   287,   141,   807,   807,   799,   800,   808,
     609,    57,  3978,   271,  3980,   807,   812,   171,   276,   344,
     447,   200,   785,   786,   377,     7,   716,   285,   111,   377,
     613,     7,   591,  3999,   228,   200,   546,   807,   200,   197,
     363,   808,  4008,  5220,   808,   807,   369,   808,   808,   808,
     808,  5296,   808,   563,     4,   808,   807,   812,   800,   808,
      15,   808,   808,   808,   243,   808,    21,   141,    21,    77,
     235,    21,   689,   808,    27,   457,   458,   459,   460,   461,
     462,   463,   812,   812,    39,    93,   808,   158,    43,    39,
     808,   162,   812,   808,   808,   812,   354,   808,   382,   810,
     813,   812,    57,    58,   813,   813,   817,   286,    63,   807,
     804,    64,   807,   813,   807,   812,   192,   287,    71,   377,
     808,   286,    75,   287,    77,   811,   134,   287,   287,   387,
     287,   202,   287,   812,   418,   812,    89,   160,   797,   798,
     799,   800,   801,   802,   803,   804,   582,   377,   236,   808,
     634,   222,   812,   400,   812,    13,   812,   812,   442,   160,
     210,   582,   582,   197,   377,   197,  4132,   582,   582,   455,
     255,  5298,   125,   799,   800,   432,   194,  4143,   503,   504,
     813,   807,   813,   467,   799,   800,   813,   797,   798,   799,
     800,   801,   802,   803,   804,   813,  5483,   197,  5483,   813,
     812,   808,   614,   427,  4170,  4171,  4161,   344,  4177,    60,
     513,  4177,   607,   404,   808,   812,   287,   194,   476,   401,
    5507,   814,  5507,   546,   571,  3798,  3799,   511,   571,   403,
    3803,  3999,   403,   571,   668,   341,   813,   379,   812,  5526,
     419,  5526,   500,    60,  4308,   597,   263,   263,   141,   414,
     203,    26,    27,    28,   419,   477,   263,   265,   542,  5546,
     263,  5546,   402,   807,   377,   672,  3839,  4233,   249,   672,
     344,  4335,  3845,  3846,  3847,   706,   160,  3850,   562,   160,
     160,   565,   141,   160,   160,   160,    61,    62,    63,   160,
     548,   160,   160,   160,   160,  5429,    71,   160,   160,   160,
     160,  4303,    77,   160,   160,   160,   629,   141,    83,    84,
     263,   382,    87,  4279,   160,  4281,   160,   160,  4284,   498,
     160,   160,  4288,   160,   160,   160,   641,   160,   160,   160,
     160,  4297,   160,   498,   342,   160,   111,   160,   160,   160,
     160,   160,  4308,   708,   602,   160,   160,   418,   160,   160,
     125,   160,   160,   518,   129,   286,   614,   365,   366,   653,
     368,  5203,   464,   377,   807,  4331,   503,   504,   808,  4335,
     154,   442,   245,   245,   571,   808,   634,   582,   636,   654,
     582,   813,   571,   158,   563,   571,   565,   384,   730,   808,
     249,   808,   808,   197,   212,   813,   467,   808,   563,   732,
    5544,   727,   808,   568,   812,    14,   807,   812,    17,   807,
    4376,  4377,   365,   366,   813,   249,   813,   813,   371,   807,
     599,   586,   430,   807,   377,   748,   812,    36,   432,   503,
     504,  4397,   611,   372,   599,   197,   614,   812,   611,   697,
     511,    50,    51,   335,   156,   807,   611,   807,   807,    58,
     554,   344,    12,  4419,    63,    64,   403,   455,   403,    73,
     235,   812,   627,   532,   417,  4397,   532,   242,   791,   532,
      79,   542,   797,   798,   799,   800,   801,   802,   803,   804,
     532,  4447,   491,   808,   532,   344,   377,   262,   653,   807,
      99,   263,   263,  4459,  4449,   807,   614,   591,   563,   783,
     784,   366,   636,   787,   788,   789,   790,   812,   563,   582,
     344,   808,   121,   812,   582,   450,   808,   812,   372,   807,
     807,   212,   131,   132,   532,   377,   807,   377,   707,   807,
     807,   807,   571,   807,   143,   144,   808,   807,   472,   807,
     807,   807,   707,   496,  5391,    62,   321,   247,   247,   807,
     808,  5529,   810,   720,   812,    21,   751,   808,   808,   817,
     413,   170,   808,  4331,   339,    48,   494,   807,   812,  4636,
    4637,  4537,   808,   687,   812,   687,   285,  4543,    12,   808,
     546,   190,   160,   801,  5426,  4551,   812,   384,   231,   642,
    4556,  4557,   282,   546,  4658,   807,  4562,   160,   197,   208,
    4555,   210,   812,   258,   808,   808,   215,   808,  4376,   218,
     503,   504,   258,    48,   390,   808,   217,   103,   497,   394,
     808,   786,   160,  4589,   233,   160,   160,   812,   403,   403,
      48,   807,   241,   160,   228,   244,   103,   245,  5485,  4605,
     278,   807,   111,  4707,   503,   504,   111,   368,   162,   400,
     603,   729,   440,   125,   807,   264,   807,   813,   807,   807,
     797,   798,   799,   800,   801,   802,   803,   804,   807,   503,
     504,   808,   281,   808,   807,   565,   285,   799,   582,   383,
    4646,   403,   807,   377,  4650,   377,   515,   372,   808,   245,
     636,  4459,  4658,   808,   400,   197,  5538,   808,   808,   808,
     808,   432,   655,   656,   582,   210,    21,   482,   377,   246,
      35,   269,   783,   784,   812,   808,   787,   788,   789,   790,
     197,   813,  5564,   797,   798,   799,   800,   801,   802,   803,
     804,   812,   258,   817,   808,   258,   258,    62,   697,   403,
     817,  4707,   817,   160,   126,   277,    48,   403,    48,    48,
     153,    48,   705,   477,   801,    35,   807,    35,   729,   608,
     125,   625,   263,   538,   539,   540,   541,   263,    64,   263,
     203,   546,   381,    35,   372,   372,   729,  4743,   807,  4745,
    4746,   372,   415,    77,  4739,   377,    21,   112,   563,   377,
     115,   566,   813,  4831,   807,   748,   749,   808,   123,   515,
     487,   341,   808,   265,   427,   414,   808,   812,    48,  4775,
     765,   387,   808,   808,   808,   770,   425,   142,  4784,   808,
     808,   808,   812,   808,   377,   175,   812,   602,   285,   384,
     210,    21,   785,   147,   808,   565,   258,   258,   447,   807,
     807,   450,   160,   452,   405,   800,   455,   808,   812,   120,
     120,    48,    48,    48,   387,   619,   465,   466,   377,   372,
     367,   816,   620,   807,   189,  4831,   475,   636,   477,    15,
      21,   812,  4838,    81,   510,   143,   812,   486,   807,   372,
     228,   808,   403,   492,   194,   372,   812,   808,  4854,    21,
    4856,   500,   341,   808,  4894,    48,   505,   506,   507,   173,
     384,   377,   263,   813,   797,   798,   799,   800,   801,   802,
     803,   804,   194,    21,   812,   160,   276,   318,   873,   874,
     807,   876,   877,   162,   673,   808,   636,   397,    48,   538,
      15,   472,   149,   807,   889,   260,   545,   112,   797,   798,
     799,   800,   801,   802,   803,   804,   162,   636,   786,   724,
     608,   136,   573,  4919,   136,   136,   565,   158,   377,   483,
     808,   808,   807,   797,   798,   799,   800,   801,   802,   803,
     804,   812,   537,   748,   749,   483,   691,   678,    63,   653,
     589,   808,   808,  4949,  4950,    48,   691,    48,    56,   691,
     534,   807,   601,   155,   633,   808,   605,   807,    66,    32,
     807,   807,  5016,  5290,   613,   807,   807,   812,    76,   808,
     619,   807,   554,    64,   814,   384,   791,    64,   808,    19,
     481,   702,    90,    91,    92,   808,   633,   636,   353,   197,
     985,   356,   982,   553,    32,   644,   143,   384,   106,   384,
     808,  5041,   134,   691,   483,   228,  5012,   688,   701,   464,
       6,   377,   246,   377,   154,   810,    48,   171,   608,   130,
    5026,   633,   292,   154,   230,   810,   675,  5354,   814,   124,
    4838,  1026,   231,   702,    54,   574,   143,   810,   807,   372,
    5046,   154,  5369,   574,   812,  1040,   215,   810,   500,    54,
    1040,   194,   154,   194,   574,  5382,  5062,   194,  1053,   454,
     125,   812,   377,   712,   635,   698,  5108,   196,  5171,   434,
    3574,  3333,  3327,  3329,  4745,  4748,  4753,  3331,  3344,  3774,
    4758,  3976,  5083,  5201,  1255,  4773,  5377,  1765,  5378,  4775,
    5564,  5522,  1101,  4972,    46,  2982,  2915,  4132,  5069,  5534,
    5069,  5107,    56,  5109,  5438,  5069,  5069,  5069,  5069,  5347,
    5116,  5117,    66,  5069,  5441,  5069,  5069,  5123,  5069,  5438,
    5069,  5424,    76,  1113,  5451,  5069,  5069,  5373,  5372,  5456,
    3985,  1209,  5138,  2480,  3570,  2487,    90,    91,    92,  4428,
    4277,  2707,  4449,   508,  5150,  3429,  5250,  3428,  4228,  5253,
    4643,  3434,   106,  4873,  5321,  5161,  5333,  5400,   807,  5331,
    5166,  2575,  3423,  5490,  5041,  5492,  2458,  4006,  4297,  4350,
    4298,  3817,  3850,  3849,  4672,  5343,  5171,  4353,  5171,  5108,
      18,    19,  5045,  3528,  5171,  5239,  2495,  5514,  4959,  5293,
    4892,  5197,  4954,  4906,  3194,  4896,  4650,  1926,  4324,  4445,
    3991,  3111,  3407,  3104,  1740,  2576,  4724,  2576,  2366,  2575,
    1703,  2368,  3880,   578,  3225,  2971,  1901,  2965,  3324,  3596,
    2946,  4148,  5549,  5550,    64,   333,  2274,  5554,  1223,  2429,
    1027,  1876,  1026,  2139,  1379,  4470,  2875,  2838,  2073,  4990,
    5298,   606,   350,  1107,  5250,  5391,  5314,  5253,  5485,  1299,
    5011,  2993,  1247,  2993,  5511,  5220,  2993,  1247,  4582,  2993,
    5266,  4858,  5116,  1258,  1259,  3901,  4205,  5117,  1273,  1658,
    4591,  5012,  1267,  1268,  1269,  1270,  1271,  1272,   116,   117,
     118,   119,   120,  1121,   649,  1280,  1281,  5293,  1283,  1284,
    3655,  5331,  4814,  1288,  1289,  4890,  3874,  1292,  1293,  1294,
    1295,  4985,  1297,  1298,  2436,    16,  2149,  2882,  5314,  1485,
    1305,  1306,  1194,  1308,  1309,  1310,  1311,  1312,  3595,  3595,
    1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,  4559,
    1325,  1656,  4167,  1328,  1329,  4542,  4551,  2351,  1333,   996,
    3593,  1739,  1337,  1338,  1339,  2352,  5400,  3287,  1616,  2903,
    5069,  1194,  3599,  2247,  2246,  1350,  1351,  1352,  1190,  1194,
    1355,  5069,  1191,  1358,  1359,  1360,  1361,  1362,  1194,  5311,
    4258,  5390,  1367,  4633,  5526,  4511,  5546,  4370,  4443,   333,
     488,  4556,  4861,  1378,  1379,   223,   224,   225,   226,  3339,
    3131,  1386,  2296,  1388,  1389,  5306,   350,  1567,  3039,  5503,
    1382,    43,  2311,    43,  1565,  1400,  1401,  1402,  2291,  1404,
    1405,  2289,  2949,  1408,  1409,  1410,    39,  1477,  1413,  1414,
    1415,  1416,  1417,  1418,  1419,  1420,  1012,  2718,  3099,  1424,
    2719,  1698,  4828,  4995,  1429,  1183,  1015,  5443,  1527,    11,
      11,  4387,   550,  3994,  5450,  5164,  5165,  5322,  1255,  1444,
    5069,  4446,  1255,  4768,  1444,  1255,  5164,  5165,  3891,   567,
     116,   117,   118,   119,   120,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5483,    -1,    -1,
      -1,    -1,  1477,  5489,    -1,    -1,    -1,  1477,  5494,    -1,
      -1,    -1,    -1,  1483,    -1,    -1,   334,  5503,   336,   337,
     338,  5507,    -1,    -1,    -1,    -1,    -1,   345,  1498,    -1,
      -1,    -1,  5220,    -1,    -1,    -1,    -1,   471,    -1,    -1,
    5526,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5538,    -1,   488,    -1,  1531,    -1,    -1,    -1,
    5546,  1531,    -1,  1538,    -1,  5164,  5165,    -1,   386,  5544,
      -1,   389,    -1,    -1,  5273,  5274,    -1,  5544,  5564,    -1,
      -1,    -1,    -1,    -1,    -1,  5273,  5274,   223,   224,   225,
     226,  5290,    -1,    -1,  1569,    -1,  1571,    -1,    -1,  1574,
      -1,    -1,  5290,    -1,    -1,    -1,    -1,    -1,   426,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   550,    -1,    -1,    -1,
      -1,  5220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5354,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,  5354,    -1,    -1,    -1,
    5369,   489,   490,    -1,  5273,  5274,    -1,    -1,    -1,    -1,
    1655,  5369,    -1,  5382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5290,    -1,    -1,  5382,   800,    -1,    -1,   334,  1674,
     336,   337,   338,    -1,    -1,    -1,    -1,    -1,    -1,   345,
      -1,   816,  5411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5411,  5423,  5424,    -1,    -1,    -1,    -1,
    1700,  1701,  1702,    -1,    -1,  5423,  5424,    -1,    -1,    -1,
      -1,    -1,  5441,  1718,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5451,  5441,    -1,  5354,    -1,  5456,    -1,    -1,
      -1,    -1,    -1,  5451,    -1,    -1,    -1,    -1,  5456,    -1,
    5369,  5470,   877,  5472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5470,  5382,  5472,    -1,    -1,    -1,    -1,  5488,
     426,  5490,    -1,  5492,    -1,    -1,    -1,    -1,    -1,    -1,
    5488,    -1,  5490,    -1,  5492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5411,   631,    -1,  5514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5423,  5424,  5514,    -1,    -1,   647,
     648,   649,    -1,  5532,  5533,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5441,    -1,  5532,  5533,    -1,    -1,    -1,    -1,
    5549,  5550,  5451,   489,   490,  5554,    -1,  5456,    27,    -1,
      -1,  5549,  5550,    -1,    -1,    -1,  5554,    -1,    -1,    -1,
      -1,  5470,    -1,  5472,    -1,    -1,    -1,    -1,    -1,    -1,
     985,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5488,
      -1,  5490,    -1,  5492,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    75,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,  5514,    -1,    -1,    -1,    -1,
      89,  1026,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5532,  5533,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5549,  5550,    -1,    -1,    -1,  5554,   125,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1769,    -1,  1771,  1772,    -1,    -1,  1953,  1776,
    1777,    -1,  1957,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1965,    -1,  1967,    -1,  1791,   631,    -1,  1794,  1795,    -1,
    1797,    -1,    -1,  1800,  1801,  1802,  1803,    -1,    -1,    -1,
    1807,    -1,   648,   649,    -1,  1812,    -1,    -1,    -1,    -1,
    1817,  1818,  1819,  1820,  1821,    -1,    -1,    -1,  1825,  1826,
      -1,    -1,  2007,    -1,  1831,    -1,  1833,  1834,  1835,    -1,
    1837,  1838,    -1,  1840,    -1,    -1,  1843,    -1,    -1,  1846,
    1847,  1848,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2051,  2052,  2053,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2087,    -1,    -1,    -1,    -1,  2092,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2111,    -1,    -1,    -1,
      -1,    -1,    -1,  2118,    -1,    -1,    -1,    -1,  2123,    -1,
    2125,    -1,    -1,  1258,  1259,    -1,  2131,    -1,  2133,  2134,
      -1,    -1,  1267,  1268,    -1,    -1,  1271,  1272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1280,  1281,    -1,  1283,  1284,
      -1,    -1,    -1,  1288,    -1,    -1,    -1,  1292,  1293,  1294,
    1295,    -1,  1297,    -1,    -1,    -1,   365,   366,    -1,    -1,
    1305,  1306,   371,  1308,  1309,    -1,    -1,    -1,   377,    -1,
    1315,    -1,    -1,  1318,  1319,  1320,  1321,  1322,  1323,    -1,
    1325,    -1,    -1,  1328,  1329,    -1,    -1,    -1,  1333,    -1,
      -1,    -1,  1337,  1338,  1339,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1350,  1351,  1352,   417,    -1,
    2220,  2221,    -1,  1358,  1359,  1360,  1361,  1362,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1378,  1379,    -1,    -1,    -1,    -1,    -1,
      -1,  1386,    -1,  1388,  1389,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2293,    -1,
      -1,  2296,    -1,  2293,  1429,    -1,  2296,   496,  2303,  2304,
      -1,    -1,    -1,  2308,    -1,    -1,  2311,    -1,    -1,  2314,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2322,    -1,    21,    -1,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2405,    -1,    -1,  1538,   603,  2405,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,  1571,    -1,    -1,  1574,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   655,   656,    -1,   156,
      -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2478,    -1,  2475,  2481,  2482,    -1,  2479,
      -1,    -1,    -1,    -1,  2484,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   705,    -1,    -1,    -1,
    2510,  2511,  2512,  2513,    -1,    -1,    -1,    -1,    -1,    -1,
    1655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     729,    -1,    -1,    -1,   231,    -1,    -1,    -1,   235,  1674,
      -1,    -1,  2542,    -1,    -1,   242,    -1,    -1,    -1,   748,
     749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,  2566,  2567,    -1,    -1,
    2397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,
      -1,    -1,    -1,  1718,    -1,    -1,   785,    -1,    -1,    -1,
      -1,  2596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    21,    -1,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,  2515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,    -1,   400,    -1,  2532,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2734,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,  2743,  2744,
      87,    -1,    -1,  2570,  2571,    -1,    -1,    -1,    -1,    -1,
      -1,  2578,    -1,    -1,    -1,    -1,    -1,    -1,   455,  2764,
    2765,    -1,  2767,    -1,   111,  2770,  2771,  2772,  2773,  2774,
      -1,    -1,  2777,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,  2786,   129,    -1,    -1,   482,  2791,    -1,  2793,    -1,
    2795,  2796,    -1,  2798,  2799,   492,    -1,    -1,  2803,  2804,
    2805,    -1,    -1,    -1,  2809,  2810,  2811,    -1,  2813,   156,
    2815,   158,  2817,    -1,  2819,    -1,  2821,    -1,  1953,    -1,
      -1,  2826,  1957,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1967,    -1,    -1,    -1,    -1,  2842,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,  2861,    -1,  2863,    -1,
    2865,    -1,    -1,    -1,  2869,    -1,   563,    -1,   565,   566,
    2875,  2876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,  2720,    -1,   242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,  2051,  2052,  2053,    -1,
      -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2960,    -1,  2092,    -1,    -1,
      -1,  2961,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,  2111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2123,    -1,
    2125,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3010,  3011,  3012,    -1,    -1,
    3010,  3011,  3012,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,    -1,
      -1,    -1,    -1,    -1,  3039,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,   748,   749,   400,  3054,    -1,   403,    -1,    -1,    -1,
    3065,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3075,    -1,  3077,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,    -1,
     807,    -1,    -1,   810,    -1,    -1,    -1,    -1,    63,  3124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,   482,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,  3144,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3157,    -1,  3159,
    3160,  3161,  3162,    -1,  3164,  3165,   111,    -1,    -1,  2304,
      -1,    -1,    -1,  2308,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,   563,    -1,   565,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3141,    -1,  3143,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3336,    -1,  3338,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3347,  3348,  3349,
    3350,    -1,    -1,    -1,    -1,    -1,  3356,  3357,  3358,  3359,
    3360,  3361,    -1,  3363,  3364,  3365,  3366,    -1,    -1,  3369,
      -1,  3371,    -1,    -1,    -1,    -1,   321,   724,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,
    3405,   748,   749,    -1,    -1,  3405,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3443,    -1,
      -1,    -1,    -1,    -1,   791,    -1,  3451,    -1,    -1,   394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,
     807,  2596,    -1,   810,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3481,  3482,    -1,    -1,
      -1,  3308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3517,    -1,  3519,    -1,  3521,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,    -1,
      -1,    -1,  3557,    -1,  3559,    -1,  3383,  3384,  3385,  3386,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3593,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,  2734,
      -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,  2743,  2744,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,
      -1,   566,    -1,    -1,    -1,  3630,    -1,  3632,    -1,  2764,
    2765,    -1,  2767,    -1,    -1,  2770,  2771,  2772,  2773,  2774,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2786,    -1,    -1,    -1,    -1,  2791,   602,  2793,    -1,
    2795,  2796,    -1,  2798,    -1,    -1,  3671,    -1,  2803,  2804,
    2805,    -1,    -1,    -1,  2809,  2810,  2811,    -1,  2813,    -1,
    2815,    -1,  2817,    -1,  2819,    -1,  2821,    -1,    -1,    -1,
      -1,  2826,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3704,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3714,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2869,    -1,    -1,    -1,    -1,    -1,
    2875,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3748,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3780,    -1,    -1,    -1,   724,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    -1,   748,   749,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2960,    -1,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   791,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,  3909,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3065,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,
      -1,    -1,    -1,    -1,   215,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3982,  3983,    -1,
      -1,  3981,   233,    -1,    -1,    -1,    -1,    -1,    -1,  3124,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,  4023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,  4056,    -1,  4058,    -1,    -1,  4061,  4062,    -1,  4064,
      -1,    -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
    4075,    -1,    -1,    -1,    -1,  4080,    -1,    -1,  4083,    -1,
      -1,  4086,  4087,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,  4108,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,  4121,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
     381,    -1,    96,    -1,    -1,    -1,    -1,  3964,  3965,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,  4167,   414,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   137,   425,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,   158,    -1,   447,  4202,  4203,   450,
      -1,   452,    -1,    -1,   455,    -1,    -1,    -1,    -1,    -1,
    4215,    -1,    -1,    -1,   465,   466,  4216,  4217,    -1,  4219,
      -1,    -1,    -1,    -1,   475,    -1,   477,    -1,   192,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
      -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
      -1,    -1,    -1,    -1,   505,   506,   507,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,  4289,    -1,    -1,   538,    -1,    -1,
      -1,    -1,    -1,    -1,   545,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3443,    -1,
      -1,    -1,    -1,    -1,   565,    -1,  3451,    -1,    -1,    -1,
      -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4337,   589,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3481,  3482,    -1,    -1,
     601,    -1,    -1,    -1,   605,    -1,    -1,   321,    -1,    -1,
      -1,    -1,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
      -1,    -1,  3507,    -1,    -1,   339,    -1,    -1,    -1,   343,
      -1,    -1,  3517,    -1,  3519,   636,  3521,    -1,    -1,  4394,
    4395,    -1,    -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   660,
     661,   662,   663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4426,  4427,   387,   675,    -1,    -1,    -1,    -1,    -1,
     394,    -1,  4432,  4433,  4434,  4435,    -1,    -1,    -1,   403,
      -1,    -1,    -1,  4443,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4457,  3593,    -1,
      -1,   712,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3630,    -1,  3632,    -1,    -1,
      -1,   752,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,
    4347,  4348,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3671,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4552,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   807,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4573,    -1,
    4575,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
      -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,  4601,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4613,    -1,    -1,    -1,    -1,    -1,    -1,
      34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,    -1,    -1,  3780,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   636,    -1,    -1,   639,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4688,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,  4703,  4704,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,  4721,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4737,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,  4748,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4772,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,
      -1,   205,   206,  4798,    -1,    -1,  4801,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4814,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4861,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,  4868,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4901,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,  4056,    -1,  4058,    -1,    -1,  4061,  4062,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
    4075,    -1,   356,    -1,    -1,  4080,    -1,    -1,  4083,    -1,
      -1,  4086,  4087,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4108,    -1,    -1,    -1,    -1,    -1,    -1,
    4985,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5016,    -1,    -1,  5014,    -1,    -1,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4167,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5051,  5052,    -1,    -1,    -1,    -1,    -1,    -1,  5064,
      -1,    -1,    -1,    -1,  5069,    -1,    -1,  4202,  4203,    -1,
    5075,    -1,    -1,    -1,    -1,  4902,  4903,  4904,    -1,    -1,
    4215,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,  5097,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5158,  4289,    -1,    -1,    -1,   572,  5164,
    5165,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5207,    -1,    -1,    -1,  5033,   621,   622,  5036,
    5037,  5038,  5039,    -1,    -1,  5220,    -1,    -1,    -1,    -1,
    5220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5239,   649,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5244,  5245,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5259,    -1,  5261,    -1,    -1,  4394,
    4395,    35,    36,    -1,    -1,    -1,  5271,    -1,  5273,  5274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5290,    -1,    61,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5124,    72,    73,
      -1,    -1,    -1,    -1,    -1,    -1,  5133,  5134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    97,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5352,    -1,  5354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5369,  5370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5382,    -1,    -1,
      -1,    -1,    -1,   157,   158,    -1,    -1,    -1,    -1,   163,
      -1,    -1,   166,    -1,    -1,  5400,    -1,    -1,   812,    -1,
      -1,    -1,   176,    -1,    -1,  5410,  5411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4552,  5423,  5424,
      -1,    -1,    -1,    -1,   198,    -1,   200,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,  5441,   211,  4573,    -1,
    4575,    -1,     7,  5448,    -1,    -1,  5451,    12,    -1,    14,
      -1,  5456,    17,    -1,    -1,    -1,    -1,    -1,  5463,    -1,
      -1,    26,    27,    28,    -1,  5470,    -1,  5472,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5488,    -1,  5490,    -1,  5492,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    71,    -1,   282,  5514,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,  5532,  5533,    -1,
      -1,    96,    -1,    -1,  5539,    -1,    -1,    -1,    -1,    -1,
      -1,   315,  5547,    -1,  5549,  5550,   111,    -1,    -1,  5554,
      -1,    -1,    -1,  4688,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,  4721,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,   407,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   418,   419,    -1,   421,   422,   423,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4798,    -1,    -1,  4801,    -1,   233,   443,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,  4814,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,   497,    -1,    -1,  4861,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   542,    -1,
      -1,    -1,   546,    -1,   339,    -1,    -1,    -1,   343,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   562,    -1,
      -1,   565,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   585,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,   387,    -1,    -1,    -1,    -1,    -1,    -1,   394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   623,
    4985,    -1,    -1,    -1,    -1,    -1,   630,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5064,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5097,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,   753,
     754,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,
      -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     784,    -1,    -1,   787,   788,   789,   790,    -1,   792,    -1,
      -1,    -1,    -1,  5158,   589,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   636,  5207,    -1,   639,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5259,    -1,  5261,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5271,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,
     725,   726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5352,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,  5448,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,  5463,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,  5539,   125,   126,   127,    -1,   129,
      -1,    -1,  5547,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,    -1,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      46,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,   583,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,    -1,   786,   787,   788,   789,   790,   791,   792,    -1,
      -1,    -1,    -1,    -1,    -1,   799,   800,   801,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,    -1,   786,   787,   788,   789,   790,   791,
     792,    -1,    -1,    -1,    -1,    -1,    -1,   799,   800,   801,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,    -1,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,    -1,   786,   787,   788,   789,   790,   791,   792,    -1,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,    -1,   786,   787,   788,   789,   790,   791,
     792,    -1,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,    -1,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,    -1,   786,   787,   788,   789,   790,   791,   792,    -1,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,    -1,   786,   787,   788,   789,   790,   791,
     792,    -1,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,    -1,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,   699,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,    -1,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   807,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   816,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   807,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   816,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   807,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
     816,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,    -1,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,   812,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   811,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   811,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   811,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     811,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,    -1,   786,   787,   788,   789,   790,   791,
     792,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,    -1,   786,   787,   788,   789,   790,   791,   792,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   808,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,    -1,
     786,   787,   788,   789,   790,   791,   792,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     807,   808,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,    -1,   786,   787,
     788,   789,   790,   791,   792,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     808,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   808,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,   619,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,    -1,   786,   787,   788,   789,
     790,   791,   792,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   807,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,    -1,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   807,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   807,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     807,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   807,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
     801,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,   801,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,   801,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,   801,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,   801,     8,     9,    10,    11,    12,    13,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
     505,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,   608,   609,   610,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,   608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,
     609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,    -1,
      -1,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,   522,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,   593,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    18,    19,    20,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,   386,    -1,    -1,   389,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,   647,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,   501,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,   593,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,   371,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,    -1,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,    -1,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
      -1,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,    -1,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,    -1,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,    -1,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,    -1,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,    -1,   421,   422,   423,    -1,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,    -1,   449,    -1,   451,   452,   453,    -1,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,   786,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
      -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,   786,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,   786,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,   786,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,   786,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,   151,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,    -1,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,   633,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,    -1,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,   633,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,    -1,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,    -1,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,    -1,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,    -1,   787,   788,   789,   790,   791,   792,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,    -1,    -1,
     787,   788,   789,   790,   791,   792,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,    -1,    -1,   787,   788,
     789,   790,   791,   792,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,    -1,    -1,   787,   788,   789,   790,
     791,   792,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,    -1,    -1,   787,   788,   789,   790,   791,   792,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
      -1,    -1,   787,   788,   789,   790,   791,   792,     7,    -1,
      -1,    34,    35,    12,    -1,    14,    -1,    40,    17,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    26,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    96,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   159,    -1,   137,   138,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
     169,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,   235,   260,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,   288,   289,    -1,   291,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   321,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,   356,    -1,    -1,    -1,    34,    35,    -1,
     339,    -1,    -1,    40,   343,    42,    -1,    44,    45,    -1,
      -1,   374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,   408,   409,    -1,   387,    -1,
      -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,   512,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,
     539,   540,   541,   232,    -1,    -1,    -1,   546,    -1,   572,
     247,    -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,
      -1,    -1,    -1,   260,   563,    -1,    -1,   566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     589,   288,   289,    -1,   291,    -1,    -1,    -1,   621,   622,
      -1,    -1,    -1,   602,    -1,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   649,   316,   317,    -1,
     327,   328,   329,    -1,    -1,    -1,    -1,   636,    -1,    -1,
     639,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,   409,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   724,   725,   726,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,
     749,    -1,    -1,    -1,    -1,   444,   445,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,   496,
      -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,    -1,
      -1,   578,   579,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   621,   622,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   710,   711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   731,    -1,   733,   734,   735,   736,   737,    -1,
      -1,   740,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   750,    -1,    -1,    -1,    -1,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   807,   819,   820,   823,   824,   825,
     826,   827,   829,   834,   837,   890,   891,   892,   893,   895,
     898,   921,   943,   950,   951,  1190,  1191,  1193,  1195,  1197,
    1200,  1202,  1203,  1204,  1205,  1206,  1208,  1209,  1244,  1245,
    1253,  1254,  1257,  1270,  1272,  1276,  1279,  1280,  1284,  1286,
    1291,  1295,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  1312,
    1313,  1439,  1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,
    1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1496,
    1497,  1518,  1519,  1523,  1527,  1533,  1534,  1535,  1536,  1537,
    1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,
    1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,
    1589,  1590,  1592,  1596,  1605,  1615,  1619,  1621,  1622,  1692,
    1694,  1696,  1718,  1725,  1727,  1728,  1729,  1731,  1735,  1737,
    1763,  1769,  1770,  1771,  1772,  1808,  1815,  1816,  1818,  1819,
      12,   108,   127,   200,   243,   286,   419,   498,   563,   565,
     599,   611,   707,  1782,  1783,  1784,  1787,   282,   370,  1285,
    1764,   571,  1667,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   295,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   315,   316,   317,   319,   320,   321,   322,
     324,   325,   330,   331,   332,   333,   334,   335,   338,   339,
     341,   343,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   356,   357,   360,   361,   362,   363,   364,   368,   369,
     373,   375,   376,   378,   379,   380,   383,   393,   394,   395,
     397,   399,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   412,   414,   415,   416,   418,   420,   421,   422,
     423,   424,   426,   427,   428,   431,   435,   436,   438,   439,
     442,   443,   444,   445,   446,   448,   449,   451,   452,   453,
     456,   457,   458,   459,   460,   461,   462,   463,   465,   467,
     468,   470,   471,   472,   474,   477,   478,   479,   480,   482,
     484,   485,   486,   487,   488,   490,   491,   495,   496,   497,
     498,   502,   506,   508,   509,   510,   511,   513,   514,   515,
     516,   517,   523,   524,   525,   527,   530,   533,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   549,   550,   551,
     552,   553,   554,   557,   558,   559,   560,   562,   563,   566,
     567,   568,   569,   572,   573,   575,   576,   577,   578,   584,
     585,   589,   590,   591,   594,   595,   597,   598,   600,   601,
     604,   607,   609,   611,   612,   618,   620,   623,   627,   629,
     630,   631,   632,   639,   640,   641,   643,   644,   645,   646,
     649,   652,   653,   654,   655,   656,   658,   667,   668,   669,
     671,   672,   673,   675,   678,   680,   687,   688,   691,   693,
     695,   696,   700,   701,   702,   703,   704,   705,   706,   707,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   745,   746,   747,   748,   749,   750,
     751,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   786,   787,   788,   789,   790,   791,   792,
     915,  1664,  1673,  1683,  1684,  1685,  1687,  1688,  1691,   315,
     456,   836,   562,   565,  1721,  1721,   640,  1765,   108,   199,
     286,   389,   498,   518,   563,   568,   599,   603,   611,   653,
     707,   785,   786,  1166,  1167,  1492,  1779,  1783,  1784,  1785,
    1786,  1787,     8,    23,    29,    35,    37,    38,    39,    41,
      54,    55,    61,    62,    69,    72,    96,    97,   102,   104,
     107,   108,   113,   114,   115,   120,   122,   125,   171,   178,
     179,   188,   195,   205,   207,   213,   219,   226,   230,   241,
     245,   271,   279,   290,   318,   323,   334,   338,   340,   344,
     345,   346,   347,   348,   355,   365,   366,   367,   371,   372,
     396,   408,   409,   411,   426,   454,   455,   474,   476,   483,
     484,   490,   543,   544,   551,   555,   556,   561,   571,   575,
     576,   577,   578,   587,   588,   589,   593,   596,   611,   615,
     616,   617,   619,   624,   626,   631,   632,   649,   664,   665,
     670,   676,   677,   679,   682,   683,   684,   685,   686,   690,
     692,   694,   745,   799,   800,   801,   805,   807,   811,   815,
     816,  1139,  1305,  1323,  1324,  1327,  1328,  1329,  1331,  1335,
    1338,  1340,  1341,  1343,  1344,  1345,  1352,  1353,  1354,  1377,
    1378,  1643,  1645,  1648,  1649,  1650,  1651,  1652,  1653,  1656,
    1659,  1661,  1664,  1673,  1774,  1776,   108,   167,   200,   235,
     286,   419,   498,   518,   563,   586,   599,   611,   627,   653,
     707,   786,  1492,  1673,  1285,   103,   535,   952,    13,    14,
      99,   130,   144,   167,   170,   183,   210,   235,   241,   274,
     285,   420,   424,   440,   448,   456,   492,   505,   506,   557,
     586,   608,   610,  1664,  1667,  1674,  1678,  1685,  1688,  1689,
    1691,  1741,  1742,  1662,  1673,   835,   565,   128,   220,   293,
    1498,   406,   658,    87,   427,  1620,   111,   235,   646,  1623,
     243,   562,  1719,  1721,  1285,  1673,  1616,   486,   611,  1721,
    1285,   128,   293,  1499,  1522,   652,  1606,   521,   940,   944,
     945,  1673,    13,   424,  1741,  1765,  1673,    13,   140,   220,
     526,   527,   529,   530,   531,   548,  1314,  1315,  1316,  1777,
      61,    62,   125,   209,   282,   351,   403,   497,   584,   652,
     653,   671,   707,   811,  1141,  1664,  1676,  1684,  1685,  1687,
    1688,  1690,  1693,  1703,  1708,  1709,    35,    36,    61,    72,
      97,    99,   109,   158,   163,   166,   176,   198,   200,   209,
     211,   282,   315,   380,   407,   418,   419,   422,   423,   443,
     497,   510,   546,   565,   630,   753,   754,   784,   787,   788,
     789,   790,   792,  1141,  1252,  1579,  1580,  1582,  1583,  1584,
    1704,   944,   204,   510,   584,  1252,   204,  1252,  1662,  1673,
     565,  1528,   406,   658,   243,  1721,  1726,  1673,   483,  1508,
    1512,   659,  1440,  1441,  1673,    32,    79,   154,   414,   436,
     477,   538,  1811,  1331,  1673,  1664,   400,  1057,   807,  1775,
    1776,   243,   282,  1327,  1302,  1303,  1305,  1439,     0,   156,
     821,   414,   104,   274,   611,  1217,  1667,  1673,  1677,  1679,
    1680,  1753,  1755,   126,   403,   611,  1246,  1247,  1248,  1249,
    1250,  1251,   194,   246,   285,  1317,  1318,  1470,   387,   602,
    1452,  1453,   276,   602,  1453,  1458,  1470,  1304,  1305,   130,
     608,    17,   195,  1593,  1594,  1662,   160,  1221,  1673,   160,
     915,   137,   152,   448,   479,  1730,   212,   915,  1677,  1673,
    1662,   563,   230,  1491,   212,   167,  1199,  1782,  1721,  1765,
    1292,  1293,  1662,   807,   922,   813,   185,   517,   582,  1489,
    1662,  1489,    19,  1766,   230,  1088,   235,   212,   455,  1677,
     235,   716,  1673,   563,   263,   785,  1088,  1088,   212,   263,
     603,  1088,   235,   565,  1778,  1778,  1782,  1787,   807,   807,
     807,  1338,   807,   807,   807,  1327,  1390,   807,   807,   807,
     807,   807,   807,   807,   807,  1326,  1326,   807,  1126,   807,
     807,   807,   571,   807,   807,   807,  1775,   807,   807,   807,
     807,   807,   807,   807,   807,   807,  1327,   807,   807,   807,
    1388,  1389,  1659,  1673,   807,   807,   807,   807,   807,   807,
     807,   807,   807,  1327,  1126,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,  1126,   571,   807,   807,   807,   571,   807,   807,   807,
      37,   219,   571,   807,  1326,  1126,  1126,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,  1338,  1338,
    1338,   619,  1303,  1305,  1327,   811,  1379,  1677,  1673,   812,
      18,    19,    21,   386,   389,   571,   647,  1325,  1332,  1333,
    1672,  1673,   160,   161,   201,   214,   254,   267,   294,   358,
    1336,    33,   141,   249,   275,   344,   365,   366,   441,   503,
     504,   516,   721,   797,   798,   799,   800,   801,   802,   803,
     804,  1334,  1338,    71,   388,   571,  1668,   259,   651,   807,
     813,  1491,  1491,  1491,  1673,   212,  1491,  1491,   716,  1673,
    1491,   563,  1491,  1491,  1491,   212,  1491,  1721,   830,  1597,
     135,   418,  1740,   480,   480,   563,   568,   611,   627,   653,
     653,   384,   807,  1756,   562,   377,  1756,    67,   510,  1756,
     109,   627,  1756,   811,  1756,   377,   582,   812,   380,    68,
     432,   813,  1677,   197,   231,  1240,  1673,  1667,  1817,  1327,
     246,    85,   293,  1625,   194,   194,  1720,  1721,   197,   315,
     783,  1579,  1617,  1673,  1288,  1680,  1287,  1721,   246,  1500,
    1491,  1608,   315,   510,   753,   783,  1607,  1609,   620,   941,
     500,   946,  1740,   377,   197,   377,   582,  1766,  1323,  1316,
     500,   653,   813,    35,   125,   160,   501,  1142,  1509,  1677,
     194,   582,  1509,   255,   432,  1710,  1711,  1713,  1715,    13,
     125,   364,  1678,  1681,  1749,   212,   811,  1677,    35,   125,
    1144,  1145,  1677,   813,   125,   584,  1699,  1707,  1709,   812,
    1700,  1509,   166,   275,   634,  1437,  1588,   807,   108,   167,
     200,   419,   565,   586,   611,   627,  1588,    13,  1578,  1677,
    1457,  1458,   197,   249,  1581,  1585,   198,    70,   542,   194,
     542,   562,    70,   542,    13,    43,    94,    98,   253,   331,
     395,   517,   559,  1529,  1530,  1531,   166,   222,   542,  1457,
    1588,  1588,  1588,  1588,  1588,   211,  1588,   542,   287,   157,
     421,   585,   234,   235,   261,  1165,    73,   562,   542,   623,
     946,   432,   636,  1258,  1259,  1260,   446,   533,  1265,  1266,
    1267,  1265,  1662,  1673,  1817,   807,   812,  1440,   812,   807,
    1442,    37,   219,  1644,  1668,  1810,  1810,  1810,    96,  1809,
    1810,  1810,   156,   813,   807,    48,   156,  1305,   156,   197,
     111,   156,   808,   808,  1317,   808,   810,  1673,  1326,   807,
     138,   228,   811,   125,   138,   228,  1751,   464,   812,  1758,
     160,   160,   160,   812,   502,   608,  1319,   146,   391,   811,
    1468,  1469,  1471,  1677,   249,  1318,  1470,  1317,    48,    13,
     140,  1773,  1457,   290,   372,   593,  1459,  1460,  1645,  1673,
    1773,  1457,  1452,  1453,  1458,   231,   293,   428,  1525,  1526,
    1522,   195,  1593,   160,   194,  1301,  1496,  1497,  1518,  1523,
    1591,  1595,  1644,  1673,   332,   569,   595,  1192,  1680,  1196,
    1673,  1673,   746,  1677,  1673,  1194,   383,     7,    26,    84,
     144,   237,   322,   369,   450,   629,   748,   791,  1023,  1024,
    1037,  1038,  1039,  1040,  1046,  1048,  1049,  1050,  1051,  1580,
       7,    12,    14,    17,    27,    28,    58,    63,    64,    69,
      77,    83,    84,    87,    96,   111,   125,   129,   137,   138,
     144,   152,   158,   169,   192,   233,   235,   242,   262,   285,
     321,   339,   343,   381,   387,   394,   403,   435,   450,   451,
     452,   482,   538,   539,   540,   541,   546,   563,   566,   589,
     602,   636,   639,   724,   725,   726,   748,   749,   791,  1039,
    1089,  1092,  1094,  1095,  1148,  1222,  1223,  1225,  1226,  1228,
    1230,  1231,  1232,  1233,  1235,  1237,  1673,   171,  1673,   915,
     532,  1788,  1789,  1198,  1489,   249,   812,   235,   263,   400,
    1163,  1298,  1299,  1327,  1386,  1387,  1673,   839,   838,   176,
     428,   812,  1271,    59,   176,   180,   194,   330,   428,  1281,
    1282,  1283,    57,   368,   368,   447,  1767,  1334,  1673,  1673,
    1673,   518,   193,  1673,   708,     7,  1017,  1673,   263,  1680,
    1752,  1754,  1749,  1673,   263,  1673,  1673,  1088,    11,   167,
     200,   419,   586,   902,  1781,  1789,  1795,  1797,  1798,  1803,
     200,   902,  1780,  1789,  1795,  1798,  1803,  1778,  1327,  1327,
      13,   140,  1384,  1435,  1384,  1384,  1384,   633,  1392,  1327,
    1327,  1387,  1387,  1327,  1327,   140,  1384,  1435,   808,   372,
     808,   808,  1327,  1327,  1327,  1327,  1659,   116,   117,   118,
     119,   120,   223,   224,   225,   226,   334,   336,   337,   338,
     345,   426,   489,   490,   631,   648,   649,  1430,  1431,  1327,
    1386,   112,   115,   575,   578,  1432,   140,  1380,  1327,  1327,
    1327,  1327,  1430,  1327,  1387,  1389,    10,   812,   813,   140,
    1384,  1327,  1327,   140,  1384,  1327,  1327,  1387,  1387,  1387,
    1327,  1387,  1331,  1327,  1327,  1327,  1327,  1327,  1327,   808,
    1327,  1384,  1384,  1327,  1327,   140,  1384,  1327,  1431,  1431,
    1327,    46,   268,   583,  1327,  1327,   808,  1660,  1661,  1673,
    1384,  1384,  1327,  1327,  1327,  1384,  1384,  1387,   808,   808,
    1327,  1327,  1327,  1327,  1327,   811,  1356,  1357,  1645,  1652,
    1673,   808,   808,   808,  1338,  1317,   808,   812,   209,   282,
     497,  1705,   501,  1327,  1324,  1672,  1673,  1327,  1327,  1327,
     179,   371,   588,   604,  1334,    13,    20,  1329,  1337,  1331,
    1331,   807,  1775,  1338,  1331,  1331,  1331,  1331,   275,   666,
    1330,  1331,  1331,   245,  1331,   245,  1331,  1331,  1331,  1331,
    1331,    33,   249,   275,   441,  1677,  1338,  1668,  1668,  1327,
    1349,  1350,  1351,   801,  1673,  1673,   915,  1673,   377,  1673,
     915,  1677,   708,  1046,  1048,  1493,  1494,  1495,   915,  1673,
    1680,  1748,  1489,  1749,  1673,  1673,  1491,   614,   831,    35,
     158,   162,   202,   222,   287,   382,   418,   442,   467,   511,
     542,   783,   784,   787,   788,   789,   790,  1598,  1602,  1603,
    1721,    86,   811,   953,   954,   955,   956,  1673,  1738,   562,
    1673,  1757,  1680,  1677,   200,   419,   565,  1739,  1748,  1742,
      21,  1433,  1434,   186,   362,  1673,  1732,  1673,  1817,  1500,
     515,   812,    50,   282,  1624,    30,    30,  1662,  1722,  1723,
    1489,   811,   828,  1667,    31,   287,   812,   582,  1289,  1290,
    1662,  1489,  1662,  1673,  1612,  1610,  1611,   812,  1668,    56,
      66,    76,    90,    91,    92,   106,   333,   350,   488,   550,
     567,   947,   949,   812,  1736,  1680,  1748,  1739,   486,  1768,
    1767,   197,  1308,  1309,  1470,    13,   364,  1749,  1673,    71,
    1147,  1327,  1680,   732,   571,  1670,   273,   379,   642,   812,
    1714,   812,  1712,   657,  1695,   811,   812,  1673,   209,   282,
     497,   652,   671,  1706,  1509,  1673,  1710,  1700,  1509,  1701,
    1702,  1703,  1708,    13,    35,   125,   192,   377,   483,   708,
    1327,  1717,   249,  1586,  1668,  1327,   801,  1088,   915,   915,
     915,  1662,   915,  1680,  1662,   287,   349,   542,  1588,  1673,
     915,  1588,  1680,  1581,   915,  1588,   252,   560,   181,   194,
    1532,   812,  1586,  1581,   194,   194,   889,  1581,  1585,  1585,
    1581,  1588,  1588,   379,   642,    88,   812,  1255,   812,   889,
     125,  1327,  1513,  1514,  1515,  1512,  1441,  1443,  1673,    21,
     812,   378,  1813,   558,  1814,   645,   258,   470,  1812,  1673,
    1327,   277,   280,   429,  1058,  1059,  1680,   136,   808,   156,
     822,   808,   728,    48,  1677,   653,   728,    48,   636,    65,
     256,   364,   534,   552,   643,  1745,  1746,  1680,  1753,   636,
    1214,  1665,  1667,  1665,  1665,  1248,   666,   667,   669,  1320,
    1321,  1322,   571,  1669,  1669,  1677,   812,   502,  1327,  1454,
    1657,  1305,  1306,   376,   812,  1305,  1306,  1457,  1457,   197,
    1490,  1663,  1673,  1525,  1240,  1677,    87,   432,  1083,  1084,
    1087,  1094,  1095,  1096,  1148,   916,  1673,  1673,   194,   368,
     315,   708,     7,   916,   807,   110,  1034,  1509,  1510,  1510,
    1034,  1510,  1510,   582,  1510,  1510,   812,  1091,   158,    74,
      89,   199,   400,   518,  1104,  1106,  1163,  1239,  1510,    64,
      89,   235,  1239,   400,  1510,  1510,  1239,  1510,   400,   400,
    1510,  1510,  1510,  1510,   582,   136,  1510,   261,   400,   563,
      64,    89,   193,   400,   417,  1163,  1239,   261,  1510,   400,
     400,   563,   136,  1510,  1510,  1510,  1510,  1510,  1239,   400,
      48,  1510,  1510,   400,    21,    74,   160,   582,  1163,  1243,
     400,   400,  1510,   584,  1510,  1510,  1510,   139,   331,  1510,
    1510,   400,  1510,   618,   618,  1510,  1510,  1510,  1510,  1092,
      71,  1141,   449,  1057,  1224,   812,   812,   500,   709,  1823,
    1201,   491,   627,  1789,   144,   608,  1278,   125,  1294,  1673,
    1293,  1662,   807,   807,  1299,   808,   812,   457,   458,   459,
     460,   461,   462,   463,   840,   841,   232,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   316,   317,   444,
     445,   710,   711,   731,   733,   734,   735,   736,   737,   740,
     750,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   853,
     854,   855,   856,   857,   858,   859,   860,   861,   862,   863,
     864,   865,   866,   867,   868,   869,   870,   871,   872,   873,
     874,   875,   876,   877,   878,   879,   886,   887,   888,  1662,
     609,  1282,    57,   447,   171,   894,   377,     7,   716,   111,
     377,  1088,  1034,   613,  1018,     7,   228,   125,   812,   897,
     591,   807,   591,   614,  1179,  1180,  1662,   200,  1088,   915,
    1673,   915,   915,  1789,   812,   808,  1384,   808,  1327,   808,
     808,   808,  1327,   150,   633,  1391,    21,    25,   808,   614,
     808,   808,   808,   614,   812,  1387,   808,   801,   808,   812,
     812,   808,   808,   808,   197,   812,   808,   812,  1387,   808,
     812,   812,   812,   800,   812,   808,   808,   807,  1659,  1673,
    1384,   808,   808,   808,  1384,   808,   812,   808,   808,   808,
     808,   812,   808,   249,   808,   812,   812,   808,   812,   812,
     808,   808,   808,   812,   197,   812,  1384,   808,   808,   812,
     812,   812,   808,   197,  1327,   197,  1327,   197,  1327,   197,
     808,   812,   808,   808,   808,   808,   812,    21,   808,   812,
     808,   812,   808,   808,   689,  1362,  1362,   808,   812,  1355,
     808,  1355,   812,  1677,   808,  1362,  1362,  1362,   812,  1387,
     813,   813,   813,  1677,  1327,   817,   179,   371,   588,   604,
    1775,    19,  1327,   165,  1331,   807,  1327,  1327,  1331,   807,
    1775,  1338,  1331,  1325,   808,   812,   807,   813,   813,  1662,
    1493,  1491,  1091,  1025,  1026,  1027,  1046,   812,    52,   469,
    1241,   192,  1829,  1489,   811,   832,   833,   287,   287,   287,
     287,   287,   287,   812,  1489,  1604,   115,   575,   578,   948,
     958,  1378,  1650,  1659,  1677,   812,   160,   377,   808,   812,
     582,   801,  1673,  1682,  1747,   636,  1743,  1673,   160,   186,
     201,   214,   266,   267,   294,   362,   416,  1733,  1734,  1436,
    1437,  1662,  1667,  1667,  1296,  1297,  1662,   236,  1434,   812,
    1677,   122,   188,   219,   290,   372,   593,  1465,  1466,  1467,
      31,   582,  1618,  1680,  1680,   812,   582,   176,   428,   612,
    1273,  1274,  1275,   400,  1401,  1402,   582,  1614,    13,  1613,
    1613,  1609,   812,   160,   210,   377,   197,  1747,  1673,   145,
     699,   719,   793,   807,   816,  1310,  1311,  1393,  1395,  1403,
    1404,  1405,  1406,  1407,  1408,  1409,  1662,  1775,  1436,  1308,
     582,   582,   582,    35,  1146,  1677,   582,  1509,   455,  1207,
    1207,   432,   453,   495,  1716,  1713,  1711,  1749,  1677,  1681,
     194,   813,   813,   813,   813,   813,  1709,  1327,  1717,   812,
    1707,  1667,   197,  1587,   808,  1673,   614,  1588,   427,  1457,
    1531,  1587,  1588,  1680,    60,  1588,  1662,  1662,  1588,   513,
    1260,   607,  1268,  1267,   808,   812,   808,   812,  1775,  1644,
     404,   194,   813,   808,    73,   807,    73,   807,   401,  1061,
     216,   263,   814,  1510,   403,   571,   732,    13,   364,  1749,
     403,   571,   732,  1670,  1677,   571,   571,   571,    19,  1744,
     319,   320,   324,   325,  1215,  1216,     5,   403,   738,   739,
    1211,  1212,  1213,  1490,   668,  1321,  1141,  1143,  1469,   341,
      22,   131,  1455,  1456,   812,  1460,  1460,  1490,  1662,  1673,
     197,   812,   813,  1524,  1311,   219,   290,   372,   593,  1463,
    1466,   379,  1084,    84,    77,    93,   265,   342,   368,   430,
     532,   918,   920,    60,   477,   263,   263,   597,  1036,   108,
     221,   393,   403,   410,   514,   611,   900,   901,  1667,  1022,
    1023,  1052,  1465,  1664,  1667,  1022,  1052,  1052,  1673,  1667,
    1830,  1463,  1024,  1510,  1187,  1673,  1163,  1164,  1285,  1164,
      64,   193,   417,  1105,  1162,  1167,  1178,  1187,  1673,   807,
    1673,   125,  1236,  1673,  1673,  1673,  1673,  1673,  1285,   122,
     188,   290,   372,   593,  1464,   122,   188,   219,   290,   372,
     593,  1462,  1673,  1462,    13,  1229,  1429,  1673,  1285,  1667,
    1667,  1667,  1667,  1141,  1510,  1462,  1229,  1673,  1673,   263,
    1429,   263,  1673,  1673,  1677,  1673,  1229,  1510,   186,   266,
     368,  1098,  1462,   125,  1238,  1673,  1464,  1464,  1673,  1285,
    1450,  1451,  1660,   125,  1093,  1462,  1667,  1285,  1673,  1673,
    1662,  1285,  1285,    80,    82,   125,   148,   187,   439,  1097,
    1093,  1093,   125,  1462,  1673,  1462,  1229,   807,   371,  1677,
    1830,  1830,  1463,  1510,  1510,   402,     7,   144,  1089,  1232,
    1233,  1226,  1230,  1233,   717,   718,  1035,  1510,   706,  1827,
     377,   910,  1218,   127,   248,  1662,   672,   672,  1229,   417,
    1425,  1426,  1427,  1673,   249,  1327,   160,   160,   160,   160,
     160,   160,   160,   812,   889,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   812,   889,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,  1085,  1086,  1087,  1662,  1036,   708,   641,
    1662,  1465,   286,    77,   177,   184,   363,  1019,  1020,  1021,
    1037,  1038,  1040,  1041,  1044,  1045,  1046,  1047,  1048,  1049,
    1050,  1051,  1034,    48,   636,   653,  1752,  1758,  1510,   596,
     899,  1378,  1643,    47,   216,   485,  1182,  1182,   377,    21,
     231,   275,   455,   807,  1053,  1054,  1055,  1056,  1057,  1090,
    1092,  1303,  1305,  1505,  1627,  1673,   915,   807,   472,  1804,
       9,    31,  1015,   245,  1327,   808,  1361,  1362,  1361,  1361,
    1361,   574,  1327,  1327,   154,    35,    62,   112,   115,   123,
     142,   189,   260,   353,   356,   434,   508,   578,   606,   649,
    1115,  1119,  1385,   282,   578,  1142,  1142,  1385,   808,  1361,
     808,   245,   245,  1327,  1327,  1327,   387,  1382,  1327,  1327,
    1327,  1327,  1327,  1331,   808,  1361,   808,  1361,  1327,  1327,
    1327,  1327,  1327,  1327,  1387,  1361,  1361,   245,  1327,  1327,
    1327,   808,  1361,  1327,  1327,  1327,  1327,   197,  1327,   197,
    1327,   197,  1327,  1327,  1361,  1361,  1327,    35,    62,  1462,
    1384,  1361,   807,  1363,  1364,  1365,  1673,   231,   693,  1359,
    1356,   808,  1359,   808,  1338,  1362,  1643,   808,   813,  1188,
    1329,   808,   812,  1338,  1338,  1430,  1430,    19,  1327,   165,
    1351,  1386,   801,  1673,  1673,  1234,  1235,  1237,  1465,  1495,
    1091,  1680,  1241,  1677,   812,   889,  1603,  1599,   956,   959,
     960,   955,   373,   484,   957,  1739,  1673,  1748,   813,   813,
     582,   654,  1436,   807,  1457,  1401,   812,  1298,  1299,  1669,
     293,   432,   642,  1724,  1723,  1327,  1667,   582,  1290,  1662,
    1275,   807,   500,   619,   620,   807,  1501,  1502,  1504,  1505,
    1506,  1465,   889,   889,   949,   948,   384,  1739,  1748,   197,
     807,  1775,   807,  1311,  1395,  1404,  1405,  1406,  1407,   730,
     812,   100,   238,   258,   271,   354,   476,   548,  1396,  1397,
    1398,  1401,  1434,   212,  1447,  1436,  1749,  1749,  1749,   732,
    1670,  1670,   727,  1750,  1750,    78,   594,   432,  1463,  1697,
    1698,  1509,  1702,  1464,  1457,   163,   630,  1748,   372,  1457,
     614,  1665,  1581,  1581,   197,   523,   524,   525,   888,  1269,
     611,  1261,  1515,  1673,   812,   335,   156,   807,  1331,   807,
    1331,  1463,   554,  1062,   807,    12,  1060,  1462,  1669,  1207,
     403,   455,   403,  1750,    21,    48,  1745,  1462,  1462,  1462,
    1462,  1216,   285,   605,   174,   464,   703,   704,   696,  1463,
    1463,    77,   747,  1210,  1213,  1142,    73,  1628,  1657,   614,
    1434,   813,  1311,  1663,   801,  1673,   500,  1510,  1510,  1667,
     532,   532,   532,   532,   532,   491,  1673,   377,  1462,  1667,
    1031,  1032,  1033,  1037,  1046,  1048,  1667,  1667,  1667,  1667,
    1462,  1667,  1667,   808,   812,  1677,  1187,   401,   807,  1187,
     807,   263,   263,   366,  1107,  1108,  1109,  1178,  1164,   807,
     614,   591,  1100,  1101,  1102,  1104,  1673,    34,    35,    40,
      42,    44,    45,    62,   112,   115,   123,   159,   187,   189,
     205,   206,   247,   260,   279,   288,   289,   291,   327,   328,
     329,   346,   347,   348,   353,   356,   374,   375,   408,   409,
     496,   500,   512,   572,   575,   578,   579,   580,   581,   621,
     622,   649,  1110,  1113,  1114,  1115,  1116,  1117,  1118,  1119,
    1121,  1109,  1109,   655,   656,  1181,   144,   500,  1229,  1673,
    1281,   812,  1463,   125,  1142,  1667,   563,  1673,  1241,   636,
     563,  1667,  1110,  1229,   812,  1455,  1229,   582,   582,  1429,
    1229,  1604,  1146,  1142,  1025,   372,  1824,  1825,  1510,   137,
     152,  1828,    81,   487,   450,  1219,  1442,   377,   377,   808,
     808,   812,  1294,   807,   842,   842,   807,   847,   847,   807,
     850,   850,   807,   845,   841,   807,  1665,  1462,  1665,   371,
     882,  1679,  1462,   377,   741,   742,   883,  1463,   282,   571,
     742,   884,   879,  1462,  1665,  1665,  1665,  1665,  1462,  1462,
    1462,  1462,  1462,  1665,  1665,  1665,  1665,  1665,  1665,  1462,
    1665,   371,   885,  1665,  1665,  1665,  1462,  1651,  1667,  1462,
    1665,  1464,  1087,   807,   438,   598,  1028,  1029,  1030,  1037,
    1042,  1043,  1044,  1045,  1046,  1048,  1465,  1677,   807,   896,
     212,  1510,  1510,  1510,  1510,  1091,  1025,   732,  1670,  1677,
    1749,  1214,   611,   708,  1822,   808,  1662,  1505,  1662,   275,
    1100,  1055,  1054,  1091,  1317,  1056,   472,   903,  1799,   123,
     247,   434,   549,  1099,   807,   130,   241,   608,  1016,  1327,
     808,  1361,  1327,   574,   807,  1130,  1131,  1131,   807,  1125,
     807,  1123,  1124,  1130,   413,  1120,  1122,  1130,    62,   247,
    1125,   247,  1131,   720,  1339,    21,   751,   808,   808,   808,
    1361,  1361,  1327,  1327,   808,   808,   812,   808,    48,   494,
    1381,   812,   812,   808,   812,   808,   249,  1346,  1347,  1361,
    1361,   808,   808,   808,   808,   812,   808,   808,  1327,   808,
     194,   808,   808,   812,  1361,   808,   812,   812,   808,  1327,
     808,  1327,   808,  1327,   808,   808,   808,   807,  1153,  1153,
     812,   808,  1364,  1366,  1367,   687,   687,  1362,   812,  1358,
    1359,  1362,  1359,   808,   743,  1342,  1673,  1387,   808,  1329,
     808,   812,  1338,   808,  1237,  1235,  1027,   833,   194,   636,
    1600,   160,   812,  1747,   636,  1760,   801,   801,  1673,  1748,
     384,  1457,  1514,   500,  1501,  1502,  1297,  1662,  1299,   231,
    1300,  1626,  1627,   642,   282,  1680,  1428,  1429,  1520,  1521,
    1660,   808,  1503,  1655,  1656,  1660,  1673,   807,  1507,  1511,
     160,   197,  1747,  1748,  1327,  1434,  1327,   812,   808,   808,
     808,   808,   808,  1393,  1394,  1395,  1403,  1393,   258,   258,
     390,  1400,   238,   271,   476,  1399,  1400,  1403,  1393,  1393,
    1434,  1442,    48,   217,  1438,  1447,  1207,  1207,   103,  1091,
    1717,   889,  1748,  1436,  1588,   497,   160,   160,   812,   160,
     403,  1262,  1462,  1064,  1673,   808,  1064,   808,    48,   807,
    1066,  1331,   160,   807,   228,  1750,  1207,  1670,   455,  1750,
     219,  1667,  1671,   732,  1670,   125,   245,   360,   103,   125,
    1463,   245,  1668,  1668,   153,   164,   385,   570,  1629,  1630,
     278,  1631,  1311,  1401,  1673,  1436,   813,  1524,  1520,  1093,
    1667,   111,   111,   127,   248,   368,   162,  1091,   901,   807,
    1463,   400,  1067,  1068,   807,  1327,  1187,   729,   807,   807,
    1184,  1185,  1186,  1673,  1182,  1182,   808,   812,  1110,  1130,
    1130,  1131,    23,    35,    49,   600,   625,  1130,  1141,  1149,
    1150,  1151,  1125,   807,  1151,    62,   621,  1116,  1151,  1151,
      62,   622,   622,   625,   807,  1131,  1125,  1125,  1151,  1130,
    1131,   440,  1103,  1156,    27,    71,    75,    77,   125,   366,
     371,   377,   417,   496,   546,   603,   705,   748,   749,   785,
    1106,  1109,  1133,  1134,  1135,  1147,  1155,  1181,  1334,    35,
    1130,  1152,  1130,  1130,  1131,   807,  1124,  1132,  1123,   125,
     125,  1181,  1110,  1673,  1147,  1147,   565,     9,   186,  1242,
    1451,  1673,  1673,   246,  1273,   808,   799,  1091,   372,   799,
    1826,  1829,   366,   415,    25,   168,   904,   582,   137,   152,
     906,  1790,  1429,  1429,  1426,   808,   843,   844,  1673,   808,
     848,   849,  1673,  1682,   808,   851,   852,  1665,  1666,   807,
     808,   846,   880,   881,  1462,  1185,  1510,  1510,  1091,   896,
     383,  1185,   352,   713,   714,   715,  1673,  1667,  1052,  1052,
    1463,  1021,   403,    21,    48,  1211,  1823,   807,  1662,   808,
    1092,  1099,   377,   923,   924,   925,  1673,   515,  1805,   377,
    1430,  1327,   122,   290,   372,   593,  1151,   372,   372,   808,
    1385,   245,  1654,  1430,  1430,  1327,  1383,  1657,  1644,   808,
    1327,  1327,  1387,    44,   354,   808,   636,  1348,  1327,  1430,
    1327,  1327,  1327,  1327,   808,   808,   808,  1463,   808,   808,
    1462,  1361,   808,   400,  1368,  1327,  1362,  1362,   197,  1360,
    1385,   125,   162,   371,  1414,  1416,  1417,  1418,   808,  1387,
    1601,   432,    56,    66,    76,    90,    91,    92,   106,   333,
     350,   471,   488,   550,   567,   961,   960,   582,   210,   636,
    1759,   808,  1520,    21,  1516,   377,  1517,  1300,   269,   246,
     808,   812,  1509,  1504,  1505,   808,   812,   813,  1513,   812,
     948,  1748,   197,   812,  1442,   808,  1393,   817,   258,  1400,
    1400,   258,   258,   377,   614,   377,   614,   192,   231,   613,
    1420,  1421,  1422,  1423,  1424,  1327,  1448,  1658,  1327,   697,
    1444,  1438,  1750,  1750,   403,  1463,  1327,  1667,  1667,   888,
    1667,   160,   126,  1263,   808,   812,   808,  1059,  1067,   808,
    1463,  1063,  1064,    48,  1750,  1750,  1670,  1750,   403,   455,
    1750,  1463,   125,   722,   125,  1463,    48,    48,   153,    48,
    1630,   536,   570,  1632,  1633,  1436,  1436,  1436,   477,  1033,
    1185,  1673,   808,   812,  1185,   808,   807,  1185,  1327,   808,
     812,   807,  1455,  1101,  1103,    35,    23,   600,  1141,    35,
    1151,  1142,  1189,  1644,  1151,   625,  1189,  1151,   508,   606,
     650,  1127,  1128,  1129,  1662,  1242,  1146,    82,   125,   148,
     187,  1137,  1667,   115,   575,   578,   799,   800,   807,  1139,
    1140,  1646,  1647,  1648,  1649,   608,   125,   125,   139,   331,
    1138,   263,  1465,  1510,  1510,   263,  1105,    71,  1135,   203,
    1111,   263,   371,   723,  1152,  1151,  1152,  1127,   372,  1127,
    1127,   807,  1647,  1242,  1662,  1673,   807,   372,  1825,   372,
     415,  1327,  1327,   377,   910,   915,   377,    77,   911,    21,
     636,  1277,   808,   812,   808,   812,   813,   808,   812,   844,
     808,   812,   808,   812,   808,  1052,  1052,  1030,   807,   808,
    1665,  1665,  1665,  1665,  1671,   732,  1670,  1210,  1827,  1185,
     808,  1053,   515,   487,   808,   812,  1113,  1667,   239,   249,
     392,   926,   927,   928,   929,  1662,   808,   808,   808,   808,
     808,   808,   812,  1339,  1668,   808,   808,   808,   812,  1361,
     808,   812,   808,   341,   265,   427,   808,   808,   808,   808,
     808,   808,  1154,   812,    48,   387,  1369,   186,   266,  1359,
    1646,   808,  1417,  1418,   377,   808,   175,   285,  1748,   384,
     210,    21,  1762,  1436,  1516,  1673,  1517,   147,   565,  1521,
    1515,  1504,  1505,  1655,  1673,   808,  1511,  1748,  1643,  1434,
     808,   258,   258,  1327,   807,  1327,   807,  1163,  1163,  1421,
     638,   812,  1449,  1364,  1445,  1446,  1444,  1667,   160,   405,
    1264,  1673,   216,   263,   808,   808,  1667,  1750,  1750,  1670,
     120,   120,  1644,  1644,    48,  1644,    48,    48,  1633,  1452,
    1452,   377,   808,   619,  1069,  1068,   808,  1183,  1184,   808,
     808,    77,   262,   748,   749,  1174,  1175,  1176,  1177,  1180,
    1181,  1186,   372,  1142,  1152,   808,   812,   808,  1129,   807,
    1157,   636,  1136,  1651,  1651,  1327,  1139,   620,  1830,  1830,
    1146,    15,    21,  1327,  1227,  1228,  1067,  1430,   510,  1667,
     143,  1220,  1505,  1791,   372,   844,   849,  1673,   852,   812,
     807,   881,   636,  1168,  1169,  1170,  1177,   900,  1171,  1172,
    1173,  1177,   228,   403,  1828,   808,  1667,   904,  1800,   925,
    1147,   808,   812,  1673,   194,   372,   808,    21,  1657,  1327,
     341,   173,   808,  1462,  1448,    48,   429,   481,   681,  1370,
    1376,  1362,   377,   162,   698,  1759,   384,  1680,  1457,  1517,
    1442,   263,  1662,    73,  1410,  1428,  1428,   194,  1419,  1419,
    1658,    21,   812,  1667,   160,  1256,   807,  1060,   111,   464,
    1820,  1821,  1750,  1644,  1644,  1644,   276,  1461,  1461,   162,
    1168,   249,   272,    77,   111,   235,   321,   339,   363,   563,
    1080,  1081,  1082,  1580,  1171,   808,   812,  1174,  1455,  1667,
    1510,  1510,  1510,  1176,   808,  1151,  1644,  1151,  1158,  1673,
     318,  1159,   786,   808,   807,   808,   808,   905,   912,   913,
     636,  1792,   673,   844,   844,   397,  1234,  1170,   808,  1234,
    1173,    48,  1174,   909,   910,   472,  1806,   928,  1113,   149,
     808,   112,   808,   808,  1454,    33,   103,   245,   696,  1371,
    1372,  1373,  1645,  1651,  1762,   636,  1761,   608,  1401,   807,
     808,   808,   808,   212,   258,   387,   807,   807,  1365,  1446,
    1667,   889,  1331,   807,   136,   368,   534,  1460,   807,  1071,
    1073,   573,  1510,   136,   136,  1510,  1510,  1510,  1510,   807,
    1077,  1082,   158,  1156,  1184,  1462,  1830,  1830,  1455,   808,
     812,   198,   399,   509,   377,  1160,  1673,  1327,   537,   907,
      54,    68,   182,   230,   257,   270,   380,   473,   914,   965,
     967,   968,   969,   971,   972,   973,   974,   975,   976,   978,
     986,   987,   990,  1001,  1004,  1006,  1007,  1664,  1675,  1686,
    1687,  1688,  1691,    53,    64,   282,   808,   812,  1664,  1465,
    1234,   906,  1113,   917,  1147,   483,  1125,   245,   696,  1372,
    1374,  1645,  1651,   483,  1327,   691,   678,  1375,   691,   691,
     653,  1520,  1143,   700,  1411,  1412,  1673,  1434,    48,    48,
    1425,  1427,   808,  1064,  1510,   534,   807,  1072,  1073,  1074,
     326,  1070,  1073,  1667,  1510,  1510,  1465,  1465,  1463,  1673,
     554,  1078,  1079,  1510,  1673,   130,   608,   808,  1327,   155,
     908,   988,   991,  1673,   197,   362,   979,   966,  1675,  1675,
    1673,   970,   824,   292,   454,   635,  1010,    32,  1008,   814,
      64,   384,    64,   844,   911,  1147,   134,   918,   919,  1334,
    1807,   191,   412,  1793,  1794,   808,  1327,   680,    19,   680,
     680,  1430,   103,   212,   368,   695,    13,   125,   364,  1749,
     481,  1634,   702,   808,   812,   194,  1113,   808,   808,   553,
    1065,   808,  1669,   808,   812,   326,  1075,  1076,  1331,  1667,
    1667,  1677,   808,   812,  1677,    52,   368,   469,   500,  1161,
    1161,   547,   628,  1112,  1327,  1327,   633,   993,   997,   197,
    1673,   981,   982,  1327,   931,   964,   965,   967,   969,   971,
     973,   974,   975,   976,   978,   986,  1001,  1004,  1006,   931,
    1011,  1009,  1002,  1005,   384,   384,   808,   143,  1801,   134,
     964,  1677,  1796,  1430,  1374,   691,   483,   688,  1695,   228,
    1628,  1643,  1412,   701,  1147,  1463,  1065,  1821,  1073,   808,
     812,  1080,  1079,     6,   125,   371,   377,   377,  1133,   989,
     998,   150,   997,  1000,   246,   154,  1327,   154,   964,   810,
     607,  1327,   932,  1010,  1008,   912,   917,   964,   680,    48,
    1631,  1410,   171,  1413,  1076,   608,   130,   633,   992,   994,
    1327,   931,   154,   977,   230,   983,   292,   810,  1013,  1012,
     124,   930,   933,  1003,  1675,  1003,  1802,  1644,   231,  1635,
     702,  1161,  1161,   995,   994,  1000,   999,    54,   980,  1673,
     574,  1327,   143,    95,   172,   936,   962,  1673,   154,   964,
     810,   964,   372,   807,  1637,  1643,  1327,   154,   574,   812,
     931,  1014,   931,   215,   812,  1113,    86,   105,   810,   278,
     481,  1636,   808,   811,  1638,  1639,  1660,   500,  1640,  1414,
    1415,  1417,   996,    54,   931,  1673,   984,   154,   154,   194,
    1673,  1147,   194,   194,  1677,   808,   812,  1641,  1642,  1660,
    1416,  1418,   574,   150,   151,   985,   454,   635,   934,   125,
     963,   939,   940,  1462,   935,  1639,   812,  1509,   377,   931,
     931,   981,   520,   522,   937,   938,   939,   942,  1334,  1673,
    1327,  1301,  1642,  1515,   812,   964,   196,   938
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   818,   819,   819,   819,   819,   819,   819,   820,   821,
     820,   820,   822,   822,   823,   823,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   825,   826,   826,   827,   828,   828,   830,   829,
     831,   831,   832,   832,   833,   835,   834,   836,   836,   838,
     837,   839,   837,   840,   840,   841,   841,   841,   841,   841,
     841,   841,   842,   842,   843,   843,   844,   845,   845,   846,
     846,   847,   847,   848,   848,   849,   850,   850,   851,   851,
     852,   853,   853,   854,   854,   855,   855,   856,   856,   857,
     857,   858,   858,   859,   859,   860,   860,   861,   861,   862,
     862,   863,   863,   864,   864,   865,   865,   866,   866,   867,
     867,   868,   868,   869,   869,   870,   870,   871,   871,   872,
     872,   873,   873,   874,   874,   875,   875,   876,   876,   877,
     877,   878,   878,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   880,   880,   880,   881,
     882,   882,   883,   883,   883,   884,   884,   884,   885,   885,
     886,   886,   887,   887,   888,   888,   888,   888,   889,   889,
     890,   890,   890,   890,   891,   892,   894,   893,   893,   893,
     893,   893,   893,   893,   893,   895,   895,   896,   896,   896,
     896,   896,   897,   897,   898,   898,   898,   899,   899,   900,
     900,   901,   901,   901,   901,   901,   901,   901,   903,   902,
     905,   904,   904,   906,   906,   906,   906,   907,   907,   908,
     908,   909,   909,   910,   910,   911,   911,   913,   912,   914,
     914,   914,   914,   914,   914,   914,   914,   914,   914,   914,
     914,   914,   915,   915,   916,   916,   917,   917,   918,   918,
     918,   918,   918,   918,   918,   919,   919,   919,   920,   920,
     921,   922,   922,   923,   923,   924,   924,   925,   926,   926,
     927,   927,   928,   929,   929,   929,   929,   930,   930,   931,
     931,   932,   932,   933,   933,   934,   933,   935,   933,   936,
     936,   937,   937,   938,   939,   939,   940,   941,   941,   942,
     942,   942,   942,   942,   943,   944,   944,   945,   945,   946,
     946,   947,   947,   948,   948,   948,   949,   949,   949,   949,
     949,   949,   949,   949,   949,   949,   949,   949,   950,   951,
     952,   952,   952,   953,   953,   954,   954,   955,   956,   956,
     957,   957,   958,   959,   959,   960,   961,   961,   961,   961,
     961,   961,   961,   961,   961,   961,   961,   961,   961,   962,
     962,   963,   963,   964,   964,   964,   964,   964,   964,   964,
     964,   964,   964,   964,   964,   964,   966,   965,   968,   967,
     970,   969,   972,   971,   973,   974,   975,   977,   976,   978,
     979,   979,   979,   980,   980,   982,   983,   984,   981,   985,
     985,   985,   986,   986,   988,   989,   987,   991,   990,   992,
     992,   993,   993,   995,   996,   994,   998,   999,   997,  1000,
    1000,  1002,  1001,  1003,  1003,  1005,  1004,  1007,  1006,  1009,
    1008,  1010,  1011,  1012,  1010,  1013,  1014,  1010,  1015,  1015,
    1016,  1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,  1020,
    1020,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,
    1021,  1021,  1021,  1022,  1022,  1023,  1023,  1024,  1024,  1024,
    1024,  1024,  1024,  1024,  1024,  1025,  1025,  1026,  1026,  1027,
    1028,  1028,  1029,  1029,  1030,  1030,  1030,  1030,  1030,  1030,
    1030,  1031,  1031,  1032,  1032,  1033,  1033,  1033,  1034,  1035,
    1035,  1036,  1037,  1038,  1039,  1040,  1041,  1042,  1043,  1044,
    1045,  1046,  1047,  1048,  1048,  1049,  1050,  1051,  1052,  1052,
    1053,  1053,  1054,  1054,  1055,  1055,  1055,  1056,  1056,  1057,
    1058,  1058,  1058,  1058,  1058,  1058,  1059,  1059,  1060,  1060,
    1061,  1061,  1062,  1062,  1062,  1063,  1063,  1064,  1064,  1065,
    1065,  1066,  1066,  1067,  1067,  1068,  1069,  1069,  1069,  1070,
    1070,  1071,  1071,  1072,  1072,  1074,  1073,  1075,  1075,  1076,
    1076,  1077,  1077,  1078,  1078,  1079,  1080,  1080,  1081,  1081,
    1082,  1082,  1082,  1082,  1082,  1082,  1082,  1082,  1083,  1083,
    1084,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1087,  1088,
    1088,  1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1093,  1093,  1094,  1095,  1096,  1097,  1097,
    1097,  1097,  1097,  1097,  1098,  1098,  1098,  1099,  1099,  1099,
    1099,  1100,  1100,  1101,  1101,  1102,  1103,  1103,  1104,  1104,
    1104,  1104,  1104,  1104,  1105,  1106,  1106,  1107,  1107,  1108,
    1108,  1109,  1110,  1110,  1111,  1111,  1112,  1112,  1112,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1114,  1114,  1114,  1114,
    1114,  1114,  1114,  1114,  1115,  1115,  1116,  1116,  1117,  1117,
    1117,  1117,  1117,  1118,  1118,  1118,  1118,  1118,  1119,  1119,
    1120,  1120,  1121,  1121,  1121,  1121,  1122,  1122,  1123,  1123,
    1123,  1124,  1125,  1125,  1126,  1126,  1126,  1127,  1127,  1128,
    1128,  1129,  1129,  1129,  1130,  1130,  1130,  1130,  1131,  1131,
    1132,  1132,  1133,  1133,  1134,  1134,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1136,  1136,  1137,  1137,  1137,  1138,  1138,  1138,  1139,  1140,
    1140,  1141,  1141,  1142,  1142,  1143,  1143,  1144,  1144,  1145,
    1145,  1146,  1146,  1147,  1147,  1148,  1148,  1149,  1149,  1149,
    1150,  1150,  1150,  1151,  1151,  1151,  1151,  1151,  1151,  1151,
    1152,  1152,  1154,  1153,  1155,  1155,  1156,  1157,  1157,  1158,
    1158,  1159,  1159,  1159,  1159,  1160,  1160,  1160,  1160,  1160,
    1161,  1161,  1161,  1161,  1161,  1162,  1162,  1163,  1163,  1164,
    1164,  1165,  1165,  1165,  1166,  1166,  1167,  1167,  1167,  1167,
    1167,  1167,  1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,
    1171,  1171,  1172,  1172,  1173,  1174,  1174,  1175,  1175,  1176,
    1176,  1177,  1177,  1177,  1177,  1177,  1178,  1178,  1178,  1179,
    1179,  1180,  1180,  1181,  1181,  1182,  1182,  1182,  1183,  1183,
    1184,  1184,  1185,  1185,  1186,  1186,  1187,  1187,  1188,  1188,
    1189,  1189,  1190,  1190,  1192,  1191,  1194,  1193,  1196,  1195,
    1198,  1197,  1199,  1197,  1201,  1200,  1202,  1203,  1203,  1203,
    1203,  1204,  1205,  1206,  1206,  1206,  1206,  1206,  1206,  1206,
    1207,  1207,  1208,  1209,  1210,  1210,  1210,  1211,  1211,  1212,
    1212,  1213,  1213,  1213,  1213,  1213,  1213,  1213,  1213,  1213,
    1213,  1213,  1213,  1213,  1213,  1213,  1213,  1214,  1214,  1215,
    1215,  1216,  1216,  1216,  1216,  1217,  1218,  1218,  1218,  1218,
    1219,  1219,  1220,  1220,  1221,  1221,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1225,  1225,  1225,  1226,  1226,  1226,  1226,
    1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,  1226,
    1226,  1226,  1226,  1226,  1226,  1226,  1227,  1227,  1228,  1228,
    1229,  1229,  1230,  1230,  1230,  1230,  1230,  1231,  1231,  1232,
    1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,
    1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,
    1232,  1232,  1232,  1232,  1232,  1232,  1233,  1233,  1233,  1234,
    1234,  1234,  1234,  1234,  1235,  1236,  1236,  1237,  1238,  1238,
    1239,  1239,  1240,  1240,  1241,  1241,  1241,  1242,  1242,  1242,
    1243,  1243,  1243,  1243,  1244,  1244,  1245,  1246,  1246,  1247,
    1247,  1248,  1248,  1248,  1249,  1250,  1251,  1252,  1252,  1253,
    1255,  1256,  1254,  1257,  1258,  1258,  1259,  1259,  1260,  1260,
    1260,  1260,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,
    1269,  1269,  1269,  1270,  1271,  1271,  1271,  1272,  1273,  1273,
    1274,  1274,  1275,  1275,  1275,  1276,  1277,  1277,  1278,  1278,
    1278,  1279,  1280,  1281,  1281,  1282,  1282,  1283,  1283,  1283,
    1283,  1283,  1283,  1284,  1285,  1285,  1285,  1287,  1286,  1286,
    1288,  1288,  1289,  1289,  1290,  1291,  1291,  1292,  1292,  1293,
    1294,  1294,  1295,  1295,  1296,  1296,  1297,  1298,  1299,  1299,
    1300,  1300,  1301,  1301,  1301,  1301,  1302,  1302,  1302,  1302,
    1302,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1304,  1304,
    1304,  1304,  1304,  1305,  1305,  1305,  1306,  1306,  1306,  1307,
    1307,  1308,  1308,  1309,  1310,  1310,  1311,  1311,  1312,  1313,
    1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1318,  1318,
    1318,  1319,  1319,  1320,  1321,  1321,  1322,  1322,  1323,  1323,
    1323,  1324,  1324,  1325,  1325,  1325,  1325,  1325,  1326,  1326,
    1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1328,  1328,  1328,  1328,  1328,  1329,  1329,  1329,  1329,
    1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,
    1329,  1329,  1329,  1330,  1330,  1331,  1331,  1331,  1331,  1331,
    1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,
    1332,  1332,  1333,  1333,  1334,  1334,  1335,  1335,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1337,  1337,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1339,  1339,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,
    1341,  1341,  1341,  1341,  1342,  1342,  1343,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1344,
    1344,  1344,  1344,  1344,  1344,  1344,  1345,  1345,  1346,  1346,
    1347,  1347,  1348,  1348,  1349,  1349,  1350,  1350,  1351,  1352,
    1352,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,
    1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,  1353,
    1353,  1353,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,
    1354,  1354,  1354,  1355,  1355,  1356,  1356,  1357,  1357,  1357,
    1358,  1358,  1359,  1359,  1359,  1360,  1360,  1360,  1361,  1361,
    1362,  1363,  1363,  1364,  1365,  1366,  1367,  1367,  1368,  1368,
    1369,  1369,  1370,  1370,  1371,  1371,  1372,  1372,  1372,  1372,
    1372,  1373,  1374,  1374,  1374,  1374,  1374,  1375,  1375,  1375,
    1375,  1375,  1376,  1376,  1376,  1377,  1378,  1379,  1379,  1379,
    1380,  1380,  1381,  1381,  1382,  1382,  1383,  1383,  1384,  1385,
    1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,
    1385,  1385,  1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,
    1389,  1389,  1390,  1390,  1391,  1391,  1392,  1392,  1393,  1393,
    1393,  1394,  1394,  1395,  1395,  1395,  1395,  1395,  1395,  1396,
    1396,  1396,  1397,  1397,  1397,  1397,  1398,  1398,  1399,  1399,
    1400,  1400,  1401,  1401,  1402,  1403,  1403,  1403,  1403,  1403,
    1403,  1404,  1404,  1405,  1405,  1406,  1407,  1407,  1408,  1408,
    1409,  1409,  1410,  1411,  1411,  1412,  1412,  1412,  1413,  1413,
    1414,  1414,  1414,  1414,  1415,  1415,  1416,  1417,  1418,  1418,
    1418,  1419,  1419,  1419,  1419,  1420,  1420,  1421,  1421,  1422,
    1422,  1423,  1423,  1424,  1425,  1425,  1426,  1426,  1427,  1427,
    1428,  1429,  1429,  1430,  1430,  1430,  1430,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,  1430,  1431,  1431,  1431,  1431,  1431,
    1431,  1431,  1431,  1431,  1432,  1432,  1432,  1432,  1433,  1433,
    1434,  1434,  1435,  1435,  1436,  1436,  1437,  1438,  1438,  1439,
    1439,  1440,  1440,  1441,  1442,  1442,  1443,  1443,  1444,  1444,
    1445,  1445,  1446,  1447,  1447,  1448,  1448,  1449,  1449,  1450,
    1450,  1451,  1452,  1452,  1453,  1454,  1454,  1455,  1455,  1456,
    1456,  1457,  1457,  1458,  1459,  1459,  1459,  1460,  1460,  1460,
    1460,  1460,  1461,  1461,  1462,  1462,  1462,  1462,  1462,  1462,
    1463,  1463,  1463,  1463,  1463,  1464,  1464,  1464,  1464,  1464,
    1465,  1465,  1465,  1465,  1465,  1466,  1467,  1467,  1468,  1468,
    1469,  1469,  1470,  1471,  1471,  1471,  1472,  1473,  1474,  1475,
    1476,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1484,
    1485,  1486,  1486,  1487,  1488,  1489,  1489,  1490,  1490,  1491,
    1491,  1492,  1492,  1493,  1493,  1494,  1494,  1495,  1495,  1496,
    1496,  1496,  1497,  1497,  1497,  1498,  1498,  1498,  1498,  1499,
    1499,  1500,  1500,  1501,  1501,  1501,  1502,  1502,  1502,  1503,
    1503,  1504,  1505,  1505,  1505,  1506,  1506,  1507,  1507,  1508,
    1508,  1509,  1509,  1510,  1510,  1511,  1512,  1513,  1513,  1514,
    1514,  1515,  1515,  1516,  1516,  1517,  1517,  1518,  1519,  1519,
    1520,  1520,  1521,  1522,  1522,  1523,  1523,  1523,  1524,  1524,
    1525,  1525,  1526,  1526,  1526,  1527,  1528,  1528,  1529,  1529,
    1530,  1530,  1531,  1531,  1531,  1531,  1531,  1531,  1531,  1531,
    1531,  1532,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1562,  1562,  1562,  1562,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1568,  1568,  1568,  1568,  1569,
    1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1578,
    1579,  1579,  1580,  1580,  1581,  1581,  1582,  1582,  1583,  1583,
    1584,  1584,  1584,  1584,  1585,  1585,  1586,  1586,  1587,  1587,
    1588,  1588,  1588,  1589,  1590,  1591,  1591,  1591,  1591,  1591,
    1591,  1592,  1592,  1593,  1593,  1594,  1594,  1595,  1595,  1595,
    1597,  1596,  1599,  1598,  1598,  1600,  1600,  1601,  1600,  1602,
    1602,  1603,  1603,  1603,  1603,  1603,  1603,  1603,  1603,  1603,
    1603,  1603,  1603,  1603,  1603,  1603,  1603,  1603,  1603,  1604,
    1604,  1606,  1605,  1605,  1607,  1607,  1608,  1608,  1610,  1609,
    1611,  1609,  1612,  1609,  1609,  1613,  1613,  1614,  1614,  1616,
    1615,  1617,  1617,  1618,  1618,  1619,  1620,  1620,  1620,  1621,
    1622,  1623,  1623,  1624,  1624,  1625,  1625,  1625,  1626,  1626,
    1627,  1627,  1628,  1628,  1629,  1629,  1630,  1630,  1630,  1630,
    1631,  1631,  1632,  1632,  1633,  1633,  1634,  1634,  1635,  1635,
    1636,  1636,  1637,  1637,  1637,  1638,  1638,  1639,  1639,  1640,
    1640,  1641,  1641,  1642,  1643,  1643,  1643,  1643,  1644,  1644,
    1644,  1645,  1646,  1646,  1646,  1647,  1647,  1648,  1649,  1649,
    1649,  1649,  1649,  1649,  1649,  1649,  1649,  1650,  1650,  1651,
    1651,  1651,  1652,  1652,  1652,  1653,  1653,  1653,  1654,  1654,
    1655,  1655,  1656,  1656,  1657,  1658,  1659,  1659,  1660,  1660,
    1661,  1661,  1662,  1662,  1663,  1663,  1664,  1664,  1665,  1666,
    1667,  1668,  1669,  1670,  1671,  1671,  1672,  1673,  1673,  1674,
    1674,  1675,  1675,  1676,  1676,  1677,  1677,  1677,  1678,  1678,
    1678,  1679,  1679,  1680,  1680,  1681,  1681,  1682,  1683,  1683,
    1683,  1683,  1683,  1684,  1684,  1684,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1686,  1686,  1686,  1687,  1687,  1687,  1687,  1687,
    1687,  1687,  1687,  1687,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1688,  1689,  1689,  1689,  1690,  1690,
    1690,  1690,  1691,  1691,  1691,  1691,  1691,  1692,  1693,  1693,
    1693,  1693,  1693,  1693,  1693,  1694,  1694,  1694,  1694,  1694,
    1694,  1694,  1695,  1695,  1696,  1696,  1697,  1697,  1698,  1699,
    1699,  1700,  1700,  1701,  1701,  1702,  1702,  1703,  1703,  1703,
    1703,  1703,  1704,  1704,  1704,  1704,  1705,  1705,  1705,  1705,
    1706,  1706,  1706,  1706,  1706,  1706,  1707,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1709,  1709,  1709,  1710,  1710,  1711,
    1712,  1712,  1713,  1714,  1714,  1715,  1715,  1716,  1716,  1716,
    1716,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1718,
    1719,  1720,  1719,  1719,  1721,  1721,  1722,  1722,  1723,  1724,
    1724,  1724,  1724,  1725,  1726,  1726,  1727,  1728,  1729,  1730,
    1730,  1730,  1730,  1730,  1730,  1730,  1730,  1730,  1731,  1731,
    1731,  1731,  1731,  1732,  1732,  1733,  1733,  1733,  1733,  1734,
    1734,  1734,  1734,  1734,  1735,  1735,  1736,  1735,  1735,  1735,
    1737,  1737,  1738,  1737,  1737,  1739,  1739,  1739,  1739,  1740,
    1740,  1741,  1741,  1742,  1742,  1742,  1742,  1742,  1742,  1742,
    1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,
    1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,  1742,
    1742,  1742,  1742,  1742,  1742,  1742,  1742,  1743,  1743,  1744,
    1744,  1745,  1745,  1746,  1746,  1746,  1747,  1747,  1747,  1747,
    1747,  1748,  1748,  1749,  1749,  1750,  1750,  1751,  1751,  1752,
    1752,  1752,  1752,  1752,  1752,  1752,  1753,  1753,  1753,  1753,
    1753,  1753,  1753,  1753,  1753,  1753,  1754,  1754,  1755,  1755,
    1756,  1756,  1757,  1757,  1758,  1758,  1758,  1758,  1758,  1759,
    1759,  1760,  1760,  1761,  1761,  1761,  1761,  1761,  1762,  1762,
    1764,  1763,  1765,  1765,  1766,  1766,  1766,  1767,  1767,  1767,
    1768,  1768,  1769,  1770,  1770,  1771,  1772,  1773,  1773,  1773,
    1774,  1775,  1776,  1777,  1777,  1777,  1777,  1777,  1777,  1777,
    1777,  1778,  1779,  1779,  1779,  1780,  1780,  1780,  1780,  1780,
    1781,  1781,  1781,  1781,  1781,  1781,  1782,  1782,  1783,  1784,
    1785,  1785,  1785,  1786,  1787,  1787,  1787,  1788,  1788,  1788,
    1790,  1789,  1791,  1792,  1792,  1792,  1792,  1793,  1793,  1794,
    1794,  1796,  1795,  1797,  1797,  1799,  1800,  1801,  1802,  1798,
    1804,  1805,  1806,  1807,  1803,  1808,  1808,  1808,  1808,  1808,
    1808,  1809,  1809,  1810,  1810,  1810,  1811,  1811,  1812,  1812,
    1812,  1813,  1813,  1814,  1814,  1814,  1815,  1815,  1816,  1816,
    1817,  1817,  1818,  1819,  1819,  1820,  1820,  1821,  1821,  1821,
    1822,  1822,  1823,  1823,  1824,  1824,  1825,  1825,  1826,  1826,
    1827,  1827,  1828,  1828,  1828,  1829,  1829,  1830
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     1,     2,     0,
       6,     0,     6,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     3,     1,     3,     1,     2,     3,     5,
       7,     2,     3,     1,     3,     3,     2,     3,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     7,     8,     7,     0,     3,     3,
       6,     3,     0,     3,    12,    11,    11,     1,     1,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       3,     0,     3,     0,     1,     3,     1,     3,     0,     1,
       3,     1,     4,     0,     1,     1,     1,     0,     3,     2,
       3,     0,     3,     5,     5,     0,     7,     0,     6,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     4,
       0,     1,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     1,     1,
       1,     1,     1,     0,     2,     0,     4,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     2,     1,
       1,     2,     3,     1,     3,     3,     3,     3,     3,     3,
       3,     4,     3,     1,     1,     3,     3,     3,     1,     1,
       2,     1,     2,     1,     0,     2,     1,     2,     1,     6,
       6,     5,     4,     5,     4,     5,     0,     1,     0,     3,
       0,     2,     0,     8,     9,     0,     1,     1,     3,     0,
       2,     0,     3,     1,     3,     5,     0,     4,     3,     1,
       1,     1,     3,     1,     3,     0,     4,     1,     3,     1,
       1,     0,     3,     1,     3,     3,     0,     1,     2,     1,
       3,     4,     3,     3,     3,     4,     4,     3,     1,     2,
       1,     4,     0,     1,     1,     2,     1,     1,     1,     0,
       3,     1,     2,     1,     3,     0,     1,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     1,
       1,     3,     4,     4,     3,     2,     2,     3,     3,     2,
       3,     3,     1,     1,     1,     4,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     3,     0,     1,     6,     7,
       7,     7,     8,     3,     4,     0,     2,     0,     1,     0,
       1,     2,     2,     9,     0,     2,     0,     1,     1,     3,
       3,     3,     1,     2,     1,     1,     3,     2,     3,     2,
       2,     1,     3,     3,     2,     3,     1,     2,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       2,     5,     5,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     5,     0,     3,     0,     2,     3,     0,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     2,     1,     1,     2,     2,     2,
       4,     3,     1,     3,     2,     1,     2,     1,     2,     2,
       2,     2,     3,     2,     2,     2,     1,     3,     3,     1,
       0,     3,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     2,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     0,     2,     0,     1,     1,     2,     2,
       1,     2,     2,     0,     1,     1,     1,     3,     1,     3,
       0,     1,     0,     4,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     2,     1,     2,
       2,     3,     2,     3,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     0,     2,
       1,     3,     4,     4,     0,     5,     0,     5,     0,     5,
       0,     5,     0,     4,     0,    10,     7,     6,     6,     6,
       4,     7,     7,     6,     8,     7,     5,     5,     5,     5,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     1,     1,     4,
       0,     0,    11,     3,     0,     1,     1,     3,     3,     6,
       2,     2,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     1,     1,     3,     1,     1,     0,     2,     1,     3,
       3,     3,     1,     4,     0,     1,     1,     5,     0,     1,
       1,     2,     1,     1,     1,     5,     0,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     2,     1,     1,     3,     2,     3,     3,
       2,     3,     4,     3,     4,     2,     3,     2,     1,     4,
       4,     4,     4,     3,     3,     4,     1,     1,     1,     9,
       8,     0,     1,     2,     1,     1,     1,     3,     2,     2,
       0,     1,     2,     1,     1,     1,     2,     1,     3,     4,
       4,     1,     1,     2,     0,     1,     2,     1,     3,     1,
       1,     1,     2,     0,     2,     2,     1,     1,     0,     2,
       3,     3,     3,     2,     3,     4,     3,     4,     3,     4,
       1,     3,     4,     3,     4,     1,     3,     4,     5,     7,
       6,     8,     6,     5,     6,     4,     3,     5,     4,     6,
       3,     4,     1,     1,     0,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     9,    12,     5,     6,     6,     4,     4,     5,
       3,     3,     0,     1,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     0,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     8,     4,
       3,     6,     4,     6,     4,     7,     7,    10,     1,     4,
       4,     4,     4,     4,     6,     4,     4,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     2,     1,
       1,     5,     6,     5,     5,     5,     7,     5,     6,     5,
       6,     5,     6,     5,     6,     5,     5,     5,     5,     5,
       6,     8,     4,     4,     4,     4,     4,     5,     7,     7,
       6,     6,     9,     0,     3,     1,     1,     1,     1,     2,
       0,     2,     0,     2,     2,     0,     2,     2,     0,     1,
       2,     1,     1,     1,     3,     4,     0,     1,     0,     3,
       0,     3,     0,     3,     1,     1,     2,     2,     2,     4,
       2,     4,     1,     2,     2,     2,     4,     0,     3,     2,
       2,     3,     1,     1,     1,     4,     2,     3,     1,     4,
       0,     1,     0,     2,     0,     3,     3,     1,     2,     2,
       3,     2,     1,     2,     1,     2,     1,     1,     2,     2,
       2,     1,     1,     2,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       4,     1,     1,     5,     7,     5,     7,     3,     3,     3,
       4,     4,     1,     2,     2,     1,     3,     3,     0,     1,
       0,     1,     0,     1,     4,     1,     1,     1,     1,     1,
       1,     3,     5,     3,     3,     4,     3,     3,     3,     4,
       8,     5,     4,     1,     3,     3,     7,     4,     0,     1,
       0,     1,     1,     2,     1,     2,     3,     3,     1,     1,
       2,     0,     2,     3,     3,     1,     1,     6,     6,     1,
       2,     0,     1,     1,     0,     1,     1,     1,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       0,     2,     0,     1,     0,     1,     2,     0,     2,     2,
       3,     3,     1,     4,     0,     3,     1,     3,     0,     2,
       1,     3,     3,     0,     4,     3,     1,     0,     1,     3,
       1,     2,     0,     1,     3,     3,     1,     0,     1,     1,
       1,     0,     1,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     2,     5,     2,     1,     2,     6,     6,     4,
       6,     4,     5,     4,     4,     5,     4,     4,     4,     5,
       5,     4,     4,     6,     4,     1,     3,     1,     3,     0,
       2,     0,     1,     0,     1,     1,     3,     1,     1,     9,
      10,     8,     6,     7,     6,     0,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     4,     1,     3,     4,     3,
       1,     2,     1,     2,     1,     1,     1,     3,     1,     3,
       1,     1,     1,     0,     1,     3,     4,     0,     1,     3,
       1,     1,     1,     0,     3,     0,     5,    10,     0,     1,
       3,     1,     3,     0,     1,    10,     7,     8,     0,     2,
       0,     2,     1,     1,     1,     3,     0,     1,     0,     1,
       1,     3,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     0,     3,     3,     5,     5,     4,     5,     5,     2,
       4,     4,     4,     7,     3,     3,     2,     6,     7,     7,
       3,     6,     6,     3,     3,     2,     5,     4,     3,     4,
       3,     3,     2,     2,     4,     6,     3,     5,     7,     5,
       4,     4,     3,     4,     3,     3,     3,     3,     3,     4,
       4,     4,     4,     4,     4,     4,     4,     4,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     3,     2,     1,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     3,     1,     0,     2,     0,     4,
       0,     4,     0,     3,     1,     0,     1,     0,     2,     0,
       3,     3,     3,     2,     2,     3,     0,     1,     1,     2,
      18,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     1,
       1,     1,     3,     5,     2,     1,     1,     1,     1,     1,
       3,     5,     1,     3,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     2,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     5,     5,     7,     7,     3,     3,     3,     6,     6,
       6,     4,     0,     2,     4,     6,     1,     3,     1,     2,
       2,     0,     2,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     4,     6,
       2,     3,     3,     2,     1,     3,     3,     2,     2,     1,
       0,     2,     3,     0,     2,     2,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       3,     0,     3,     3,     1,     1,     1,     3,     3,     1,
       1,     2,     2,     2,     1,     1,     1,     1,     3,     4,
       5,     4,     2,     6,     5,     9,     3,     3,     4,     3,
       6,     7,    10,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     7,     0,     9,     8,     6,
       5,     9,     0,    11,     7,     0,     1,     1,     1,     0,
       1,     1,     3,     2,     3,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     2,     0,     3,     0,
       1,     3,     1,     2,     2,     2,     1,     3,     3,     1,
       3,     1,     3,     1,     3,     0,     3,     0,     3,     4,
       5,     4,     6,     6,     7,     1,     7,     9,     5,     6,
       8,     4,     7,     7,     8,     2,     1,     3,     1,     3,
       0,     3,     1,     3,     0,     2,     2,     2,     2,     0,
       3,     0,     3,     0,     3,     4,     3,     3,     0,     3,
       0,     3,     0,     1,     0,     3,     2,     0,     1,     2,
       0,     1,     4,     4,     5,     2,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     3,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       1,     2,     1,     2,     3,     3,     3,     0,     3,     3,
       0,     7,     2,     0,     3,     4,     4,     1,     1,     0,
       2,     0,    12,     7,     6,     0,     0,     0,     0,    14,
       0,     0,     0,     0,    11,     4,     4,     3,     4,     3,
       3,     0,     2,     1,     3,     5,     1,     1,     0,     1,
       1,     0,     2,     0,     1,     3,     5,     3,     3,     3,
       1,     3,     4,     6,    10,     1,     5,     0,     2,     3,
       1,     1,     0,     3,     1,     3,     1,     3,     1,     2,
       0,     3,     0,     1,     1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2213 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2270 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25110 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25164 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25296 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25391 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2475 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25541 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2923 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 2950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 25971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 2986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 25980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 25988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 2999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 25996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 26004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26083 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26099 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 26252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3386 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26597 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 26651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26659 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3603 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 26797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 27022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27119 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3895 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3896 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3900 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3901 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3907 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3909 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3911 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3913 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3915 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3917 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3919 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3924 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3925 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3926 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3948 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3950 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4086 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4091 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4129 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4319 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4328 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4429 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4444 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4465 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4466 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27918 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27930 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4586 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4608 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 28004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 28010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 28016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 28022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 28028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 28034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 28040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 28058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 28064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 28070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4754 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28289 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4807 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4894 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4969 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28501 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4977 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5025 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28579 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5195 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5267 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5275 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5313 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5331 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5354 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5364 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5409 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 28971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 28979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5440 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5448 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5490 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5498 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5506 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5544 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29125 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5646 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5665 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5727 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5735 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5776 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5793 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5801 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5871 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29650 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29712 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 29775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29918 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 29976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 29994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 30019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 30027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 30035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 30041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 30086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 30092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6628 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6629 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6634 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30423 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 30539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30547 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	        }
#line 30571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 30586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 30767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6902 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6911 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6915 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6916 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6917 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 30974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 31032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 7001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 31041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 31047 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31053 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 7017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31065 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31077 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 31083 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 31089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7278 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7279 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7283 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7284 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7288 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7289 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7290 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7291 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7292 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31674 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7370 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 31921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 31929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 31937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 31945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 31953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 31969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 31977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 31985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 31998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 32006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 32014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 32038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 32044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 32052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 32058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 32064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 32070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 32076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 32082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 32088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 32117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 32129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7668 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7669 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 32212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32289 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7762 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7794 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7862 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 32521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7867 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7868 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7872 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7877 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7878 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7879 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32579 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32674 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 32926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 32981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 32993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 33006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33047 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8261 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33241 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 33295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 33312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 33322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8522 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8567 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33501 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33535 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33567 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8707 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8712 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33641 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8713 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 33977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 34001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 34009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 34015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 34023 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 34031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 34037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34048 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34065 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 34074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 34103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 34111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 34119 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 34144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 34160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34208 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34264 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34391 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34423 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9246 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9248 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9249 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34567 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9319 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 34711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34949 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 34970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 34976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 34986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 34992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 35011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 35021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 35032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 35043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 35052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 35082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 35088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 35094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9698 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 35100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 35106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 35112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 35120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9724 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 35192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 35265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10033 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35541 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35615 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35706 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10274 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10275 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35930 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 35971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 35988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 35999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 36007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 36020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 36028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 36036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 36044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 36056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 36064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 36102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10521 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10532 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36246 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36264 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36402 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36453 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36650 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36960 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 36976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 36984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 37016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 37032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37048 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 37056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 37064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 37072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 37080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 37096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 37104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 37112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 37120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 37130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 37140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 37150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 37160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 37170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 37188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37296 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37617 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37641 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11434 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37844 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37852 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 37956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 37963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 37969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 37975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 37981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 37989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37995 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 38006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 38022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 38044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 38056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 38062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 38071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 38090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 38101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 38124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 38136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38246 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11822 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38351 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38494 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38518 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 38664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 38892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 38898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 38909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 38961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12360 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12387 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 39106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12388 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 39112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12389 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12390 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39518 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12698 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12699 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12700 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12701 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12702 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12703 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12707 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12709 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12710 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12711 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12715 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12716 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12717 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12718 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12719 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12723 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12725 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12726 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12727 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39650 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12732 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12921 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 39894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 39906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 39983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 39993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 40001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 40009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 40061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 40079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40099 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 40115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13247 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40453 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40493 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40535 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13604 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40712 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13638 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 40879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13796 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 40895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 40927 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, false);
          }
#line 40935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, false);
          }
#line 40943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
          }
#line 40951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, true);
          }
#line 40959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, true);
          }
#line 40967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
          }
#line 40975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 40983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 40991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 40999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 41007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 41017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_client_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_user_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41033 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_thread_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_index_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 41065 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 41073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 41081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 41105 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 41113 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 41121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 41129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 41141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 41147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 41177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 41183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 41189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 41195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14033 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14034 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14145 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14162 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14167 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41425 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14205 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14210 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14212 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14214 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14216 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14218 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14226 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14228 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14230 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14232 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14234 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 41501 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14236 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 41507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14238 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 41513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14240 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 41519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14242 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 41525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14244 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14246 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41537 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14248 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 41543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14263 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14295 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14306 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14308 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14330 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 41655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14334 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14335 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14339 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14361 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 41715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14406 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14407 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14408 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 41872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 41881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 41890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 41900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 41909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 41918 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 41924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 41930 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 41939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 41948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 41957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 41963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 41969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 41981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41987 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 42033 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 42039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 42101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 42111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 42129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 42182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 42199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 42215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 42221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 42235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 42243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42297 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42303 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42446 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 15005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 15021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 15043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 15050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 15065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 15067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 15079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 15088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 15090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 15102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 15111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 15112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 15113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 15124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 15129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 15137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 15141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 42717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 15155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 15160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 15168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42869 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 42878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 42893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 42899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 42907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 42915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 42941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 42952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 42962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 42968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 42974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 42998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 43004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15933 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15942 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15948 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15955 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 15956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 15957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 15964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 43134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 15978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 43142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 15983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 15987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 43158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 43169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 15998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 43177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 43185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 43209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 43217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 43225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 43233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 43239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 43245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43289 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43315 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 43355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 43367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 43375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16121 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 43468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-3].lexer.lex_str), "INNODB"))
            {
              if ((yyvsp[0].ulong_num) > UINT_MAX32 - 1)
              {
                my_error(ER_SYSTEM_KEY_ROTATION_MAX_KEY_ID_EXCEEDED, MYF(0));
                MYSQL_YYABORT;
              }
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_SYSTEM_KEY, EMPTY_CSTR, (yyvsp[0].ulong_num));
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-3]));
              MYSQL_YYABORT;
            }
          }
#line 43554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "REDO"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_REDO_SYSTEM_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"), 0);
          }
#line 43578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"), 0);
          }
#line 43586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)), 0);
          }
#line 43594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)), 0);
          }
#line 43602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 43621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 43640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43648 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 43758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43786 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43804 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 43813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 43910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 43916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 43947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 43953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 43983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 43989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 16546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 43995 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 16548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 44001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 44007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 44013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 44019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 44025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 44031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 44037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 44043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 44052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 44058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 44076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 44082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 44088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 44094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 44100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 44106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 44112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 44118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 44124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 44130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 44136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 44142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 44148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 44154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 44160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 16631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 44186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 44200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 44214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44264 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 44377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 44392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 44407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 44424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 44442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 44458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 16842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 44470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 44557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 16921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 44572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 16933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 44589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 16947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 44607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 16962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 44623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 16974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 44635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 16985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 16990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 16998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17050 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17052 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17057 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17061 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17063 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17072 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17074 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17078 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17092 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17096 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17115 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17116 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44885 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 17143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 17152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 44959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 44967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 44973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17196 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 44979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 44985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 44991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 44997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 45003 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 17201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 45014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 17207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 45020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 17218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 45031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 17228 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3123:
#line 17230 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3124:
#line 17232 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 45064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 45072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17292 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17294 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17296 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17301 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 45096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17306 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 45102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 17308 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 45108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17310 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17315 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17317 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17319 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17428 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17435 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17441 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17458 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17490 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17567 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17591 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17597 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17638 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17705 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 45562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17725 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17730 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17738 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17746 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17792 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17833 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17834 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45852 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45885 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 45893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 45901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 45909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 45917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 45925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 45931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 17979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 45937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 17984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 45948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 45954 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 18002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 18012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 45987 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 18019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 46001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 18031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 46019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 46028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 18045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 46034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 18047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 46043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 18052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 46052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 18059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 46058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 18060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 46064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 18066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 46081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}

/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1033
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   86562

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  791
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  941
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3094
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5433

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   788,     2,     2,     2,   776,   771,     2,
     780,   781,   774,   773,   785,   772,   786,   775,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   787,   783,
       2,     2,     2,     2,   784,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   777,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   789,   770,   790,   778,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     756,   757,   758,   759,   760,   761,   762,   763,   764,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     765,   766,     2,   767,   768,   769,   779,   782
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2100,  2100,  2101,  2106,  2116,  2134,  2138,  2146,  2159,
    2158,  2183,  2190,  2192,  2196,  2197,  2202,  2203,  2204,  2205,
    2206,  2207,  2208,  2209,  2210,  2211,  2212,  2213,  2214,  2215,
    2216,  2217,  2218,  2219,  2220,  2221,  2222,  2223,  2224,  2225,
    2226,  2227,  2228,  2229,  2230,  2231,  2232,  2233,  2234,  2235,
    2236,  2237,  2238,  2239,  2240,  2241,  2242,  2243,  2244,  2245,
    2246,  2247,  2248,  2249,  2250,  2251,  2252,  2253,  2254,  2255,
    2256,  2257,  2258,  2259,  2260,  2261,  2262,  2263,  2264,  2265,
    2266,  2267,  2268,  2269,  2270,  2271,  2272,  2273,  2274,  2275,
    2276,  2277,  2278,  2279,  2280,  2281,  2282,  2283,  2284,  2285,
    2286,  2287,  2288,  2289,  2290,  2291,  2292,  2293,  2297,  2307,
    2308,  2312,  2332,  2339,  2350,  2349,  2360,  2362,  2366,  2367,
    2371,  2384,  2383,  2403,  2402,  2419,  2418,  2436,  2437,  2440,
    2447,  2454,  2461,  2468,  2475,  2483,  2492,  2498,  2505,  2512,
    2520,  2529,  2535,  2541,  2549,  2557,  2563,  2570,  2577,  2585,
    2597,  2603,  2610,  2617,  2625,  2635,  2636,  2640,  2644,  2648,
    2652,  2656,  2666,  2670,  2674,  2679,  2690,  2695,  2699,  2703,
    2707,  2708,  2712,  2716,  2720,  2725,  2729,  2733,  2737,  2743,
    2777,  2781,  2785,  2789,  2795,  2796,  2806,  2807,  2823,  2826,
    2828,  2829,  2833,  2839,  2845,  2854,  2858,  2862,  2869,  2874,
    2882,  2886,  2902,  2906,  2917,  2918,  2923,  2933,  2943,  2948,
    2956,  2963,  2976,  2975,  2990,  2992,  3005,  3025,  3044,  3064,
    3078,  3092,  3097,  3106,  3111,  3123,  3135,  3149,  3165,  3169,
    3176,  3185,  3193,  3207,  3209,  3230,  3231,  3235,  3239,  3243,
    3247,  3251,  3256,  3260,  3268,  3267,  3299,  3298,  3307,  3316,
    3317,  3323,  3329,  3339,  3345,  3353,  3355,  3364,  3365,  3369,
    3375,  3384,  3385,  3393,  3393,  3451,  3452,  3453,  3454,  3455,
    3456,  3457,  3458,  3459,  3460,  3461,  3462,  3463,  3467,  3481,
    3500,  3501,  3505,  3506,  3511,  3513,  3515,  3517,  3519,  3521,
    3523,  3529,  3530,  3531,  3535,  3539,  3546,  3553,  3554,  3561,
    3563,  3567,  3568,  3572,  3623,  3625,  3629,  3630,  3634,  3684,
    3685,  3686,  3687,  3691,  3692,  3696,  3697,  3702,  3705,  3729,
    3828,  3846,  3845,  3924,  3920,  3997,  3998,  4003,  4005,  4010,
    4033,  4044,  4048,  4070,  4071,  4075,  4079,  4092,  4098,  4104,
    4113,  4126,  4152,  4158,  4159,  4165,  4166,  4171,  4177,  4190,
    4192,  4212,  4218,  4220,  4222,  4224,  4226,  4228,  4230,  4232,
    4234,  4236,  4238,  4240,  4245,  4259,  4276,  4277,  4279,  4284,
    4290,  4299,  4305,  4314,  4322,  4350,  4358,  4360,  4369,  4374,
    4380,  4389,  4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,
    4413,  4415,  4417,  4419,  4421,  4426,  4446,  4470,  4474,  4482,
    4483,  4484,  4485,  4486,  4487,  4488,  4489,  4490,  4491,  4492,
    4493,  4494,  4499,  4498,  4509,  4509,  4574,  4573,  4630,  4630,
    4652,  4709,  4756,  4780,  4779,  4804,  4826,  4828,  4829,  4833,
    4851,  4872,  4880,  4918,  4872,  4946,  4948,  4949,  4953,  4954,
    4959,  4969,  4958,  5021,  5020,  5034,  5035,  5039,  5040,  5045,
    5053,  5044,  5103,  5111,  5102,  5157,  5170,  5175,  5174,  5212,
    5213,  5218,  5217,  5251,  5251,  5270,  5269,  5317,  5332,  5340,
    5331,  5398,  5406,  5395,  5448,  5450,  5455,  5457,  5459,  5474,
    5475,  5482,  5483,  5490,  5491,  5495,  5501,  5510,  5511,  5512,
    5513,  5514,  5515,  5516,  5517,  5518,  5519,  5520,  5521,  5525,
    5526,  5530,  5536,  5545,  5546,  5547,  5548,  5549,  5550,  5551,
    5552,  5556,  5557,  5561,  5567,  5576,  5580,  5581,  5585,  5591,
    5600,  5601,  5602,  5603,  5604,  5605,  5606,  5610,  5611,  5615,
    5621,  5630,  5631,  5632,  5636,  5640,  5641,  5645,  5649,  5656,
    5663,  5670,  5677,  5684,  5691,  5698,  5705,  5712,  5719,  5723,
    5730,  5737,  5751,  5758,  5759,  5834,  5840,  5844,  5849,  5854,
    5860,  5868,  5878,  5879,  5893,  5901,  5905,  5909,  5913,  5917,
    5921,  5928,  5929,  5934,  5935,  5953,  5954,  5966,  5967,  5972,
    5981,  5982,  5987,  5993,  6003,  6004,  6016,  6017,  6021,  6027,
    6036,  6045,  6048,  6053,  6061,  6062,  6066,  6070,  6077,  6084,
    6094,  6093,  6111,  6117,  6126,  6127,  6132,  6133,  6137,  6143,
    6152,  6159,  6160,  6164,  6170,  6179,  6181,  6183,  6185,  6187,
    6189,  6191,  6193,  6202,  6203,  6207,  6208,  6229,  6230,  6234,
    6235,  6239,  6244,  6249,  6264,  6265,  6269,  6275,  6284,  6290,
    6298,  6300,  6304,  6308,  6312,  6316,  6320,  6324,  6328,  6332,
    6336,  6340,  6344,  6355,  6359,  6363,  6367,  6371,  6388,  6392,
    6396,  6400,  6404,  6408,  6412,  6416,  6420,  6424,  6428,  6432,
    6436,  6440,  6444,  6448,  6452,  6456,  6460,  6467,  6481,  6485,
    6489,  6493,  6497,  6498,  6499,  6500,  6501,  6502,  6506,  6507,
    6508,  6512,  6513,  6514,  6515,  6519,  6525,  6534,  6535,  6539,
    6546,  6547,  6555,  6561,  6567,  6572,  6589,  6597,  6605,  6609,
    6610,  6614,  6615,  6619,  6620,  6624,  6628,  6632,  6653,  6655,
    6659,  6660,  6661,  6665,  6669,  6673,  6677,  6681,  6685,  6689,
    6693,  6698,  6703,  6712,  6721,  6725,  6729,  6734,  6743,  6747,
    6770,  6774,  6778,  6782,  6786,  6790,  6794,  6795,  6799,  6803,
    6807,  6812,  6817,  6822,  6827,  6832,  6836,  6840,  6845,  6849,
    6856,  6858,  6860,  6862,  6864,  6866,  6868,  6870,  6875,  6876,
    6880,  6881,  6885,  6886,  6887,  6888,  6889,  6893,  6894,  6895,
    6896,  6897,  6901,  6906,  6910,  6912,  6916,  6917,  6918,  6919,
    6924,  6928,  6937,  6941,  6946,  6950,  6959,  6960,  6964,  6965,
    6966,  6974,  6975,  6979,  6983,  6987,  6988,  6989,  6998,  6999,
    7000,  7001,  7004,  7005,  7010,  7014,  7018,  7019,  7023,  7042,
    7061,  7065,  7069,  7073,  7077,  7081,  7085,  7089,  7093,  7097,
    7101,  7105,  7109,  7113,  7117,  7121,  7125,  7129,  7133,  7142,
    7147,  7160,  7164,  7171,  7172,  7179,  7180,  7181,  7185,  7186,
    7187,  7191,  7197,  7201,  7205,  7206,  7210,  7219,  7223,  7224,
    7228,  7237,  7241,  7242,  7246,  7252,  7256,  7257,  7261,  7262,
    7267,  7268,  7272,  7279,  7287,  7293,  7303,  7307,  7312,  7317,
    7322,  7329,  7335,  7346,  7347,  7355,  7354,  7366,  7368,  7372,
    7387,  7388,  7392,  7399,  7409,  7410,  7411,  7412,  7417,  7421,
    7426,  7431,  7437,  7446,  7447,  7448,  7449,  7450,  7454,  7455,
    7460,  7461,  7465,  7466,  7470,  7471,  7472,  7476,  7477,  7481,
    7485,  7489,  7493,  7497,  7501,  7505,  7509,  7515,  7516,  7520,
    7526,  7535,  7536,  7550,  7551,  7555,  7561,  7570,  7574,  7575,
    7579,  7585,  7594,  7595,  7600,  7601,  7605,  7609,  7613,  7637,
    7638,  7639,  7643,  7644,  7648,  7649,  7653,  7654,  7658,  7659,
    7660,  7664,  7670,  7680,  7686,  7701,  7707,  7717,  7718,  7727,
    7728,  7732,  7733,  7737,  7743,  7755,  7766,  7781,  7780,  7801,
    7800,  7822,  7821,  7843,  7842,  7861,  7855,  7878,  7877,  7913,
    7935,  7954,  7974,  7982,  8004,  8028,  8039,  8041,  8056,  8070,
    8076,  8088,  8100,  8114,  8115,  8119,  8129,  8139,  8144,  8151,
    8160,  8161,  8165,  8166,  8170,  8176,  8182,  8190,  8205,  8213,
    8221,  8228,  8235,  8242,  8249,  8255,  8261,  8267,  8279,  8291,
    8300,  8301,  8305,  8306,  8310,  8316,  8322,  8328,  8337,  8351,
    8352,  8353,  8354,  8358,  8359,  8371,  8372,  8376,  8377,  8381,
    8382,  8397,  8402,  8410,  8414,  8422,  8426,  8431,  8432,  8441,
    8445,  8456,  8460,  8464,  8468,  8472,  8477,  8482,  8487,  8492,
    8499,  8503,  8507,  8511,  8516,  8521,  8526,  8531,  8535,  8542,
    8543,  8547,  8551,  8558,  8559,  8567,  8574,  8579,  8583,  8588,
    8599,  8600,  8608,  8612,  8616,  8620,  8624,  8628,  8633,  8637,
    8641,  8645,  8649,  8653,  8657,  8661,  8665,  8669,  8673,  8677,
    8681,  8685,  8689,  8693,  8697,  8701,  8707,  8711,  8718,  8723,
    8728,  8736,  8737,  8742,  8747,  8753,  8762,  8766,  8770,  8787,
    8791,  8795,  8811,  8813,  8817,  8818,  8822,  8823,  8824,  8828,
    8829,  8830,  8834,  8835,  8836,  8837,  8841,  8842,  8850,  8858,
    8860,  8864,  8865,  8869,  8870,  8871,  8875,  8887,  8900,  8907,
    8908,  8912,  8927,  8942,  8926,  8966,  8983,  8986,  8993,  8997,
    9004,  9008,  9015,  9019,  9026,  9029,  9036,  9039,  9046,  9049,
    9056,  9059,  9067,  9070,  9077,  9081,  9088,  9092,  9100,  9104,
    9129,  9130,  9131,  9136,  9141,  9148,  9162,  9163,  9164,  9168,
    9177,  9178,  9182,  9183,  9191,  9192,  9193,  9197,  9207,  9208,
    9227,  9232,  9239,  9249,  9257,  9265,  9266,  9270,  9271,  9279,
    9281,  9283,  9285,  9287,  9289,  9294,  9301,  9302,  9303,  9308,
    9307,  9313,  9320,  9325,  9333,  9334,  9338,  9351,  9355,  9364,
    9370,  9379,  9386,  9387,  9391,  9396,  9403,  9409,  9418,  9425,
    9432,  9433,  9443,  9444,  9448,  9452,  9457,  9461,  9497,  9501,
    9505,  9509,  9513,  9552,  9558,  9565,  9571,  9578,  9583,  9589,
    9597,  9601,  9605,  9609,  9613,  9621,  9622,  9623,  9630,  9635,
    9639,  9651,  9673,  9697,  9698,  9702,  9706,  9707,  9711,  9717,
    9726,  9733,  9745,  9748,  9752,  9757,  9761,  9765,  9774,  9780,
    9789,  9793,  9797,  9804,  9805,  9809,  9813,  9814,  9818,  9819,
    9823,  9829,  9835,  9845,  9846,  9854,  9855,  9856,  9857,  9858,
    9862,  9863,  9868,  9874,  9879,  9885,  9889,  9893,  9897,  9901,
    9905,  9909,  9913,  9917,  9921,  9925,  9929,  9942,  9946,  9950,
    9955,  9959,  9966,  9970,  9979,  9983,  9987,  9991,  9999, 10003,
   10007, 10012, 10017, 10025, 10033, 10037, 10038, 10042, 10046, 10050,
   10054, 10058, 10062, 10066, 10070, 10074, 10078, 10082, 10086, 10090,
   10094, 10098, 10102, 10103, 10107, 10108, 10115, 10116, 10120, 10121,
   10125, 10126, 10127, 10128, 10129, 10130, 10131, 10135, 10136, 10140,
   10141, 10142, 10143, 10144, 10145, 10149, 10150, 10151, 10152, 10153,
   10154, 10158, 10162, 10166, 10170, 10174, 10178, 10179, 10183, 10187,
   10191, 10195, 10199, 10203, 10207, 10211, 10219, 10223, 10227, 10231,
   10235, 10239, 10244, 10251, 10262, 10263, 10273, 10277, 10281, 10285,
   10289, 10293, 10297, 10301, 10305, 10309, 10316, 10320, 10324, 10328,
   10332, 10336, 10340, 10344, 10348, 10353, 10358, 10363, 10367, 10371,
   10375, 10379, 10384, 10388, 10407, 10411, 10415, 10419, 10423, 10428,
   10433, 10437, 10441, 10446, 10450, 10454, 10458, 10462, 10466, 10470,
   10474, 10479, 10483, 10487, 10491, 10495, 10506, 10509, 10520, 10524,
   10528, 10532, 10536, 10540, 10544, 10548, 10552, 10556, 10560, 10564,
   10568, 10572, 10576, 10580, 10584, 10588, 10592, 10596, 10600, 10604,
   10608, 10612, 10618, 10624, 10630, 10636, 10642, 10646, 10664, 10668,
   10675, 10677, 10690, 10691, 10695, 10696, 10700, 10701, 10705, 10711,
   10720, 10727, 10728, 10732, 10736, 10740, 10744, 10748, 10758, 10768,
   10772, 10776, 10780, 10784, 10793, 10797, 10801, 10805, 10809, 10813,
   10817, 10821, 10825, 10829, 10839, 10843, 10847, 10851, 10855, 10859,
   10863, 10874, 10885, 10889, 10893, 10906, 10910, 10922, 10923, 10927,
   10928, 10929, 10934, 10937, 10945, 10948, 10952, 10961, 10964, 10968,
   10976, 10979, 10986, 10993, 10997, 11004, 11011, 11018, 11039, 11042,
   11050, 11053, 11061, 11064, 11072, 11075, 11084, 11089, 11096, 11100,
   11104, 11108, 11112, 11119, 11126, 11130, 11134, 11138, 11142, 11150,
   11153, 11157, 11161, 11165, 11171, 11172, 11173, 11177, 11184, 11188,
   11195, 11199, 11206, 11207, 11212, 11217, 11221, 11222, 11226, 11231,
   11241, 11248, 11255, 11274, 11282, 11289, 11296, 11303, 11310, 11317,
   11324, 11331, 11338, 11345, 11352, 11360, 11370, 11371, 11375, 11381,
   11390, 11391, 11395, 11401, 11410, 11411, 11415, 11416, 11420, 11428,
   11437, 11438, 11439, 11452, 11453, 11534, 11538, 11543, 11547, 11551,
   11561, 11568, 11569, 11570, 11574, 11575, 11576, 11577, 11580, 11581,
   11584, 11586, 11589, 11591, 11599, 11600, 11604, 11633, 11634, 11635,
   11636, 11638, 11640, 11644, 11645, 11654, 11655, 11659, 11666, 11667,
   11671, 11684, 11695, 11708, 11722, 11729, 11735, 11744, 11748, 11758,
   11765, 11768, 11779, 11783, 11788, 11793, 11802, 11803, 11814, 11817,
   11820, 11824, 11828, 11836, 11839, 11840, 11841, 11845, 11846, 11850,
   11856, 11865, 11866, 11874, 11875, 11879, 11884, 11890, 11894, 11900,
   11909, 11915, 11923, 11927, 11936, 11948, 11949, 11950, 11951, 11952,
   11953, 11954, 11955, 11956, 11957, 11958, 11959, 11963, 11964, 11965,
   11966, 11967, 11968, 11969, 11970, 11971, 11975, 11976, 11977, 11978,
   11981, 11983, 11987, 11988, 11991, 11993, 11997, 11998, 12002, 12006,
   12007, 12014, 12018, 12025, 12030, 12039, 12056, 12064, 12071, 12077,
   12087, 12090, 12097, 12103, 12112, 12126, 12127, 12134, 12139, 12150,
   12151, 12166, 12171, 12181, 12188, 12189, 12193, 12200, 12205, 12215,
   12216, 12220, 12221, 12225, 12226, 12230, 12237, 12243, 12249, 12258,
   12262, 12266, 12270, 12274, 12281, 12282, 12286, 12287, 12288, 12289,
   12290, 12291, 12295, 12296, 12297, 12298, 12299, 12303, 12304, 12305,
   12306, 12307, 12311, 12312, 12313, 12314, 12315, 12319, 12324, 12325,
   12329, 12335, 12344, 12348, 12355, 12362, 12368, 12372, 12380, 12393,
   12409, 12418, 12428, 12451, 12486, 12493, 12508, 12518, 12533, 12542,
   12553, 12573, 12595, 12618, 12623, 12632, 12639, 12646, 12652, 12661,
   12667, 12676, 12677, 12681, 12682, 12686, 12687, 12691, 12697, 12706,
   12707, 12714, 12734, 12754, 12772, 12785, 12802, 12818, 12819, 12820,
   12829, 12833, 12834, 12845, 12847, 12851, 12856, 12861, 12869, 12874,
   12879, 12887, 12893, 12902, 12909, 12910, 12914, 12918, 12919, 12923,
   12928, 12938, 12943, 12952, 12953, 12956, 12958, 12962, 12966, 12971,
   12976, 12980, 12986, 12995, 12996, 13004, 13008, 13022, 13026, 13035,
   13052, 13053, 13057, 13064, 13076, 13084, 13085, 13091, 13104, 13114,
   13127, 13129, 13133, 13134, 13138, 13139, 13140, 13144, 13150, 13152,
   13156, 13157, 13161, 13162, 13166, 13167, 13168, 13169, 13170, 13171,
   13172, 13173, 13174, 13178, 13179, 13192, 13191, 13202, 13207, 13212,
   13217, 13222, 13227, 13232, 13237, 13242, 13247, 13252, 13271, 13276,
   13284, 13289, 13294, 13300, 13314, 13319, 13327, 13335, 13340, 13345,
   13354, 13359, 13364, 13369, 13374, 13379, 13384, 13389, 13394, 13399,
   13404, 13409, 13414, 13419, 13424, 13429, 13434, 13439, 13446, 13451,
   13456, 13461, 13466, 13471, 13476, 13481, 13486, 13491, 13496, 13501,
   13506, 13511, 13519, 13520, 13524, 13525, 13528, 13530, 13534, 13535,
   13539, 13540, 13544, 13545, 13549, 13550, 13551, 13552, 13556, 13557,
   13561, 13562, 13566, 13567, 13571, 13572, 13573, 13578, 13585, 13592,
   13593, 13594, 13595, 13596, 13597, 13604, 13605, 13610, 13613, 13629,
   13647, 13657, 13658, 13663, 13671, 13670, 13683, 13682, 13696, 13700,
   13701, 13714, 13713, 13736, 13737, 13742, 13744, 13746, 13748, 13750,
   13752, 13758, 13760, 13762, 13764, 13766, 13768, 13770, 13772, 13774,
   13776, 13778, 13780, 13785, 13786, 13791, 13790, 13797, 13807, 13808,
   13813, 13818, 13828, 13827, 13839, 13838, 13846, 13845, 13862, 13867,
   13868, 13872, 13873, 13888, 13887, 13898, 13899, 13909, 13913, 13927,
   13939, 13940, 13941, 13947, 13958, 13997, 13998, 14002, 14003, 14007,
   14008, 14009, 14013, 14014, 14018, 14019, 14023, 14024, 14028, 14033,
   14037, 14042, 14048, 14053, 14061, 14062, 14066, 14071, 14075, 14080,
   14088, 14089, 14093, 14094, 14098, 14099, 14103, 14104, 14105, 14109,
   14115, 14124, 14125, 14132, 14133, 14137, 14145, 14165, 14186, 14191,
   14197, 14202, 14210, 14217, 14224, 14234, 14253, 14254, 14255, 14265,
   14266, 14270, 14285, 14286, 14287, 14288, 14292, 14296, 14300, 14304,
   14308, 14315, 14316, 14320, 14321, 14325, 14336, 14337, 14338, 14343,
   14347, 14351, 14358, 14359, 14368, 14369, 14373, 14377, 14387, 14394,
   14401, 14405, 14409, 14413, 14417, 14421, 14430, 14436, 14447, 14453,
   14464, 14465, 14495, 14508, 14521, 14537, 14553, 14570, 14574, 14575,
   14582, 14598, 14599, 14610, 14611, 14621, 14622, 14633, 14634, 14644,
   14645, 14646, 14650, 14651, 14652, 14656, 14661, 14669, 14673, 14687,
   14692, 14700, 14724, 14725, 14726, 14727, 14728, 14735, 14736, 14737,
   14744, 14745, 14746, 14747, 14748, 14749, 14750, 14751, 14752, 14753,
   14754, 14755, 14756, 14757, 14758, 14759, 14760, 14761, 14762, 14763,
   14764, 14765, 14766, 14767, 14768, 14769, 14770, 14771, 14772, 14773,
   14774, 14775, 14776, 14777, 14778, 14779, 14794, 14795, 14796, 14803,
   14804, 14805, 14806, 14807, 14808, 14809, 14810, 14811, 14819, 14820,
   14821, 14822, 14823, 14824, 14825, 14826, 14827, 14828, 14829, 14830,
   14831, 14832, 14833, 14834, 14835, 14836, 14837, 14838, 14839, 14840,
   14841, 14842, 14843, 14844, 14845, 14846, 14847, 14848, 14849, 14850,
   14851, 14852, 14853, 14854, 14855, 14856, 14857, 14858, 14859, 14860,
   14861, 14862, 14863, 14864, 14865, 14866, 14867, 14868, 14869, 14870,
   14871, 14872, 14873, 14874, 14875, 14876, 14877, 14878, 14879, 14880,
   14881, 14882, 14883, 14884, 14885, 14886, 14887, 14888, 14889, 14890,
   14891, 14892, 14893, 14894, 14895, 14896, 14897, 14898, 14899, 14900,
   14901, 14902, 14903, 14904, 14905, 14906, 14907, 14908, 14909, 14910,
   14911, 14912, 14913, 14914, 14915, 14916, 14917, 14918, 14919, 14920,
   14921, 14922, 14923, 14924, 14925, 14926, 14927, 14928, 14929, 14930,
   14931, 14932, 14933, 14934, 14935, 14936, 14937, 14938, 14939, 14940,
   14941, 14942, 14943, 14944, 14945, 14946, 14947, 14948, 14949, 14950,
   14951, 14952, 14953, 14954, 14955, 14956, 14957, 14958, 14959, 14960,
   14961, 14962, 14963, 14964, 14965, 14966, 14967, 14968, 14969, 14970,
   14971, 14972, 14973, 14974, 14975, 14976, 14977, 14978, 14979, 14980,
   14981, 14982, 14983, 14984, 14985, 14986, 14987, 14988, 14989, 14990,
   14991, 14992, 14993, 14994, 14995, 14996, 14997, 14998, 14999, 15000,
   15001, 15002, 15003, 15004, 15005, 15006, 15007, 15008, 15009, 15010,
   15011, 15012, 15013, 15014, 15015, 15016, 15017, 15018, 15019, 15020,
   15021, 15022, 15023, 15024, 15025, 15026, 15027, 15028, 15029, 15030,
   15031, 15032, 15033, 15034, 15035, 15036, 15037, 15038, 15039, 15040,
   15041, 15042, 15043, 15044, 15045, 15046, 15047, 15048, 15049, 15050,
   15051, 15052, 15053, 15054, 15055, 15056, 15057, 15058, 15059, 15060,
   15061, 15062, 15063, 15064, 15065, 15066, 15067, 15068, 15069, 15070,
   15071, 15072, 15073, 15074, 15075, 15076, 15077, 15078, 15079, 15080,
   15081, 15082, 15083, 15084, 15085, 15086, 15087, 15088, 15089, 15090,
   15091, 15092, 15093, 15094, 15095, 15096, 15097, 15098, 15099, 15100,
   15101, 15102, 15103, 15104, 15105, 15106, 15107, 15108, 15109, 15110,
   15111, 15112, 15113, 15114, 15115, 15116, 15117, 15118, 15119, 15120,
   15121, 15122, 15123, 15124, 15125, 15126, 15127, 15128, 15129, 15130,
   15131, 15132, 15133, 15134, 15135, 15136, 15137, 15138, 15139, 15140,
   15141, 15142, 15143, 15144, 15145, 15146, 15147, 15148, 15149, 15150,
   15151, 15152, 15153, 15154, 15155, 15156, 15157, 15158, 15159, 15160,
   15161, 15162, 15163, 15164, 15165, 15166, 15167, 15168, 15169, 15170,
   15171, 15172, 15173, 15174, 15175, 15176, 15177, 15178, 15179, 15180,
   15181, 15182, 15183, 15184, 15185, 15186, 15187, 15188, 15189, 15190,
   15191, 15192, 15193, 15194, 15195, 15196, 15197, 15198, 15199, 15200,
   15201, 15202, 15203, 15204, 15205, 15206, 15207, 15208, 15209, 15210,
   15211, 15212, 15224, 15225, 15226, 15238, 15239, 15240, 15241, 15250,
   15251, 15252, 15253, 15254, 15265, 15274, 15278, 15282, 15286, 15293,
   15301, 15309, 15321, 15325, 15330, 15335, 15340, 15345, 15350, 15358,
   15359, 15363, 15367, 15374, 15380, 15389, 15394, 15401, 15411, 15412,
   15417, 15421, 15429, 15433, 15437, 15438, 15439, 15440, 15441, 15445,
   15446, 15447, 15448, 15452, 15453, 15454, 15455, 15459, 15460, 15461,
   15462, 15463, 15464, 15469, 15477, 15483, 15487, 15492, 15496, 15503,
   15507, 15514, 15518, 15522, 15529, 15533, 15540, 15547, 15548, 15552,
   15559, 15560, 15564, 15565, 15569, 15570, 15571, 15572, 15576, 15577,
   15578, 15582, 15586, 15590, 15594, 15598, 15607, 15618, 15623, 15622,
   15628, 15638, 15639, 15643, 15644, 15648, 15676, 15677, 15678, 15683,
   15687, 15698, 15705, 15713, 15721, 15728, 15735, 15751, 15768, 15780,
   15784, 15788, 15791, 15794, 15809, 15831, 15835, 15839, 15848, 15859,
   15875, 15876, 15880, 15881, 15882, 15883, 15887, 15888, 15889, 15890,
   15891, 15897, 15902, 15918, 15917, 15936, 15941, 15952, 15957, 15974,
   15973, 15990, 16003, 16004, 16005, 16006, 16009, 16011, 16015, 16021,
   16030, 16037, 16039, 16041, 16043, 16045, 16047, 16049, 16051, 16053,
   16055, 16057, 16059, 16061, 16063, 16065, 16067, 16069, 16074, 16076,
   16090, 16092, 16094, 16096, 16098, 16100, 16102, 16104, 16106, 16108,
   16110, 16112, 16114, 16116, 16121, 16122, 16125, 16127, 16131, 16132,
   16136, 16146, 16156, 16169, 16183, 16195, 16207, 16219, 16236, 16242,
   16251, 16257, 16266, 16267, 16271, 16272, 16275, 16286, 16297, 16308,
   16321, 16335, 16347, 16358, 16372, 16390, 16401, 16412, 16426, 16437,
   16451, 16466, 16479, 16490, 16495, 16503, 16508, 16516, 16517, 16521,
   16527, 16535, 16537, 16541, 16545, 16549, 16556, 16557, 16562, 16563,
   16567, 16568, 16572, 16577, 16579, 16584, 16585, 16593, 16592, 16602,
   16603, 16608, 16609, 16610, 16615, 16616, 16617, 16621, 16622, 16626,
   16638, 16647, 16657, 16666, 16680, 16681, 16682, 16686, 16690, 16694,
   16701, 16702, 16703, 16704, 16705, 16706, 16707, 16713, 16724, 16733,
   16735, 16737, 16742, 16743, 16744, 16745, 16746, 16750, 16751, 16752,
   16753, 16754, 16755, 16765, 16766, 16771, 16784, 16797, 16799, 16801,
   16806, 16811, 16813, 16815, 16821, 16822, 16824, 16830, 16829, 16869,
   16920, 16921, 16922, 16923, 16933, 16935, 16941, 16946, 16964, 16954,
   17031, 17049, 17073, 17097, 17103, 17144, 17070, 17211, 17231, 17236,
   17244, 17209, 17265, 17270, 17275, 17280, 17285, 17290, 17298, 17299,
   17302, 17311, 17321, 17339, 17340, 17344, 17345, 17346, 17350, 17351,
   17356, 17357, 17359, 17364, 17370, 17379, 17385, 17394, 17400, 17409,
   17426, 17435, 17458, 17462, 17470, 17473, 17477, 17484, 17485, 17490,
   17496, 17500, 17507, 17517, 17524, 17537, 17538, 17542, 17543, 17551,
   17552, 17557, 17565, 17566, 17571
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "CHANGED_PAGE_BITMAPS_SYM", "CLIENT_STATS_SYM",
  "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM", "INDEX_STATS_SYM",
  "TABLE_STATS_SYM", "THREAD_STATS_SYM", "USER_STATS_SYM",
  "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM", "SEQUENCE_TABLE_SYM",
  "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "master_tls_ciphersuites_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt",
  "create_compression_dictionary_allowed_expr", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "ts_option_engine_attribute",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "alter_database_options",
  "alter_database_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show", "$@46", "show_param",
  "engine_or_all", "master_or_binary", "opt_storage", "opt_db", "opt_full",
  "opt_extended", "opt_show_cmd_type", "from_or_in", "opt_binlog_in",
  "binlog_from", "opt_wild_or_where", "describe_stmt", "explain_stmt",
  "explainable_stmt", "describe_command", "opt_explain_format_type",
  "opt_explain_analyze_type", "opt_describe_column", "flush", "$@47",
  "flush_options", "$@48", "opt_flush_lock", "$@49", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@50", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@51", "$@52", "$@53",
  "opt_replica_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@56", "grant", "$@57", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@58", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@59",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,
    1155,  1156,  1157,  1158,  1159,  1160,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  1307,  1308,  1350,  1351,  1353,  1354,  1355,
     124,    38,    45,    43,    42,    47,    37,    94,   126,  1356,
      40,    41,  1357,    59,    64,    44,    46,    58,    33,   123,
     125
};
# endif

#define YYPACT_NINF -4621

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4621)))

#define YYTABLE_NINF -2897

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6248,  3149,   238, -4621,   -58,   296, 69960,  1665,  2122,  2122,
     -74,  3408, -4621, -4621, -4621, 12486,  3860, -4621, 69960,   238,
     603, 47130, 69960, -4621,    33,  1931,  1002,  1134,   240,  1370,
     238, 69960, -4621,   761,   -36,   238,  1606,   602, 62350, 47891,
     -74, 69960,  3317, 29608, -4621, -4621, 62350,   978,   344, 69960,
     696,  1040,  1408, 69960,   845, 63111,  2335, 21906,  2196,  1307,
     995,  2030, -4621, 16411,  1506,  1809, -4621,  1671, -4621, -4621,
    1462, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, 54740, -4621,   247,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621,  2169,    50,  1275, -4621, -4621, -4621,
   -4621,  2159, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621,   295, -4621, -4621, -4621, -4621, -4621, 63872, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621,  1804, 69960,  1862, 69960,
    1766,  1788, 69960, 60828, 69960, 69960,  1498,  2039,  2073,  2147,
   -4621, -4621,  2200, -4621, -4621,  2122,   -74, -4621, -4621, 69960,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  1552,
   -4621,  1575, -4621, -4621, -4621, -4621, -4621, -4621,  1802,  2213,
   -4621, -4621, 69960, 69960, -4621,  2384,  2225,  2197,  2256,  2024,
   60828,   137, 69960, -4621,  1923,    86,  2225,  2225,  2289,  1044,
    2225,  2296, -4621,  1971, -4621, -4621, -4621,  2200,  2544, -4621,
    1784,  1792,  1800, 21906, -4621,  1813,  1821,  1829, 16411,  1834,
    1842,  1857,  1869,  1898,  1907,  1935,  1937,  1937,  1946,  1949,
    1976,  1984,  -118,  2010, -4621,  2015,   995,  2017, -4621, -4621,
    2026,  2038,  2041,  2060, -4621,  2068,  2103,  2108, 17196,  2117,
    2124, -4621, 40275,  2127,  2140,  2143,  2146,  2167,  2189,  2203,
    2232,  2239, -4621, -4621, 16411,  1946, -4621, -4621, -4621,  2250,
    2267,  2273,  2301,  2304,  2311,  2348,  2358,  2379,  2382,  2387,
    2396,  2399,  2408,  2418,  2423,  1946, -4621,  1143,  2435,  2443,
    1145,  2446, -4621,  2454, -4621,   425,  2455,  1937,  1946,  1946,
    2462,  2463,  2471,  2487,  2490,  2493,  2500,  2503,  2505,  2506,
    2512,  2514,  2516,  2517,  2520,  2521,  2523,  2524,  2526,  2528,
    2531, 21906, 21906, -4621, 21906, 10916, 30370, -4621, 69960, -4621,
   -4621,  1814, -4621, 50174,  3717, -4621,  3265, 21906,  1141, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  2055,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,   969, -4621,
    2532,  2045, -4621, -4621,  2039,  2039,  2039, 69960,  2641,  2039,
    2039,  2161, 69960,  2039,  2395,  2039,  2039,  2039,  2754,  2039,
    2122, -4621, -4621, -4621, -4621,  2858,  2579,  2541,  2608, -4621,
    2370, -4621, -4621, -4621,  2648, -4621,  2533, -4621,  2511, -4621,
    2678,  2533, -4621,   630,  2533,   407, -4621, -4621, -4621,  2533,
   -4621, -4621, -4621, -4621,   974, -4621, -4621, -4621, -4621,   908,
   -4621,  2685,   193, 60828,  2879, -4621, -4621, -4621,  2862, 69960,
     -58, -4621, -4621, 16411, -4621,  2868, -4621,  1568,  2947,  2970,
   -4621, -4621,  2122,  2989,   220, 69960, 55501, -4621,  2122, -4621,
   -4621,  3012, -4621,   308,    75,  2595, -4621, -4621,  2819, -4621,
    2579,  2944,   108,   317, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, 12486,  3317, -4621, -4621,   182,  2822,
    -166, -4621, -4621, 50935,  1315, -4621,   213, -4621, 73765, -4621,
    3113, 31132, 52457, -4621,  2545, -4621, -4621, -4621, -4621, -4621,
   -4621, 72243,  2547,  1144,  8390,  2819, -4621, -4621,  1022, -4621,
     797, -4621,   797, -4621,  2551, -4621, 69960, 69960,   -58, -4621,
   -4621, -4621, -4621,  2559,  2555, -4621, 69960,  2557, -4621,  2563,
   -4621,   571,   571,   571,  3248,   571, -4621,   571,  3581,  2564,
    2572,  3297,  3197,  2202,  3198, -4621,  3158,  3246,  1847,  2578,
     262,  1446,  2159, -4621, -4621,  2585, 69960,  1937, -4621,  2580,
     385, -4621, -4621,  2583, -4621,   390, -4621,   -16,  3202,  3211,
    3212, -4621,  2588, -4621, -4621, -4621, -4621,     8, 28846,  3125,
    2169, -4621,  1825,  3331,   474,  3107, -4621, 53218,   474,  3107,
   -4621, -4621,    50,   147,  1889,  3091,  3192,  3229, -4621,  2492,
   56262,   111, -4621, -4621, 55501, -4621, 69960, 69960,  2643, 60828,
   -4621, 69960, -4621,  3007,  3011,  4086, 69960,  3223, -4621, 69960,
   69960,  2875, -4621, 69960, -4621,   343, -4621,  1696, 16411, -4621,
   69960, -4621, -4621,   140, -4621,   230,  1289,  1648,  2219, 69960,
   69960, 69960,  2890,  3220, 69960,  2702,  3405, 69960, -4621,  3151,
   55501, 76809, 69960, -4621,  3153, 69960, 69960,  2225,  1376,   208,
   -4621, -4621, 16411, 16411,  1204,  3347,  3414,  3414,  3414,  2747,
    2796, 16411, 16411, 16411, 16411, 16411, 16411,  2079,  2650, -4621,
   -4621,    31, -4621,  2653, 16411, 16411, -4621, 16411, 16411, 69960,
   -4621,  5534, 16411, 16411,  1094,  3296, 16411, 16411, 16411, 10916,
    6090, 16411, 16411, 69960,  3430,  2656, -4621,  2662,  2235, 16411,
   16411,  2265, 16411, 16411, 16411, 16411, 16411, -4621, -4621, 16411,
   16411, 21906, 16411, 16411, 16411, 16411, 16411, 16411,  2661, 16411,
    3414,  3414, 16411, 16411,  2278, -4621, -4621, 16411,  3554,  3554,
   -4621, 16411, 11701, 16411, -4621, -4621, -4621,  2669, -4621, -4621,
   -4621, 69960,  3414,  3414, 16411, 16411, 16411,  3414,  3414, 16411,
    2671,  2672, 16411, 16411, 16411, 16411, 16411, 28084,  2677,  2680,
    2683, 21906,  3347,  3347,  3347,   917,   149,   233,   268,  1018,
   -4621,  2965, 16411, 16411, -4621, -4621, 64633, -4621, -4621, -4621,
   16411, -4621, 16411, 16411, -4621, -4621, -4621, -4621, -4621, -4621,
    1717, -4621, -4621, -4621, 17981, 21906, 21906,  2689, 21906, 21906,
   -4621, -4621, 21906, 21906, 21906,  3195,  2806, 21906, 21906, 22691,
   23476, 21906, 21906, 21906, 21906,  1471,  3347, 60828, 21906, -4621,
   -4621,  2055,  2055, 16411, 43319, 69960, 69960, 69960,  3094, 69960,
   69960, 60828,  2771,   196, 69960, 69960, 55501, 69960, 76809, 69960,
   69960,  2039,  2871,  4701, 33418, -4621, -4621, -4621, -4621, -4621,
    2920, -4621, -4621, -4621, -4621, -4621, 69960, -4621, -4621, 55501,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, 60828, -4621,   986,
   55501, 48652,   228, -4621, 70721, 69960, -4621,   -58, -4621,  3012,
    2969, -4621,  2706,  2747,  3449, -4621, -4621,  3221,  3470,  3471,
   69960, 69960,  -117, -4621, -4621,  3473,  3222, -4621, -4621,  2720,
    2923, 69960, 69960, -4621, 69960, 69960, -4621, -4621, -4621, -4621,
   -4621,  2723, -4621, -4621,  2055,  5239, -4621,  2725, 55501, 55501,
     986,  3026,  1648,   303, -4621, -4621, 75287, 69960, -4621, -4621,
   -4621, -4621,  3450, 16411, -4621, 55501,  2792,  2956,  3256,  1037,
   -4621,  2745,  2749, -4621,  2878, -4621, -4621,  2755, -4621,  2753,
   69960,  1159,  1144, -4621, -4621, -4621, -4621, -4621, 69960,  2756,
     213, -4621,  2547,  1144, 31894, -4621, 10131,  3377, -4621,   920,
    2764,  1808,   920, 57023,  3107,   301,   287,   307,   271, -4621,
    3361, -4621,  3013,  2994, -4621, -4621,   591,  3683, -4621,  3393,
   -4621,  3339, -4621,  3019,  3107, -4621,   920,   920,   920,   920,
     920,  3352,   920,  3023, -4621,  3281,  3413,   814,  2300,   532,
     -37, -4621,  1043,  3483, -4621,  2787, -4621, -4621, -4621, -4621,
    2789, -4621,  3396, -4621, -4621,  2706, 18766,   845,  2557, 69960,
   69960,  3571, -4621, -4621,  2813, -4621,  3226,  3049, -4621,  2968,
   -4621, -4621,   201, -4621, 69960, 16411,  1705, -4621,   233, -4621,
   55501,  3466, -4621, -4621, -4621,   279, -4621,  3455, -4621, -4621,
    2836,  2889,  3572, 60828,  2967,  2894,   242, -4621,  1083, 55501,
    2996,   -58,   -58,   -58,   247, -4621, -4621,  2115,  3054,  3054,
   60828,  2850, -4621, -4621, -4621,  3134, -4621, -4621,  1825, 16411,
   -4621, -4621,  2159, -4621, -4621, -4621, -4621, -4621, -4621,   375,
   -4621, -4621,  2159, -4621,  3107,  3107, -4621, -4621, -4621, -4621,
   65394,  1889,  2862,  3229, -4621, 60828,  3551, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  1136,
   -4621, -4621, 69960, 69960,  1477,   923,  3638, -4621,  2867,  3539,
    1144,  1144,  3539,  1144,  1144, -4621,  3067, -4621,  1144,  1144,
     141, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
    3493,  3106,  1144,  2428,  3251,  1144,  1144,  3580,  1144,  3257,
    3258,  1144,  1144,  1144,  1144,  3078,  3526, -4621,  1144,  3407,
      79,  2975,  3409,  1144,  3270, -4621,  1386,  3536,  1144,  1144,
    1144,  1144,  1144,  3580,  3272,  3627,  1144,  1144,  3275,  1801,
    3278,  3283,  1144,  3100,  1144,  1144,  1144,   358,  1144,  1144,
    3285,  1144,  3068,  3070,  1144, -4621, -4621,  1144,  1144,  1144,
    6206, -4621, -4621, -4621,  2372, -4621, -4621,   131, -4621, -4621,
    2905,  2906, -4621, -4621, -4621, -4621,  3191, -4621,  2992, -4621,
    3227,  3075, -4621,  2875,   152, 66155, 69960, -4621, -4621,  2931,
    2934,  1969, -4621,  2747,  2939,  2936, -4621,  5520,  3667, -4621,
   -4621, 69960, -4621, -4621, -4621, -4621,  3114, -4621, -4621, -4621,
   -4621,  2310, -4621,  3671,  3286, -4621, -4621,  3564, -4621,  3353,
    3731,  3024,  3629,  3368,  2225,  3539,  3133,  3741, -4621,  3522,
   -4621,   150,  2753,  3159, -4621,  2978,  1582, 69960,  3555,  2225,
   69960, 69960, 69960, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   69960, -4621, -4621, -4621, -4621, -4621, -4621,  2875,   340,   525,
   -4621,  3414,  2982, 16411,  2983,  2984,  2990, 16411,   200,  1620,
    1211,  1286,  1765,  1570,   260, 16411,  2991, 13271, -4621,  2997,
   -4621, -4621,   377,   394,  1611,  1636,  2998, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621,  3576, -4621,   396,
    3002, -4621, -4621, -4621, -4621,  3005, -4621, 16411,  1650,   398,
     414,   290,  3014,   527,  1806,  1870,  3016, 69960, 69960,  3414,
    3010,  1660,  1724,  3414,  3022,   556,  1742,  1881,  1915,  1920,
     597,  1968,  3560,  1752,   623,   677,  1774,   699,   774, -4621,
    1779,  3025,  3027,   877,   321,  3414,  3029,   292,  3008,  3009,
    1789, 14056, 14841, 15626,   315,   963, -4621,  3030, -4621,  2662,
    3031,  3032,   338,   246,  1819,  3015,  3040,  1993,  3136,  3136,
    1824,  1205,  1865,  1205,  1233, 60828,  3042, -4621, -4621, -4621,
   -4621,  3136,  3136,  3136,   188,   168, -4621, 16411,  3038,  3044,
    3046, 60828, 16411,   250, -4621, -4621, -4621,  2675,   288, -4621,
   -4621, -4621, -4621, -4621,  1378, -4621,  3017, -4621,   995,  2628,
    3051, 10916, -4621,  1664,  3051,  4290,  1986,  1986, 21906, -4621,
    3055,  2812,  3043, 17196,   914, 17196,   914,  3051,  3051,  3051,
   -4621, 21906,  3058, 21906, 21906, -4621,  3347, -4621, -4621, 50174,
    3059,  3061, -4621, -4621,  1271, -4621, -4621,  3066, 69960,   196,
   -4621, -4621,  2039, -4621, -4621, -4621,   146, -4621, -4621,  1009,
   -4621,  3069,   204,  2753,  3661, -4621, 69960,  3072, -4621,  3573,
    3575,  3578,  3587, -4621, -4621, -4621, -4621,  3589, -4621,  3594,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  3073, -4621,
   69960, 27322, 60828, -4621,  3082, -4621,  3703, -4621,  3490, -4621,
   -4621,  1995,  3299, -4621, -4621, -4621, -4621, 44080,  -153, -4621,
   -4621, 69960, -4621,   176,   243,  5010,  3244, -4621,  2706, 69960,
     -58,   -58, 69960, -4621,  3648, -4621, -4621,   342,  3102, -4621,
    3105, 60828, -4621, -4621,  1657,   420, 55501, 55501,  3109, -4621,
    3309,   395,  3494, -4621,  3313,  3885,  3885,    75, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621,  3116,  3739,  3692,  3525,  3707,  3069, 44080, -4621, 69960,
   -4621, 25028,  3244, -4621,  3713,  3332,  3333,  -140, -4621, 57784,
   -4621,  2747,  1031,  3458, -4621,  3458,  1880, -4621, -4621,  3662,
   -4621,  3492, -4621, 76809, -4621, 60828, 76809,  3729,  3142,  3144,
    3148,  3152,  3154, 73004, 16411, -4621, -4621, -4621, 10131,  3150,
   -4621, 73004, -4621, -4621, 21906,  2015, -4621, -4621,  2379, -4621,
    2747, -4621,  3688,  2055, 16411, -4621, -4621,  3165,  2225, 69960,
   69960, 69960, 69960, 69960, 55501, 69960, -4621, -4621,  1285, -4621,
   -4621, -4621, -4621,   920, 69960, -4621, 69960,   920, 55501, -4621,
     301, 69960,   920, -4621,  3689,  3381, -4621, -4621, -4621,  3771,
   -4621, -4621,  3761,  3171, -4621,  3688, -4621,   301, -4621, -4621,
   -4621, -4621, -4621, -4621,  3763, -4621,  3396, -4621, -4621, -4621,
     301, -4621, -4621, -4621,   301,   301,   301,   920,   920, -4621,
   -4621,  3446,  1022,  3354,   797,  3903, -4621,  2015,  2747,  3185,
    3182, -4621, -4621, -4621,  2019, -4621,   995,   571,  3568, -4621,
    3781, -4621, -4621, -4621, -4621, -4621,  1698,  1867, -4621,   184,
     215,  3574,   310,  3193,  1144, -4621, -4621, -4621, -4621,  3582,
    1077, -4621, 76048,  3584,  1154, 60828,  3406,  3417, -4621, -4621,
    3420, -4621, -4621,   476,  2012, -4621,  2482,   330, -4621, -4621,
   -4621, -4621, -4621, 69960,  3310, -4621,  1840, -4621, -4621, -4621,
   -4621,  2686, -4621, 32656,  3643,  2599,  3210, -4621, -4621, -4621,
   53218, 53218, -4621, -4621, -4621, -4621, 69960,   117, -4621,  3214,
   -4621, 25795, -4621,  2827,  3617,   173, -4621, -4621, -4621, -4621,
   -4621,  2155,  2199, -4621, -4621,  3938,  3524,  3746,  3750,  3416,
    2199,  2820,   -58,  2717, -4621,  2569,   -58,  2717,  2569,  2569,
   69960,   -58,  2827, -4621,  2860,  1144, -4621, 69960,  1969,   238,
    1969, -4621,   216, 69960, 41036, 66916, 69960, 69960, 69960, 69960,
     238,  1091,  3829, 69960,  3829, 67677,   238,   -58,   -58,   -58,
     -58,  2686,  1144,  3829, -4621, 67677, -4621, 69960, 69960,  3755,
   69960,  3767, 69960, 69960, -4621, 60828, 69960, 67677, -4621,  1144,
    1117,  3829, 68438,  1091,  1091, 69960,   238, 69960,  1722,   -58,
     238, -4621, 69960, -4621, -4621, 69960, 69960,   238,   238,  2149,
   -4621,  1722,  1722,  1768, -4621, -4621, 69960,  3829, 67677,  3224,
   -4621, -4621, 58545,   -58,   -58,  2827, -4621,  1144,  1144,  3621,
   -4621, -4621,  4355,  9102,  2097,  1144,  3324,  3654,  1743, 69960,
   -4621,  3360,  3373, -4621, -4621, -4621, -4621, -4621,  1969, 67677,
   69199,  3785, -4621, 16411,  3887,  3891,  3893,  3895,  3896,  3898,
    3899,  3901,  3906,  3908,  3910,  3914,  3918,  3922,  3923,  3927,
    3928,  3931,  3932,  3934,  3936,  3944,  3945,  3947,  3948,  3950,
    3952,  3957,  3958,  3960,  3962,  3963,  3972,  3973,  3974,   121,
   -4621, -4621,  3982,  3991,  3992,  3993,  3996,  3998,  4000,   126,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621,   192, 69960,  3416,
    3453,  3529, 69960,  1657, -4621,  3878,  3469,  3539,   276,  3514,
   55501,  3710,  1144,  1140,  1110,  1110,  3794, -4621,  7965, 69960,
   69960,  3397,   -51, -4621,   524, -4621, 19551, -4621,  3395,  3136,
    2747,  3136,  3136,  3136,  2607, 16411, 16411,  4025,  4331,  1095,
   -4621, 59306, -4621, -4621, -4621, 59306,  4331,  2051,  3136,  3400,
   -4621,  3939,  3940, -4621, -4621, -4621, 16411, 16411, -4621, 16411,
       9, -4621, 16411, 16411, 16411, 16411, 16411, -4621, -4621, 21906,
   -4621,  3401,  3402,  3136, -4621, -4621,  3410,  3136, 16411, -4621,
   -4621, -4621, -4621, 16411, -4621, 16411, -4621, 16411, 16411, -4621,
   16411, 16411, -4621,  3136,  3136, 20336, 16411, 16411,  3412,  3136,
   -4621, 16411, 16411, 16411, -4621, 16411,  2006, 16411,  2286, 16411,
    2690, 16411, -4621, 16411, -4621,  3136,  3136, -4621, 16411,  1287,
   -4621,  3829, -4621,  3414,  3136, -4621, 41797, -4621, -4621,   145,
   28084,  3422,   145,  3424, 21906, -4621,  3136, -4621, -4621, -4621,
    1533,  2070, -4621, -4621, -4621,  3403,  2747, -4621, -4621, -4621,
   -4621, -4621, -4621, 21906,   350, 21906,  4290, 21906,  6090,  6090,
    2805, 10916, -4621,  1823,  4290, -4621, -4621, 16411, 16411, 44841,
   69960,   438, -4621,  1657,  1272, -4621,   371, -4621, -4621, 55501,
   -4621, -4621, -4621, -4621, -4621,   204, 60828,  3423, -4621, -4621,
   -4621, -4621, -4621,  3396, -4621,  5095,  3105, -4621,  3622,  3623,
    3635, -4621, 34942, -4621, -4621, -4621, -4621, 34942,   122,   986,
   -4621, 69960, 55501,  3427,  3428,  3431,  3633,  3565, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  3244,
    3439,  3107, -4621,  3494, -4621, -4621,  3425, -4621,  1696,  3054,
    1067, 69960, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, 16411,   -58, -4621,  3644, -4621, 69960, 69960, -4621,
   -4621, -4621, -4621,  1064, -4621,  3441,  3460, -4621,  1657, -4621,
   -4621,  3396,  3396, -4621,  5239, 27322,  3841,   986, 55501,  4037,
   -4621, -4621,  3456,   995,  3457, 24261,  3504, -4621,  3454,  3218,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  3494,  3090,
    4029,  3244, 76809, 76809, 76809, -4621, -4621, -4621,  3509,  2956,
    2956,  3520,  3520,   267,  3816, -4621, -4621, -4621, -4621,  2753,
   -4621, -4621,  2827, -4621, -4621, -4621, -4621, -4621,  1144,  2747,
   -4621, 31894, -4621,   -58,  4056, -4621,  2747,  3475, 69960, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621,  3645,   920, -4621, -4621, -4621, -4621, -4621,
    3830,  3107,  3683,  4056,   920, 55501, -4621,   920, 69960, 69960,
     920, -4621, -4621,  4062, -4621,  3219,  3649, -4621,   -58, -4621,
   18766, -4621, 69960, -4621,  3477, -4621,  3929, 69960,  4108,  3486,
   21906,  3487, 21906,  2827,  3714,  3488,  4258,  3829,  3054, -4621,
    3458,  3867, -4621, -4621,  2753, -4621,  3817,  3870,  3520,  1683,
   -4621, -4621, -4621, -4621,   526,  3829,  3829,  3829,  3829,  2482,
   -4621,   136,  1128,  1242,  2827,   224,   330, -4621,  3491, -4621,
   -4621, 59306,  4206, -4621, -4621, -4621, -4621, -4621, -4621, 16411,
   -4621, -4621,   -73,   264,  1168, 25795, 69960, 45602, -4621,   -64,
   -4621, -4621, -4621, -4621, -4621, -4621,  1144, -4621,  1144,   -58,
    3748,  3749,  3752,  3753,  3754,  3791, -4621, -4621, 69960,  3921,
   -4621,  3829,   -58,  1258,   -58,   -58,   -58,   -58,  3829,   -58,
     -58,  2095, -4621, -4621, -4621,   280, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, 60828, -4621,
   -4621, -4621, 69960,   847, 69960,  3508,  4033,  4038,    38, 69960,
    1969,  3527,  3677,  3708, 51696, 85912, -4621, -4621, -4621,  3937,
    3937,  2186,   286, 67677, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, 69960, -4621, -4621,
    2310,  3521, -4621,  2827, -4621, -4621, -4621, -4621, 53979,   -58,
   -4621,  3744, -4621, -4621, 69960,  3521, -4621, -4621,   333, -4621,
    3668,  3756,   -58, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, 85912, 67677,  3531, -4621,  1224, -4621, -4621,
   -4621, -4621, 67677,  3727,  3734, -4621, 69960, 67677, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, 69960, -4621, -4621, -4621, -4621, -4621, 57784, 59306,
   -4621,  2946,  3634,  6206, -4621, -4621, -4621,  2905, -4621, -4621,
   -4621,  1009,  3951,  1144,  2221,   717, -4621,  3861, -4621, -4621,
    2563,  3949,  3961,  3537, -4621,  3542, -4621,  3540, -4621, 66155,
    2747,  3546,  3829,   -58,  3829,  3829,   -58,   -58,  1091,   -58,
    3829,  3829,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
    3829,  3829,   -58,  2381,   -58,  3829,   -58,  3829,   -58,   -58,
    3829, 60067,  1130,  3829,  1172,  2827,  5520, -4621,  3549,  3549,
    3563,  3563,  3566,  3566,  3567,  3667, -4621, -4621,   236, -4621,
    3569,  3472,  1657, 60828,  3583, -4621,  4128,  1144,  1144,  1144,
    1144, -4621,   283, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621,  1009,  1280, 60828, 76809,
   -4621,  2996,  1071,  3788,  3595, -4621,  2055, -4621, -4621, -4621,
   -4621, -4621, 69960,  2202, -4621, 69960, -4621, 38752, -4621, -4621,
   -4621, -4621,  1374,  1450, -4621,  1825,   147, -4621,   439,  3900,
   -4621, -4621,   263,  3588, -4621, -4621,   592, 17196,  1893,  3136,
   -4621, -4621, -4621, -4621, -4621, 16411,  2747,  2626, -4621,  3597,
    3597,  3598, -4621,  3600,  3967,  3597, -4621,  4302, -4621, -4621,
    4137,  3598,  4138, -4621,  3597, -4621,  3665,  4354,  3637,  3606,
    3613,  3614,  3136, -4621,  3136, 16411, 16411,  1903,   359,  1909,
    4348,  3902,  1247,  1257,   364, -4621,  1950,  4116,  3136, -4621,
    3136, -4621,  1959,  2075,  2089,  2119,  1492,  2162,  2096, -4621,
   -4621, 17196,  2175,  1039,   369,  3136, -4621,  2223,  1530,  1548,
    2242, 16411,  2244, 16411,  2246, 16411,  2248,  2253, -4621, -4621,
    2263,  3619,  3619,  3615,  3620, -4621, 69960, -4621, -4621, -4621,
   -4621,  3715,  3716,  3136,  3624,   145,  3136,   145,   199, -4621,
    -125, -4621, 69960, -4621, -4621, -4621, 16411,  1141,   211, -4621,
   -4621, 21906,   384, 21906, -4621,  3626, -4621, -4621, -4621, -4621,
    4117,  4393, -4621, -4621,  3863, -4621, -4621, -4621,  3072, -4621,
   -4621,   539,  4254,  3630, -4621, -4621, -4621, -4621, -4621, 44080,
   -4621,  -146,  3646, 46363, 55501,  4034,  3107, 18766, -4621,  3608,
   69960,  1969,  4191,   214,  3782,  4146, -4621, -4621, -4621,  2747,
   -4621, 55501, -4621, -4621, -4621, 69960, 69960,   845, -4621, 36466,
   -4621, -4621, -4621, -4621,  3653, -4621, -4621, -4621,  4275, -4621,
    4240, 44080,  3069, 55501, 16411,  3090, 16411,  3656,  3669,  3672,
    3674,  3678,  3681, 25795, 25795,  4190,  4205, -4621,  4058,   947,
    4058, -4621, 39513, 25795, 25795,  2814,  2563,  4417,  4250,  4029,
    2753,  2753,  2753,  3458,  3458, -4621,  4366, -4621, -4621, -4621,
   -4621, -4621, -4621,   318, -4621, 10131, -4621, -4621,  1091,  3107,
     528, -4621, 55501, -4621,  4097, -4621, -4621,  3107, -4621,  3856,
   -4621,   301,   301, -4621,  3977,  4316, -4621,  4318, -4621,  3694,
    4322,  4082, -4621, -4621, -4621,  3829, -4621, -4621, 69960,  3173,
   69960,  3999, -4621,  4439,  3709, 21906,  4333,  3711,  4267, -4621,
    3520,  3458,  2956,   979, -4621,   996,  1308, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621,  1581,  4395,  2536,  4255, -4621,
   -4621, -4621,  2055,  2055, -4621, -4621, -4621,   226,  4228, -4621,
   25795,  3494, 45602,  1181, -4621, -4621,  3722, 69960,  1722,   -58,
   -4621, -4621, -4621,  4399, -4621,  4400,  1888,  4143,  4361, -4621,
   -4621, -4621,   322, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621,  2820, -4621,  3736,  2827,  4129,
    3760, 16411, 69960, -4621, -4621,  3802, -4621, -4621,  3766, -4621,
   42558,  1110,  1110,  2104, -4621, -4621, -4621, 85912, -4621,  3597,
    3597,  3597, -4621, -4621,   332,  3598, -4621, -4621,  3768, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621,   535,  2870, -4621,
   -4621,   535, -4621, -4621, -4621,   304,  2076, -4621, -4621, -4621,
   -4621, -4621,  3772, -4621,  3597,  3598,  3598, -4621, -4621,   535,
    3597, -4621,  3597,  4092,  3592, -4621,   219,  3597,  3597,  3597,
    3773,  3600, -4621, -4621, -4621, -4621, -4621,  4409,  4410, -4621,
   85912, -4621, 69960, -4621,  3450,  3450, -4621, -4621, -4621, -4621,
    3985, -4621, -4621,   462, -4621, 69960, -4621, -4621, 69960, 69960,
      47,  1064,  3775, -4621, -4621, -4621,  3793,   389, -4621,   336,
   -4621, -4621,  3661,  1384,  1901,  3971,  2360, -4621, 69960, 69960,
   -4621, -4621, 69199, -4621,  3829, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, 37228, -4621, -4621,
   37990, -4621, -4621,  -105, -4621, -4621,  2132, -4621, -4621, -4621,
   42558,  1144,  1144, -4621,   326, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621,  4176, 42558,  1627, 69960,   -58,  2569,
    2569,  2827,  3242, -4621,  4159, -4621,  2308,  2753,   330, -4621,
   -4621,  2992, -4621,  3797, -4621, -4621, 69960,  2125, -4621, -4621,
    6842,  1825, -4621,   263,  4195, 69960, -4621, -4621, -4621, -4621,
    4063, -4621, -4621, -4621, -4621,  4200,  6090, -4621, -4621,  2747,
   16411,  1081, -4621, -4621,   535,  4207, -4621,  1336, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621,  3800,  4331,  4337, -4621, -4621, -4621, -4621, -4621,  6090,
    6090, -4621, -4621, 16411, -4621, 16411,   571,  3803, 16411, 16411,
   -4621, 16411, -4621,   374,  3804,  3946, -4621, -4621, -4621, -4621,
   -4621, -4621, 16411, -4621, -4621,  6090, -4621, 16411, -4621, -4621,
   16411, -4621, -4621, 16411, 16411, -4621,  2269, -4621,  2282, -4621,
    2292, -4621, -4621, -4621,  2827,  3807,  3812,  3829,  3136, -4621,
    3813,  4194, -4621, -4621, -4621, 16411, -4621,  3136, -4621,  3136,
    4402,  4331,  1576, -4621,  2137, -4621, -4621, -4621, 16411,  1141,
   -4621, -4621, -4621, -4621, -4621, -4621,  4163, -4621,  4967, 34942,
    4017,  4391, -4621, -4621, -4621, -4621,  1321, -4621, -4621,  2148,
   69960,  4581,  4225, -4621,  1969,  4191,  4339, -4621,  4364, -4621,
   -4621, -4621, -4621,  3832,  3521,  3826, -4621,  1144,  2485,  2160,
   -4621, -4621, -4621,  3828, 18766,  3831, -4621, 27322, 55501,  4421,
    3069,  1559,  2563,  2302, 25795, -4621, -4621, -4621, -4621, -4621,
    3218,  3833,  3834,  3839,  3218, -4621, -4621, -4621,  4372, -4621,
    4058,  4058,  4373,  4374, -4621,  3384,  3528,   574, -4621, 16411,
   16411,  3924,  4250,  3520,  3520,  4232,  2827, -4621, -4621, -4621,
   -4621, -4621,  3069, -4621,  3396, 55501,  3244,   920, 16411,   -58,
     -58,  2276,   -58,  4477,  4513, -4621,  2191, -4621, -4621,  2215,
   -4621,  4365,  4129, -4621,  4071,  2827, 69960,  4593, -4621,  3520,
    3520,  2956, -4621, -4621, -4621,  3520,  4241,  1016, -4621,  2827,
   -4621,   187, -4621, -4621,  3700, -4621, -4621,  4596,  4598,  4494,
    4600,   226, -4621,    -3, -4621,  1181,  3244,  1253, -4621,  3875,
   -4621,  1327, -4621, -4621, -4621, -4621, -4621, -4621,  4173, -4621,
    1035, -4621, 42558, -4621, 69960,  2218, -4621, 42558,  2320,  3872,
   -4621, 42558, 16411, -4621,  2224, -4621,   221, -4621, -4621, -4621,
   51696,  4092, -4621, -4621, -4621,  4619,   501, -4621,  4620, -4621,
     535, 59306, -4621, -4621, -4621, -4621,   571, -4621,     1, -4621,
     535, -4621, -4621,  4035, -4621, -4621, -4621,   571,   535, -4621,
   -4621, -4621, -4621,  1428, 69960,   462, -4621, -4621, 57784,  2586,
     -58,  4084,  3935, -4621,  4050, -4621,  4539,  1072,  4403,  1657,
    1144,  1144,  4405,  4605, -4621, -4621,  4220, -4621,  4467,  4408,
      39, -4621,  4637, -4621,   535,  4637,  1428,  4301, -4621,  1428,
    1428, -4621,  4760,   462, -4621, -4621, -4621, 69960, 69960, -4621,
   -4621, -4621, -4621, -4621,  3907, -4621, -4621,  4307,  3951, -4621,
    4309, -4621, -4621,  4259, -4621, 16411, 16411,  4308, 69960,  4313,
   -4621,  4615,  4672,  3521,  1392, -4621,  2226, -4621, -4621, -4621,
    2236, -4621, -4621, -4621,  2274, -4621, -4621,  3915, -4621,  2284,
   -4621, -4621, -4621, 69960, -4621,  2294,  2313,  2569,  2569,  3366,
    1627,  3916,  2319,   -58,   -58,   -58,   -58, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621,   996,  1437,   224,  3324, 42558,  3913,
    8090, -4621,  4184,  4214,  3926,  3925, -4621, 85912,   -58,   346,
   69960,  1343,  2747,  3930,  3941,  3954,  3956, -4621,  3959,  2328,
   -4621,  3665, -4621,  2055,  3964,  3965,  2329,  3933, -4621, -4621,
    3136,  2394,  1565,  2334,  4370,  4438, -4621,  4280, -4621,  2430,
    1579,  2438,  2508,  2548,  2565, -4621, -4621, -4621, -4621, -4621,
   -4621,  3942, -4621, -4621,  4668,  4332,  2747, -4621, -4621,  1896,
     145, -4621,  3478, -4621, -4621,  3966,  1576, -4621,  4341, -4621,
    2342,  4546,  4440, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, 55501,  4343,
    4519,  4710,  3244,   231, 69960,  4225,  4585, -4621, -4621, -4621,
    4172, -4621, 69960, 18766, -4621, -4621,  2485, 69960, 43319,  3968,
    3653, -4621,  3069, 55501,  1533, -4621,  3139,   223, -4621, -4621,
    4481,  4483, -4621, -4621, 16411,  3976, 16411,  3978, -4621, -4621,
    1969,  1969, -4621,   574, -4621, -4621,  2747,   992, -4621,  2747,
   69960, -4621,  3924, -4621, -4621, -4621, -4621, -4621,  3069, -4621,
   -4621,  2747, -4621, -4621, -4621, -4621,   -58,  4582,  4338, -4621,
   69960, -4621,  1811,  2350, -4621, -4621,  3970,  3969,   -58, -4621,
   -4621,  3520, -4621,  3520,  2956, -4621,  4632, -4621, -4621, -4621,
    4633,   571,   571,  4709,   571, -4621,  4712,  4714,    -3, -4621,
   -4621,  4375,  4375,  4386, -4621,  2359,  4145, -4621,  4129,  2373,
   -4621, 69960,  2393,  2577,   946, 42558,  4404, -4621, -4621, -4621,
   -4621, -4621, -4621, 59306, -4621, -4621,  4637,  2404, -4621, -4621,
   -4621,  2406, -4621, -4621, -4621, -4621, -4621,  1428, -4621,  3988,
   -4621,   486,  4142, -4621, -4621, -4621, -4621, -4621,  3622,  3623,
    3635,  2381,  2381, 16411, -4621, -4621, -4621, -4621, -4621, -4621,
    4413,  4164, -4621, -4621, -4621, -4621, -4621, -4621,   -58,   -58,
   -4621, -4621, 57784, -4621,  4769,  4765, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621,  4004, -4621, -4621, 16411, -4621, -4621,  2098,
   -4621,  4129, -4621, -4621, -4621, -4621,  2747,  6090,  4711, -4621,
   -4621,  4282,   -58,  4653,  2202,  4425, -4621, -4621,  3829, -4621,
   69960, -4621, 69960, 69960, -4621,   -58,  4014, -4621,  4021,  1158,
   -4621, -4621, -4621,  2820,   586, -4621, -4621, -4621,  4574, -4621,
    4401, -4621, -4621,  2221,  2412, -4621, -4621,   -58,  1901, -4621,
   69960,  3450, -4621, -4621, -4621, -4621,  4023,  4022, -4621, 69960,
    4614, -4621, -4621, -4621, -4621, -4621, -4621,  4441,  4036,  4794,
   -4621, -4621, -4621, 16411, -4621, -4621, 16411, -4621, -4621,  4474,
    4646, -4621, -4621, -4621, -4621, -4621, -4621,  4039,  3829, 16411,
    4773,    10, -4621, -4621,  3136, -4621, -4621, -4621,  4444,   202,
   -4621, -4621, -4621,  1321, -4621,  4442, 55501, -4621,  3107,  4225,
    2563, -4621,  4560, 69960, -4621, -4621, -4621, -4621, -4621,  4040,
   -4621, -4621,  3069,   265, -4621, -4621, -4621, -4621,  2747, 69960,
    2747, 69960,  4631,  4631, -4621, -4621, 16411, -4621,  4807,  4045,
   -4621, -4621, -4621,   -58,  4674, -4621, -4621,  4051,  4258, -4621,
   -4621,   324, -4621, -4621,  3520, -4621, -4621, -4621, -4621,   571,
   -4621,   571,   571, -4621,  4556,  4556,  4675,  1158,  2179,  4671,
   -4621,   586,  2427, -4621,   946,  1224,   -58,  1144,  1144,  1144,
   -4621,   946, -4621, -4621, -4621, -4621, -4621,  4068, -4621, -4621,
     535,   571,   535, -4621, 69960,  4520,  4094, -4621, -4621, -4621,
    2584, -4621, -4621, -4621, -4621, -4621, -4621,  4074,  2597, -4621,
   -4621,  2436, -4621, -4621, -4621, -4621, -4621,  4221, -4621,  4177,
   -4621, -4621, -4621, -4621, -4621, 69960, 69960,  4462,   438,  1158,
   -4621, -4621,  2437,   438,   586, -4621, -4621,  4813, -4621, -4621,
     946, -4621,  4308,  4389, -4621, -4621, -4621,  1695, 85912,  4716,
    4087, -4621,  4755, -4621,  2601, -4621, -4621, -4621,  4088,  4085,
   16411, -4621, -4621, -4621, -4621,  3512, -4621,  4715, -4621, -4621,
    4710, -4621,  4235, -4621, -4621, -4621,  4264,  3494,  4098,  4093,
    4099,  4100,  1470,  4103,  4104, -4621,  4118, 69960, -4621,   -58,
    3396, 21906,  4120,  4743,   863, -4621, -4621, -4621, -4621, -4621,
   -4621, 53218, -4621, -4621, -4621, -4621,  4121,  4330,  1144,  4771,
    4772,  1144,  1144,  1144,  1144,  4131,  4671, -4621,  4751, -4621,
    4092, 69960, -4621, -4621, -4621,  3829,   -58,   -58, -4621,  1224,
   -4621, -4621, -4621,  2448, -4621,  1469,  4534, 69960, -4621, 16411,
   -4621, -4621,  4377, -4621, 83658,   378, -4621, -4621,  4132,  4133,
    2196, -4621, -4621, -4621, -4621, -4621,  1657,   438,  2360, -4621,
   85912, -4621, -4621,  3450,  4432, -4621,  3598, -4621, -4621,  3210,
    3596,  4433, 16411,  4233,  4245, -4621, -4621,  4236,  4237, -4621,
    4266, -4621, 69960,  2686, 71482,  3139, -4621, -4621,  4879, -4621,
    4882, 69199, 69199, -4621, -4621, -4621, -4621,  4229, 69960,  1144,
    4397, -4621, -4621,  4154, -4621, -4621,   372,   -58,  1144,  1144,
    1657,  1657,  2827, 69960,  4380, -4621, -4621,  1144, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, 69960, -4621, -4621, -4621,   508,
   -4621, -4621,  2605, 16411,  4781,  4303, 69960,  1487, -4621, 85180,
   85180, 69960, -4621, -4621, -4621, -4621,  7069, -4621, -4621,  1080,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621,  4909, -4621,  4155, -4621, -4621, -4621, -4621,  4880,  4558,
    4881, -4621, 69960, -4621, -4621, -4621,  4615,  3450,  4590, -4621,
     274,  4165, 16411,   545, -4621,  4928,  1476,  1758, -4621,  6090,
   -4621,   325, -4621, -4621, -4621, 74526,  3826,  4469,  4246,  2456,
   -4621,  9174, -4621, -4621, -4621,  4171,  2459,  4406,  2469,  3054,
   -4621, -4621,  2475, -4621, 21121, -4621, -4621, -4621, -4621,   -58,
     -58, -4621, -4621, -4621, -4621, 60828,  2478, -4621, 60828, -4621,
    1355,  1355,   -31,  2747, 16411, -4621, 16411,  4319, -4621, -4621,
    4758, 69960, -4621, -4621, -4621, -4621, 16411, -4621, 83658, 83658,
   -4621, -4621, -4621, -4621,  4929,  4577, -4621,  4578,  4183,  4822,
   -4621, -4621, -4621, -4621,  4837, 83658, -4621, -4621, 60828, -4621,
   -4621,  6090, -4621,  3596, -4621, -4621,  4281,  4488, -4621,  4285,
   -4621,  2878, -4621, -4621,  2753,  4749,  4206,  1533, -4621, 71482,
    4278,  3450, -4621, -4621,  2827, -4621,  4406,  4518, -4621,  4154,
   -4621,  2494, -4621,  4290, -4621, -4621,  4671, -4621,  4380, -4621,
   -4621,  4978, -4621,  1129,  4607,  4608, -4621, -4621,  4220,  2747,
    2747, -4621,   519, -4621, -4621,  4741,  4835, 16411,  2747, 79853,
    4208, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, 84419, 16411, -4621,  1080,  4909, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, 83658,  1833, -4621,
   -4621, -4621, -4621, -4621,  4942,  4228,   265, -4621, -4621,  4823,
   -4621, -4621, -4621, -4621, -4621, 21121, -4621, -4621, -4621, -4621,
   -4621,  4387,  4868, -4621,  4378, 16411, 83658, -4621,  4853, -4621,
    4778,  2747,  4721,  4231, -4621,  4230,  2747,  4891, 85180, 85180,
   -4621,  4590, -4621, -4621,   571,  4785, -4621, -4621,  4315, -4621,
    1355,  1355, -4621,   536, -4621,  2747, 80614,  4965, 69960, -4621,
    4447, -4621, -4621, 16411,  4883, 61589, 81375,  4244, -4621, -4621,
   -4621, 83658, -4621,  4651,  4249,  1533, -4621, -4621, 16411, -4621,
    4876,  4457, -4621,  4251, -4621, 83658,  2747, 83658, -4621, -4621,
    4819,  8249,  2361, -4621,  4257, -4621, -4621,  1331, 34180,  4536,
    1232,  2747,  4984, 83658, 69960, 77570,  4888, 82136,  4850, 69960,
    3450,  4852,  4854, -4621, -4621, -4621, -4621, -4621, 60828,  2496,
   -4621, -4621, 69960, -4621, -4621, -4621,  1576,  4470, -4621, 78331,
   -4621,  2807,  4592,  4415, -4621, -4621,  4927,  4239, -4621, -4621,
   -4621, 35704,  4268, -4621,  1144, -4621,  4676, 83658, 83658, -4621,
   -4621, -4621, -4621, 49413, 16411, -4621, -4621, -4621, -4621,  1506,
   -4621, 69960, 18766,  4356, 79092, 82897, -4621, -4621, -4621, 26561,
   -4621, -4621, -4621,  4872, -4621,  2747, -4621, -4621, -4621, 49413,
   -4621, -4621, -4621
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1930,  3005,  1226,  2957,     0,     0,     0,     0,     0,     0,
    2959,  3005,   109,  2055,  2056,     0,  1873,     8,     0,  1226,
     366,     0,     0,   121,     0,  1887,     0,  2120,     0,     0,
    1226,     0,  2113,     0,     0,  1226,  1935,  2095,   343,     0,
    2959,     0,  1292,     0,  1965,  2813,     0,     0,     0,     0,
    1948,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2814,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,    96,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1149,
     101,   100,    99,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1257,  1254,  1794,  1256,  1270,  1278,  1279,
    1280,  1931,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   105,     0,    44,   102,    97,    45,    64,  2057,    65,
      86,    81,    74,   106,    75,    93,    95,    94,    76,   104,
      98,    88,    19,    69,    89,    68,    15,    36,    90,    91,
      82,   107,    73,   103,    71,    35,     0,  1047,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1871,     0,   985,
    3003,  3004,  3005,  1228,  1227,     0,  2959,  2224,  1213,     0,
    2309,  2308,  2311,  2313,  2314,  2315,  2316,  2317,  2318,  2260,
    2320,  2322,  2323,  2324,  2325,  2326,  2261,  2327,  2328,  2329,
    2330,  2331,  2332,  2262,  2263,  2334,  2335,  2336,  2337,  2339,
    2264,  2265,  2340,  2341,  2342,  2344,  2345,  2346,  2347,  2348,
    2349,  2350,  2267,  2351,  2268,  2352,  2353,  2355,  2356,  2388,
    2357,  2358,  2359,  2360,  2361,  2362,  2270,  2363,  2364,  2365,
    2366,  2367,  2368,  2369,  2370,  2371,  2271,  2372,  2373,  2375,
    2377,  2378,  2379,  2380,  2381,  2272,  2382,  2383,  2384,  2386,
    2273,  2389,  2391,  2392,  2394,  2396,  2395,  2397,  2398,  2299,
    2399,  2400,  2257,  2402,  2403,  2404,  2405,  2406,  2408,  2409,
    2300,  2410,  2411,  2412,  2413,  2274,  2275,  2415,  2416,  2417,
    2418,  2424,  2419,  2420,  2421,  2709,  2423,  2276,  2425,  2277,
    2429,  2428,  2430,  2220,  2431,  2221,  2432,  2278,  2435,  2436,
    2437,  2438,  2279,  2440,  2441,  2442,  2443,  2444,  2445,  2447,
    2280,  2448,  2449,  2450,  2451,  2452,  2453,  2710,  2455,  2456,
    2457,  2458,  2460,  2461,  2463,  2465,  2466,  2467,  2468,  2470,
    2471,  2472,  2482,  2473,  2474,  2475,  2477,  2476,  2478,  2479,
    2480,  2483,  2462,  2485,  2486,  2487,  2488,  2489,  2490,  2491,
    2493,  2494,  2495,  2496,  2497,  2498,  2499,  2500,  2501,  2502,
    2503,  2504,  2505,  2506,  2507,  2508,  2509,  2510,  2511,  2512,
    2514,  2515,  2516,  2517,  2301,  2281,  2519,  2521,  2522,  2524,
    2527,  2528,  2529,  2531,  2535,  2536,  2537,  2538,  2539,  2541,
    2540,  2542,  2545,  2547,  2548,  2546,  2549,  2550,  2551,  2282,
    2283,  2553,  2554,  2555,  2302,  2557,  2559,  2558,  2303,  2560,
    2561,  2562,  2564,  2565,  2566,  2567,  2568,  2570,  2571,  2572,
    2573,  2574,  2304,  2575,  2576,  2284,  2577,  2305,  2579,  2581,
    2580,  2582,  2584,  2585,  2583,  2285,  2589,  2591,  2592,  2594,
    2596,  2598,  2286,  2600,  2601,  2602,  2604,  2603,  2605,  2287,
    2606,  2607,  2613,  2614,  2615,  2616,  2713,  2617,  2618,  2259,
    2288,  2619,  2289,  2621,  2622,  2623,  2624,  2625,  2627,  2628,
    2629,  2630,  2631,  2632,  2633,  2635,  2636,  2290,  2637,  2638,
    2639,  2640,  2291,  2641,  2643,  2644,  2645,  2646,  2647,  2648,
    2307,  2649,  2650,  2651,  2652,  2653,  2654,  2655,  2657,  2658,
    2659,  2660,  2666,  2664,  2665,  2667,  2669,  2670,  2292,  2671,
    2672,  2674,  2675,  2676,  2677,  2293,  2294,  2678,  2679,  2680,
    2681,  2683,  2684,  2685,  2686,  2688,  2690,  2691,  2692,  2693,
    2694,  2695,  2696,  2697,  2295,  2698,  2699,  2700,  2711,  2599,
    2312,  2439,  2689,  2354,  2620,  2454,  2518,  2712,  2426,  2333,
    2266,  2401,  2414,  2520,  2534,  2552,  2590,  2663,  2673,  2513,
    2532,  2544,  2427,  2597,  2634,  2661,  2306,  2687,  2469,  2422,
    2258,  2374,  2376,  2533,  2569,  2310,  2433,  2319,  2492,  2530,
    2611,  2608,  2610,  2612,  2593,  2526,  2390,  2525,  2464,  2563,
    2459,  2484,  2556,  2481,  2587,  2543,  2407,  2588,  2642,  2523,
    2595,  2446,  2668,  2321,  2393,  2609,  2626,  2701,  2586,  2578,
    2338,  2343,  2269,  2434,  2656,  2662,  2682,  2387,  2385,   297,
    2231,   279,  2232,  2253,  2254,  2255,  2252,  2256,     0,     0,
    2802,  2801,     0,     0,  2960,  2961,   634,     0,     0,     0,
       0,     0,     0,  1874,     0,   919,   634,   634,     0,   921,
     634,     0,   918,     0,   214,  2988,  2988,  3005,  3007,  3009,
    2311,  2260,  2325,     0,  2188,     0,     0,     0,  1644,     0,
    2264,     0,  2345,  2347,     0,     0,  1320,  1320,   798,     0,
       0,     0,  2370,  2371,  2194,     0,     0,     0,  2185,  2195,
    2415,  2419,  2421,     0,  2187,  2430,     0,     0,     0,     0,
    2452,  2197,     0,     0,  2496,  2498,     0,     0,  2502,  2503,
    2504,  2505,  2169,  1379,     0,   798,  2181,  2196,  2175,  2549,
    2550,     0,  2560,     0,     0,  2598,     0,     0,  2603,  2613,
       0,     0,  2645,     0,     0,   798,  2168,  2666,  2664,  2665,
    2667,     0,  2186,  2292,  2198,     0,  2681,  1320,   798,   798,
       0,     0,     0,  2692,  2693,  2700,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2446,     0,     0,  1312,     0,     0,     0,  1378,     0,  1462,
    2979,  1848,  1311,  1315,  1332,  1337,  1354,     0,  1371,  1390,
    1391,  1393,  1500,  1392,  1398,  1521,  1399,  1522,  1397,  2182,
    1396,  2192,  2191,  1395,  2183,  2193,  2184,  1313,  1389,  2211,
    2231,  2210,  1405,  2977,  1871,  1871,  1871,     0,     0,  1871,
    1871,     0,     0,  1871,     0,  1871,  1871,  1871,     0,  1871,
       0,   114,  2064,   367,   368,     0,  2856,  2869,  2870,  2866,
    2871,  2889,  2872,  2876,     0,  2868,  2937,  2244,     0,  2875,
       0,  2937,  2873,     0,  2937,     0,  2874,  2879,  2890,  2937,
    2867,  2233,  2243,  2242,  2937,  2703,  2702,  2234,  2704,     0,
    2858,     0,  2216,     0,     0,  1889,  1890,  1888,  1134,     0,
       0,  2121,  2122,     0,  2125,     0,  2126,  2129,     0,  2802,
    2796,  2798,     0,     0,     0,     0,     0,  1229,     0,  1892,
    1936,  1893,  1891,  1871,     0,   333,   342,   344,   345,   341,
    2856,     0,     0,  2961,  2972,  2987,  2982,  2981,  2984,  2985,
    2986,  1297,  2983,  2980,     0,  1293,  1295,  1296,   855,     0,
       0,  2744,  2747,  2508,  2542,  2748,  2669,  2745,  2599,  2746,
    2306,     0,     0,  2237,  2771,  2706,  2707,  2708,  2705,  2238,
    2714,     0,  2738,     0,  2032,   345,  1148,  1159,  1166,  1160,
    1182,  1147,  1182,  1291,  2216,  1949,     0,     0,     0,  2811,
    2812,  2810,  2123,     0,  1290,  1912,     0,  1771,  1774,  1776,
    3053,     0,     0,     0,  3048,     0,  3054,     0,     0,  2210,
       0,     0,     0,     0,     0,  2978,     0,     0,     0,     0,
       0,     0,     0,     1,    11,     0,     0,  1320,  2241,  2681,
       0,  2240,  2239,  2245,  2247,  2914,  2935,  2941,     0,     0,
       0,  1146,  1150,  1151,  1153,  1154,  1155,     0,     0,     0,
    1255,  1299,  1259,     0,  2974,  1803,  1795,     0,  2974,  1803,
    1267,  1262,  1794,  1269,  1942,  1935,  2057,  2415,  2060,  1930,
    2061,     0,   977,  1048,     0,   981,     0,     0,     0,     0,
    2815,     0,   979,     0,  2026,  1055,     0,     0,  1006,     0,
       0,  3014,   983,     0,  2958,     0,  1239,  1250,  1636,   296,
       0,   123,   125,  1196,  1867,  1215,     0,  2964,     0,     0,
       0,     0,  3010,     0,     0,     0,   479,     0,   920,   923,
       0,     0,     0,   922,   925,     0,     0,   634,  3014,  3014,
    2988,  3008,     0,     0,  1764,  1412,  1764,  1764,  1764,  1645,
       0,     0,     0,     0,     0,     0,     0,  1764,     0,  1456,
    1428,     0,  1457,     0,     0,     0,  2199,     0,     0,     0,
    1409,     0,     0,  1636,     0,  1612,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1640,  1642,  2210,  1764,     0,
       0,  1764,     0,     0,     0,     0,     0,  1325,   851,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1764,  1764,     0,     0,  1764,  1470,  2201,     0,     0,     0,
    2200,     0,     0,     0,  2190,  2189,  2170,     0,  1473,  1475,
    1474,     0,  1764,  1764,     0,     0,     0,  1764,  1764,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1402,  1401,  1403,     0,     0,  2979,     0,  2753,
    1608,  1610,     0,     0,  1375,  1374,     0,  1373,  1372,  2230,
       0,  1314,     0,     0,  1319,  1318,  1380,  1381,  1382,  1383,
       0,  1384,  1385,  1386,     0,     0,     0,     0,     0,     0,
    1377,  1376,     0,     0,     0,     0,  1356,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1404,     0,     0,  2225,
    2171,     0,     0,  1516,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1875,     0,     0,     0,     0,     0,     0,
       0,  1871,   116,     0,     0,  2857,  2849,  2887,  2886,  2891,
       0,  2888,  2884,  2892,  2893,  2877,     0,  2863,  2881,     0,
    2865,  2883,  2882,  2862,  2878,  2885,  2864,     0,  2860,  2852,
       0,     0,  1760,  2826,     0,     0,   122,     0,  1135,  1893,
       0,  3067,  3064,  2119,     0,  2130,  2131,  2127,     0,     0,
       0,     0,     0,  2025,  2024,     0,     0,  2114,  2973,  1231,
       0,     0,     0,  1894,     0,     0,  2097,  2106,  2102,  2104,
    2108,  2096,  2099,   334,     0,     0,   364,  2843,     0,     0,
    2852,  2967,  2964,  1283,  1294,   854,     0,     0,   857,  2770,
    1913,  1914,   866,     0,   856,     0,     0,     0,     0,     0,
    2716,  2780,  2777,  2776,  2729,  2724,  2723,  2249,  2910,  2722,
       0,  2757,     0,   861,   863,   862,  2767,   860,     0,     0,
    2669,  2717,  2738,     0,     0,  2715,     0,     0,   855,  2044,
       0,     0,  2044,     0,  1803,  2028,  2033,  2031,     0,  2750,
    1997,  2751,  2024,     0,  1973,  1996,     0,  1950,  1989,     0,
    2752,  1159,  2027,     0,  1803,  1980,  2044,  2044,  2044,  2044,
    2044,     0,  2044,     0,  1966,     0,     0,     0,     0,     0,
       0,   340,     0,     0,  1165,  1167,  1168,  1187,  1186,  1162,
    1183,  1184,   204,  1947,  3065,  3066,  1919,     0,  1772,     0,
       0,     0,  2174,  2173,  3050,  2172,  3058,  3060,  3044,     0,
    3047,  3046,  3055,     3,     0,     0,   571,     4,     0,     6,
       0,     0,     7,  1258,  1276,     0,  1275,    12,   108,  2248,
       0,     0,     0,     0,     0,     0,     0,  2932,     0,     0,
    1030,     0,     0,     0,     0,  1304,  1303,  1306,  2382,     0,
       0,  1847,  1841,  1844,  1843,     0,  1298,  1261,  1260,     0,
    2976,  2975,     0,  1263,  1804,  1812,  1813,  1811,  1805,  1806,
    1810,  1809,     0,  1265,  1803,  1803,  1268,  1946,  1945,  1944,
       0,  1942,  1134,     0,  2059,     0,     0,  2049,  2050,  2051,
    2052,  2053,  2048,  2047,  2062,  2063,  3012,  3013,  3011,   868,
    3006,   280,     0,     0,  2819,     0,     0,   280,     0,     0,
    1915,  1915,     0,  1915,  1915,   549,     0,   548,  1915,  1915,
     640,   501,   503,   504,   505,   506,   507,   508,   509,   510,
       0,  1132,  1915,  1132,     0,  1915,  1915,  1132,  1915,     0,
       0,  1915,  1915,  1915,  1915,     0,     0,   869,  1915,     0,
       0,  1132,     0,  1915,     0,  1116,     0,     0,  1915,  1915,
    1915,  1915,  1915,  1132,     0,     0,  1915,  1915,     0,  1142,
       0,     0,  1915,     0,  1915,  1915,  1915,     0,  1915,  1915,
       0,  1915,     0,     0,  1915,  1077,  1078,  1915,  1915,  1915,
    1088,   636,   664,   665,     0,   975,   976,  1049,  1051,  1120,
    1057,  1056,  1085,  1090,  1118,  1119,     0,  1872,  3079,   987,
       0,     0,   986,  3014,  1210,     0,     0,   911,   910,     0,
       0,  1250,  1241,  1638,     0,  1637,   278,     0,     0,  1198,
    1197,     0,  1195,  1223,  1222,  1220,     0,  1221,  1219,  1214,
    1216,  1217,  2963,     0,     0,  2965,  2969,     0,   212,     0,
       0,     0,     0,     0,   634,     0,   481,     0,   924,  2922,
    2933,   228,   210,     0,   926,     0,   952,     0,     0,   634,
       0,     0,     0,  3002,  2990,  2997,  2998,  3001,  3000,  2999,
       0,  2996,  2989,  2992,  2993,  2995,  2994,  3014,     0,     0,
    1765,  1764,     0,     0,     0,     0,     0,     0,  1646,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1321,     0,
     799,  1482,     0,     0,     0,     0,     0,  1736,  1737,  1738,
    1739,  1747,  1740,  1741,  1742,  1749,  1754,  1743,  1744,  1750,
    1751,  1752,  1745,  1753,  1748,  1746,  1755,     0,  1735,     0,
       0,  1759,  1756,  1758,  1757,     0,  1613,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1764,
       0,     0,     0,  1764,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1492,
       0,     0,     0,     0,     0,  1764,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1452,     0,  2213,  2212,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1555,     0,  1555,     0,     0,     0,  1558,  1559,  1557,
    1560,     0,     0,     0,     0,     0,  1406,     0,     0,     0,
       0,     0,     0,     0,  1310,  1317,  1316,  1323,  1322,  1324,
    1328,  1333,  1326,  1330,     0,  1387,  2318,  1335,     0,     0,
    1368,     0,  1338,  1348,  1369,  1352,  1359,  1360,     0,  1355,
       0,  1357,  1358,     0,  1362,     0,  1361,  1365,  1366,  1367,
    1370,     0,     0,     0,     0,  1394,  1400,  1422,  1423,  1315,
       0,  1517,  1518,  2206,  2214,  1851,  1858,  1853,     0,  1875,
    1855,  1863,  1871,  1879,  1880,  1860,   640,  1877,  1859,   511,
    2908,  1856,  1136,  1866,  3092,  1864,     0,     0,   115,     0,
       0,     0,     0,  2081,  2083,  2091,  2082,     0,  2090,     0,
    2084,  2092,  2085,  2089,  2088,  2087,  2086,  2065,  2068,  2074,
    2093,     0,     0,   365,   369,   371,     0,   374,     0,  2880,
    2939,     0,     0,  2861,  2854,  2855,  2853,     0,  2894,  2859,
    1761,     0,  2825,  2412,  2516,     0,  1766,  2217,  3069,     0,
       0,     0,     0,  2128,     0,  2800,  2797,  1760,  2799,  2803,
    1225,     0,   111,   112,     0,     0,     0,     0,  1230,  1234,
       0,  1200,  1674,  2101,  2111,  2109,  2109,     0,   332,   357,
     352,   360,   354,   356,   355,   361,   362,   363,   358,   353,
     359,   346,     0,     0,     0,     0,  2841,     0,  2968,     0,
    2970,     0,  1766,  1284,  1283,     0,     0,     0,  2773,     0,
    2769,  2768,     0,  1003,  2227,  1003,     0,  2782,  2783,     0,
    2774,     0,  2775,     0,  2728,     0,     0,  2731,     0,     0,
       0,     0,     0,     0,     0,  2772,  2737,  2736,     0,  2739,
    2740,     0,  2743,  2791,  2792,  2789,  2795,  2790,  2793,  2794,
    2788,  2764,  2040,     0,     0,  2046,  1995,     0,   634,     0,
       0,     0,     0,     0,     0,     0,  1967,  2023,     0,  2022,
    1988,  2038,  2039,  2044,     0,  2037,     0,  2044,     0,  2006,
    2028,     0,  2044,  1962,     0,     0,  1954,  1959,  1955,     0,
    1961,  1960,  1963,  1951,  1952,  2040,  1979,  2028,  1987,  2008,
    2012,  2011,  2010,  2009,  2000,  1994,   204,  1978,  1984,  1992,
    2028,   916,   915,   914,     0,     0,  2028,  2044,  2044,  1172,
    1173,     0,     0,  1188,     0,     0,  1161,  1924,  1923,     0,
    1920,  1922,  1911,  1773,     0,  1778,     0,     0,     0,  3045,
    3061,  3043,  3049,  3056,  3057,  3042,  2214,     0,   572,     0,
       0,   575,     0,     0,  1915,  1277,    13,    10,  1038,     0,
       0,  2246,     0,     0,     0,     0,     0,     0,  2945,  2943,
       0,  2944,  2942,  2899,  2914,  2936,     0,  1010,  1158,  2222,
    1157,  1156,  1152,     0,     0,  1309,  1306,  1300,  1307,  2226,
    1846,   858,  1842,     0,     0,  1799,  1796,  1798,  1273,  1271,
       0,     0,  1274,  1272,  1264,  1266,     0,     0,  1869,  1940,
    1943,     0,  2058,     0,     0,   868,   623,   625,   632,   631,
     633,     0,   982,  2824,  2823,     0,     0,     0,     0,     0,
     980,     0,     0,   499,  1916,     0,     0,   499,     0,     0,
       0,     0,     0,   641,  2026,  1915,  1133,   969,   912,  1226,
     912,  1094,     0,   969,     0,     0,     0,     0,     0,     0,
    1226,     0,     0,     0,     0,     0,  1226,     0,     0,     0,
       0,     0,  1915,     0,  1103,     0,  1059,     0,     0,     0,
       0,     0,     0,     0,  1104,     0,     0,     0,  1060,  1915,
       0,     0,     0,     0,     0,     0,  1226,     0,     0,     0,
    1226,  1145,     0,  1144,  1143,     0,     0,  1226,  1226,     0,
     674,     0,     0,     0,   670,   671,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,   637,  1915,  1915,     0,
    1053,  1050,   868,   868,     0,  1915,  3087,  1039,     0,     0,
     984,     0,     0,  1207,  1243,  1237,  1242,  1240,  1250,     0,
    1726,     0,   298,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   204,
     155,   188,     0,     0,     0,     0,     0,     0,     0,   204,
     127,  1868,  1224,  1218,  2962,  2966,   635,   868,     0,     0,
       0,     0,     0,     0,   480,     0,   483,     0,     0,     0,
       0,  2941,  1915,     0,     0,     0,     0,   953,   868,     0,
       0,     0,   279,  3037,     0,  2991,     0,  1478,     0,  1570,
    1620,  1570,  1570,  1570,     0,     0,     0,     0,     0,     0,
    1479,     0,  1426,  1480,  1481,     0,     0,     0,  1570,     0,
     800,     0,     0,  1429,  1430,  1419,     0,     0,  1501,     0,
    1616,  1431,     0,     0,     0,     0,     0,  1502,  1641,     0,
    1643,  2214,     0,  1570,  1486,  1437,     0,  1570,     0,  1438,
    1503,  1504,  1505,     0,  1507,     0,  1488,     0,     0,  1491,
       0,     0,  1440,  1570,  1570,     0,     0,     0,     0,  1570,
    1442,     0,     0,     0,  1441,     0,     0,     0,     0,     0,
       0,     0,  1444,     0,  1420,  1570,  1570,  1494,     0,     0,
    1496,     0,  1453,  1764,  1570,  1607,     0,  1547,  1546,  1564,
       0,     0,  1564,     0,     0,  1561,     0,  1548,  1545,  1544,
       0,     0,  2754,  2755,  2756,   971,  1609,  1410,  1329,  1334,
    1327,  1331,  1336,     0,     0,     0,  1347,     0,     0,     0,
       0,     0,  1339,  1350,  1353,  1520,  1508,     0,  1636,     0,
       0,  1121,  1862,     0,  2026,  1861,   512,   513,   515,     0,
    1138,  1137,  1857,  3093,  1854,  1136,     0,   117,   119,  2079,
    2076,  2075,  2077,   204,  2078,     0,  2094,  2066,  2370,  2666,
    2667,   378,     0,   350,   349,   351,   375,     0,     0,  2852,
    2938,     0,     0,  2903,  2906,     0,     0,     0,  2847,  1763,
    2836,  2832,  2837,  2839,  2835,  2838,  2840,  2833,  2834,  1766,
       0,  1803,  1767,  1674,  3063,  3068,  1245,  1246,  1250,     0,
       0,     0,   113,  1838,  1839,  1833,  1835,  1832,  1834,  2116,
    1836,  1837,     0,     0,  2115,     0,  1232,     0,     0,  1205,
    1204,  1206,  1199,  1201,  1202,     0,     0,  1675,     0,  2107,
    2110,   204,   204,  2098,     0,     0,     0,  2852,     0,     0,
    2971,  1286,     0,     0,     0,     0,     0,  1285,  1287,  1288,
    1651,  1650,  1681,  1678,  1677,  1680,  1679,  1682,  1674,  1760,
    1785,  1766,     0,     0,     0,   865,   867,   864,     0,     0,
       0,  2912,  2912,     0,     0,  2787,  2779,  2781,  2778,  2730,
    2250,  2911,     0,  2760,  2761,  2762,  2758,  2759,     0,  2765,
    2763,     0,  2742,     0,  2042,  2045,  1768,     0,     0,  2020,
    2014,  2013,  2004,  2015,  2021,  2005,  1974,  1975,  1976,  1970,
    2029,  2019,  2017,  1998,  2044,  2018,  2016,  1956,  1957,  1958,
       0,  1803,     0,  2042,  2044,     0,  2007,  2044,     0,     0,
    2044,  1991,  1993,  1170,  1169,     0,  1174,  1185,     0,  1918,
       0,  1777,     0,  1775,  3051,  3059,     0,     0,     0,     0,
       0,     0,     0,     0,   577,     0,   573,     0,     0,   999,
    1003,     0,  1000,  1001,  1002,  2915,  2227,     0,  2912,  2928,
    2902,  2901,  2900,  2897,     0,     0,     0,     0,     0,  1031,
    1033,     0,     0,     0,     0,  1007,  1011,  1012,  1305,  1308,
    1301,     0,  2136,  1840,  1302,  1801,  1802,  2208,  1800,     0,
    1808,  1807,     0,  1760,  2216,     0,     0,     0,  2218,     0,
    1823,  1824,  1822,  1825,  2054,  1826,  1915,   624,  1915,     0,
       0,     0,     0,     0,     0,     0,   281,   290,     0,     0,
    2816,  2818,     0,   527,     0,     0,     0,     0,     0,     0,
       0,     0,   235,   534,   990,   640,   539,   553,   554,   550,
     991,   538,   540,   992,  3094,   552,   551,   502,     0,   710,
     970,   913,   969,  1061,   969,     0,     0,     0,   713,   969,
     912,     0,   949,   970,   709,     0,  1127,  1126,  1128,   711,
     711,     0,     0,     0,  1830,  1831,  1829,  1827,  1828,   653,
    1820,  1821,  1817,  1818,  1816,  1819,   647,     0,   659,  1083,
    1215,  1084,  1733,     0,   649,   650,   651,   672,     0,     0,
     661,     0,  1101,  1102,     0,  1064,  1099,  1100,  1136,   642,
       0,     0,     0,   689,   690,   688,   666,   673,  1130,  1129,
    1131,   645,   646,     0,     0,  1117,  1792,  1799,   678,   654,
     677,   648,     0,     0,     0,  1111,  1072,     0,   687,   685,
     682,   684,   683,   686,   662,   655,   656,   658,   657,   669,
     660,  1071,  2093,   643,   644,   675,   676,   652,     0,     0,
    1054,  1132,  1132,  1089,  1086,  1087,  1052,  1058,  1091,   535,
     536,   511,     0,  1915,  3089,     0,  1041,  1043,  3015,  3016,
    1776,     0,     0,     0,  1729,     0,  1730,  1727,  1728,     0,
    1639,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   124,     0,     0,
       0,     0,     0,     0,     0,     0,   126,   213,   868,   629,
       0,   516,     0,     0,     0,   223,     0,  1915,  1915,  1915,
    1915,   217,   640,   485,   487,   488,   489,   490,   491,   494,
     492,   495,   493,   496,   497,   498,   511,     0,     0,     0,
    2934,  1030,     0,     0,     0,   234,   233,   958,   960,   959,
     955,   954,     0,     0,  2135,     0,  2134,   709,   207,   556,
     558,   561,   559,   640,   638,  1904,  1906,   563,     0,     0,
     244,  3032,     0,     0,   475,   474,     0,     0,     0,  1570,
    1523,  1571,  1525,  1526,  1529,     0,  1647,     0,  1416,   812,
     812,   796,  1628,   792,   784,   790,  1633,     0,   768,   782,
    1624,   796,  1626,  1629,   812,  1634,  1424,     0,     0,     0,
       0,     0,  1570,  1531,  1570,     0,     0,     0,     0,     0,
       0,  1614,     0,     0,     0,  1421,     0,  1512,  1570,  1535,
    1570,  1533,     0,     0,     0,     0,     0,     0,     0,  1539,
    1537,     0,     0,     0,     0,  1570,  1541,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1538,  1540,
       0,     0,     0,     0,     0,  1527,  1578,  1572,  1573,  1574,
    1575,     0,     0,     0,  1562,  1564,     0,  1564,     0,  1549,
    1476,  1407,     0,  1611,  1345,  1340,     0,  1349,     0,  1364,
    1363,     0,     0,     0,  1519,     0,  2207,  2215,  1852,  1850,
    1123,  1122,  1865,  1878,  2026,  2909,  1849,   120,     0,  2080,
    2073,  2069,     0,   370,   379,   372,   376,   377,   373,     0,
    2940,  2948,     0,     0,     0,     0,  1803,     0,  2827,     0,
       0,  1250,  1252,  2132,     0,  2806,  2807,  2805,  2804,  2118,
    2117,     0,  1235,  1236,  1203,     0,     0,  1908,  1907,     0,
    1884,  1886,  1895,  1898,     0,  2112,  2103,  2105,     0,   347,
       0,     0,  2846,     0,     0,  1760,     0,     0,  1651,  1681,
    1678,  1677,  1680,     0,     0,     0,     0,  1664,  1672,  1670,
    1672,  1667,     0,     0,     0,  1760,  1776,     0,  1769,  1785,
    2727,  2726,  2725,  1003,  1003,  1004,     0,  2719,  2718,  2785,
    2784,  2786,  2733,   640,  2732,     0,  2741,  2041,     0,  1803,
       0,  2003,     0,  1972,     0,  1990,  1953,  1803,  1971,  2001,
    1969,  2028,  2028,  1968,     0,     0,  1194,     0,  1190,  1189,
       0,  1176,   205,  1921,  1779,     0,  3062,     5,     0,     0,
       0,     0,   576,     0,   586,     0,     0,     0,     0,  3070,
    2912,  1003,     0,  2912,  2925,     0,     0,  2898,  1036,  1034,
    1035,  1037,  1032,  1015,  1014,  1016,     0,     0,     0,  1029,
    1028,  1027,     0,     0,   996,  1013,   859,     0,  2144,  1797,
       0,  1674,     0,  1766,  1870,  1941,  1940,     0,     0,     0,
     284,   287,   285,     0,   286,     0,     0,  2821,     0,  2817,
     537,   989,   640,   529,   531,   532,   533,   239,   238,   240,
     241,   243,   242,   237,   995,     0,   546,     0,     0,     0,
       0,     0,   969,   908,   712,     0,   707,   714,     0,   909,
       0,     0,     0,     0,   695,   697,   698,     0,   781,   735,
     726,   812,   729,   728,   876,   796,   740,   787,     0,   789,
     786,   761,   760,   777,   759,   764,   748,   876,   876,   747,
     780,   876,   765,   763,   767,     0,   768,   788,   773,   762,
     766,   758,     0,   779,   812,   796,   796,   744,   778,   876,
       0,   771,   812,   700,   816,   746,   883,     0,     0,   812,
     814,   792,  1109,  1110,   957,   956,  1108,     0,     0,  1067,
       0,  1068,     0,  1070,   866,   866,   667,  1075,  1098,  1097,
       0,  1076,   668,  1139,  1066,     0,  1793,  1065,     0,     0,
       0,  1200,     0,   680,   679,   994,  3083,  3080,  3081,     0,
    3091,  3090,  3092,     0,     0,     0,   249,  3017,     0,     0,
    1249,  1251,     0,  1238,   189,   183,   159,   163,   165,   157,
     200,   201,   161,   162,   164,   168,   169,   167,   171,   172,
     175,   176,   173,   166,   174,   160,   179,   202,   203,   177,
     178,   158,   181,   182,   194,   184,   193,   199,   170,   198,
     185,   196,   195,   197,   186,   187,   156,     0,   129,   130,
       0,   131,   132,     0,   133,   134,     0,   135,   128,   630,
       0,  1915,  1915,   216,   640,   518,   520,   521,   522,   523,
     526,   524,   525,   223,     0,     0,   222,     0,     0,     0,
       0,     0,  2026,   218,     0,  2916,  2918,   229,  1010,  3077,
    3078,  3079,   220,     0,   562,   208,     0,     0,   557,   555,
     868,  1905,   560,     0,     0,   299,   693,   694,   692,   691,
       0,  3038,   478,   476,   477,     0,     0,  1454,  1524,  1648,
       0,     0,   813,  1621,   876,     0,  1631,     0,  1632,   794,
     793,   785,   783,  1635,   791,   769,  1625,  1630,  1627,  1623,
    1425,     0,     0,  2202,  1427,  1418,  1417,  1532,  1530,     0,
       0,  1460,  1484,     0,  1461,     0,     0,     0,     0,     0,
    1433,     0,  1436,     0,     0,  1514,  1536,  1534,  1487,  1506,
    1463,  1489,     0,  1439,  1408,     0,  1464,     0,  1469,  1467,
       0,  1542,  1443,     0,     0,  1450,     0,  1448,     0,  1449,
       0,  1451,  1493,  1495,     0,     0,     0,     0,  1570,  1579,
       0,  1580,  1566,  1565,  1552,     0,  1556,     0,  1553,     0,
    1567,     0,  1702,   972,     0,  1344,  1346,  1342,     0,  1351,
    1509,  1125,  1124,   514,   118,  2071,     0,  2067,     0,     0,
       0,     0,  2851,  2905,  2904,  2907,  2946,  2895,  2828,     0,
       0,  1925,  1927,  1247,  1250,  1252,     0,  1248,     0,  2133,
    2808,  2809,  1233,     0,  1732,  1885,  1933,     0,     0,     0,
    1902,  2205,  2204,  2212,  1919,  1903,  1910,     0,     0,     0,
    2842,     0,  1776,     0,     0,  1689,  1683,  1685,  1686,  1688,
       0,     0,  1651,  1650,  1289,  1666,  1665,  1673,     0,  1671,
    1672,  1672,     0,     0,  1660,  1659,     0,  1723,  1690,     0,
       0,  1780,  1769,  2912,  2912,     0,     0,  2766,  2043,  1981,
    1986,  1985,  1999,  1964,   204,     0,  1766,  2044,     0,     0,
       0,     0,     0,     0,  1178,  3052,     0,   582,   569,     0,
     567,   571,     0,   564,     0,     0,   580,     0,   998,  2912,
    2912,     0,  2926,  2229,  2228,  2912,     0,  2912,  1019,     0,
    1018,  1024,  1021,  1020,     0,  1009,  1008,     0,     0,     0,
       0,  2137,  2139,     0,  1845,  1766,  1766,  2217,  1938,     0,
    2219,  1766,   626,   681,   289,   288,   294,   295,     0,  2820,
    2026,   236,     0,  1063,     0,     0,   588,     0,     0,     0,
     715,     0,     0,   967,     0,   966,  1799,   950,   951,  1093,
     709,   700,   734,   727,   745,   870,   881,   879,   873,   770,
     876,     0,   877,   878,   731,   743,     0,   754,     0,   749,
     876,   757,   753,   769,   772,   774,   776,     0,   876,   742,
     741,   751,   738,   801,     0,  1139,   701,   826,     0,     0,
       0,     0,  1376,   820,     0,   888,     0,     0,   829,     0,
    1915,  1915,   831,     0,   840,   716,   817,   819,   718,     0,
       0,   884,   883,   733,   876,   883,   801,     0,   815,   801,
     801,  1107,     0,  1139,  1734,  1115,  1114,     0,     0,  1141,
    1096,  1791,  1113,  1112,     0,  1069,   663,     0,     0,  3085,
       0,  3088,  1005,     0,   259,     0,     0,  1040,     0,   252,
     250,   261,     0,  1212,  1208,  1731,     0,   190,   192,   136,
       0,   138,   140,   145,     0,   147,  2251,     0,   150,     0,
     152,  2223,   154,     0,   141,     0,     0,     0,     0,  2026,
     221,     0,     0,     0,     0,     0,     0,   482,   545,   541,
     547,   544,   486,  2917,     0,     0,  1007,  3087,     0,     0,
     868,   639,     0,     0,     0,   300,   302,     0,     0,   309,
       0,     0,  1649,     0,     0,     0,     0,  1622,     0,     0,
    1413,  1424,  2203,     0,     0,     0,     0,  1617,  1619,  1615,
    1570,     0,     0,     0,     0,     0,  1411,     0,  1510,     0,
       0,     0,     0,     0,     0,  1447,  1445,  1446,   885,  1498,
    1497,     0,  1528,  1576,     0,  1582,  1563,  1551,  1550,     0,
    1564,  1477,     0,  1710,  1711,     0,  1703,  1704,     0,  1341,
       0,     0,     0,   387,   382,   390,   384,   386,   385,   391,
     392,   393,   394,   388,   383,   389,   381,   380,     0,     0,
       0,  2955,  1766,  1925,     0,  1927,     0,  1883,  1244,  1253,
       0,  1676,     0,     0,  1896,  1899,     0,     0,     0,     0,
       0,   348,  2845,     0,     0,  1691,  1760,  1289,  1652,  1668,
       0,     0,  1661,  1669,     0,     0,     0,     0,  1717,  1718,
       0,     0,  1721,  1724,  1725,  1687,  2209,  1789,  1788,  1770,
       0,  1282,  1780,  2721,  2720,  2913,  2734,  1982,  2002,  1983,
    1977,  1171,  1193,  1192,  1191,  1175,     0,     0,  1180,   570,
       0,   568,     0,     0,   566,   574,     0,   581,     0,   997,
    2923,  2912,  2929,  2912,     0,  2930,     0,  1025,  1026,  1023,
       0,     0,     0,     0,     0,  2138,     0,     0,  2145,  2147,
    1939,  1794,  1794,     0,   530,     0,   591,  1062,     0,     0,
     708,     0,     0,     0,   938,     0,     0,   963,   696,   699,
     872,   871,   875,     0,   874,   730,   883,     0,   973,   750,
     775,     0,   752,   805,   806,   807,   739,   802,   804,   890,
    1092,   834,   843,   845,   847,   846,   835,   833,     0,     0,
       0,     0,     0,     0,   852,   823,  2179,   853,  2180,  2176,
       0,     0,   848,   849,   850,   837,   830,   838,     0,     0,
     832,   839,     0,   818,     0,     0,   828,   821,   822,   732,
     736,   737,   723,     0,   724,   725,     0,  1105,  1095,  1079,
    1140,     0,  3084,  3082,  3086,   260,   248,     0,     0,  1042,
    1044,     0,     0,  1045,     0,     0,  1211,   180,     0,   137,
       0,   146,     0,     0,   151,     0,     0,   142,     0,   927,
     543,   542,   519,     0,   933,   224,   225,   227,     0,  2919,
       0,  2920,   215,  3089,     0,   209,   206,     0,     0,  3033,
       0,   866,  3031,   312,   310,   311,     0,   305,   307,     0,
       0,  1455,   810,   808,   811,   809,   797,     0,     0,     0,
    1458,  1459,  1485,     0,  1543,  1483,     0,  1434,  1511,     0,
       0,  1490,  1465,  1468,  1466,  1471,  1472,     0,     0,     0,
       0,  1584,  1568,  1569,     0,  1712,  1435,  1705,     0,     0,
    1343,  2072,  2070,  2946,  2949,     0,     0,  2848,  1803,  1927,
    1776,  1881,     0,     0,  1932,  1934,  1897,  1900,  1901,  2214,
    1917,  1909,  2844,     0,  1693,  1684,  1663,  1662,  1655,     0,
    1657,     0,  1713,  1713,  1722,  1790,     0,  1786,     0,  1781,
    1782,  1281,  1177,     0,     0,  1163,   583,     0,   573,   587,
     565,  3074,  2927,  2931,  2912,  1017,  1022,  2142,  2143,     0,
    2140,     0,     0,  2146,  1814,  1814,     0,   927,     0,   611,
     589,   933,     0,   962,   938,  1799,     0,  1915,  1915,  1915,
     702,   939,   940,   942,   943,   946,   965,     0,   882,   880,
     876,     0,   876,   803,     0,   894,     0,   836,  2178,  2177,
       0,   825,   827,   841,   842,   834,   719,     0,     0,  1074,
    1080,     0,   246,   251,   262,   263,   988,  3020,  3018,     0,
     191,   139,   148,   149,   153,     0,     0,     0,  1121,   928,
     929,   931,     0,  1121,   934,   935,   937,     0,  2921,   211,
     938,  3030,   257,     0,   301,   303,  3039,   309,     0,     0,
       0,  1414,     0,  1618,     0,  1513,  1515,   886,     0,  1581,
       0,  1605,  1604,  1606,  1577,     0,  1554,     0,  1709,  1708,
    2955,  2947,  2950,  2829,  1882,  1926,     0,  1674,     0,     0,
       0,     0,     0,     0,     0,  1787,     0,     0,  1179,     0,
     204,     0,     0,     0,     0,  3071,  3072,  2924,  2141,  2149,
    2148,     0,  1937,  1929,  2822,   703,     0,     0,  1915,     0,
       0,  1915,  1915,  1915,  1915,   606,   612,   614,     0,   704,
       0,     0,   705,   968,   945,     0,     0,     0,   941,  1799,
     755,   974,   756,     0,   893,     0,   898,     0,   824,     0,
    1106,  1073,   253,  1046,   414,     0,  3019,  1209,     0,     0,
       0,   231,   930,   219,   232,   936,     0,  1121,   249,   258,
       0,   282,   306,   866,     0,   795,   796,  1432,  1499,  1583,
       0,     0,     0,     0,  1599,  1586,  1587,     0,     0,  2850,
       0,  2956,     0,   858,     0,  1760,  1656,  1658,     0,  1714,
       0,  1726,     0,  1784,  1783,  1181,  1164,     0,     0,  1915,
       0,  3075,  1815,   600,   593,   596,     0,     0,  1915,  1915,
       0,     0,     0,     0,     0,   590,   613,  1915,   706,   961,
     944,   947,   948,   964,   891,     0,   895,   896,   897,     0,
     889,   844,     0,     0,   255,   440,  2344,   426,   412,     0,
       0,  2529,   416,   264,   267,   265,  1930,   266,   272,     0,
     273,   274,   275,   276,   277,   268,   438,   439,   271,   269,
     270,     0,  2235,     0,  2236,  2297,  2296,  2298,     0,     0,
       0,   143,     0,   932,   226,   230,   261,   866,  3040,   308,
    3026,     0,     0,     0,  1594,     0,     0,     0,  1592,     0,
    1588,     0,  1585,  1590,  1589,     0,  1928,  2150,  2513,     0,
    1695,     0,  1692,  1716,  1715,     0,     0,   584,     0,     0,
    3076,   600,     0,   598,     0,   594,   592,   595,   622,     0,
       0,   618,   619,   617,   615,     0,     0,   608,     0,   892,
       0,     0,   720,   254,     0,   247,     0,     0,   425,   428,
       0,     0,   431,   421,   420,   422,     0,   415,   414,   414,
     468,   419,   465,   464,   457,     0,  3021,     0,     0,     0,
    3034,   292,   291,   283,     0,   414,  3024,  3025,     0,  3028,
    1415,     0,  1595,     0,  1597,  1596,     0,     0,  1601,     0,
    1602,  2729,  2954,  2953,  2951,     0,  2136,     0,  1694,     0,
       0,   866,  1720,  1719,     0,   578,   584,  3074,   597,     0,
     604,     0,   602,   605,   620,   621,   611,   607,     0,   616,
     904,     0,   903,     0,   900,   899,   722,   721,   816,   256,
     441,   452,   455,   447,   427,     0,     0,     0,   417,   414,
       0,   401,   399,   400,   406,   407,   408,   409,   410,   411,
     402,   405,   403,   404,   414,     0,   317,     0,     0,  3022,
    3023,   144,   263,   282,   293,  3041,  3027,   414,     0,  1593,
    1591,  1600,  1603,  2952,     0,  2144,     0,  1696,  1697,  1700,
     585,   579,  3073,   599,   601,     0,   610,   609,   906,   907,
     905,     0,     0,   717,     0,     0,   414,   448,     0,   423,
       0,   432,     0,     0,   315,   471,   469,   313,   459,   459,
     245,  3035,  3029,  1598,     0,  2152,  1699,  1701,     0,   603,
       0,     0,   449,   455,   445,   453,   414,     0,     0,   413,
       0,   467,   316,     0,     0,     0,   414,     0,   458,   460,
     462,   414,  2151,     0,  2156,     0,   902,   901,     0,   446,
       0,     0,   444,   424,   429,   414,   472,   414,   326,   325,
       0,     0,   395,   466,     0,   318,  3036,     0,     0,  2163,
    1702,   450,     0,   414,     0,   414,     0,   414,     0,     0,
     866,     0,     0,   314,  2154,  2155,  2153,  2158,     0,     0,
    2160,  2161,     0,  2124,  1706,  1698,  1704,     0,   442,   414,
     430,   435,     0,     0,   321,   396,   397,     0,   323,  2162,
    2157,     0,  2164,  2166,     0,  1707,     0,   414,   414,   431,
     434,   473,   470,     0,     0,   319,   320,   331,   330,     0,
    2159,     0,     0,     0,   414,   414,   436,   339,   337,   414,
     327,   335,   329,     0,   336,   398,   324,  2165,  2167,     0,
     322,   338,   328
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4621, -4621, -4621, -4621, -4621, -4621,    34, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621,  1641, -4621, -4621, -4621, -4621,
   -4621, -4621,  1849,  1853, -4621, -4038, -4621, -4621,  1854, -4621,
     464,  1855, -4621,   466, -4621,  1861, -4621,   471, -4621, -4621,
   -4621, -2749, -2182, -4621, -4621, -4621, -4621, -4621, -4621,  1249,
   -4621, -4621, -4621,   460,  1451,  3953, -4621,   447, -4621,   142,
   -4621, -4621, -4621, -3904,    22,  -151, -4621, -4621,    32,  3462,
    -150, -4620, -4621, -4621, -4621, -4621, -4621, -4621,   455, -4621,
   -4621,   259, -4621, -4621, -2670, -4621, -4621, -4621, -4621, -4621,
   -4621,  -332,  -289,  2502, -4621, -4621, -4621,  5054, -4621,  4122,
   -4621, -2647,  2287, -4621, -4621, -4621, -4621, -4621,  2355, -2509,
   -4621, -4621, -4621,  1114, -4621, -4621, -4621,   251,   172, -4621,
     177, -4621,   180, -4621,   181, -4621,   190,   197,   209,   212,
   -4621,   222, -4621, -4621,  -291, -4621, -4621, -4621, -4621,   227,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621,  -193, -4621, -4621,
     -99, -4621, -4621,  -185,   232, -4621,  -168,   237, -4621,   249,
   -4621,  -116, -4621,  -110, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621,  1284,  2767,  4041,  2762, -1057, -4621,
    1721, -4621, -4621,   859, -4621, -4621,  1015, -1405, -4621,  2610,
   -2500, -2382, -2379, -4621, -4621, -4621, -3015, -3011, -1261, -4621,
   -1299, -2377, -2352, -2345, -2232,   850,  1874,  1890,  1886,     6,
   -4621,  1086,   446, -4621, -4621, -4621, -3413,    11, -4621, -3746,
     686, -4621, -4621, -4621, -4621, -3175, -4621, -4621,   -65, -4621,
   -4621,     7,    14, -4621,   298, -4621,  2856, -4621, -4621, -2277,
    -536,  2740, -4621, -1873, -1668, -2194, -1517, -1515, -4621, -4621,
   -4621,  1349,  1929,  1054, -4621,  1056, -1566,  1006, -3622, -4621,
   -4621,  -501, -2832, -4621, -4621, -4085, -4621, -2380,  1537, -4621,
   -4621, -2371, -4621, -4621, -4621,  1512,  1516, -3238,  1751, -1549,
   -4621,   690,   998, -1209, -4621,    25, -4621,  1020, -4621, -4621,
   -4621, -3803, -4621,   -42, -2495,   261, -4621, -4621, -2998, -3569,
   -1481, -4621, -4621, -3415, -2826,  1858, -4621, -4621,   331, -4621,
   -4621, -4621, -4621, -2819, -4621, -1572, -2097, -4621, -4621,  2861,
     485, -4621,   426,   489, -4621,   422, -4265, -4621,   480, -2149,
    2198, -4621,  3468,  2194, -2383, -4621, -3321, -2648,   737, -2173,
   -4621,  1074, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -2006,
   -4621, -4621,   956,  1415, -4621,  2303,  2005, -4621,  2309, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,  2810, -4621,
     703, -1976,  2830, -4621,  2834,   640, -2775, -1035, -4621, -1023,
   -4621, -1496,  3696, -2351, -3694, -4621, -4621, -4621, -4621, -4621,
    3742, -4621, -4621, -4621,   174, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621,  3048, -4621, -4621, -4621, -4621,  4311, -4621,  3053,
   -4621, -4621, -4621, -4621, -4621,  1567, -4621,  2507, -4621, -4621,
   -4621, -4621, -4621,  2233,  3558, -4621, -4621,    81, -4621, -4621,
   -4621, -4621,  2519, -4621, -4621,  3586,  2144, -4621, -4621,  1875,
    2546, -1678,  1322, -1071,  5262,    13,   115,     5,   628, -4621,
    3199, -4621, -4621, -2124, -4621, -4621, -4621, -4621,  4382,  -982,
   -1024, -4621, -4621,  3028, -4621,  4384,  4077,  3342,   500,  4851,
   -4621, -1216, -4621,    -5, -4621, -4621,  -814, -4621, -4621, -4621,
    -620,  1012, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621,  2639, -4621, -4621, -4621,  3418,  2682, -4621,
   -4621, -2580, -4621, -2443, -1823, -4621, -2408,   479, -4621, -4621,
   -4621, -4621, -4621, -4621,   495, -4621,   195, -4621, -4621, -4621,
   -1994, -4621, -4621, -4621, -4621, -4621,  -938, -2435, -1089, -1087,
   -4621,  4178, -4621, -4621, -4621, -2914, -4621, -2554, -4621, -4621,
   -4621, -4621, -3017, -2692, -4621, -1374,  2534,  2535,  2538,  2539,
   -4621, -4621,   100, -4621,   186, -4621,    18, -4621,    -7, -4184,
   -4174,   647, -4621,   928, -4621, -4621, -4621,   391,  1612,   393,
   -2148, -2366, -1158,  1933, -4621, -4621, -2060,  4219, -2045, -1978,
    1316,     3,  4371,  3862, -3036, -4621,   927, -4621,   503,  1879,
     704, -4621, -4621,  1649, -1055,  -111,   541, -3046, -4621, -1038,
     -79, -4621, -2280,   634, -2333, -2260, -2238, -2064, -2038, -4621,
   -4621,  3071,   -22, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621,  -500,    55,  -615,  5376,  3386, -4621,  2679,  4317,  4320,
   -4621, -4621,  4031,  1952,  1954, -4621, -3617, -2713, -4621, -4621,
   -4621,  -949,  2863,   984,  3881,  1383,  1961, -2867,  1007, -3986,
    4334, -4621, -3448,   999,  4342,  4340, -3287,  3811, -4621, -4621,
   -4621, -4621, -4621,  2522, -4621, -4621, -4621, -4621, -4621,  4434,
    -974, -2022, -4621, -4621, -4621,   921,  3200,  2513, -1365, -4621,
   -4621, -4621, -4621,  4350, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621,  2693,  2288, -4621, -4621, -4621, -4621,  3322,
   -4621, -4621, -4621,  3325, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621,  1979,   257, -4621,
    1313,   183, -4621,   937, -4621, -4621, -4621, -4621, -4621,    45,
   -4621, -4621,    30, -2520, -1069, -1048,  1073,  1214, -1878, -3679,
   -1993, -3100, -1099, -4621, -4621,  1030, -3280, -2864,   722,  -706,
   -1211, -1213,    52,  2464,  3986, -1430, -4621,  4779,  -822, -1548,
   -2239,  1147,  4186,    -6, -4621, -3189, -4621,   -87,   144,  2238,
     -91,  3298, -3571, -4621,    -4,     2, -4621,   357,   282, -4621,
   -4621,   305, -4621, -4621, -4621,   284, -4621, -4621, -4621, -4621,
    4001, -4621,  2594,  5416, -4621, -4621, -4621,  3295,  5424,  -801,
    4018,  3318, -4621,  3323, -4621, -4621, -4621, -2019, -4621, -4621,
   -4621,   194, -4621,  2692, -4621, -4621, -4621, -4621, -4621, -4621,
   -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -4621, -1257,
    4531,  5435,  4114, -4621, -4621,  2525, -4621, -1969, -1331, -1103,
   -2626, -4621,  2926,  3975, -4621, -4621,  1905, -4621,  2929,   784,
   -4621, -4621,   621, -4621, -4621,  1170,  4540,  4070, -4621, -4621,
   -4621, -4621, -4621,  4416, -4621,     4,    29, -4621,  -321, -4621,
   -4621, -4621,   179,  5475,  5476, -4621, -4621,   266, -4621,  -847,
   -4621, -4621, -4621, -4621, -4621,  4349, -4621, -4621,  4351, -4621,
   -4621, -4621, -4621,  4352, -4621, -4621, -4621, -4621, -4621, -4621,
    1845, -4621, -4621, -4621, -4621, -4621, -4621,  -591, -4621, -4621,
   -4621,   302, -4621,  1642, -4621,  1244, -4621,  1187,   864,  1747,
   -2378
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1035,  2287,    67,    68,    69,    70,    71,
    2092,    72,  1332,  2028,  2727,  2728,    73,   903,    74,  1747,
    1748,  2529,  2530,  3808,  4270,  4271,  3817,  4285,  3811,  4274,
    4275,  3814,  4279,  4280,  2519,  2520,  4266,  4267,  3795,  3804,
    3798,  2521,  2256,    75,    76,    77,    78,  2537,    79,  3836,
    2551,    80,  3264,  3021,  3022,  1793,  3864,  4257,  4932,  4261,
    5024,  5125,  4948,  3166,  4603,  4933,  4934,  5033,  2561,  2352,
    5068,  3006,  5153,  3007,    81,  1109,  4314,  4315,  4316,  4646,
    4647,  4648,  4649,  5316,  5219,  5287,  5317,  5403,  5409,  5340,
    5419,  5420,  5421,  5407,  1404,  5422,    82,   937,   938,  1406,
    2121,  2741,  2122,    83,    84,   865,  2053,  2054,  2055,  2056,
    3438,  2742,  3433,  3434,  4396,  5341,  5405,  5220,  5221,  5132,
    5222,  5036,  5223,  5136,  5224,  5039,  5225,  5226,  5227,  5228,
    5308,  5229,  5131,  5333,  5216,  5217,  5310,  5381,  5400,  5230,
    5046,  5126,  5274,  5047,  5127,  5303,  5212,  5304,  5328,  5377,
    5213,  5275,  5331,  5278,  5231,  5237,  5318,  5232,  5238,  5233,
    5051,  5143,  5236,  5141,  5235,  5314,  5313,  5356,  3296,  3875,
    1776,  2546,  3241,  3242,  3243,  3024,  3025,  1641,  2715,  2716,
    2717,  3823,  3824,  3825,  3621,  3622,  3623,  2363,  3161,  3013,
    1642,  1643,  1644,  3247,  3827,  3828,  3248,  3249,  1645,  3251,
    1646,  1647,  1648,  1649,  3026,  3278,  3279,  3280,  3281,  3282,
    2281,  2282,  3567,  2934,  3564,  4476,  4086,  5185,  4093,  4145,
    4146,  4759,  5106,  4994,  5102,  4995,  5104,  5191,  5192,  5005,
    5116,  5117,  4905,  4906,  4907,  2345,  2346,  3227,  3228,  2347,
    1119,  1710,  3283,  2374,  1711,  3119,  1712,  1713,  2350,  3134,
    3106,  3870,  3653,  3654,  3655,  4195,  3656,  3048,  2382,  3645,
    3646,  4214,  3703,  4575,  5208,  3704,  3705,  3706,  3707,  3708,
    3709,  3710,  3892,  3711,  3893,  3888,  3889,  3886,  1162,  4536,
    4537,  4538,  3882,  3883,  4229,  4215,  4216,  4217,  4787,  4546,
    4565,   809,  4555,  4171,  1422,  2972,  1445,  1446,  2846,  2140,
    1714,  4172,  4173,  4174,  4223,  3955,  4677,  4219,  4196,  4785,
    4923,  4926,  5020,  5204,  3049,  1740,  3042,  2244,   681,   682,
    4818,  4819,  4820,  4823,  4824,  4825,  4770,  4771,  4772,  4773,
    3051,  2556,  4774,  4775,  3270,  4762,  4153,  4154,  4155,  3052,
    3403,  4527,    85,    86,  1619,    87,  1627,    88,  1621,    89,
    1733,  1101,    90,  2467,    91,    92,    93,    94,    95,  2851,
      96,    97,  3594,  2965,  2966,  2967,  2307,  2959,  2960,  1040,
    3167,  3756,  4806,  1082,  1715,  1716,  2461,  1717,  1718,  4799,
    1719,  3080,  1720,  1721,  1722,  1723,  3419,  3420,  3057,  3421,
    3109,  2384,  1369,  2722,  4240,  2436,    98,    99,  1051,  1052,
    1053,  1054,  1055,  1056,   990,   100,   101,  2253,  4880,   102,
    1504,  1505,  1506,  3551,  4084,  4468,  4735,  1509,  1510,  1511,
    2916,  3549,   103,  1752,   104,  2802,  2803,  2804,   105,  4606,
    2473,   106,   107,  1759,  1760,  1761,   108,   195,   109,  1391,
    1389,  2098,  2099,   110,  1105,  1106,  2475,   111,  2776,  2777,
    1741,  1742,  4007,   112,   113,  3285,   115,   810,   117,   118,
    2132,  2133,  2827,  2828,   119,   120,   954,   955,   956,  1060,
    1061,  1567,  2316,  2317,  2318,   811,   812,  1271,  1159,  1743,
     814,   815,  1980,   816,  1272,  1273,  4220,   817,  1284,  1968,
     818,  3901,   819,   820,  3972,   821,   822,   823,  3924,  3925,
    4348,  2000,  2001,  2002,   824,   825,   826,  2671,  1936,  1937,
    3966,  3393,  4370,  3300,  3301,  3387,  4728,  3389,  3960,  3961,
    4365,  4681,  4854,  4964,  5074,  4966,  5075,  5082,  4855,   827,
     828,  1260,  1867,  3917,  3341,  4337,  1812,  3326,  1744,  1745,
    1184,  1185,  1150,  2577,  1818,  2829,  4041,  2830,  3502,  3503,
    3504,  4052,  4048,  2806,  2807,  2831,  2832,  2833,  2834,  2835,
    2836,  2837,  4869,  5089,  5090,  5298,  4375,  5375,  4376,  4377,
    4378,  4873,  4441,  4442,  4443,  4444,  4445,  3175,  3176,  3177,
    4013,  3081,  1857,  1858,  1865,  2071,  2072,  1813,  2771,  2185,
    4061,  1032,  1007,  1008,  1521,  2264,  4451,  4729,  4730,  3508,
    4447,  4727,  3115,  3116,  1065,  1069,  2326,  2977,  2978,  1583,
    1584,  1588,  1589,  4892,  3120,  2994,  3069,  3027,  2995,  2791,
    1571,  1572,  1062,  1573,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,  2736,  2337,  1098,   683,  2015,  2016,  2017,   139,   140,
     908,   931,  1394,  3470,  3471,  4019,  3472,  3287,  3474,  4025,
    1004,  2364,  2365,  4026,  1005,  2259,  2260,  2261,  4405,  4407,
     141,   142,  4015,  4016,   932,   143,  2988,  1600,  1601,   144,
     996,  2222,  2223,  2224,  2901,   145,   984,  1494,  2198,  1386,
    1650,  2203,  1497,  1498,  1499,  2204,  2874,  3529,  2186,   146,
     147,  1612,   148,  1078,  1079,  1613,   149,  1333,  2047,  3431,
    3987,  4381,  2048,  2049,  2737,   150,   934,  1401,  1396,  1402,
    2105,  2106,  2104,  2811,  2809,   151,   924,  1387,  2794,   152,
     913,   153,   154,   917,  2084,  1377,  4008,  3288,  3598,  4121,
    4122,  4124,  4498,  4499,  5176,  5324,  5366,  5349,  5369,  5370,
    5373,  5392,  5393,   829,  1524,   830,  4556,  4557,   831,   832,
     833,   834,   835,   836,  4333,  4020,   837,  2327,  4448,   838,
    4017,   839,  2838,  2338,   650,  4281,  4282,  1041,  1525,  2320,
    2145,  4105,  1274,  1019,   893,  5053,   974,  1043,  1437,  1044,
    2020,  1438,  2755,   652,   653,   654,  5054,   655,   656,   897,
     979,   657,   155,   980,   156,  2154,   157,  3523,  3524,  1451,
    1455,  2169,  2170,  2171,  1500,  1951,  2163,  1452,  2172,   983,
    1430,  1431,  2152,  1432,  2150,  1433,  2856,  2181,   158,   920,
    1380,   662,  2088,  2089,  3457,   159,  1001,   160,   161,   162,
    1090,   163,  2076,  2769,  2770,   164,  2124,   165,  2058,  2067,
    1336,   899,   900,  2758,  2954,  2302,  2303,  2756,  2021,  1439,
    3517,  1557,  1780,  1046,  1781,  1047,  1347,  2061,  1560,  4401,
    3992,  4971,  4697,   166,   196,   665,  1117,  1766,  2129,   167,
     168,   169,   170,  1582,   842,  2839,   843,   957,  1138,   684,
    1802,  1794,   189,   190,   191,   687,   688,   192,  1731,  1732,
    4262,  4808,  4936,  5158,  5159,  1796,  5247,  1797,  1798,  3865,
    4833,  5243,  5321,  1799,  3293,  4319,  4951,  5155,   171,  1530,
    1526,  1017,  2275,  2269,  2271,   172,   173,  1372,   174,   175,
    4885,  4886,  3851,  2466,  3747,  3748,  4251,  3164,  3752,  2724,
    3035
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     651,   972,  1305,   121,  1066,   116,  1045,  1310,  1607,   841,
    1496,  1614,   861,   114,  1423,  1427,   902,  1594,  1918,  1590,
    1917,  2321,  1872,   895,  2014,   923,  1186,  2780,  1782,  2068,
    2789,  1593,   939,  3266,  1456,   944,  1576,  1070,   649,   975,
     939,   895,  2456,   994,  3095,   976,  3244,  1002,  1545,  1009,
    2980,  2981,  1018,  3553,  2906,  2948,  2790,  2743,  2744,  3076,
    1724,  3078,  2013,  2481,  1024,  1022,  1821,  1822,  1967,  1031,
    3090,  3736,  1725,  1145,   901,  3145,  3146,  1030,  2126,  2383,
    1578,  3449,  4213,  3897,  1860,  2381,  3329,  2840,  3107,  1025,
    3330,  1042,  3396,  3473,  1071,  1874,  1093,  2196,  2772,  2412,
     862,   993,  2348,  3786,  2349,  2667,  2668,  1887,  1888,  1889,
    3138,   922,  3036,  1891,  3140,  3599,   928,  2435,  2677,  2678,
    2679,  2229,  2230,  2231,  2232,  2233,  1073,  2235,  3302,  3303,
    3304,  2308,  2310,  2311,  3757,  4218,  3031,  3032,  2351,  2852,
    1130,  1131,   994,  2714,  1135,  3333,  3505,  4089,  1939,  2870,
    3743,  3331,  1927,  2127,  2772,  4235,  4236,  2389,  2819,  4131,
    3400,  2393,  1113,  1115,  3245,   894,  3548,  3246,  3479,  3253,
    3349,  1083,  3271,   651,  3351,  2413,   651,  1042,  1094,   994,
    1453,  1252,  1253,   894,  1254,  3111,  3112,  2425,  2894,  4021,
    3359,  3360,  4687,   994,  3254,  3147,  3366,  1306,  3324,  1938,
    1080,  3255,  4688,   663,  3039,  2904,  3324,  3325,  1814,  1815,
    1816,  1085,  3378,  3379,  1092,  3325,  3829,  2989,  2907,  1826,
    3830,  3385,   992,   921,  2910,  2023,  3518,  2367,   927,  1315,
    1316,  1317,  4641,  3432,  1320,  1321,  1072,  1095,  1324,  4277,
    1326,  1327,  1328,  2975,  1330,  4616,  1000,  3135,  3136,  2070,
    1880,  1107,  4404,  1884,  4221,  1383,  2720,  2929,  3388,  1307,
    3229,  1363,  4177,  4181,  1264,  1265,  4182,  2659,  1264,  1265,
    1307,  3488,  1901,  1902,  1945,  2549,  1906,   689,  1264,  1265,
    3045,  3733,  1307,  3044,  4191,  2070,  1264,  1265,  2931,  1753,
    2294,  1795,  1803,  4244,  1920,  1921,  2471,  -993,  1667,  1925,
    1926,  3592, -1876,   896,  1767,  1409,  1264,  1265,  1264,  1265,
    1264,  1265,  4487,  2137,  2985,  2255,  1749,  1667,  1395,  4130,
    2255,   896,  3574,  3495,  3257,   978,   898,  2790,  3383,  -978,
    2790,  2790, -2830,  1264,  1265,  2961,  1116,  3217,  4868,  1264,
    1265,  2206, -2264,  1057,   898,  3519,  4473,  3226,  -627,  1128,
    2575,   914,  2976,  4599, -2026,  4165,  1264,  1265,  1264,  1265,
   -2036,  1667,  1057,  2070,  4858,  1139,  4183,  4166,  1264,  1265,
    2544,  1102,  1124,  1048,  3426,  1789,  3391,  1264,  1265,  4117,
   -2035,  4167,  1264,  1265, -1762,  2720,  3866,  1264,  1265,  1103,
    4118,  1397,  -628,  1458,   959,  1264,  1265,  3340,  4554, -2831,
     977,  4414,  1264,  1265,  1829,  3644,  1754,  1515,  1800,  3046,
    1755,  4577,  1264,  1265,  1264,  1265,  1264,  1265,  4344,  4701,
   -1762,  3583,  3292,  1067,  1756,  1074,  2200,  4175,  5167,  3091,
    3717,  5058,  1264,  1265,  1059,  4883,  -500,  3607,  1063,  -484,
    4851,  3101,  5059,  2844,  1616,  3274,  2228,  1309,  5152,  1558,
    1652,  2792, -2830,  1059,  1166,   197,  1057,  4189,  4190,  2273,
    3273,  3496,  1224,  1836, -2100,  5156,  1964,   197,  1428,  4327,
    4058,  4238,  3141,  1057, -2735,   915,  3596,  1186,  -528,  3235,
    2405,  3497,  -517,  4053,  2757,  2205,  1410,  1580,  1416,  1997,
    1998,  3991,  4852,  2164,  3498,  2953,  3436,  2444,  2201,  4912,
    2131,  4540,  1415,  3173,  2168,  2790,  2247,  -867,  1058,  1067,
    3867,  1565,  2651,  3624,   197,  1554,  1354,  5206,  2636, -2831,
     193,  1576,  4559,  1551,  4521,  1058,  2935,   660,  1555,  -640,
     661,   199,  1021,  3294,  4496,  1063,  1384,  5168,  1097,  4588,
   -1762, -2896,  3600,  1264,  1265,  1264,  1265,  1059,   991,  1058,
    2202,  3429,  4403,  4559,  1576,  3295,  2334,  2335,  4165,  3265,
    3854,  1757,  1458,   959,  1059,  4947,  1635,   664,  4497,  1750,
    4166,  2799,  4811,  2936,  1264,  1265,   926,  1308,  3499,  4040,
    4044,  2459,  2108,  1123,  4167,  4643,  1398,  2248,  1308,  4055,
    4056,  2296,  1735,  3725,  4213,  4644,  1458,   959,  5207,   904,
    1308,  1787,  3522,  1734,  3568,  2245,  2344,  3437,  1522,   194,
    3514,  3515,  4119,  1552,  1581,  1264,  1265,  1566,  1556,  3971,
    1417,  1063,  3578,  3579,  3580,  3581,  1364,  4169,  1791,  3476,
    3477,  1944,  2719,  1267,  3047, -1762,  1268,  1267,  5120,  2719,
    1268,  1264,  1265,  2406,  1225,  2156,  1429,  1267,  4239,  3422,
    1268,  1049, -1762,  1064,  3744,  1267,   994,   994,  1268,  1758,
    5060,  2211,  1167,  4766,  1042, -1762,  1126,  2091,  1973,  5276,
    3276,  5152,  2274,  3562,  2721,  2790,  4278,  1267,  3619,  1267,
    1268,  1617,  1268,  4477, -2264,  3631,  5276,  5157,  1996,  -867,
    2445,  4070,  4853,  4559,  5169,  1264,  1265,  1351,  3868,  5105,
    3500,  3487,  1267,  3590,  3591,  1268,   863,  1618,  1267,  4249,
    2014,  1268,  2986,  4864,  1114,  1114,  2026,  1264,  1265,  1261,
    1170,  3494,  3872,  1680,  3446,  1267,  1187,  1267,  1268,  4345,
    1268,  3826, -2896,  3985,  2962,  1110,  3473,  1267,  2587,  4645,
    1268,  1730,  3584,  1482,  3475,  1025,  1267,  3729,  2013,  1268,
    1068,  1267,  2330,  4953,  1268,  4525,  1267,  4791,  2718,  1268,
    3740,  2472,  -640,  4578,  1267,  4529,  4438,  1268,  -711,  1559,
    2790,  1267,  3501,  4532,  1268, -1762,  2078,  4938,  4939,  3506,
    2600,  1267,  2297,  1267,  1268,  1267,  1268,  3718,  1268,  4884,
    1523,  2772,  1264,  1265,  2483,  1792,  3509,  4120,  3753,  4706,
    1042,  1267,  1262,  2721,  1268,  4439,  3041,  1275,  3041,  4580,
    1257, -2830,  1830,  3869,  2207,  3967,  1366,  3969,  1256,  1807,
     675,  2743,  2744,  3723,  2800,  4161,  1637,  2022,  2348,  1399,
    2349,  1400,  3722,  3873,  2576,  1390,  1068,  1309,  2889,  3392,
    4130,  1318,  2892,  3424,  1129,  4801,  1323,  2896,  4767,  3765,
   -2036,  3767,  3768,  3399,  1125,   987,  3878,  3773,  3774,  1050,
    2681,  3603,  3520,  2772,  2351,  5067,  1140,  3783,  3784,  3637,
   -2035,  3640,  3788,  2568,  3790,  2585,  1424,  3793, -2831,  2295,
    3800,  2090,  2911,  2912,  1442,  1447,  2470,   916,  4233,  3907,
    3284,  3908,  2101,  1361,  1270,  1264,  1265,  1042,  1270, -1762,
    1411,  4859,  2986,  1370,  1075,  3926,  3216,  3927,  1270,  4126,
    4488,  3225,  1267,  3258,  1267,  1268,  1270,  1268,  -640,  1388,
    1042,  1576,  3941,  3601,  -993,  1751,  2373,  4184,  4949, -1876,
    1544,  2373,    42,  4168,  3570,  2550,  1270,  1751,  1270,  4042,
    1270,  2612,  1492,  1267,  4098,  2616,  1268,  4102,   841,  2285,
    3771,  3819,  1070,  3649,  1141,  3805,  -978,  1042,  4169, -2830,
    2565,  1066,  1595,  1270,  2930,  1042,  1042,  2638, -2264,  1270,
     895,  1574,  3593,  2680,   679,  -627,  1385,   975,  3959,  1365,
    3970,  1264,  1265,   976,  1267, -1762,  1270,  1268,  1270,  1751,
     994,  1514,  3975,  1620,  1596,  2932,  4425,  1226,  1270,  3881,
    1009,  4516,  1625,  2793,  4715,    49,  5181,  1270,  2801,  1071,
    1267, -1762,  1270,  1268,  1546,  1751,  4412,  1270,  3845,  -628,
    2348,  5170,  2349,  4766,  5148,  1270, -2831,  2660,  1538, -2896,
    1548,  2661,  1270,  4430,  4431,  1355,  1256,  1073,  1577,  1779,
    2687,  4277,  1270,  1544,  1270,  2586,  1270, -1762,  1513,  1946,
    2859,  4338,  1042,  1947,  1331,  1286,  2351,  1264,  1265,    54,
    2285,  1591,  1270,  -500,  1267,  2373,  -484,  1268,  2373,  2963,
    2964,  1946,  4835,  2640,  1615,  2604,    55,  2641,  1042,  2300,
    1622,  1623,   121,  1042,   116,  1626,  1267,  3719,  1263,  1268,
    1726, -2100,   114,  1728,   651,  2246,  2652,   994,   989,  4014,
    3452, -2735,  4522,  2373,  1746,  -528,  2637,  2373,  4250,  -517,
    4517,  2373,  3881,  1768,  1769,  1770,  1381,  5121,  1773,  2657,
    4427,  1777,  1392,  2658,  1042,  2566,  1783,  -304,  1736,  1785,
    1786,  3405,  1729,   895,  2212,  3406,  4168,  4021,  3734,   864,
    3912,  1352,  3256,  1309,  3913,  3920,  3737,  1072,  2296,  3921,
    3939,  3741,  5101,  5211,  3940,  1114,  2373,  3267,  1493,  4071,
    2331,  1267,  2591,  1187,  1268,  3977,  5376, -2026,  3833,  3978,
    5302,  2610,  4286,  1270,  2373,  1270,  3986,  1187,  1070,  2592,
    1751,  2597,   986,  2602,  1257,  4049,  2064,  4292,  4440,  2944,
    4763,  1420,  1256,  2849,  2790,  2183,  1892,  4562,  2924,  2603,
    4541,  3874,  5396,  4323,  1270,  3754,  1861,  1160,  4767,  1862,
     943,  4563,  1307,  3064,  1918,  4103,  3117,  1810,  4050,  1023,
    1995,   911,  4085,  1264,  1265,  1919,  5162,  1948,  1311,  1264,
    1265,  3453,  4990,  3937,  2011,  4766,  2239,  5080,  2543,  2357,
    2799,  1940,  3714,  3715,  1507,  1270,  2975,  3252,   925,  3638,
     896,  1264,  1265,  2560,  5269,   933,  5360,   841,  2062,  1289,
    1956,  1667,   995,   978,  1267,  1264,  1265,  1268,  4157,  4158,
    2063,  1270,  1633,   898,  3829,  1264,  1265,  1228,  3830,  3065,
    1969,  1970,  1590,  1590,  1974,  3250,  1359,  1975,  1976,  1977,
    4068,  1972,  1981,  1982,  1984,  1986,  1987,  1988,  1989,  1990,
    1949,  1042,  3585,  3103,  1420,  4415,  2567,  1133,  2004,  2005,
     651,  2007,  2606,  2009,   651,  1042,  1025,  2125,   651,  2019,
    1042,   994,  3381,  2024,  2025,  1270,  3268,  4113,  2057,  1003,
     895,  1508,  4464,  4100,  2142,  4768,  4769,  4107,   977,  2297,
    2060,  2618,  3244,  1042,  1811,  2745,  1762,  1270,  2006,  3382,
    1267,  1042,  2010,  1268,  1042,  2976,  2018,  4372,  2075,  2077,
    3454,  2875,  2868,   895,  2783,  4920,  1104,  4922,  2158,  3842,
    1453,  4324,  5138,  2703,   994,   994,  2199,  3327,  4143,  1114,
    4421,  3066,  2623,  3104,  5069,   994,   994,  1788,   994,  2103,
    3569,  2134,  4263,  4264,  4373,  3273,  4579,  2713,  4991,  4581,
    2240,  1003,  1042,  1042,  4564,  1635,  2065,  5200,  2627,   909,
    3860,  2138,   972,   896,  4132,  2014, -2026,  2147,   895,  1042,
    4767,  3441,  1270,  2249,  4051,  4032,  1267,  1724,  1724,  1268,
    2784,  4268,  2087,  1114,  2157,  4101,   898,  4453,  4454,  1725,
    1725,  2159,  2165,  2100,  1114,  4057,  2102,   997,  2298,  2283,
     975,  4788,  4789,  2013,  4325,  1502,   976,  1042,  4323,  1070,
    3245,  2990,  2628,  3246,  3067,  3253,  2291,  4331,  2304,  4149,
    3990,  3273,  4484,  4479,  4480,  1420,  4125,  3404,  3041,  4482,
    3432,  4485,  2383,  2322,  2630,  2456,  3105,  3482,  3552,   987,
    3254,  1360,  3439,  2800,  4505,  1633,   742,  3255,  5150,  4509,
    3455,  5270,  3797,  4512,  1991,   894,  4067,  4063,  4064,  1425,
    1264,  1265,  4029,  1009,  2265,  4362,  1950,  2681,  2342,  4076,
    4077,  1058,  3324,  1577,  5086,  1270,  2725,  2050,  2276,  3533,
    1308,  3325,  2991,  1421,  1042,  5139,  4371,  1549,  2554,  3538,
    3409,  3410,  3540,  1789,  3358,  3543,  4705,  1042,  1264,  1265,
    3801,  1067,  2066,  1042,  1145,  2184,  1482,  2688,  4128,  2631,
    3481,  2555,   912,   988,  1042,  4099,  1264,  1265,   197,  2344,
    3964,  1939,  2886,  3968,  4795,  5098,  1790,  1264,  1265,  2383,
    2412,  4301,  1482,  1264,  1265,  2381,  4213,  2328,  1264,  1265,
    5009,  3324,  1267,  3586,  2339,  1268,  3269,  2332,  1267,  1042,
    3325,  1268,  3714,  3715,  4374,  3274,  -559,  4299,  4300,  5364,
     896,  1270,  5259,   918,  2848,  2992,  2353,  2354,  2299,  3415,
    1267,  1312,  1938,  1268,  4361,  2772,  4324,  3639,  1635,  1264,
    1265,  4725,  2358,   898,  1267,  2887,  2300,  1268,  1264,  1265,
    3624,  2578,  1635,   896,  1267,  2579,  1421,  1268,  1134,  2940,
    4066,   999,  2878,  1375,  1264,  1265,  2413,  2160,  1763,  1503,
    4634,   910,  2635,  1063,  4865,  1637,   898,  5016,  1264,  1265,
    1863,  2355,  2458,  1864,  3328,  4326,  4526,  2801,  1264,  1265,
    2148,  3274,  4978,  3849,  5129,  3068,  2250,  1270,  1301,  1302,
    1303,  1304,  1058,  1361,  4358,  4768,  4769,  1231,   896,   998,
    4779,  4372,   197,  4707,  3575,  2383,  4108,  3516,  1021,  4329,
    3456,  2348,   766,  2349,  3626,  1216,  5140,  1220,  5071,  4913,
    1992,   898,  1067,  2460,  5201,  3384,  2946,  2301,  4979,  2476,
     994,  3576,   989,  3448,   929,  1307,   978,  3263,  4373,  3510,
    3511,  3512,  1264,  1265,  3516,   994,  1993,  2351,  2653,  4140,
    2689,  4253,  3625,  3766,  1346,  4968,  3769,  3770,  1357,  3772,
    1264,  1265,  3775,  3776,  3777,  3778,  3779,  3780,  3781,  3782,
    1264,  1265,  3785,  4005,  3787,  1023,  3789,  4726,  3791,  2783,
    3850,   994,  3799, -1940,  2562,   651,   651,  2417,  2478,  3826,
    4684,  5386,  1264,  1265,   651,  4817,  1791,  1264,  1265,  4843,
    4254,  2790,  2790,  2531,  1309,  1482,  4456,  1264,  1265,  1033,
    2941,   977,  2161,  5365,  3714,  3715,  2184,  1421,  5103,  1482,
    3938,  5107,  2431,  2563,  2564,  5202,  4109,  1034,  2888,  2695,
    3276,  2162,  3587,  3588,  1063,  4475,  2993,  1264,  1265,  2558,
    5133,  5134,  1264,  1265,  3070,  2784,  2356,  3118,  2675,  4486,
    5130,  1021,  2144,  1270,  4490,  4742,  5203,  4743,  4980,  1270,
    5077,  1376,  4481,  3535,  2685,  1264,  1265,    42, -1940,  5017,
    3168,  1187,  2611,  5013,  4248,  2432,  2785,  1036,  1068,  1267,
    2144,  1270,  1268,  1264,  1265,  1264,  1265,  2947,  1637,   742,
    3070,  4807,  4457,  3137,  1307,  1270,  1960,  4664,  1426,   930,
    2718,  2581,  1637,  1086,  4713,  1270,  3276,  4768,  4769,  1730,
    3071,  1264,  1265,  1994,  3802,  3803,  2188,  1267,  1087,  3525,
    1268,  1264,  1265,  1217,   806,  1221,  4255,  1264,  1265,  1042,
    4326,  1737,  3832,   919,  4643,  1267,   661,  4533,  1268,  3589,
      49,  3072,  4110,    42,  4644,  1042,  1267,  2786,  4374,  1268,
    2418,  4289,  1267, -1940,  3602,  1268,  3071,  1267,  4400,  1738,
    1268,  2433,  2184,  1792,  1081,  2746,  3494,  2690,  1264,  1265,
    3831,   660,  2692,  2696,   661,  2189,  1257,  1264,  1265,  5018,
    4293,   658,  2278,  2691,  1256,  2279,  2700,  3072,  3413,  2704,
    2670,  3169,  2580,  1275,    54,  2718,  2702,  1025,  1267,    42,
    1091,  1268,   994,  1542,  2782,  2795,  2796,  1267,  2190,  2144,
    1268,    55,  3073,  3844,  5263,  4136,    49,  1764,  2674,  1057,
     994,  1025,  1084,  1267,  1264,  1265,  1268,  4737,  4778,  4605,
    2787,  4459,  3918,  2743,  2744,  4534,  1737,  1267, -1940,  4129,
    1268,  4106,  3919,  4941,   994,  1187,  1042,  1267,  4944,  1068,
    1268,  2708,  2847,  1308,  3398,  4620,  4621,  2709,  3073,   905,
    2711,  2754,  1096,  5077,  1738,  2759,  4631,  2582,  2860,  4256,
      54,  2483,    49,   994,  4738,  3407,   994,  3408,  1114,  4535,
    4500,  4501,  4682,  1290,  1291,  1042,  4502,    55,  4645,  1961,
    1042,  1042,  1810,  1264,  1265,  3074,  1765,  1739,  2772,  5319,
    5319,  3884,  1114,  2884,  3745,   766,  2719,  1264,  1265,  2745,
    1059,  1267,  4412,  3996,  1268,  3899,  2605,  2893,  4887,  4043,
    1597,  2754,   659,  2820,  4651,   994,    54,  1286,  4054,  1267,
    3263,  2773,  1268,  1042,  2778,  2280,  4137,  1264,  1265,  1267,
    1270,  3074,  1268,    55,  4367,  4567,  4368,  2772,  2772,  1042,
    1555,   906,  4030,  2772,  1023,   895,  3847,  5164,   895,   975,
    1025,  1267,  4683,  2718,  1268,   976,  1267,   975,  5083,  1268,
    4630,  2790,  5065,   976,  2554,  4973,  1267,  3722,  1270,  1268,
    1264,  1265,  1598,   651,   651,   651,   994,   651,  1042,   994,
    4793,  4794,  4311,  1264,  1265,  3976,  1270,  2555,  2890,  3843,
     651,  4072,  1042,  3371,  1737,   651,  1267,  1270,  2949,  1268,
    2329,  1267,  1308,  1270,  1268,  1088,  1458,   959,  1270,  1825,
    2333,  2879,  2880,  2881,   907,  2883,  2457,  1546,  2191,  3128,
    1023,  3129,  1738,  -559,  1267,  2373,  1574,  1268,  2891,  2998,
    1556,  1264,  1265,  2895,  2882,  4744,  1089,  2885,  1810,  2790,
    2790,  2788,  1267,  1918,  1267,  1268,  1918,  1268,  4022,  1270,
    1264,  1265,  1264,  1265,  1264,  1265,  1264,  1265,  1270,  1097,
    2923,  1264,  1265,  1026,  3130,  4268,  2999,  3932,  1810,  2971,
    1267,  1264,  1265,  1268,  1270,  1099,    64,  1264,  1265,  1042,
    1267,  1810,  3000,  1268,   895,  1025,  1267,  3131,  1270,  1268,
    1264,  1265,  5205,  3861,  1264,  1265,  1962,  2339,  1270,  2458,
    1264,  1265,  1027,  2853,  1100,  3943,  3075,  1042,  1599,  3974,
    1264,  1265,  1963,  4558,  1591,  1591,  3452,   178,  3099,  4304,
    2984,  1289,  1108,  3944,  2854,   994,  3132,  1267,  1264,  1265,
    1268,  4294,  4295,  4296,  4424,  4848,  1267,  1264,  1265,  1268,
    4666,  2584,  2605,  4014,  4558,  4014,  4305,  4698,  3750,  3088,
    4672,  1110,  3075,  1057,  3033,  3144,  4714,  1010,  2968,  1753,
    1025,  3040,  1270,  3751,  2192,  1879,  2855,  3053,  3055,  3058,
    3059,  3060,  3061,  3062,  2434,  1111,  3982,  3077,  2983,  3082,
    1270,  2982,  2593,  1267,  1918,  2193,  1268,  3981,  1112,  3082,
    1270,  3092,  3093,  1116,  3082,  1883,  3097,  3098,  3998,  1042,
    3100,  3082,  1264,  1265,  1011,  1058,  3110,  2594,  1905,  3113,
    2194,  1919,  1270,   323,  2772,   325,  3123,  1270,  4896,  3124,
     994,  2601,  1120,  1458,   959,   896,  2195,  1270,   896,  5165,
    3139,  2614,  3082,  2457,  1310,   978,  1042,  5361,  1264,  1265,
    5084,  4897,  4164,   978,  1059,  1118,  1264,  1265,   898,  1779,
    3043,   898,  1267,   994,  3001,  1268,  5362,  1270,  1121,  5234,
    4821,  3063,  1270,  3082,  3178,  4826,  1267,  3083,  2708,  1268,
    1122,  5326,  5327,  3373,  2927,  4188,  1754,  1127,  3125,  1012,
    1755,  4069,  2386,  4193,  1424,  1270,  1198,  4259,  1424,  4074,
    4226,  1132,  2376,   714,  1756,  2615,  1267,  3114,  2314,  1268,
    2315,  3122,  4260,  1270,  5293,  1270,  1215,  2387,  3126,  3127,
     977,  3170,  1918,  2619,  3117,  5250,  1264,  1265,   977,  1229,
    1230,  1136,   994,  2626,  2241,  2242,   994,  1137,  5011,  5012,
     936,  1270,  3002,  3252,  1042,  5428,  2583,  3647,   936,  1267,
    2483,  1270,  1268,  3289,   651,  2629,   176,  1270,  3712,  3713,
    2632,  2243,  1267,  3286,  1142,  1268,  1264,  1265,  3003,   719,
    2644,  4870,  1143,  4871,   896,  1042,  2490,  2491,  1310,  1042,
    1144,  3250,  5010,  1264,  1265,  1290,  1291,  2607,  2383,  3133,
    3230,  2483,  3290,  1146,  3234,  1264,  1265,   898,  1270,  1263,
    2662,  1147,  1264,  1265,  3347,  2669,  5306,  1270,  4821,  1148,
    1267,  4992,  4826,  1268,  1151,  1264,  1265,  1264,  1265,  1264,
    1265,  2975,  1152,  1264,  1265,  1264,  1265,  1309,  3425,  1267,
    3004,  1267,  1268,  1267,  1268,  1267,  1268,  1153,  1268,  3427,
    1267,  1757,  3284,  1268,  1264,  1265,  2672,  2693,  2928,  1154,
    1267,  2608,    42,  1268,  1270,  1877,  1267,  5256,  2783,  1268,
    3390,  4112,  2620,  2388,  1940,  5355,  2483,  5357,  4542,  1267,
    4821,   731,  1268,  1267,  3877,  4826,  1268,  4582,  1155,  1267,
    4584,  4585,  1268,  5379,  3911,   660,  1606,  1156,   661,  1267,
    3914,  2783,  1268,  1264,  1265,    42,  2621,  4422,  4986,  4185,
    2483,  2622,  4186,  3417,  3418,  2483,  1257,  1267,  1264,  1265,
    1268,  4543,  4460,  1042,  1256,  1157,  1267,  1158,  4321,  1268,
    1042,  2507,  2508,  1270,  2784,    49,  1161,  5414,  5415,  1163,
    2976,  3922,  3005,    25,  4544,  1702,  2057,  1270,  1703,  1758,
    3928,  2057,  5113,  1630,  4458,  3440,  1042,  1458,   959,  2624,
    1013,  4334,  4335,  2483,   747,  2990,  1164,  2784,  1299,  1300,
    1301,  1302,  1303,  1304,  1165,  1264,  1265,  1270,    49,  1286,
    4115,  4116,  1014,  4545,  2665,   994,  2750,  4350,  2483,    54,
    2751,  1267,  2313,  2314,  1268,  2315,  1350,  1918,  2785,  1353,
    1168,   994,   994,  3979,  1356,  1169,   323,  1171,   325,  1358,
    2921,  1631,  2955,  2956,  2922,  5350,  1172,  2957,  2958,  1187,
    1270,  3286,  1042,  1015,  3539,  3159,  3160,  1267,  1173,   994,
    1268,  1174,    54,  1270,  3411,  1267,  2991,  3485,  1268,   972,
    1257,  1314,  3332,  2087,  4343,  2070,  2483,  1576,  1256,    55,
    1175,  3626,  3714,  3715,   895,   895,   895,  4339,  1176,  2100,
    3463,  3401,  1025,  1319,  1025,  2483,  3929,  1527,  1528,  2786,
    1531,  4856,  1532,  4625,  4626,  4627,  4628,   975,  4722,  4723,
    3930,  1270,  3531,   976,  1016, -2026,  3634,  3934,  1322,  3625,
    3635,  2483,  5064,  1177,  1424,  4159,  1630,  3375,  1178,  4160,
    1270,  4380,  1270,  4165,  1270,  1267,  1270,  1181,  1268,  1042,
    3931,  1270,   994,   994,  1182,  4166,  4310,  1188,  2790,  2992,
    4160,  1270,  4283,  4284, -1762,  5092,  3554,  1270,  4379,  4167,
    1189,  3417,  2483,  1190,  5260,  3559,  1191,  3561,  3014,  4402,
    1270,  1458,  4178,  2920,  1270,  1267,  5111,  5112,  1268,  1023,
    1270,  4416,  2787,  3933,  1631,  4417,  1286,  1192,    36,  2783,
    1270,  3636,  1267,  1286,  1633,  1268,  3936,  5398,  5399,  1325,
    3541,  3542,  2790,  2790,  1267,  1042,  1329,  1268,  1270,  1193,
   -1762,  1267,  4469,  1289,  1268,   774,  4470,  1270,    42,   994,
    2339,  3606,  1023,  1194,  1267,    42,  1267,  1268,  1267,  1268,
    3832,  1268,  1267,  1334,  1267,  1268,  4471,  1268,  1335,  4507,
    4470,  1424,  3617,  4508,  3942,  4514, -1762,  4607, -1762,  4515,
    -709,  4608,  1195,  1267,  1025,  2784,  1268,  4609,  1629,  1196,
    2376,  4610,  1337,  3945,  1344,  3947, -1762,  3949,  3831,  3951,
    1199, -1762,  1042,  1345,  3952,  2377,  3040,  1630,  3040,  2407,
    1634,  3015,  1270,  3053,  3953, -1762,  2990,  1200,  3657,  2376,
    4355,    49, -1762,  1201,  5408,  4611,  1349,  3082,    49,  4612,
   -1762,  2847,  1424,  4356,  2408,  4614,  1362,  4693,  4413,  4615,
    5408,  3720, -1762,  4357,  1348,  4617,  1367,  1267,  1270,  4618,
    1268,  1202,  1042,  4426,  1203, -1762,  1270,  1635,  3728,  1338,
   -1762,  1204,  4712,  1368,  4619,  1631,  5408,  1633,  4515, -1762,
    4624,  4510,  3155,  3158,  4515,  3467,  3468,  4528,  3082,  4654,
    4662,  2070,    54,  4657,  1374,  4667,  3082,  2991,  4528,  2483,
    3082,  3082,    55,  4690,   896,   896,   896,  2483,  1205,    55,
    2993,  4739,  1293,  1294,  1267,  4508,   994,  1268,  1206,  -709,
    4757,  1378,  1042,  1042,  4515,  2378,  3834,   898,   898,   898,
    1289,  1908,  1909,   978,  4761,  1632,  1270,  1289,  4515,  1207,
    2070,   176,  1208,  2788,  1379,  2908,  2909,  1209,  2409, -1762,
    -709,  3846,  1339,  2476,  4764,  4665,  1210,  1340,  4515,  1211,
    2376,  1737,  3305,  1634,  1286,  4780,  1382,  4782,  1212,  4781,
   -1762,  4781, -1762,  4830,  1114,  2377,  1270,  4515,  1213,  1918,
    2992,  3880, -1762,  1214,  1918,  1042,  4022,  1070,  4910,  1738,
    1737,  4671,  4911,  1270,  3016,  1218,  1403,  4931,  4943,  4673,
    1341,  4508,  3635,  1219,  3017,  1270,  1222,  1042,   977,  5014,
    1635,  3018,  1270,  5015,  1223,  1227,  1342,  5178,  1738, -1762,
    5183,  5179,  1231,  1232,  3762,  1270, -1762,  1270,  1633,  1270,
    5186,  1233,  1042,  1270,  4470,  1270,  5188,   177,  1393,  5197,
    5189,   895,  1343,  5198,  1482,  1023,   994,  1234,  1630,   994,
    1235,  3657,    64,  1236,  1270,  5264,   178,  5390,  3286,  5265,
    1237,  5391,  1538,  1238, -1762,  1239,  1240,  3286,  3286,  4674,
    1256, -1762,  1241,  3286,  1242, -1762,  1243,  1244,  1285,  -709,
    1245,  1246, -1762,  1247,  1248,  2378,  1249, -1762,  1250,  1293,
    1294,  1251,  1313,  1346,  1286, -1762,  1293,  1294,  3495,  3237,
    1405,  2745,  1408,  1415,  3853,  1440,  1631,  3855, -1762,  4675,
     945,  1448,  1454, -1762,  1634,  3019, -1762,  1365,  1270,  1516,
    1517,  1737,  1519,  1520,  1529,  1536,  4676,  1637, -1762,   179,
    1534, -1762,  1535,  1537,  1539,  1540, -1762,  1541,  4765,  1543,
    1550, -1762,  1561, -1762,  -709,  4928, -1762,  1553,  1547,  1738,
    4012,  1562,  1563,  1564,  1575, -1762,  2410, -1762,  4930,  1579,
    3390,  1635,  4957,  1067,   930, -1762,  5122,  1603,  1289,  1605,
    1624,  1628,   180,  2411,  1727,  1270,  3973, -1762,  1297,  1298,
    1299,  1300,  1301,  1302,  1303,  1304,  1286,  1482,  1730,  1771,
   -1762,  1774,  1775,  1772,  1778, -1762,  1784, -1762,  1307,  3238,
     176,  2993,  4747,  4748, -1762,  4750,  3239,  1810, -1762, -1762,
    1817,  1828,  3020,  2754,  1831,   181,  1866,  3995,  1042,  4802,
    1876,  1877,  1899,  3237,   994, -1762,  4754,  4755,  1878, -1762,
    1916, -1762,  1928,  1929,  3286,  1042,  3496,   946,  1941,  3082,
    1919,  1942,  1636,  4023,  1943,  2380,  1638,  1952, -1762,  1971,
    1978,  4168,  2008,  1979,  1538,  2754,  3497,  1042, -1762,  1633,
    2012,  1639,  1256,  2059,  3495,  2080,  2027,   994,   994,  3498,
    1637,  2081,  4179,  3701, -1762,  1630,   994,   994,   994,  2082,
    2085,  2086,  4004,  2083,  2094,  2096,  2097,  2379,  2107,  2095,
    2123,  4659, -1762,  2128,  1287,   694,   666, -1762,  1289,  2490,
    2491,  2139,  1025,  1025,  -709,  2143,  1042, -1762,  2144,  2146,
    2149,  1025,  1025,  1025,  2151,   178,  2153,   947,  2156,  2155,
    1288,   896,  1417,  2182,  2187,  4960,  3237,  1293,  1294,  3237,
    -709,  5187,  4087,  1631,  4087,  2208,  2209,  2210,  1482,  2225,
    4094,  2226,  2227,  2234,   898,  1634,  2236, -1762,  2237,   182,
    2238,  2251,  2252,  3499,  2254,  1297,  1298,  1299,  1300,  1301,
    1302,  1303,  1304,  1298,  1299,  1300,  1301,  1302,  1303,  1304,
    2255, -1762,  2266,  4548,   994, -1762,  4127, -1762,  2267, -1762,
     714,  1919,  2284,  1633, -1762,  2268,  3240,   667,  2270,  1638,
    1289,  2286,  1635,  -866,  2272,  4961, -1762,  2288,  2289,  4197,
    2290,  2292,  3496,  2293,  1639,  2380,  2319, -2026,  3495,  1025,
   -2026,  1290,  1291,  2306,   714,  2323,  3040,  2324,  2343, -1762,
   -1762,  1637,  3497,  -917,  4156,  2359,  3238,  2361,   183,  2362,
    2370,  2375,  2390,  3239,  2376,  3498,  -709,   718,  2395,  2396,
    4863,  2401,  2402,  4198,  2507,  2508,   719,  4199,  2404,  4200,
    2414,  2416,  2419,  2426,  1841,  2427,  2430,  1293,  1294,  2437,
    4888,  2377,  4889,  4890,  2438,  2440,  2448,  2450, -1762,  2451,
    2462,  2463,  2464, -1762,   668,  3500,  2213,   724,  2407,  4961,
     719,  1286,  2465,  2469,  -709, -1762,  1633,  1292,  2376,  1633,
    -709,  2479,  4921,   184,  2480,   185,  4234,  4201,   714,  2468,
    2482,  2483,  1286,  2408,  2532, -1762,  2214, -1762,  2534,  1919,
    3240,  2538,  4242,  4243,  2535,  2536,  1635,  1533,  2539,  3499,
    2541,  2540, -1762,  3545,  3546,  3547,  2542,  2545,  2547,   186,
    2548,  2552,  3082,  3082, -1762,  2559,  3178,  4962,  2553,  1918,
    1638,   187,  4434,  2569,  2571,  2572,  3496,  3501,   731,  1293,
    1294,  2573,  2588,  2596, -1762,  1639, -1762,  2215,  2590,  2595,
    1845,  2216,  1295,  2598,   719,  4908,  3497,  2605, -1762,  1482,
    2599,  2613,  1634,  2642,  2643,  -866,  2609, -1388,   669,  3498,
    2663,  4272,   731,  2617,  4276,  3821,  2633,  4967,  2634,  2625,
    2639,  2654,  2655,  2656,  4156,  1299,  1300,  1301,  1302,  1303,
    1304,  2664,  2783,  2676,  2682,  4489,  2666,  2409,  1304,  4156,
    2683,  4297,  2684,  3240,   742,  2697,  3240, -1762,  2701,  1635,
    2706,  5072,  1635,  1590,   948,   949,  2707,   950,   951,   952,
     994,   747,  2710,  2723,  2719,  -887,  2726,   188,  2735,  4317,
    2729,  3500,  2730,  2748,  -709,  2731,   953,  2747,  2749,  1737,
   -1762, -1762,  1637, -1762,  2732, -1762,  2733,  1276,  1277,  2184,
   -1762,  2734,  2752,  3499,  2779,   747,   731,  2781,  2784,  1846,
    1751,  1310,  2798,  1849,  2797,  2805,  2808,  1738,  2810,  2815,
    1850,  2814,  2816,  2817,  2818,  1289,  4436,   670,  4309,   748,
    2131,  3821,  5076,  1482,  2850,  2842,  2843,  1428,  1278,  2990,
   -1762,  5166, -1762,  2862, -1762,  1429,  1289,   671,  2863, -1762,
    2864,  1279,  4908,  3501,  2865,  2871,  2217,  2873,  2866,  2877,
    2867,  2897,  2898,  1297,  1298,  1299,  1300,  1301,  1302,  1303,
    1304,  3070,  2899,    42,  4088,  2900,  2902,  2905,  1290,  4202,
    2913,  3466,  2915,  2918,  4203,  3822,  2919,  2920,   844,   747,
    4204,  1280,   672,  2925, -1873,  2926,  2933,   673,  2950,  2969,
    2937,  1851,  5174,  2057,  1281,  2974,  2939,  1296,  2945,  2951,
    2991,  1638,  2952,   748,  1919,  2979,  1637,  2996,  3008,  4435,
    2987,   840,  3009,  5248,  3142,  3500,  1639,   891,   674,  3010,
    4205,  1282,   675,  3011,  3012,  2218,  1482,  3071,  3094,  1482,
     676,  1187,  1042,  3286,  3150,   891,    49,   845,   994,   973,
    3096,  3163,  3165,  3171,  3179,  1297,  1298,  1299,  1300,  1301,
    1302,  1303,  1304,   840,  1020,  1853,  3172,  3181,  3072,   840,
     766,  3182,  2411,  3183,  4549,  3184,  3185,  4550,  3186,  3187,
     846,  3188,   677,  1025,  1293,  1294,  3189,   772,  3190,  1042,
    3191,  3822,   774,  2992,  3192,   775,  1283,  3501,  3193,  2219,
    3467,  3468,  3194,  3195,  1424,  1293,  1294,  3196,  3197,  4206,
    4087,  3198,  3199,  1651,  3200,   847,  3201,    55,  1652,  1637,
    1653,    42,  1637,  1654,  3202,  3203,   774,  3204,  3205,  4000,
    3206,  2847,  3207,  1655,  1656,  5076,   678,  3208,  3209,  3073,
    3210,   694,  3211,  3212,  4523,  2522,  2523,  2524,  2525,  2526,
    2527,  2528,  3213,  3214,  3215,  1918,  4156,  5371,  4506,  4207,
    1286,  4156,  3218,  4437,  1657,  4156,   848,  -868,  -868,  1658,
    1659,  3219,  3220,  3221,  3657,  1660,  3222,  -868,  3223,  1918,
    3224,  5394,  3232,  1661,  3236,  1042,   679,   680,  3259,  1662,
    1663,  3233,  3272,  1664,    49,  1558,  3299,  3291,  1918,  3308,
    5371,  3334,  1665,  3348,  3335,  3336,  1854,  2927,   994,  3402,
     774,  3350,  1042,  3365,  1166,  1216,  4208,  1666,  1918,  4548,
    5394,  2220,  3074,  3395,  1856,  3397,   714,  1220,  3428,  4963,
    3450,  1667,  1286,  3442, -2251,  1668,  3444,  3443,  1638,  3447,
    3445,  3465,  4908,  1669,  1670,  5322,  3480,  3461,  3467,  3468,
    1671,   994,  4590,  1639,  3483,  3493,  3484,  3486,  1672,  3494,
    3469,  3507,  3513,  2221,  1673,    55,  4539,  4197,  3516,  3521,
    4551,  4552,   651,  3528,  5154,  1674,  3530,  1286,  3534,  3544,
    3532,  3550,  3555,   718,  3557,  3556,  3558,  3560,  3565,  3563,
    3566,  3571,   719,  3572,  3573,  -110,  2986,  4272,  1675,  3597,
     849,  3611,  3612,  3616,  -709,  3613,  3614,  3615,  3641,  4589,
    4600,  4572,  3651,  5073,  2993,  4199,  3642,  4200,  4209,  3618,
    3652,  3643,  4156,   724,  3644,  3730,  3722,  3650,  3727,  2377,
    3738,  3890,  3755,  3894,   994,  3286,  3735,  3739,  3760,  1676,
    3731,  1677,  -711,  3761,  3746,  3762,  3764,  3758,  1678,  3807,
    1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,  5426,  3759,
    3837,  4210,  4211,  3810,  1289,  4201,  3813,  3816,  1679,  3820,
    4212,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,   850,
    1226,  3070,  3151,  3835,  3895,  3923,  3309,  1652,  3871,  1653,
    1286,  1680,  4650,  3863,   731,  3902,  3852,  3881,  3885,   851,
    3887,  3891,  1655,  1656,  3896,  3898,  3900,  3904,  3469,  3903,
    1066,  1066,  1042,  3310,  3905,  3906,  3915,  3916,  4700,  3954,
    3957,  3958,  1680,  3962,  3963,  1652,  1919,  3980,  1681,  3965,
    1482,  4023,  4709,  1657,  3988,  3989,  1289,  1042,  1658,  3997,
    3993,  3286,  4006,  3075,   852,  4010,  1682,  3071,  4011,   673,
    1683,  1286,  1661,  4024,  1310,  4027,  1424,  4028,  1662,  1663,
     742,  4034,  1664,  3311,  3390,  5412,  3312,   853,  4045,  4047,
    4035,  1665,   745,  4036,  3313,  4037,   746,   747,  3072,  4038,
     854,  1289,  4039,  4046,  4736,  4059,  1666,  4060,  1684,  4065,
    4073,  4075,   855,  3314,  1685,  4078,  4079,  5154,  4080,  4081,
    1667,  1686,  4082,  -887,  1668,  2847,  4083,  4091,   856,  4092,
    1687,  4096,  1669,  4095,  2366,  4097,  2368,  2369,  4111,  3152,
    4114,  2371,  2372,  1293,  1294,  4156,  4123,  1672,  4129,  4156,
    4134,  4135,  4138,  1673,   857,  2385,  4142,  1042,  2391,  2392,
    3315,  2394,  1688,  4139,  2397,  2398,  2399,  2400,  1310,  3073,
    4144,  2403,  4150,  4194,  4231,  4232,  2415,  1689,  1690,  1691,
    4147,  2420,  2421,  2422,  2423,  2424,  4151,  1675,  4176,  2428,
    2429,  4237,  4187,  4227,  4258,  2439,  4246,  2441,  2442,  2443,
    4291,  2446,  2447,  4303,  2449,  4247,  1042,  2452,   858,  1692,
    2453,  2454,  2455,  4313,  1289,  1293,  1294,  4308,  4320,  4318,
    4328,  4330,  4332,  4347,  4340,  4346,  1290,  4202,  4359,  5423,
    1677,  3316,  4203,  4360,  4363,  4364,  4382,  1678,  4204,  4369,
    4398,  4399,  4404,  4406,  4272,  4862,  4276,  4813,  4409,  3286,
    4410,  4412,  3074,  4411,  4418,  5423,  4420,  1679,  4423,   859,
    1293,  1294,  4450,  4428, -1654,  1693,  1694,  1695,  1696, -1653,
    4429,  4432,  4433,  1697,  4317,  1289,  4455,  4466,  4205,  4467,
    1680,  4478,  2278,  4838,  4491,  4483,  4492,  4493,  4494,  3605,
    1698,  4503,  4511,  1699,  4520,  4524,   766,  4162,  4163,  4560,
    4549,  4530,  4170,  4550,  4561,  -712,  4566,  2999,  4570,  3045,
    4574,  4576,  4221,   772,  4583,  4595,  1700,  1681,   774,   840,
    4592,   775,  4594,  3000,   840,  3317,  4598,  4591,  3318,  1701,
    1042,  4601,  4602,  4604,  4635,  1682,  4623,   994,  4192,  1683,
    4637,  4613,  4638,  4669,  4222,  4224,  4225,  4639,  4670,  3890,
    4640,  4652,  4668,  3082,   840,  3082,  4679,  4206,  4663,  4689,
    4680,  4691,  4653,  1702,  5151,  4692,  1703,  4678,  4694,  4695,
     840,  4696,  4702,  1293,  1294,  4654,  2029,  4655,  4703,  4716,
    4656,  4717,  4733,  1685,  4734,  4660,  4661,  4686,  4898,  4710,
    1686,  4740,  4745,  4746,  4470,  4867,  4719,  4749,  4721,  1687,
    4751,   935,  4752,  1063,  4756,  4758,  3319,  4207,  4784,  1297,
    1298,  1299,  1300,  1301,  1302,  1303,  1304,  4777,  4924,  4786,
    4090,   745,  4899,   198,  4796,  4792,  4797,   840,   840,  4657,
     840,   840,  3753,  4803,  1293,  1294,  4805,   694,  4809,  4815,
     892,  4816,  4827,   840,  4836,  4828,  1689,  4837,  4839,  4272,
    4272,  1704,  1705,  1706,  4840,  4842,  4845,  4841,   892,  4846,
    4847,  4850,  4857,  4866,  4208,  4872,  2709,  4861,  4876, -2026,
    4877,  4881,  4891,  3075,  4879,  1707,  1708,  4894,  1692,  4925,
    3320,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,  4919,
    1709,  4937,  4474,  4927,  4929,  3001,  4551,  4552,  4935,  2030,
    4940,  4946,  4950,  2031,  4553,  4954,   813,  4956,  4955,  4958,
    4726,  3390,  4970,  4972,  4975,  4548,  4987,  4858,  4974,  4989,
    4976,  4977,   714,  4981,  4982,  1591,  1297,  1298,  1299,  1300,
    1301,  1302,  1303,  1304,  1693,  1694,  1695,  1696,  3386,   840,
    4988,  4993,  1697,  2032,  4996,  4156,  4900,  4998,  4999,  5007,
    3321,  5004,  5019,  5061,  1028,  5023,  5070,  5078,  5062,  1698,
    5085,  5021,  1699,  2033,  5081,  5080,  4209,  5093,  5083,  5084,
    5094,  2971,  5100,  3002,  5101,  5115,  5124,  -443,  3322,   718,
     840,  5142,  5144,  5146,  5145,  5147,  5160,  5163,   719,  5177,
    -711,  5175,  5182,  5211,   891,  5214,  1290,  1291,  1701,  3003,
    5184,  -461,  5239,  5240,  5241,  5242,  1919,   973,  5091,  4210,
    4211,  5244,  5251,  5250,  5252,  3178,  3178,  5254,  4212,   724,
    5258,  3323,  4087,  4884,  5268,  5271,  5272,  5279,  2034,  5280,
    5294,  5284,  1702,  4901,  5297,  1703,  5300,  5114,  5301,  1297,
    1298,  1299,  1300,  1301,  1302,  1303,  1304,  5307,  5309,  5119,
    5097,  4902,  5302,  5311,  5312,  5315,  5323, -2679,  5325,  5332,
    5128,  3004,  5335,  4383,  5347,  5135,  5337,  5345,  5196,  5348,
    5352,  5199,  5353,  4384,  5358,  4903,  5354,  5372,  5378,   121,
    5363,   116,  5382,  4385,  5384,  5397,  5387,  5401,  5388,   114,
     731,  5402,  5404,  5411,  5413,  4859,  4272,  4386,  4387,  4388,
    1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,  5431,  3984,
    5137,  5246,  3809,  4389,  3818,  3812,  4812,  3806,  3815,  4810,
    1704,  4814,  4290,  4822,  2035,  4832,  4141,   895,  5149,  2360,
    5066,  5290,  1801,  5291,   840,  4834,  4952,  5432,  5406,  5193,
     985,  3478,  3435,  4397,  1707,  1708,  5034,  1501,  5416,  1042,
    5329,  5035,  1042,  5277,  5037,  5038,   742,   891,  5330,  1709,
    2036,  5320,  5289,  3005,  5040,  5215,  4302,  5288,   840,   840,
    2029,  5041,   746,   747,  3030,  1640,  3037,   840,   840,   840,
     840,   840,   840,  5042,  2037,  3983,  5043,  2938,  4622,  3231,
     840,   840,  1042,   840,   840,  4504,  5044,  3859,   840,   840,
    4636,  5045,   840,   840,   840,   840,  5048,   840,   840,  2038,
    2760,  5049,  3858,  5091,  3862,   840,   840,  4472,   840,   840,
     840,   840,   840,  5050,  4882,   840,   840,   840,   840,   840,
     840,   840,   840,   840,  4760,   840,  2761,  5261,   840,   840,
    5299,  2997,  3153,   840,  5006,  5267,  3857,   840,   840,   840,
    5266,  2762,  4312,  2039,  4518,  4180,  5056,  4519,  1482,  4571,
     840,   840,   840,  4230,  2763,   840,  4228,  4783,   840,   840,
     840,   840,   840,  5273,  5087,  4904,  4573,   840,  3038,  5057,
    3956,  5008,  4895,  3050,  2040,  4942,  4945,  3648,   840,   840,
    4909,  4918,  4776,  2030,  2557,  3716,   840,  2031,   840,   840,
    5193,  4531,  4632,  4306,   660,  3089,  3848,   661,  3582,  3595,
     840,   840,   840,  3156,   840,   840,  2764,  2765,   840,   840,
     840,  5389,  3102,   840,   840,   840,   840,   840,   840,   840,
     840,  5055,  4800,  3157,   840,  2109,  3154,  2032,  2341,   840,
    2914,  4390,  5334,  1512,  2766,  2110,  2312,  2917,  4245,  5342,
    3464,  5056,  5056,  3721,   891,  2111,  3462,  2033,  4391,  2533,
    3148,  3149,  2477,  3763,  3451,  4003,  1029,  4408,  3162,  2112,
    2113,  2114,   766,  2841,  5057,  5057,  4549,  1414,  1413,  4550,
    1954,  2705,  1919,  4658,  2970,  2115,  3414,   891,  5380,   772,
    4965,  2673,  3394,  5385,   774,  4983,  5296,   775,  5249,  3489,
    3490,  1875,  1042,  3491,  3492,  5257,  1919,   896,  5374,  5395,
    4874,  4724,  5095,  2767,  4265,  5096,  1827,  1518,  4452,  4731,
    4984,  2263,  2034,  4849,  4241,  1919,  5055,  5055,  4062,  4893,
     898,  4959,   860,  3423,  2973,  2712,  1608,  5424,  2262,  1609,
    2079,  4001,   891,  4002,  4711,  1919,  5245,  4419,  3999,   840,
    4699,  4704,  2340,  1610,   116,  3262,  3537,  1602,  1495,  1611,
    5056,  5056,   114,  5424,  3536,  2903,  1604,  2768,  3430,  2813,
    3742,  2812,  4009,  5255,  4495,  4753,  5410,  5056,  5295,  4392,
     973,  5427,   840,  5057,  5057,  4685,  4587,  4708,  4875,  3796,
    3604,  4629,  1955,  2167,  2861,  5253,  4393,  2041,  2042,   981,
    5057,  2043,  2044,  2045,  2046,  3526,  2872,   982,  2166,  2858,
    5283,  1407,  2857,  3458,   942,  2069,  3260,  4860,  2035,  3577,
    3261,  4969,  2130,  1412,  1592,  5283,   685,   686,  1804,  5262,
    1805,  1806,  4593,  4307,  4633,  5055,  5055,  4829,  5292,  4252,
       0,  5056,   840,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5055,     0,  2036,     0,  5056,     0,  4394,     0,
       0,   840,     0,     0,  5057,     0,     0,     0,     0,  5056,
       0,     0,  4551,  4552,  2305,  4395,     0,     0,  2037,  5057,
    4586,     0,     0,     0,     0,     0,     0,     0,     0,  1149,
       0,     0,  5057,     0,     0,     0,     0,  5283,  5056,     0,
       0,     0,     0,  2038,     0,   840,     0,  5344,     0,     0,
    5056,  5056,  5346,  2116,     0,     0,  5055,     0,     0,  1180,
       0,  5057,     0,     0,     0,     0,     0,     0,  5056,     0,
    2117,  5055,     0,  5057,  5057,  1197,     0,     0,  5056,     0,
       0,     0,     0,  5056,  5055,     0,  5283,  2039,  5283,     0,
       0,  5057,     0,     0,     0,     0,     0,  5056,     0,  5056,
       0,  5057,     0,     0,     0,     0,  5057,     0,     0,     0,
    5283,     0,     0,  5055,     0,  5056,     0,  5056,  2040,  5056,
    5057,     0,  5057,     0,     0,  5055,  5055,     0,     0,     0,
    1837,  1838,  1839,  1840,  1841,     0,  1258,     0,  5057,     0,
    5057,  5056,  5057,  5055,     0,  5283,  5283,     0,     0,     0,
    5430,     0,     0,  5055,     0,     0,     0,     0,  5055,  5056,
    5056,     0,     0,     0,  5057,     0,     0,     0,     0,  1371,
       0,     0,  5055,     0,  5055,     0,  5056,  5056,     0,     0,
       0,  5056,  5057,  5057,     0,     0,     0,     0,     0,     0,
    5055,     0,  5055,     0,  5055,     0,     0,     0,     0,  5057,
    5057,     0,     0,     0,  5057,     0,     0,     0,  2118,     0,
       0,     0,     0,     0,     0,     0,  5055,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   892,     0,     0,
       0,     0,  2484,     0,  5055,  5055,     0,  1842,  1843,  1844,
    1845,     0,     0,     0,  1373,     0,     0,     0,     0,     0,
       0,  5055,  5055,     0,     0,     0,  5055,  1371,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2119,     0,     0,     0,     0,     0,     0,     0,     0,   840,
       0,     0,     0,   840,     0,   813,     0,  2120,     0,     0,
       0,   840,     0,   840,     0,  2485,  2486,  2487,  2488,  2489,
    2490,  2491,  2492,  2493,  2494,     0,  2495,  2496,  2497,  2498,
    2499,  2500,  2501,  2502,  2503,  2504,     0,  2505,  2506,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2041,  2042,   840,     0,  2043,  2044,  2045,  2046,  3608,
       0,  3609,     0,     0,     0,     0,     0,     0,     0,  1846,
       0,  1847,  1848,  1849,     0,     0,     0,     0,     0,     0,
    1850,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   840,   840,   840,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     892,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   840,     0,     0,     0,     0,   840,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   840,     0,     0,
       0,  1851,     0,     0,   840,  2507,  2508,     0,     0,   840,
       0,   840,     0,     0,     0,     0,     0,   840,     0,   840,
     840,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1808,  1809,     0,     0,     0,     0,     0,
       0,     0,  1819,  1820,     0,     0,  1823,  1824,     0,     0,
       0,     0,     0,     0,     0,  1832,  1833,     0,  1834,  1835,
       0,     0,     0,  1859,  1852,  1853,  3749,  1868,  1869,  1870,
    1871,     0,  1873,     0,     0,     0,     0,     0,     0,     0,
    1881,  1882,     0,  1885,  1886,     0,     0,     0,     0,     0,
    1890,     0,     0,  1893,  1894,  1895,  1896,  1897,  1898,     0,
    1900,     0,     0,  1903,  1904,     0,     0,     0,  1907,     0,
       0,     0,  1910,  1914,  1915,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1922,  1923,  1924,     0,     0,
       0,     0,     0,  1930,  1931,  1932,  1933,  1934,     0,     0,
    3838,  3839,  3840,  3841,     0,     0,     0,   892,  1264,  1265,
       0,     0,     0,  1953,   813,     0,     0,     0,     0,     0,
       0,  1957,     0,  1958,  1959,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   891,
     892,     0,   891,     0,     0,     0,  1371,     0,     0,   973,
     840,     0,     0,     0,   840,     0,     0,   973,     0,     0,
     840,  2093,     0,     0,  1999,     0,  1854,     0,     0,     0,
     840,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1855,  1856,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   892,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1837,  1838,  1839,  1840,
    1841,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2509,  2510,  1655,  1656,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2511,     0,  2512,  2513,  2514,  2515,  2516,     0,
       0,  2517,     1,     0,     0,     2,     0,  -868,  -868,  1658,
       0,  2518,     0,     0,  2141,     0,     0,  -868,   891,     0,
       3,     0,     0,  1661,     4,     0,     0,     0,     0,  1662,
    1663,     0,     0,  1664,     0,     0,     0,     0,     5,     6,
       0,     0,     0,     0,     0,     0,     7,  2180,     0,     0,
       0,     8,     9,  1842,  1843,  1844,  1845,  1666,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    10,     0,     0,
       0,  1667,     0,     0,     0,  1668,     0,     0,     0,     0,
    2309,  2309,  2309,     0,     0,     0,     0,    11,     0,     0,
       0,  3028,     0,     0,  3028,  3028,     0,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,  2258,     0,    12,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
      14,     0,     0,     0,     0,     0,  2277,     0,     0,     0,
       0,    15,    16,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,  1846,     0,  1847,  1848,  1849,
    2325,     0,     0,     0,     0,     0,  1850,     0,    19,     0,
       0,  1677,     0,     0,     0,     0,     0,     0,  1678,     0,
       0,     0,     0,     0,     0,     0,    20,     0,    21,     0,
       0,     0,     0,    22,     0,     0,    23,     0,  1679,   840,
       0,     0,     0,     0,     0,     0,     0,  1267,     0,     0,
    1268,    24,     0,     0,     0,     0,     0,     0,     0,    25,
       0,     0,    26,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    27,     0,     0,     0,     0,  1851,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1681,    28,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1682,     0,     0,     0,
       0,     0,   840,     0,     0,     0,     0,     0,     0,     0,
       0,   840,   840,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1852,  1853,   840,   840,     0,   840,     0,     0,   840,   840,
     840,   840,   840,     0,     0,   840,     0,     0,     0,     0,
       0,  1686,     0,     0,   840,     0,     0,     0,     0,   840,
    1687,   840,     0,   840,   840,     0,   840,   840,     0,     0,
       0,   840,   840,   840,     0,     0,     0,   840,   840,   840,
      30,   840,     0,   840,     0,   840,     0,   840,     0,   840,
       0,     0,     0,     0,   840,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     840,     0,     0,    31,  2570,     0,     0,     0,  2574,     0,
       0,     0,     0,     0,    32,     0,     0,     0,  2570,   840,
       0,   840,     0,   840,  4287,  4288,     0,   840,     0,  1692,
       0,     0,     0,   840,   840,     0,    33,     0,     0,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    37,    38,     0,     0,     0,     0,
       0,     0,  1854,     0,    39,     0,    40,     0,     0,     0,
       0,     0,     0,     0,     0,    41,     0,     0,  1270,  1855,
    1856,    42,     0,     0,     0,  1693,  1694,  1695,  1696,    43,
       0,     0,     0,  1697,    44,    45,    46,     0,     0,     0,
       0,     0,  2646,  2648,  2650,     0,     0,     0,     0,     0,
    1698,     0,     0,  1699,     0,     0,     0,     0,   840,     0,
       0,     0,     0,     0,     0,     0,     0,    47,     0,     0,
       0,     0,     0,     0,    48,     0,     0,     0,     0,     0,
       0,     0,     0,  2686,     0,     0,     0,     0,     0,  1701,
       0,     0,     0,     0,    49,     0,     0,     0,     0,     0,
       0,     0,  2694,     0,     0,     0,     0,     0,   891,   891,
     891,     0,     0,     0,  2698,     0,  2699,     0,    50,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,     0,     0,     0,    52,     0,     0,   973,     0,  2774,
    2775,     0,    53,     0,     0,     0,     0,     0,    54,  1655,
    1656,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,    56,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1658,   840,     0,     0,    57,
      58,    59,    60,     0,     0,     0,   840,     0,   840,  1661,
       0,     0,     0,     0,    61,  1662,  1663,     0,     0,  1664,
       0,  1704,   892,     0,     0,   892,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1666,     0,  1707,  1708,     0,     0,     0,
       0,    62,     0,     0,     0,   840,     0,  1667,     0,     0,
    1709,  1668,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1673,    63,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2869,     0,     0,     0,  2180,
       0,     0,     0,     0,     0,     0,     0,     0,    64,     0,
       0,     0,     0,     0,     0,  2876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   892,     0,  4568,  4569,     0,     0,  1677,     0,     0,
       0,     0,     0,     1,  1678,     0,     2,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1679,     4,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     5,
       6,     0,     0,     0,     0,     0,     0,     7,     0,     0,
       0,     0,     8,     9,     0,     0,     0,     0,     0,     0,
       0,  3023,     0,     0,     0,  3029,     0,     0,    10,     0,
    3034,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1681,     0,     0,     0,    11,     0,
       0,     0,     0,     0,     0,     0,  3084,  3085,  3086,  3087,
       0,     0,  1682,     0,     0,     0,     0,     0,     0,     0,
      12,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,    14,     0,     0,     0,     0,     0,     0,  3121,     0,
       0,     0,    15,    16,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3034,  3034,     0,     0,     0,  1686,     0,    18,
       0,     0,     0,     0,     0,   891,  1687,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,    21,
       0,     0,     0,   840,    22,     0,     0,    23,     0,     0,
       0,   840,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
      25,     0,     0,    26,     0,     0,     0,     0,     0,     0,
       0,   840,   840,     0,     0,  1692,     0,     0,     0,     0,
       0,     0,     0,    27,  3180,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   840,     0,     0,
      28,     0,     0,     0,    29,     0,     0,   840,     0,   840,
       0,   840,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1693,  1694,  1695,  1696,     0,     0,     0,     0,  1697,
       0,     0,   840,     0,     0,     0,     0,   840,     0,   840,
       0,     0,     0,     0,     0,     0,  1698,     0,     0,  1699,
       0,     0,     0,     0,     0,     0,     0,  3298,     0,     0,
       0,     0,     0,     0,     0,     0,  3306,  3307,     0,     0,
       0,     0,     0,   840,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1701,     0,  3337,  3338,     0,
    3339,    30,     0,  3342,  3343,  3344,  3345,  3346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3352,
     840,     0,   840,     0,  3353,     0,  3354,     0,  3355,  3356,
       0,  3357,     0,     0,    31,     0,  3362,  3363,  3364,     0,
       0,     0,  3367,  3368,  3369,    32,  3370,     0,  3372,     0,
    3374,     0,  3376,     0,  3377,     0,     0,     0,     0,  3380,
       0,   840,     0,     0,     0,     0,     0,    33,     0,     0,
      34,     0,    35,     0,     0,    36,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    37,    38,     0,     0,     0,
       0,     0,     0,     0,     0,    39,     0,    40,     0,     0,
       0,   840,  3412,     0,     0,     0,    41,     0,  1999,     0,
       0,     0,    42,     0,     0,     0,     0,  1704,     0,     0,
      43,     0,  3460,     0,     0,    44,    45,    46,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1707,  1708,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1709,     0,    47,     0,
       0,     0,     0,     0,     0,    48,     0,     0,     0,     0,
       0,   892,   892,   892,     0,     0,     0,   840,     0,     0,
    4915,  4916,  4917,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,  3459,     0,     0,     0,     0,     0,     0,
       0,     0,  3527,     0,     0,     0,     0,     0,     0,    50,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,     0,     0,     0,    52,     0,     0,     0,     0,
       0,     0,     0,    53,     0,     0,     0,     0,     0,    54,
       0,     0,     0,     0,     0,     0,     0,  2309,     0,     0,
       0,     0,     0,     0,     0,     0,    55,     0,     0,     0,
       0,     0,     0,     0,    56,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    61,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4997,     0,     0,  5000,  5001,  5002,  5003,     0,     0,
       0,  2258,     0,     0,     0,     0,     0,     0,  3610,     0,
       0,     0,    62,     0,     0,     0,     0,     0,     0,     0,
       0,  3620,     0,  3627,  3628,  3629,  3630,     0,  3632,  3633,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3028,  3028,     0,     0,     0,
    2325,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    64,
       0,     0,  5099,     0,     0,     0,     0,     0,     0,     0,
       0,  5109,  5110,     0,     0,     0,   840,     0,  3726,     0,
    5118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3732,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   840,
       0,   840,     0,     0,   840,   840,     0,   840,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   840,     0,
       0,     0,     0,   840,     0,     0,   840,     0,     0,   840,
     840,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   840,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2309,     0,   840,  2309,  2309,     0,  2309,     0,
       0,  2309,  2309,  2309,  2309,  2309,  2309,  2309,  2309,     0,
       0,  2309,     0,  2309,     0,  2309,  3273,  2309,  3792,     0,
       0,  2309,  1655,  1656,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     840,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1658,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   892,     0,
       0,     0,  1661,     0,     0,   840,   840,     0,  1662,  1663,
       0,     0,  1664,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   840,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1666,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1667,     0,     0,     0,  1668,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3273,     0,     0,     0,     0,     0,  1655,  1656,     0,
       0,  -559,     0,  1673,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   840,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3876,     0,
       0,     0,     0,  1658,     0,     0,  3879,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1661,     0,     0,
       0,     0,     0,  1662,  1663,     0,     0,  1664,     0,     0,
       0,     0,     0,     0,     0,     0,  3909,  3910,     0,     0,
       0,     0,     0,     0,     0,     0,  3274,     0,     0,     0,
    1677,  1666,     0,     0,     0,     0,     0,  1678,     0,     0,
       0,     0,  3935,     0,     0,  1667,     0,     0,     0,  1668,
       0,     0,  3946,     0,  3948,     0,  3950,  1679,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3275,   840,   840,     0,     0,     0,  -559,     0,  1673,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3028,  3028,     0,     0,     0,     0,     0,
       0,     0,     0,  3658,  3659,     0,     0,  1681,     0,  3660,
       0,  3661,     0,  3662,  3663,     0,     0,     0,  2258,     0,
       0,     0,     0,     0,     0,  1682,     0,     0,     0,     0,
       0,  3664,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3274,     0,     0,     0,  1677,     0,     0,     0,     0,
       0,     0,  1678,     0,     0,  4031,     0,  4033,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1679,     0,  4104,     0,     0,     0,     0,     0,
    1686,  3665,     0,     0,  3666,     0,  1021,     0,     0,  1687,
       0,     0,  3667,     0,     0,     0,  2180,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4133,     0,
       0,  3314,     0,     0,     0,     0,     0,     0,     0,   840,
       0,     0,     0,     0,     0,     0,     0,     0,  3668,     0,
       0,     0,  1681,     0,     0,     0,     0,     0,     0,     0,
     840,  3276,   840,     0,     0,  1383,  1457,     0,     0,     0,
    1682,     0,     0,     0,     0,     0,  3669,     0,  3670,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1692,     0,
       0,  1458,   959,     0,  3671,  3672,     0,     0,    42,     0,
       0,     0,  1459, -2034,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1686,     0,  1460,     0,  1461,
       0,  1021,  4148,     0,  1687,     0,  3673,     0,     0,  1462,
       0,     0,     0,     0,  1693,  1694,  1695,  1696,     0,  3674,
       0,     0,  1697,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3675,  1698,
       0,    49,  1699,     0,     0,     0,     0,  3676,  3677,   840,
    3678,     0,     0,     0,     0,     0,  3276, -2026,  1463,     0,
       0,     0,     0,  1464,     0,     0,  1465,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1466,     0,  1701,     0,
       0,     0,   840,  1692,     0,     0,     0,  3679,  3680,  3681,
       0,     0,     0,    42,     0,    54,     0,     0,  1467,     0,
    1468,     0,  2309,     0,     0,     0,  3682,  3683,  3684,  1469,
       0,  1470,    55,  3685,     0,     0,  3686,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4298,     0,     0,
       0,     0,     0,     0,  3687,  3688,     0,     0,     0,  1693,
    1694,  1695,  1696,     0,     0,     0,     0,  1697,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   840,
       0,     0,   840,     0,  1698,     0,    49,  1699,  3689,  3690,
       0,     0,     0,     0,     0,   840,     0,     0,     0,     0,
       0,     0,  1471,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3319,     0,     0,     0,     0,     0,
    1704,     0,     0,  1701,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1472,     0,     0,     0,
      54,     0,   840,     0,  1707,  1708,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    55,     0,  1709,
       0,  4322,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3277,  3691,     0,  -559,     0,
    3692,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3693,     0,  4336,     0,  2325,     0,     0,  4341,
    4342,  1473,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4349,     0,     0,     0,     0,  4351,     0,
       0,  4352,     0,     0,  4353,  4354,     0,     0,  1474,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1475,
    1476,     0, -2030,  1477,  1478,  1704,  4366,     0,     0,     0,
       0,     0,  3694,     0,     0,  3695,     0,     0,  3696,  3697,
    3698,  3699,     0,     0,  1479,     0,   840,     0,     0,  1707,
    1708,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1709,     0,     0,     0,  4462,  4463,
       0,  4465,     0,     0,     0,     0,     0,   840,     0,     0,
    1023,  3700,  3701,  -559,     0,  2258,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3702,
       0,  1481,     0,     0,     0,     0,     0,     0,     0,     0,
    4446,  4449,     0,     0,     0,   840,     0,     0,     0,     0,
    5052,     0,     0,     0,     0,     0,  5063,     0,     0,  4461,
       0,     0,     0, -2749,     0,     0,     0,  1482,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   840,     0,
       0,     0,     0, -2034,     0,     0,  1483,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -2030,     0,     0,  4547,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4513,     0,     0,     0,     0,     0,   840,
       0,     0,     0,     0, -2749,  5052,  5052,     0,     0,     0,
       0,  1484,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5359,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   840,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   891,  2309,  2309,  2309,  2309,     0,     0,     0,     0,
       0,     0,     0,  4104,     0,     0,     0,     0,     0,     0,
     840,     0,     0,     0,     0,     0,     0,  4642,     0,     0,
       0,     0,     0,     0,     0,     0,  4596,  4597,     0,  1651,
     840,     0,   840,     0,  1652,     0,  1653,     0,     0,  1654,
       0,     0,   840,     0,  5052,  5052,     0,     0,     0,  1655,
    1656,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5052,     0,     0,   989,  1485,     0,  1486,     0,     0,
    1487,  1488,  1489,  1490,     0,  1491,     0,     0,     0,     0,
    1657,     0,     0,     0,     0,  1658,  1659,     0,     0,     0,
       0,  1660,     0,     0,     0,     0,     0,     0,     0,  1661,
       0,     0,     0,     0,     0,  1662,  1663,     0,     0,  1664,
       0,     0,     0,     0,     0,     0,     0,     0,  1665,     0,
       0,     0,     0,   840,     0,  5052,     0,     0,  3658,  3659,
       0,     0,     0,  1666,  3660,     0,  3661,     0,  3662,  3663,
    5052,   840,     0,     0,     0,     0,     0,  1667,     0,     0,
       0,  1668,     0,  5052,     0,     0,  3664,     0,     0,  1669,
    1670,     0,     0,     0,     0,  4732,  1671,     0,     0,     0,
       0,   840,     0,     0,  1672,     0,     0,  4741,     0,     0,
    1673,   840,  5052,     0,  2258,     0,     0,     0,     0,     0,
       0,  1674,     0,     0,  5052,  5052,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4718,  3665,  4720,     0,  3666,
       0,     0,  5052,     0,  1675,     0,     0,  3667,     0,   840,
       0,     0,  5052,     0,     0,     0,     0,  5052,     0,     0,
       0,     0,     0,     0,   840,     0,  3314,     0,     0,     0,
       0,  5052,     0,  5052,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3668,     0,  1676,     0,  1677,     0,  5052,
       0,  5052,     0,  5052,  1678,     0,     0,  3034,  3034,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3669,     0,  3670,  1679,  5052,     0,     0,  5180,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3671,
    3672,  4804,     0,  5052,  5052,     0,     0,  1680,     0,     0,
     840,     0,     0,     0,  2309,     0,     0,     0,   840,     0,
    5052,  5052,     0,     0,  4790,  5052,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4831,     0,     0,     0,
       0,  3673,     0,     0,  1681,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3674,     0,     0,  4798,     0,     0,
       0,     0,  1682,     0,     0,     0,  1683,     0,     0,     0,
       0,     0,     0,  3675,     0,     0,     0,     0,     0,     0,
       0,     0,  3676,  3677,     0,  3678,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1684,     0,     0,     0,     0,     0,
    1685,     0,     0,     0,     0,     0,     0,  1686,     0,     0,
       0,     0,  3679,  3680,  3681,     0,  1687,     0,     0,     0,
       0,     0,  4878,     0,  2325,     0,     0,  4844,     0,     0,
       0,  3682,  3683,  3684,     0,     0,     0,     0,  3685,     0,
    4446,  3686,     0,     0,     0,     0,     0,     0,  1688,     0,
       0,     0,     0,     0,     0,  4914,     0,     0,     0,  3687,
    3688,     0,     0,  1689,  1690,  1691,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4446,     0,     0,
       0,     0,     0,  3689,  3690,  1692,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3319,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1693,  1694,  1695,  1696,     0,     0,     0,     0,  1697,
       0,     0,     0,     0,     0,     0,     0,     0,  4985,     0,
       0,     0,     0,     0,     0,     0,  1698,     0,     0,  1699,
       0,  3691,     0,     0,     0,  3692,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3693,     0,     0,
       0,     0,  1700,     0,     0,  3034,  3034,     0,     0,     0,
       0,  2325,     0,     0,     0,  1701,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1702,
       0,     0,  1703,     0,     0,     0,     0,  3694,     0,     0,
    3695,     0,     0,  3696,  3697,  3698,  3699,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5108,     0,     0,     0,
    5022,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3700,  3701,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3702,     0,     0,  1704,  1705,  1706,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1707,  1708,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   892,     0,  1709,     0,     0,     0,
       0,     0,     0,     0,  5123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5194,  5195,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5209,     0,  5210,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5218,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5281,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5286,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5305,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   200,   201,     0,   690,
     203,   204,   205,   206,  2173,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,  5336,     0,  2174,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,  5351,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,  5425,  2175,   267,   268,     0,
     269,     0,     0,  2258,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,  2176,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,  2177,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,  2178,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
    2179,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,    42,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,    49,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,  1255,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,    55,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,  1911,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,  1912,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,  1913,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
     803,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,  2589,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,  2645,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,  2647,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,  2649,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,  1179,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,  1965,     0,   207,     0,     0,     0,
       0,  1966,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,     0,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,  2257,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,  3297,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,   744,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,  3361,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,   744,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,   728,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,  5190,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,     0,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,   728,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,     0,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   690,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   691,     0,   210,   211,   212,   213,
     692,   215,     0,   216,     0,     0,   693,   217,   694,   695,
     696,   218,   697,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,   698,   699,   226,   227,     0,
     228,   229,   700,   701,   231,     0,   232,   233,   234,   235,
     702,   237,     0,   703,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,   704,   705,   258,
       0,     0,     0,   706,   259,   707,     0,   260,   708,   709,
       0,   261,   262,   263,   710,   711,   712,     0,     0,     0,
       0,   713,   266,   714,     0,     0,   715,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,   716,     0,   293,   294,   295,   296,   297,   717,
     718,   298,   299,     0,   300,   301,   302,   303,   304,   719,
       0,   305,   306,     0,     0,     0,   720,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   721,   313,   722,     0,
     315,     0,   316,     0,   723,     0,   317,   318,     0,   319,
     724,     0,   320,   321,     0,     0,     0,   725,   323,   324,
     325,   726,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,   727,   330,   331,   332,  1983,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,   729,   343,   344,     0,     0,     0,     0,     0,
     730,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,   731,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     732,   373,   374,   375,   376,   733,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   734,   384,     0,     0,
     735,   386,   736,   387,     0,   388,   737,   738,   739,   740,
     741,   393,   394,   395,   396,   397,     0,   742,   398,   399,
       0,     0,   400,   401,   402,   403,   404,   743,     0,   745,
     405,   406,     0,   746,   747,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,   748,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     749,   750,   428,   751,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   752,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,   753,   754,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   755,     0,   756,   472,
     473,   474,   475,     0,   476,   757,   758,   478,   479,   480,
     481,     0,   759,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,   760,   761,   512,   513,     0,
       0,   514,   515,   762,   517,   518,   519,   763,   764,   520,
     521,   522,   523,   765,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   766,   530,   531,     0,   767,   768,   769,
     770,     0,     0,     0,     0,     0,   536,   537,     0,   771,
     772,   773,   539,   540,     0,   774,   541,   542,   775,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   776,   551,     0,     0,   777,   778,   779,
     552,   780,   553,     0,     0,   554,   781,     0,   782,   555,
       0,   556,   557,   783,   784,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   785,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,   786,   787,     0,   574,
     575,   576,   788,   577,   578,   579,     0,   580,   789,   790,
     581,   791,   582,     0,   792,   793,   794,   795,   796,   583,
     584,     0,   797,   585,   798,   586,   799,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   800,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,     0,     0,
       0,     0,     0,   801,   802,     0,     0,     0,     0,   804,
       0,   805,     0,     0,     0,   806,     0,     0,     0,   807,
     808,   200,   201,     0,   690,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   691,
       0,   210,   211,   212,   213,   692,   215,     0,   216,     0,
       0,   693,   217,   694,   695,   696,   218,   697,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
     698,   699,   226,   227,     0,   228,   229,   700,   701,   231,
       0,   232,   233,   234,   235,   702,   237,     0,   703,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,   704,   705,   258,     0,     0,     0,   706,   259,
     707,     0,   260,   708,   709,     0,   261,   262,   263,   710,
     711,   712,     0,     0,     0,     0,   713,   266,   714,     0,
       0,   715,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,   716,     0,   293,
     294,   295,   296,   297,   717,   718,   298,   299,     0,   300,
     301,   302,   303,   304,   719,     0,   305,   306,     0,     0,
       0,   720,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   721,   313,   722,     0,   315,     0,   316,     0,   723,
       0,   317,   318,     0,   319,   724,     0,   320,   321,     0,
       0,     0,   725,   323,   324,   325,   726,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,   727,   330,   331,
     332,  1985,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,   729,   343,   344,
       0,     0,     0,     0,     0,   730,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,   731,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   732,   373,   374,   375,   376,
     733,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   734,   384,     0,     0,   735,   386,   736,   387,     0,
     388,   737,   738,   739,   740,   741,   393,   394,   395,   396,
     397,     0,   742,   398,   399,     0,     0,   400,   401,   402,
     403,   404,   743,     0,   745,   405,   406,     0,   746,   747,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,   748,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   749,   750,   428,   751,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   752,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,   753,   754,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   755,     0,   756,   472,   473,   474,   475,     0,   476,
     757,   758,   478,   479,   480,   481,     0,   759,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
     760,   761,   512,   513,     0,     0,   514,   515,   762,   517,
     518,   519,   763,   764,   520,   521,   522,   523,   765,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   766,   530,
     531,     0,   767,   768,   769,   770,     0,     0,     0,     0,
       0,   536,   537,     0,   771,   772,   773,   539,   540,     0,
     774,   541,   542,   775,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   776,   551,
       0,     0,   777,   778,   779,   552,   780,   553,     0,     0,
     554,   781,     0,   782,   555,     0,   556,   557,   783,   784,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   785,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,   786,   787,     0,   574,   575,   576,   788,   577,   578,
     579,     0,   580,   789,   790,   581,   791,   582,     0,   792,
     793,   794,   795,   796,   583,   584,     0,   797,   585,   798,
     586,   799,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   800,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,     0,     0,     0,     0,     0,   801,   802,
       0,     0,     0,     0,   804,     0,   805,     0,     0,     0,
     806,     0,     0,     0,   807,   808,   200,   201,     0,   202,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   300,   301,   302,   303,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,    42,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,    49,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,    54,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,    55,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,  2822,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,  2823,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,  2824,     0,     0,
       0,     0,     0,   200,   201,     0,   202,   203,   204,   205,
     206,  2825,     0,   207,     0,     0,     0,     0,   208,     0,
    2826,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,  2821,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,  2822,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  2823,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,  2824,     0,     0,     0,     0,     0,
     200,   201,     0,   202,   203,   204,   205,   206,  2825,     0,
     207,     0,     0,     0,     0,   208,     0,  2826,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
       0,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,   289,   290,   291,   292,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,   300,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,     0,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,   405,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,   455,   456,
       0,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,   489,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,     0,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,  2822,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,  2823,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,  2824,     0,     0,     0,     0,   200,   201,     0,   202,
     203,   204,   205,   206,     0,  2825,   207,     0,     0,     0,
       0,   208,     0,     0,  2826,     0,   210,   211,   212,   213,
     214,   215,     0,  -463,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
       0,     0,     0,     0,   225,  5025,     0,   226,   227,     0,
     228,   229,     0,     0,     0,     0,   232,   233,   234,  5026,
     236,   237,     0,   238,   239,     0,   240,   241,     0,   243,
       0,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,     0,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,     0,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,     0,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,     0,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,     0,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,  5027,   300,   301,   302,   303,   304,     0,
       0,     0,     0,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,     0,   318,     0,     0,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,  5028,     0,   326,     0,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,     0,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,  5029,     0,
       0,   338,     0,   339,     0,     0,     0,   341,     0,     0,
     342,  5030,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,  -418,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
       0,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,  5031,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,     0,     0,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,     0,   456,  -418,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,     0,     0,   466,
     467,     0,   468,   469,   470,  5032,   471,     0,     0,     0,
     473,   474,   475,     0,   476,     0,   477,   478,     0,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,     0,     0,
       0,   491,     0,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
       0,   508,   509,   510,   511,     0,     0,     0,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,     0,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,     0,     0,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,  -418,     0,     0,
       0,   560,   561,   562,     0,   563,     0,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,     0,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,     0,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
       0,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,     0,   208,     0,     0,   209,  5429,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,   694,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,  2738,     0,     0,
       0,     0,   265,   266,   714,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,   718,   298,   299,     0,   300,   301,   302,   303,   304,
     719,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,   724,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,   731,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   742,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,   746,   747,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,   766,   530,   531,     0,  2739,   533,
     534,  2740,     0,     0,     0,     0,     0,   536,   537,     0,
       0,   772,   538,   539,   540,     0,   774,   541,   542,   775,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,   806,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,   731,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,   747,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,   748,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,   774,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,  1935,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,  1568,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
    1038,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,  1569,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   197,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
    1570,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   958,
     959,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,   960,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   961,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     962,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     963,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   964,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   965,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   966,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   967,   968,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     969,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   970,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,   971,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,  1038,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,   197,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,     0,   208,     0,  1259,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,  1038,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,   197,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,  1441,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   958,   959,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,  1449,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   961,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   962,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   963,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   965,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,   967,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   969,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,   971,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
    1038,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   197,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
    1570,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,  2051,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,  2052,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,  5367,   208,     0,  5368,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,  2052,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,  5368,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
       0,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,    42,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,    49,   526,   527,   528,   529,     0,     0,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,    54,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,    55,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,  1023,  4018,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,  4269,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,  4273,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,  2377,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,  2378,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,  1737,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,  1738,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,  3856,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,    42,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,  2380,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,    49,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,    54,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,    55,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,     0,     0,   207,     0,
       0,     0,  1023,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,     0,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,     0,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,   317,   318,
       0,   319,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,     0,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,   405,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,     0,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,   538,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,  2822,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  2823,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,  2824,
     200,   201,     0,   202,   203,   204,   205,   206,     0,     0,
     207,     0,     0,  2825,     0,   208,     0,     0,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
       0,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,   289,   290,   291,   292,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,   300,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,     0,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,   405,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,   455,   456,
       0,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,   489,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,     0,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,  1183,   208,     0,     0,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
       0,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,     0,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
       0,     0,   207,     0,     0,     0,  3054,   208,     0,     0,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,     0,     0,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,   223,   224,     0,     0,
     225,     0,     0,   226,   227,     0,   228,   229,   230,     0,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
     256,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,   266,     0,
       0,     0,     0,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
     275,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,   280,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,   289,   290,   291,   292,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,     0,
     300,   301,   302,   303,   304,     0,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,   317,   318,     0,   319,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,     0,     0,   326,
     327,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,   332,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,     0,     0,     0,   338,     0,   339,
       0,     0,   340,   341,     0,     0,   342,     0,     0,   343,
     344,     0,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,     0,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,   404,     0,     0,     0,   405,   406,     0,     0,
       0,   407,     0,   408,   409,     0,   410,   411,   412,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,     0,   430,   431,   432,     0,   433,     0,   434,   435,
     436,   437,   438,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,   452,   453,     0,   454,
     455,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   465,     0,   466,   467,     0,   468,   469,
     470,     0,   471,     0,     0,   472,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,   489,     0,   490,   491,   492,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,   507,   508,   509,   510,
     511,     0,     0,   512,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,     0,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,   538,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,   545,   546,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,     0,     0,     0,     0,   560,   561,   562,
       0,   563,   564,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,   580,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,   596,     0,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,  3386,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,  4152,   208,
       0,     0,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,     0,     0,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,   223,   224,
       0,     0,   225,     0,     0,   226,   227,     0,   228,   229,
     230,     0,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,   256,   257,     0,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
     266,     0,     0,     0,     0,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,   275,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,   280,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,   289,   290,   291,   292,
       0,     0,   293,   294,   295,   296,   297,     0,     0,   298,
     299,     0,   300,   301,   302,   303,   304,     0,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,   317,   318,     0,   319,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,     0,
       0,   326,   327,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,   332,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,     0,     0,     0,   338,
       0,   339,     0,     0,   340,   341,     0,     0,   342,     0,
       0,   343,   344,     0,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,   404,     0,     0,     0,   405,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
     412,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,     0,   430,   431,   432,     0,   433,     0,
     434,   435,   436,   437,   438,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,   452,   453,
       0,   454,   455,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,     0,   465,     0,   466,   467,     0,
     468,   469,   470,     0,   471,     0,     0,   472,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,   489,     0,   490,   491,
     492,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,   507,   508,
     509,   510,   511,     0,     0,   512,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,     0,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,   538,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
     545,   546,     0,     0,   547,     0,     0,   548,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,     0,     0,     0,     0,   560,
     561,   562,     0,   563,   564,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,   580,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,   596,     0,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,  2003,     0,   207,     0,     0,     0,     0,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,  2753,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   300,   301,   302,   303,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,  3416,     0,   207,     0,     0,
       0,     0,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,  3605,     0,   207,     0,
       0,     0,     0,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,     0,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,     0,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,   317,   318,
       0,   319,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,     0,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,   405,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,     0,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,   538,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
       0,     0,     0,     0,     0,   200,   201,  3994,   202,   203,
     204,   205,   206,   866,   867,   207,     0,     0,     0,     0,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,   868,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
     869,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,   870,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   871,   290,   291,
     872,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   873,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
     874,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,   875,     0,   329,     0,     0,
       0,   876,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,   877,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,   878,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,     0,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   879,   435,   436,   437,   880,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,   881,     0,   447,   448,   449,   450,   451,     0,   882,
     453,     0,   454,   455,   456,     0,     0,   883,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   884,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,   885,   886,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   887,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,   197,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,   888,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,   889,
     549,   890,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,     0,     0,
     597,   598,   599,     0,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,   940,   867,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
     868,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,   869,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,   870,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   871,   290,
     291,   872,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   873,   301,   302,   303,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,   874,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,   875,     0,   329,     0,
       0,     0,   876,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,   877,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,   878,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,     0,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   879,   435,   436,   437,   941,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,   881,     0,   447,   448,   449,   450,   451,     0,
     882,   453,     0,   454,   455,   456,     0,     0,   883,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   884,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,   885,   886,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   887,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   197,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,   888,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
     889,   549,   890,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,     0,
       0,   597,   598,   599,     0,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,   867,   207,     0,     0,
       0,     0,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,   868,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,   869,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,   870,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   871,
     290,   291,   872,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   873,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,   874,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,   875,     0,   329,
       0,     0,     0,   876,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,   877,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,   878,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,     0,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   879,   435,   436,   437,     0,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,   881,     0,   447,   448,   449,   450,   451,
       0,   882,   453,     0,   454,   455,   456,     0,     0,   883,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   884,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,   885,   886,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     887,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,   197,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,   888,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,   889,   549,   890,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
       0,     0,   597,   598,   599,     0,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,     0,     0,   207,     0,
       0,     0,     0,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,  3070,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,  3071,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,   317,   318,
       0,   319,  3072,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,  3073,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,  1290,
    1291,     0,   405,   406,     0,     0,  3074,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,  5417,   935,  5418,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,     0,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,   538,   539,   540,     0,  3075,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,  1264,  1265,   208,  1266,     0,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,  1267,     0,     0,  1268,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,  1269,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,  1270,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     200,   201,     0,   202,   203,   204,   205,   206,     0,     0,
     207,     0,     0,     0,     0,   208,     0,     0,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
    1418,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
    1419,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,  1420,     0,   285,   286,     0,
     287,   288,   289,   290,   291,   292,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,   300,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,  1038,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,   405,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,   455,   456,
       0,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,  1421,   488,     0,
       0,     0,   489,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,   197,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,  2377,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,  2378,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,  1737,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,  1738,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
       0,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,  2380,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,     0,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
       0,     0,   207,     0,     0,     0,     0,   208,     0,     0,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,     0,  1443,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,   223,   224,     0,     0,
     225,     0,     0,   226,   227,     0,   228,   229,   230,     0,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
     256,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,   266,     0,
       0,     0,  1444,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
     275,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,   280,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,   289,   290,   291,   292,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,     0,
     300,   301,   302,   303,   304,     0,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,   317,   318,     0,   319,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,     0,     0,   326,
     327,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,   332,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,     0,     0,     0,   338,     0,   339,
       0,     0,   340,   341,     0,     0,   342,     0,     0,   343,
     344,  1038,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,     0,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,   404,     0,     0,     0,   405,   406,     0,     0,
       0,   407,     0,   408,   409,     0,   410,   411,   412,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,     0,   430,   431,   432,     0,   433,     0,   434,   435,
     436,   437,   438,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,   452,   453,     0,   454,
     455,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   465,     0,   466,   467,     0,   468,   469,
     470,     0,   471,     0,     0,   472,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,   489,     0,   490,   491,   492,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,   507,   508,   509,   510,
     511,     0,     0,   512,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,   197,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,   538,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,   545,   546,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,     0,     0,     0,     0,   560,   561,   562,
       0,   563,   564,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,   580,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,   596,     0,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,  1585,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,  1586,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,   748,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,  1587,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,     0,   208,
       0,     0,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,     0,  1418,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,   223,   224,
       0,     0,   225,     0,     0,   226,   227,     0,   228,   229,
     230,     0,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,   256,   257,     0,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
     266,     0,     0,     0,  3724,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,   275,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,   280,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,   289,   290,   291,   292,
       0,     0,   293,   294,   295,   296,   297,     0,     0,   298,
     299,     0,   300,   301,   302,   303,   304,     0,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,   317,   318,     0,   319,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,     0,
       0,   326,   327,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,   332,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,     0,     0,     0,   338,
       0,   339,     0,     0,   340,   341,     0,     0,   342,     0,
       0,   343,   344,  1038,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,   404,     0,     0,     0,   405,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
     412,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,     0,   430,   431,   432,     0,   433,     0,
     434,   435,   436,   437,   438,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,   452,   453,
       0,   454,   455,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,     0,   465,     0,   466,   467,     0,
     468,   469,   470,     0,   471,     0,     0,   472,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,   489,     0,   490,   491,
     492,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,   507,   508,
     509,   510,   511,     0,     0,   512,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,   197,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,   538,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
     545,   546,     0,     0,   547,     0,     0,   548,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,     0,     0,     0,     0,   560,
     561,   562,     0,   563,   564,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,   580,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,   596,     0,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,  1037,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,  1038,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,   197,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,  1039,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,  1037,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   300,   301,   302,   303,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,  1038,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,   197,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,     0,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,  1522,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,  1523,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,  1309,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,  2197,     0,   207,     0,
       0,     0,     0,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,     0,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,     0,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,   317,   318,
       0,   319,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,  1038,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,     0,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,   405,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,   197,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,   538,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,     0,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,  2845,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,  1038,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,   197,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     200,   201,     0,   202,   203,   204,   205,   206,     0,     0,
     207,     0,     0,     0,     0,   208,     0,     0,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
       0,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,   289,   290,   291,   292,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,   300,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,  1038,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,   405,   406,     0,  3143,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,   455,   456,
       0,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,   489,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,   197,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,  1418,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
    1038,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   197,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
       0,     0,   207,     0,     0,     0,     0,   208,     0,     0,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,     0,     0,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,   223,   224,     0,     0,
     225,     0,     0,   226,   227,     0,   228,   229,   230,     0,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
     256,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,   266,     0,
       0,     0,     0,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
     275,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,   280,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,   289,   290,   291,   292,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,     0,
     300,   301,   302,   303,   304,     0,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,   317,   318,     0,   319,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,     0,     0,   326,
     327,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,   332,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,     0,     0,     0,   338,     0,   339,
       0,     0,   340,   341,     0,     0,   342,     0,     0,   343,
     344,  1038,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,     0,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,   404,     0,     0,     0,   405,   406,     0,  3794,
       0,   407,     0,   408,   409,     0,   410,   411,   412,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,     0,   430,   431,   432,     0,   433,     0,   434,   435,
     436,   437,   438,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,   452,   453,     0,   454,
     455,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   465,     0,   466,   467,     0,   468,   469,
     470,     0,   471,     0,     0,   472,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,   489,     0,   490,   491,   492,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,   507,   508,   509,   510,
     511,     0,     0,   512,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,   197,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,   538,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,   545,   546,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,     0,     0,     0,     0,   560,   561,   562,
       0,   563,   564,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,   580,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,   596,     0,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,  1038,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
     197,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,     0,   208,
       0,     0,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,     0,     0,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,   223,   224,
       0,     0,   225,     0,     0,   226,   227,     0,   228,   229,
     230,     0,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,   256,   257,  5338,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
     266,     0,     0,     0,     0,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,   275,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,   280,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,   289,   290,   291,   292,
       0,  5339,   293,   294,   295,   296,   297,     0,     0,   298,
     299,     0,   300,   301,   302,   303,   304,     0,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,   317,   318,     0,   319,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,     0,
       0,   326,   327,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,   332,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,     0,     0,     0,   338,
       0,   339,     0,     0,   340,   341,     0,     0,   342,     0,
       0,   343,   344,     0,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,   404,     0,     0,     0,   405,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
     412,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,     0,   430,   431,   432,     0,   433,     0,
     434,   435,   436,   437,   438,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,   452,   453,
       0,   454,   455,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,     0,   465,     0,   466,   467,     0,
     468,   469,   470,     0,   471,     0,     0,   472,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,   489,     0,   490,   491,
     492,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,   507,   508,
     509,   510,   511,     0,     0,   512,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,     0,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,   538,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
     545,   546,     0,     0,   547,     0,     0,   548,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,     0,     0,     0,     0,   560,
     561,   562,     0,   563,   564,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,   580,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,   596,     0,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,   935,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   300,   301,   302,   303,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,  1006,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,  1076,
       0,     0,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,  1077,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,     0,     0,   207,     0,
       0,     0,     0,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,     0,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,     0,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,   317,   318,
       0,   319,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,     0,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,   405,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,  1269,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,   538,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,     0,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,  2336,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     200,   201,     0,   202,   203,   204,   205,   206,     0,     0,
     207,     0,     0,     0,     0,   208,     0,     0,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
    2474,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,   289,   290,   291,   292,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,   300,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,     0,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,   405,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,   455,   456,
       0,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,   489,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,     0,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,  3056,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,   292,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,   300,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
       0,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,   455,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,   489,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,     0,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
    3079,     0,   207,     0,     0,     0,     0,   208,     0,     0,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,     0,     0,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,   223,   224,     0,     0,
     225,     0,     0,   226,   227,     0,   228,   229,   230,     0,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
     256,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,   266,     0,
       0,     0,     0,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
     275,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,   280,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,   289,   290,   291,   292,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,     0,
     300,   301,   302,   303,   304,     0,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,   317,   318,     0,   319,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,     0,     0,   326,
     327,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,   332,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,     0,     0,     0,   338,     0,   339,
       0,     0,   340,   341,     0,     0,   342,     0,     0,   343,
     344,     0,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,     0,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,   404,     0,     0,     0,   405,   406,     0,     0,
       0,   407,     0,   408,   409,     0,   410,   411,   412,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,     0,   430,   431,   432,     0,   433,     0,   434,   435,
     436,   437,   438,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,   452,   453,     0,   454,
     455,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,     0,   465,     0,   466,   467,     0,   468,   469,
     470,     0,   471,     0,     0,   472,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,   489,     0,   490,   491,   492,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,   507,   508,   509,   510,
     511,     0,     0,   512,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,     0,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,   538,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,   545,   546,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,     0,     0,     0,     0,   560,   561,   562,
       0,   563,   564,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,   580,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,   596,     0,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,  3108,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,   292,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,   300,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,   455,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,   489,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,     0,   208,
       0,     0,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,     0,     0,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,   223,   224,
       0,     0,   225,     0,     0,   226,   227,     0,   228,   229,
     230,     0,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,   256,   257,     0,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
     266,     0,     0,     0,     0,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,   275,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,   280,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,   289,   290,   291,   292,
       0,     0,   293,   294,   295,   296,   297,     0,     0,   298,
     299,     0,   300,   301,   302,   303,   304,     0,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,   317,   318,     0,   319,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,     0,
       0,   326,   327,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,   332,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,     0,     0,     0,   338,
       0,   339,     0,     0,   340,   341,     0,     0,   342,     0,
       0,   343,   344,     0,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,   404,     0,     0,     0,   405,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
     412,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,     0,   430,   431,   432,  3174,   433,     0,
     434,   435,   436,   437,   438,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,   452,   453,
       0,   454,   455,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,     0,   465,     0,   466,   467,     0,
     468,   469,   470,     0,   471,     0,     0,   472,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,   489,     0,   490,   491,
     492,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,   507,   508,
     509,   510,   511,     0,     0,   512,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,     0,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,   538,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
     545,   546,     0,     0,   547,     0,     0,   548,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,     0,     0,     0,     0,   560,
     561,   562,     0,   563,   564,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,   580,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,   596,     0,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,     0,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,   223,
     224,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,   230,     0,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,   256,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,   266,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,   275,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,   280,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
     292,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,   317,   318,     0,   319,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,   327,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,   332,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,   340,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,   405,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,     0,   430,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,   455,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   465,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,   472,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,   489,     0,   490,
     491,   492,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,   507,
     508,   509,   510,   511,     0,     0,   512,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
     538,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,   545,   546,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,   564,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,   580,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
     223,   224,     0,     0,   225,     0,     0,   226,   227,     0,
     228,   229,   230,     0,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,   256,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,   266,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,   275,     0,     0,   276,   277,   278,
       0,     0,     0,   279,     0,   280,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,   292,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,     0,   300,   301,   302,  2073,   304,     0,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,   317,   318,     0,   319,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,     0,     0,   326,   327,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,   332,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,     0,     0,
       0,   338,     0,   339,     0,     0,   340,   341,     0,     0,
     342,     0,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,     0,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,  2074,   403,   404,     0,     0,     0,
     405,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,   412,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,     0,   430,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,   455,   456,     0,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,   465,     0,   466,
     467,     0,   468,   469,   470,     0,   471,     0,     0,   472,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,   489,     0,
     490,   491,   492,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
     507,   508,   509,   510,   511,     0,     0,   512,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,   538,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,   545,   546,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,     0,     0,     0,     0,     0,
       0,   560,   561,   562,     0,   563,   564,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,   580,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,     0,   208,     0,     0,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,   223,   224,     0,     0,   225,     0,     0,   226,   227,
       0,   228,   229,   230,     0,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,   256,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,   266,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,   275,     0,     0,   276,   277,
     278,     0,     0,     0,   279,     0,   280,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,   292,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,     0,   300,   301,   302,   303,   304,
       0,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,   317,   318,     0,
     319,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,     0,     0,   326,   327,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,   332,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,     0,
       0,     0,   338,     0,   339,     0,     0,   340,   341,     0,
       0,   342,     0,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,     0,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,   405,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,   412,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,     0,   430,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,   455,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   465,     0,
     466,   467,     0,   468,   469,   470,     0,   471,     0,     0,
     472,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,   489,
       0,   490,   491,   492,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,   507,   508,   509,   510,   511,     0,     0,   512,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,   538,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,   545,   546,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,     0,     0,     0,     0,
       0,     0,   560,   561,   562,     0,   563,   564,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,   580,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,  5088,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,     0,     0,   207,     0,
       0,     0,     0,   208,     0,     0,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,   223,   224,     0,     0,   225,     0,     0,   226,
     227,     0,   228,   229,   230,     0,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,   256,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,   266,     0,     0,     0,  1449,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,   275,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,   280,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,   292,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,     0,   300,   301,   302,   303,
     304,     0,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,     0,     0,   316,     0,     0,     0,   317,   318,
       0,   319,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,     0,     0,   326,   327,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,   332,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
       0,     0,     0,   338,     0,   339,     0,     0,   340,   341,
       0,     0,   342,     0,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,     0,     0,   348,     0,   349,
     350,     0,     0,     0,     0,     0,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,   405,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,   412,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,     0,   430,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,   455,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,   465,
       0,   466,   467,     0,   468,   469,   470,     0,   471,     0,
       0,   472,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,     0,   487,     0,     0,     0,   488,     0,     0,     0,
     489,     0,   490,   491,   492,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,   507,   508,   509,   510,   511,     0,     0,   512,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,     0,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,  1450,   537,
       0,     0,     0,   538,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,   545,   546,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,     0,
       0,     0,     0,   560,   561,   562,     0,   563,   564,   565,
     566,     0,     0,   567,     0,     0,     0,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,     0,   578,   579,     0,   580,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,     0,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,   223,   224,     0,     0,   225,     0,     0,
     226,   227,     0,   228,   229,   230,     0,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,   256,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,   266,     0,     0,     0,  1449,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,   275,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,   280,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,   292,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,     0,   300,   301,   302,
     303,   304,     0,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,     0,     0,   316,     0,     0,     0,   317,
     318,     0,   319,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,     0,     0,   326,   327,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,   332,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,     0,     0,     0,   338,     0,   339,     0,     0,   340,
     341,     0,     0,   342,     0,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,     0,     0,   348,     0,
     349,   350,     0,     0,     0,     0,     0,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,   405,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,   412,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,     0,   430,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,   455,   456,     0,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     465,     0,   466,   467,     0,   468,   469,   470,     0,   471,
       0,     0,   472,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,     0,   487,     0,     0,     0,   488,     0,     0,
       0,   489,     0,   490,   491,   492,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,   507,   508,   509,   510,   511,     0,     0,
     512,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,   538,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,   545,   546,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
       0,     0,     0,     0,   560,   561,   562,     0,   563,   564,
     565,   566,     0,     0,   567,     0,     0,     0,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,     0,   578,   579,     0,
     580,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     200,   201,     0,   202,   203,   204,   205,   206,  1434,     0,
     207,     0,     0,     0,     0,   208,     0,     0,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,   223,   224,     0,     0,   225,     0,
       0,   226,   227,     0,   228,   229,   230,     0,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,   256,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,   266,     0,     0,     0,
    1435,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,   275,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,   280,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,     0,   290,   291,     0,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,     0,     0,   301,
     302,   303,   304,     0,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
     317,   318,     0,   319,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,     0,     0,   326,   327,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,   332,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,     0,     0,     0,   338,     0,   339,     0,     0,
     340,   341,     0,     0,   342,     0,     0,   343,   344,   877,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,     0,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
    1436,     0,     0,     0,   405,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,   412,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,     0,
     430,   431,   432,     0,   433,     0,     0,   435,   436,   437,
       0,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,     0,   453,     0,   454,   455,   456,
       0,     0,     0,   458,   459,   460,   461,   462,   463,   464,
       0,   465,     0,   466,   467,     0,   468,   469,   470,     0,
     471,     0,     0,   472,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,     0,     0,   490,   491,   492,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,   507,   508,   509,   510,   511,     0,
       0,   512,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,     0,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,   197,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,   538,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,   545,   546,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,     0,     0,     0,     0,   560,   561,   562,     0,   563,
     564,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,   580,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,     0,     0,   597,   598,   599,     0,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,  5171,
       0,   207,     0,     0,     0,     0,   208,     0,     0,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,   223,   224,     0,     0,   225,
       0,     0,   226,   227,     0,   228,   229,   230,     0,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,   256,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,   266,     0,     0,
       0,  5172,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,   275,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
     280,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,     0,   290,   291,     0,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,     0,     0,
     301,   302,   303,   304,     0,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,   317,   318,     0,   319,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
     332,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,     0,     0,     0,   338,     0,   339,     0,
       0,   340,   341,     0,     0,   342,     0,     0,   343,   344,
     877,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,     0,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,  5173,     0,     0,     0,   405,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,   412,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
       0,   430,   431,   432,     0,   433,     0,     0,   435,   436,
     437,     0,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,     0,   453,     0,   454,   455,
     456,     0,     0,     0,   458,   459,   460,   461,   462,   463,
     464,     0,   465,     0,   466,   467,     0,   468,   469,   470,
       0,   471,     0,     0,   472,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,     0,     0,   490,   491,   492,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,   507,   508,   509,   510,   511,
       0,     0,   512,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,     0,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,   197,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,   538,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,   545,   546,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,     0,     0,     0,     0,   560,   561,   562,     0,
     563,   564,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,   580,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,     0,     0,   597,   598,   599,     0,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
    2135,     0,   207,     0,     0,     0,     0,   208,     0,     0,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,     0,     0,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,   223,   224,     0,     0,
     225,     0,     0,   226,   227,     0,   228,   229,   230,     0,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
     256,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,   266,     0,
       0,     0,     0,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
     275,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,   280,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,     0,   290,   291,     0,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,     0,
       0,   301,   302,   303,   304,     0,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,   317,   318,     0,   319,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,     0,     0,   326,
     327,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,   332,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,     0,     0,     0,   338,     0,   339,
       0,     0,   340,   341,     0,     0,   342,     0,     0,   343,
     344,   877,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,     0,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,  2136,     0,     0,     0,   405,   406,     0,     0,
       0,   407,     0,   408,   409,     0,   410,   411,   412,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,     0,   430,   431,   432,     0,   433,     0,     0,   435,
     436,   437,     0,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,     0,   453,     0,   454,
     455,   456,     0,     0,     0,   458,   459,   460,   461,   462,
     463,   464,     0,   465,     0,   466,   467,     0,   468,   469,
     470,     0,   471,     0,     0,   472,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,     0,     0,   490,   491,   492,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,   507,   508,   509,   510,
     511,     0,     0,   512,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,     0,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,   197,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,   538,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,   545,   546,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,     0,     0,     0,     0,   560,   561,   562,
       0,   563,   564,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,   580,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,     0,     0,   597,   598,   599,
       0,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,  2942,     0,   207,     0,     0,     0,     0,   208,     0,
       0,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,   223,   224,     0,
       0,   225,     0,     0,   226,   227,     0,   228,   229,   230,
       0,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,   256,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,   266,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,   275,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,   280,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,     0,   290,   291,     0,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
       0,     0,   301,   302,   303,   304,     0,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,   317,   318,     0,   319,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,     0,     0,
     326,   327,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,   332,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,     0,     0,     0,   338,     0,
     339,     0,     0,   340,   341,     0,     0,   342,     0,     0,
     343,   344,   877,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
       0,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,  2943,     0,     0,     0,   405,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,   412,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,     0,   430,   431,   432,     0,   433,     0,     0,
     435,   436,   437,     0,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,     0,   453,     0,
     454,   455,   456,     0,     0,     0,   458,   459,   460,   461,
     462,   463,   464,     0,   465,     0,   466,   467,     0,   468,
     469,   470,     0,   471,     0,     0,   472,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,     0,     0,   490,   491,   492,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,   507,   508,   509,
     510,   511,     0,     0,   512,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,     0,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
     197,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,   538,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,   545,
     546,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,     0,     0,     0,     0,   560,   561,
     562,     0,   563,   564,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,   580,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,     0,     0,   597,   598,
     599,     0,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,     0,   208,
       0,     0,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,     0,     0,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,   223,   224,
       0,     0,   225,     0,     0,   226,   227,     0,   228,   229,
     230,     0,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,   256,   257,     0,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
     266,     0,     0,     0,     0,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,   275,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,   280,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,     0,   290,   291,     0,
       0,     0,   293,   294,   295,   296,   297,     0,     0,   298,
     299,     0,     0,   301,   302,   303,   304,     0,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,   317,   318,     0,   319,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,     0,
       0,   326,   327,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,   332,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,     0,     0,     0,   338,
       0,   339,     0,     0,   340,   341,     0,     0,   342,     0,
       0,   343,   344,   877,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,     0,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,     0,     0,     0,     0,   405,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
     412,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,     0,   430,   431,   432,     0,   433,     0,
       0,   435,   436,   437,     0,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,     0,   453,
       0,   454,   455,   456,     0,     0,     0,   458,   459,   460,
     461,   462,   463,   464,     0,   465,     0,   466,   467,     0,
     468,   469,   470,     0,   471,     0,     0,   472,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,     0,     0,   490,   491,
     492,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,   507,   508,
     509,   510,   511,     0,     0,   512,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,     0,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,   197,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,   538,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
     545,   546,     0,     0,   547,     0,     0,   548,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,     0,     0,     0,     0,   560,
     561,   562,     0,   563,   564,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,   580,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,     0,     0,   597,
     598,   599,     0,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,     0,     0,     0,   210,   211,   212,   213,   214,
     215,     0,  -463,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,     0,
       0,     0,     0,   225,  5025,     0,   226,   227,     0,   228,
     229,     0,     0,     0,     0,   232,   233,   234,  5026,   236,
     237,     0,   238,   239,     0,   240,   241,     0,   243,     0,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,     0,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,     0,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,     0,     0,     0,   276,   277,   278,     0,
    -433,  -433,   279,     0,  -433,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
       0,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,  5027,   300,   301,   302,   303,   304,     0,     0,
       0,     0,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,     0,   318,     0,     0,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
    5028,     0,   326,     0,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,     0,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,  5029,     0,     0,
     338,     0,   339,     0,     0,     0,   341,     0,     0,   342,
    5030,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,  -418,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,     0,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,  5031,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,     0,     0,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,     0,   456,  -418,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,     0,     0,   466,   467,
       0,   468,   469,   470,  5032,   471,     0,     0,     0,   473,
     474,   475,     0,   476,     0,   477,   478,     0,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,     0,     0,     0,
     491,     0,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,     0,
     508,   509,   510,   511,     0,     0,     0,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
       0,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,     0,     0,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,  -418,     0,     0,     0,
     560,   561,   562,     0,   563,     0,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,     0,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,     0,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,     0,
     643,   644,   645,   646,   647,   648,   200,   201,     0,   202,
     203,   204,   205,   206,     0,     0,   207,     0,     0,     0,
       0,   208,     0,     0,     0,     0,   210,   211,   212,   213,
     214,   215,     0,  -463,     0,     0,     0,   217,     0,     0,
       0,   218,     0,     0,   219,   220,   221,     0,   222,     0,
       0,     0,     0,     0,   225,  5025,     0,   226,   227,     0,
     228,   229,     0,     0,     0,     0,   232,   233,   234,  5026,
     236,   237,     0,   238,   239,     0,   240,   241,     0,   243,
       0,   245,   246,   247,   248,   249,   250,     0,   251,   252,
       0,   253,   254,   255,     0,   257,     0,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,   260,     0,     0,
       0,   261,   262,   263,     0,     0,   264,     0,     0,     0,
       0,   265,     0,     0,     0,     0,     0,   267,   268,     0,
     269,     0,     0,     0,     0,     0,   270,   271,   272,   273,
     274,     0,     0,     0,     0,     0,     0,   276,   277,   278,
       0,  -454,     0,   279,     0,  -454,   281,     0,   282,   283,
     284,     0,     0,   285,   286,     0,   287,   288,   289,   290,
     291,     0,     0,     0,   293,   294,   295,   296,   297,     0,
       0,   298,   299,  5027,   300,   301,   302,   303,   304,     0,
       0,     0,     0,     0,     0,     0,   307,   308,     0,   309,
       0,     0,     0,   310,     0,   311,   312,   313,   314,     0,
     315,     0,   316,     0,     0,     0,     0,   318,     0,     0,
       0,     0,   320,   321,     0,     0,     0,   322,   323,   324,
     325,  5028,     0,   326,     0,   328,     0,     0,   329,     0,
       0,     0,     0,   330,   331,     0,     0,     0,     0,   333,
       0,     0,     0,   334,   335,     0,   336,   337,  5029,     0,
       0,   338,     0,   339,     0,     0,     0,   341,     0,     0,
     342,  5030,     0,   343,   344,     0,     0,     0,     0,     0,
     345,   346,     0,   347,     0,   348,     0,   349,   350,     0,
       0,     0,     0,  -418,     0,     0,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
       0,   373,   374,   375,   376,     0,   377,   378,     0,     0,
       0,     0,   379,   380,   381,   382,   383,   384,     0,     0,
     385,   386,     0,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,   398,   399,
       0,     0,   400,   401,   402,   403,   404,     0,     0,     0,
       0,   406,     0,     0,     0,   407,     0,   408,   409,     0,
     410,   411,  5031,     0,     0,   413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   414,   415,   416,     0,   417,
       0,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,     0,     0,   431,   432,     0,
     433,     0,   434,   435,   436,   437,   438,     0,   439,   440,
     441,     0,     0,   442,     0,     0,     0,   443,   444,     0,
     445,   446,     0,     0,   447,   448,   449,   450,   451,     0,
     452,   453,     0,   454,     0,   456,  -418,     0,   457,   458,
     459,   460,   461,   462,   463,   464,     0,     0,     0,   466,
     467,     0,   468,   469,   470,  5032,   471,     0,     0,     0,
     473,   474,   475,     0,   476,     0,   477,   478,     0,   480,
     481,     0,   482,   483,     0,     0,     0,   484,   485,   486,
     487,     0,     0,     0,   488,     0,     0,     0,     0,     0,
       0,   491,     0,   493,     0,   494,   495,   496,   497,   498,
       0,     0,     0,     0,     0,   499,   500,   501,     0,   502,
       0,     0,   503,     0,     0,   504,     0,   505,     0,   506,
       0,   508,   509,   510,   511,     0,     0,     0,   513,     0,
       0,   514,   515,   516,   517,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   524,   525,     0,     0,   526,   527,
     528,   529,     0,     0,   530,   531,     0,   532,   533,   534,
     535,     0,     0,     0,     0,     0,   536,   537,     0,     0,
       0,     0,   539,   540,     0,     0,   541,   542,     0,   543,
     544,     0,     0,     0,     0,     0,   547,     0,     0,   548,
       0,   549,     0,   550,   551,     0,     0,     0,     0,     0,
     552,     0,   553,     0,     0,   554,     0,     0,     0,   555,
       0,   556,   557,   558,   559,  -454,     0,  -418,     0,     0,
       0,   560,   561,   562,     0,   563,     0,   565,   566,     0,
       0,   567,     0,     0,   568,   569,   570,   571,   572,     0,
     573,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     575,   576,     0,   577,   578,   579,     0,     0,     0,     0,
     581,     0,   582,     0,     0,     0,     0,     0,     0,   583,
     584,     0,     0,   585,     0,   586,     0,   587,   588,     0,
       0,     0,   589,   590,   591,   592,   593,   594,   595,   596,
       0,   597,   598,   599,     0,   601,   602,   603,   604,   605,
     606,     0,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,     0,   631,   632,   633,
     634,   635,   636,   637,     0,   638,   639,   640,   641,     0,
       0,   643,   644,   645,   646,   647,   648,   200,   201,     0,
     202,   203,   204,   205,   206,     0,     0,   207,     0,     0,
       0,     0,   208,     0,     0,     0,     0,   210,   211,   212,
     213,   214,   215,     0,  -463,     0,     0,     0,   217,     0,
       0,     0,   218,     0,     0,   219,   220,   221,     0,   222,
       0,     0,     0,     0,     0,   225,  5025,     0,   226,   227,
       0,   228,   229,     0,     0,     0,     0,   232,   233,   234,
    5026,   236,   237,     0,   238,   239,     0,   240,   241,     0,
     243,     0,   245,   246,   247,   248,   249,   250,     0,   251,
     252,     0,   253,   254,   255,     0,   257,     0,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,   260,     0,
       0,     0,   261,   262,   263,     0,     0,   264,     0,     0,
       0,     0,   265,     0,     0,     0,     0,     0,   267,   268,
       0,   269,     0,     0,     0,     0,     0,   270,   271,   272,
     273,   274,     0,     0,     0,     0,     0,     0,   276,   277,
     278,     0,  -451,     0,   279,     0,  -451,   281,     0,   282,
     283,   284,     0,     0,   285,   286,     0,   287,   288,   289,
     290,   291,     0,     0,     0,   293,   294,   295,   296,   297,
       0,     0,   298,   299,  5027,   300,   301,   302,   303,   304,
       0,     0,     0,     0,     0,     0,     0,   307,   308,     0,
     309,     0,     0,     0,   310,     0,   311,   312,   313,   314,
       0,   315,     0,   316,     0,     0,     0,     0,   318,     0,
       0,     0,     0,   320,   321,     0,     0,     0,   322,   323,
     324,   325,  5028,     0,   326,     0,   328,     0,     0,   329,
       0,     0,     0,     0,   330,   331,     0,     0,     0,     0,
     333,     0,     0,     0,   334,   335,     0,   336,   337,  5029,
       0,     0,   338,     0,   339,     0,     0,     0,   341,     0,
       0,   342,  5030,     0,   343,   344,     0,     0,     0,     0,
       0,   345,   346,     0,   347,     0,   348,     0,   349,   350,
       0,     0,     0,     0,  -418,     0,     0,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,     0,   373,   374,   375,   376,     0,   377,   378,     0,
       0,     0,     0,   379,   380,   381,   382,   383,   384,     0,
       0,   385,   386,     0,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,   398,
     399,     0,     0,   400,   401,   402,   403,   404,     0,     0,
       0,     0,   406,     0,     0,     0,   407,     0,   408,   409,
       0,   410,   411,  5031,     0,     0,   413,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,   416,     0,
     417,     0,   418,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,     0,     0,   431,   432,
       0,   433,     0,   434,   435,   436,   437,   438,     0,   439,
     440,   441,     0,     0,   442,     0,     0,     0,   443,   444,
       0,   445,   446,     0,     0,   447,   448,   449,   450,   451,
       0,   452,   453,     0,   454,     0,   456,  -418,     0,   457,
     458,   459,   460,   461,   462,   463,   464,     0,     0,     0,
     466,   467,     0,   468,   469,   470,  5032,   471,     0,     0,
       0,   473,   474,   475,     0,   476,     0,   477,   478,     0,
     480,   481,     0,   482,   483,     0,     0,     0,   484,   485,
     486,   487,     0,     0,     0,   488,     0,     0,     0,     0,
       0,     0,   491,     0,   493,     0,   494,   495,   496,   497,
     498,     0,     0,     0,     0,     0,   499,   500,   501,     0,
     502,     0,     0,   503,     0,     0,   504,     0,   505,     0,
     506,     0,   508,   509,   510,   511,     0,     0,     0,   513,
       0,     0,   514,   515,   516,   517,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   524,   525,     0,     0,   526,
     527,   528,   529,     0,     0,   530,   531,     0,   532,   533,
     534,   535,     0,     0,     0,     0,     0,   536,   537,     0,
       0,     0,     0,   539,   540,     0,     0,   541,   542,     0,
     543,   544,     0,     0,     0,     0,     0,   547,     0,     0,
     548,     0,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   552,     0,   553,     0,     0,   554,     0,     0,     0,
     555,     0,   556,   557,   558,   559,  -451,     0,  -418,     0,
       0,     0,   560,   561,   562,     0,   563,     0,   565,   566,
       0,     0,   567,     0,     0,   568,   569,   570,   571,   572,
       0,   573,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   575,   576,     0,   577,   578,   579,     0,     0,     0,
       0,   581,     0,   582,     0,     0,     0,     0,     0,     0,
     583,   584,     0,     0,   585,     0,   586,     0,   587,   588,
       0,     0,     0,   589,   590,   591,   592,   593,   594,   595,
     596,     0,   597,   598,   599,     0,   601,   602,   603,   604,
     605,   606,     0,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,     0,   631,   632,
     633,   634,   635,   636,   637,     0,   638,   639,   640,   641,
       0,     0,   643,   644,   645,   646,   647,   648,   200,   201,
       0,   202,   203,   204,   205,   206,     0,     0,   207,     0,
       0,     0,     0,   208,     0,     0,     0,     0,   210,   211,
     212,   213,   214,   215,     0,  -463,     0,     0,     0,   217,
       0,     0,     0,   218,     0,     0,   219,   220,   221,     0,
     222,     0,     0,     0,     0,     0,   225,  5025,     0,   226,
     227,     0,   228,   229,     0,     0,     0,     0,   232,   233,
     234,  5026,   236,   237,     0,   238,   239,     0,   240,   241,
       0,   243,     0,   245,   246,   247,   248,   249,   250,     0,
     251,   252,     0,   253,   254,   255,     0,   257,     0,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,   260,
       0,     0,     0,   261,   262,   263,     0,     0,   264,     0,
       0,     0,     0,   265,     0,     0,     0,     0,     0,   267,
     268,     0,   269,     0,     0,     0,     0,     0,   270,   271,
     272,   273,   274,     0,     0,     0,     0,     0,     0,   276,
     277,   278,     0,     0,     0,   279,     0,  5282,   281,     0,
     282,   283,   284,     0,     0,   285,   286,     0,   287,   288,
     289,   290,   291,     0,     0,     0,   293,   294,   295,   296,
     297,     0,     0,   298,   299,  5027,   300,   301,   302,   303,
     304,     0,     0,     0,     0,     0,     0,     0,   307,   308,
       0,   309,     0,     0,     0,   310,     0,   311,   312,   313,
     314,     0,   315,     0,   316,     0,     0,     0,     0,   318,
       0,     0,     0,     0,   320,   321,     0,     0,     0,   322,
     323,   324,   325,  5028,     0,   326,     0,   328,     0,     0,
     329,     0,     0,     0,     0,   330,   331,     0,     0,     0,
       0,   333,     0,     0,     0,   334,   335,     0,   336,   337,
    5029,     0,     0,   338,     0,   339,     0,     0,     0,   341,
       0,     0,   342,  5030,     0,   343,   344,     0,     0,     0,
       0,     0,   345,   346,     0,   347,     0,   348,     0,   349,
     350,     0,     0,     0,     0,  -418,     0,     0,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,     0,   373,   374,   375,   376,     0,   377,   378,
       0,     0,     0,     0,   379,   380,   381,   382,   383,   384,
       0,     0,   385,   386,     0,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
     398,   399,     0,     0,   400,   401,   402,   403,   404,     0,
       0,     0,     0,   406,     0,     0,     0,   407,     0,   408,
     409,     0,   410,   411,  5031,     0,     0,   413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   414,   415,   416,
       0,   417,     0,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,     0,     0,   431,
     432,     0,   433,     0,   434,   435,   436,   437,   438,     0,
     439,   440,   441,     0,     0,   442,     0,     0,     0,   443,
     444,     0,   445,   446,     0,     0,   447,   448,   449,   450,
     451,     0,   452,   453,     0,   454,     0,   456,  -418,     0,
     457,   458,   459,   460,   461,   462,   463,   464,     0,     0,
       0,   466,   467,     0,   468,   469,   470,  5032,   471,     0,
       0,     0,   473,   474,   475,     0,   476,     0,   477,   478,
       0,   480,   481,     0,   482,   483,     0,     0,     0,   484,
     485,   486,   487,     0,     0,     0,   488,     0,     0,     0,
       0,     0,     0,   491,     0,   493,     0,   494,   495,   496,
     497,   498,     0,     0,     0,     0,     0,   499,   500,   501,
       0,   502,     0,     0,   503,     0,     0,   504,     0,   505,
       0,   506,     0,   508,   509,   510,   511,     0,     0,     0,
     513,     0,     0,   514,   515,   516,   517,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   524,   525,     0,     0,
     526,   527,   528,   529,     0,     0,   530,   531,     0,   532,
     533,   534,   535,     0,     0,     0,     0,     0,   536,   537,
       0,     0,     0,     0,   539,   540,     0,     0,   541,   542,
       0,   543,   544,     0,     0,     0,     0,     0,   547,     0,
       0,   548,     0,   549,     0,   550,   551,     0,     0,     0,
       0,     0,   552,     0,   553,     0,     0,   554,     0,     0,
       0,   555,     0,   556,   557,   558,   559,     0,     0,  -418,
       0,     0,     0,   560,   561,   562,     0,   563,     0,   565,
     566,     0,     0,   567,     0,     0,   568,   569,   570,   571,
     572,     0,   573,     0,     0,     0,     0,     0,     0,     0,
       0,   574,   575,   576,     0,   577,   578,   579,     0,     0,
       0,     0,   581,     0,   582,     0,     0,     0,     0,     0,
       0,   583,   584,     0,     0,   585,     0,   586,     0,   587,
     588,     0,     0,     0,   589,   590,   591,   592,   593,   594,
     595,   596,     0,   597,   598,   599,     0,   601,   602,   603,
     604,   605,   606,     0,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,     0,   631,
     632,   633,   634,   635,   636,   637,     0,   638,   639,   640,
     641,     0,     0,   643,   644,   645,   646,   647,   648,   200,
     201,     0,   202,   203,   204,   205,   206,     0,     0,   207,
       0,     0,     0,     0,   208,     0,     0,     0,     0,   210,
     211,   212,   213,   214,   215,     0,  -463,     0,     0,     0,
     217,     0,     0,     0,   218,     0,     0,   219,   220,   221,
       0,   222,     0,     0,     0,     0,     0,   225,  5025,     0,
     226,   227,     0,   228,   229,     0,     0,     0,     0,   232,
     233,   234,  5026,   236,   237,     0,   238,   239,     0,   240,
     241,     0,   243,     0,   245,   246,   247,   248,   249,   250,
       0,   251,   252,     0,   253,   254,   255,     0,   257,     0,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
     260,     0,     0,     0,   261,   262,   263,     0,     0,   264,
       0,     0,     0,     0,   265,     0,     0,     0,     0,     0,
     267,   268,     0,   269,     0,     0,     0,     0,     0,   270,
     271,   272,   273,   274,     0,     0,     0,     0,     0,     0,
     276,   277,   278,     0,     0,     0,   279,     0,  -456,   281,
       0,   282,   283,   284,     0,     0,   285,   286,     0,   287,
     288,   289,   290,   291,     0,     0,     0,   293,   294,   295,
     296,   297,     0,     0,   298,   299,  5027,   300,   301,   302,
     303,   304,     0,     0,     0,     0,     0,     0,     0,   307,
     308,     0,   309,     0,     0,     0,   310,     0,   311,   312,
     313,   314,     0,   315,     0,   316,     0,     0,     0,     0,
     318,     0,     0,     0,     0,   320,   321,     0,     0,     0,
     322,   323,   324,   325,  5028,     0,   326,     0,   328,     0,
       0,   329,     0,     0,     0,     0,   330,   331,     0,     0,
       0,     0,   333,     0,     0,     0,   334,   335,     0,   336,
     337,  5029,     0,     0,   338,     0,   339,     0,     0,     0,
     341,     0,     0,   342,  5030,     0,   343,   344,     0,     0,
       0,     0,     0,   345,   346,     0,   347,     0,   348,     0,
     349,   350,     0,     0,     0,     0,  -418,     0,     0,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,     0,   373,   374,   375,   376,     0,   377,
     378,     0,     0,     0,     0,   379,   380,   381,   382,   383,
     384,     0,     0,   385,   386,     0,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,   398,   399,     0,     0,   400,   401,   402,   403,   404,
       0,     0,     0,     0,   406,     0,     0,     0,   407,     0,
     408,   409,     0,   410,   411,  5031,     0,     0,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   414,   415,
     416,     0,   417,     0,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,     0,     0,
     431,   432,     0,   433,     0,   434,   435,   436,   437,   438,
       0,   439,   440,   441,     0,     0,   442,     0,     0,     0,
     443,   444,     0,   445,   446,     0,     0,   447,   448,   449,
     450,   451,     0,   452,   453,     0,   454,     0,   456,  -418,
       0,   457,   458,   459,   460,   461,   462,   463,   464,     0,
       0,     0,   466,   467,     0,   468,   469,   470,  5032,   471,
       0,     0,     0,   473,   474,   475,     0,   476,     0,   477,
     478,     0,   480,   481,     0,   482,   483,     0,     0,     0,
     484,   485,   486,   487,     0,     0,     0,   488,     0,     0,
       0,     0,     0,     0,   491,     0,   493,     0,   494,   495,
     496,   497,   498,     0,     0,     0,     0,     0,   499,   500,
     501,     0,   502,     0,     0,   503,     0,     0,   504,     0,
     505,     0,   506,     0,   508,   509,   510,   511,     0,     0,
       0,   513,     0,     0,   514,   515,   516,   517,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   524,   525,     0,
       0,   526,   527,   528,   529,     0,     0,   530,   531,     0,
     532,   533,   534,   535,     0,     0,     0,     0,     0,   536,
     537,     0,     0,     0,     0,   539,   540,     0,     0,   541,
     542,     0,   543,   544,     0,     0,     0,     0,     0,   547,
       0,     0,   548,     0,   549,     0,   550,   551,     0,     0,
       0,     0,     0,   552,     0,   553,     0,     0,   554,     0,
       0,     0,   555,     0,   556,   557,   558,   559,     0,     0,
    -418,     0,     0,     0,   560,   561,   562,     0,   563,     0,
     565,   566,     0,     0,   567,     0,     0,   568,   569,   570,
     571,   572,     0,   573,     0,     0,     0,     0,     0,     0,
       0,     0,   574,   575,   576,     0,   577,   578,   579,     0,
       0,     0,     0,   581,     0,   582,     0,     0,     0,     0,
       0,     0,   583,   584,     0,     0,   585,     0,   586,     0,
     587,   588,     0,     0,     0,   589,   590,   591,   592,   593,
     594,   595,   596,     0,   597,   598,   599,     0,   601,   602,
     603,   604,   605,   606,     0,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,     0,
     631,   632,   633,   634,   635,   636,   637,     0,   638,   639,
     640,   641,     0,     0,   643,   644,   645,   646,   647,   648,
     200,   201,     0,   202,   203,   204,   205,   206,     0,     0,
     207,     0,     0,     0,     0,   208,     0,     0,     0,     0,
     210,   211,   212,   213,   214,   215,     0,  -463,     0,     0,
       0,   217,     0,     0,     0,   218,     0,     0,   219,   220,
     221,     0,   222,     0,     0,     0,     0,     0,   225,  5025,
       0,   226,   227,     0,   228,   229,     0,     0,     0,     0,
     232,   233,   234,  5026,   236,   237,     0,   238,   239,     0,
     240,   241,     0,   243,     0,   245,   246,   247,   248,   249,
     250,     0,   251,   252,     0,   253,   254,   255,     0,   257,
       0,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,   260,     0,     0,     0,   261,   262,   263,     0,     0,
     264,     0,     0,     0,     0,   265,     0,     0,     0,     0,
       0,   267,   268,     0,   269,     0,     0,     0,     0,     0,
     270,   271,   272,   273,   274,     0,     0,     0,     0,     0,
       0,   276,   277,   278,     0,     0,     0,   279,     0,  5343,
     281,     0,   282,   283,   284,     0,     0,   285,   286,     0,
     287,   288,   289,   290,   291,     0,     0,     0,   293,   294,
     295,   296,   297,     0,     0,   298,   299,  5027,   300,   301,
     302,   303,   304,     0,     0,     0,     0,     0,     0,     0,
     307,   308,     0,   309,     0,     0,     0,   310,     0,   311,
     312,   313,   314,     0,   315,     0,   316,     0,     0,     0,
       0,   318,     0,     0,     0,     0,   320,   321,     0,     0,
       0,   322,   323,   324,   325,  5028,     0,   326,     0,   328,
       0,     0,   329,     0,     0,     0,     0,   330,   331,     0,
       0,     0,     0,   333,     0,     0,     0,   334,   335,     0,
     336,   337,  5029,     0,     0,   338,     0,   339,     0,     0,
       0,   341,     0,     0,   342,  5030,     0,   343,   344,     0,
       0,     0,     0,     0,   345,   346,     0,   347,     0,   348,
       0,   349,   350,     0,     0,     0,     0,  -418,     0,     0,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,     0,   373,   374,   375,   376,     0,
     377,   378,     0,     0,     0,     0,   379,   380,   381,   382,
     383,   384,     0,     0,   385,   386,     0,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,   398,   399,     0,     0,   400,   401,   402,   403,
     404,     0,     0,     0,     0,   406,     0,     0,     0,   407,
       0,   408,   409,     0,   410,   411,  5031,     0,     0,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,   416,     0,   417,     0,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,     0,     0,
       0,   431,   432,     0,   433,     0,   434,   435,   436,   437,
     438,     0,   439,   440,   441,     0,     0,   442,     0,     0,
       0,   443,   444,     0,   445,   446,     0,     0,   447,   448,
     449,   450,   451,     0,   452,   453,     0,   454,     0,   456,
    -418,     0,   457,   458,   459,   460,   461,   462,   463,   464,
       0,     0,     0,   466,   467,     0,   468,   469,   470,  5032,
     471,     0,     0,     0,   473,   474,   475,     0,   476,     0,
     477,   478,     0,   480,   481,     0,   482,   483,     0,     0,
       0,   484,   485,   486,   487,     0,     0,     0,   488,     0,
       0,     0,     0,     0,     0,   491,     0,   493,     0,   494,
     495,   496,   497,   498,     0,     0,     0,     0,     0,   499,
     500,   501,     0,   502,     0,     0,   503,     0,     0,   504,
       0,   505,     0,   506,     0,   508,   509,   510,   511,     0,
       0,     0,   513,     0,     0,   514,   515,   516,   517,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   524,   525,
       0,     0,   526,   527,   528,   529,     0,     0,   530,   531,
       0,   532,   533,   534,   535,     0,     0,     0,     0,     0,
     536,   537,     0,     0,     0,     0,   539,   540,     0,     0,
     541,   542,     0,   543,   544,     0,     0,     0,     0,     0,
     547,     0,     0,   548,     0,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   552,     0,   553,     0,     0,   554,
       0,     0,     0,   555,     0,   556,   557,   558,   559,     0,
       0,  -418,     0,     0,     0,   560,   561,   562,     0,   563,
       0,   565,   566,     0,     0,   567,     0,     0,   568,   569,
     570,   571,   572,     0,   573,     0,     0,     0,     0,     0,
       0,     0,     0,   574,   575,   576,     0,   577,   578,   579,
       0,     0,     0,     0,   581,     0,   582,     0,     0,     0,
       0,     0,     0,   583,   584,     0,     0,   585,     0,   586,
       0,   587,   588,     0,     0,     0,   589,   590,   591,   592,
     593,   594,   595,   596,     0,   597,   598,   599,     0,   601,
     602,   603,   604,   605,   606,     0,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
       0,   631,   632,   633,   634,   635,   636,   637,     0,   638,
     639,   640,   641,     0,     0,   643,   644,   645,   646,   647,
     648,   200,   201,     0,   202,   203,   204,   205,   206,     0,
       0,   207,     0,     0,     0,     0,   208,     0,     0,     0,
       0,   210,   211,   212,   213,   214,   215,     0,  -463,     0,
       0,     0,   217,     0,     0,     0,   218,     0,     0,   219,
     220,   221,     0,   222,     0,     0,     0,     0,     0,   225,
    5025,     0,   226,   227,     0,   228,   229,     0,     0,     0,
       0,   232,   233,   234,  5026,   236,   237,     0,   238,   239,
       0,   240,   241,     0,   243,     0,   245,   246,   247,   248,
     249,   250,     0,   251,   252,     0,   253,   254,   255,     0,
     257,     0,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,   260,     0,     0,     0,   261,   262,   263,     0,
       0,   264,     0,     0,     0,     0,   265,     0,     0,     0,
       0,     0,   267,   268,     0,   269,     0,     0,     0,     0,
       0,   270,   271,   272,   273,   274,     0,     0,     0,     0,
       0,     0,   276,   277,   278,     0,     0,     0,   279,     0,
    5383,   281,     0,   282,   283,   284,     0,     0,   285,   286,
       0,   287,   288,   289,   290,   291,     0,     0,     0,   293,
     294,   295,   296,   297,     0,     0,   298,   299,  5027,   300,
     301,   302,   303,   304,     0,     0,     0,     0,     0,     0,
       0,   307,   308,     0,   309,     0,     0,     0,   310,     0,
     311,   312,   313,   314,     0,   315,     0,   316,     0,     0,
       0,     0,   318,     0,     0,     0,     0,   320,   321,     0,
       0,     0,   322,   323,   324,   325,  5028,     0,   326,     0,
     328,     0,     0,   329,     0,     0,     0,     0,   330,   331,
       0,     0,     0,     0,   333,     0,     0,     0,   334,   335,
       0,   336,   337,  5029,     0,     0,   338,     0,   339,     0,
       0,     0,   341,     0,     0,   342,  5030,     0,   343,   344,
       0,     0,     0,     0,     0,   345,   346,     0,   347,     0,
     348,     0,   349,   350,     0,     0,     0,     0,  -418,     0,
       0,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,     0,   373,   374,   375,   376,
       0,   377,   378,     0,     0,     0,     0,   379,   380,   381,
     382,   383,   384,     0,     0,   385,   386,     0,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,   398,   399,     0,     0,   400,   401,   402,
     403,   404,     0,     0,     0,     0,   406,     0,     0,     0,
     407,     0,   408,   409,     0,   410,   411,  5031,     0,     0,
     413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     414,   415,   416,     0,   417,     0,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
       0,     0,   431,   432,     0,   433,     0,   434,   435,   436,
     437,   438,     0,   439,   440,   441,     0,     0,   442,     0,
       0,     0,   443,   444,     0,   445,   446,     0,     0,   447,
     448,   449,   450,   451,     0,   452,   453,     0,   454,     0,
     456,  -418,     0,   457,   458,   459,   460,   461,   462,   463,
     464,     0,     0,     0,   466,   467,     0,   468,   469,   470,
    5032,   471,     0,     0,     0,   473,   474,   475,     0,   476,
       0,   477,   478,     0,   480,   481,     0,   482,   483,     0,
       0,     0,   484,   485,   486,   487,     0,     0,     0,   488,
       0,     0,     0,     0,     0,     0,   491,     0,   493,     0,
     494,   495,   496,   497,   498,     0,     0,     0,     0,     0,
     499,   500,   501,     0,   502,     0,     0,   503,     0,     0,
     504,     0,   505,     0,   506,     0,   508,   509,   510,   511,
       0,     0,     0,   513,     0,     0,   514,   515,   516,   517,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   524,
     525,     0,     0,   526,   527,   528,   529,     0,     0,   530,
     531,     0,   532,   533,   534,   535,     0,     0,     0,     0,
       0,   536,   537,     0,     0,     0,     0,   539,   540,     0,
       0,   541,   542,     0,   543,   544,     0,     0,     0,     0,
       0,   547,     0,     0,   548,     0,   549,     0,   550,   551,
       0,     0,     0,     0,     0,   552,     0,   553,     0,     0,
     554,     0,     0,     0,   555,     0,   556,   557,   558,   559,
       0,     0,  -418,     0,     0,     0,   560,   561,   562,     0,
     563,     0,   565,   566,     0,     0,   567,     0,     0,   568,
     569,   570,   571,   572,     0,   573,     0,     0,     0,     0,
       0,     0,     0,     0,   574,   575,   576,     0,   577,   578,
     579,     0,     0,     0,     0,   581,     0,   582,     0,     0,
       0,     0,     0,     0,   583,   584,     0,     0,   585,     0,
     586,     0,   587,   588,     0,     0,     0,   589,   590,   591,
     592,   593,   594,   595,   596,     0,   597,   598,   599,     0,
     601,   602,   603,   604,   605,   606,     0,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,     0,   631,   632,   633,   634,   635,   636,   637,     0,
     638,   639,   640,   641,     0,     0,   643,   644,   645,   646,
     647,   648,   200,   201,     0,   202,   203,   204,   205,   206,
       0,     0,   207,     0,     0,     0,     0,   208,     0,     0,
       0,     0,   210,   211,   212,   213,   214,   215,     0,  -463,
       0,     0,     0,   217,     0,     0,     0,   218,     0,     0,
     219,   220,   221,     0,   222,     0,     0,     0,     0,     0,
     225,  5025,     0,   226,   227,     0,   228,   229,     0,     0,
       0,     0,   232,   233,   234,  5026,   236,   237,     0,   238,
     239,     0,   240,   241,     0,   243,     0,   245,   246,   247,
     248,   249,   250,     0,   251,   252,     0,   253,   254,   255,
       0,   257,     0,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,   260,     0,     0,     0,   261,   262,   263,
       0,     0,   264,     0,     0,     0,     0,   265,     0,     0,
       0,     0,     0,   267,   268,     0,   269,     0,     0,     0,
       0,     0,   270,   271,   272,   273,   274,     0,     0,     0,
       0,     0,     0,   276,   277,   278,     0,     0,     0,   279,
       0,  -437,   281,     0,   282,   283,   284,     0,     0,   285,
     286,     0,   287,   288,   289,   290,   291,     0,     0,     0,
     293,   294,   295,   296,   297,     0,     0,   298,   299,  5027,
     300,   301,   302,   303,   304,     0,     0,     0,     0,     0,
       0,     0,   307,   308,     0,   309,     0,     0,     0,   310,
       0,   311,   312,   313,   314,     0,   315,     0,   316,     0,
       0,     0,     0,   318,     0,     0,     0,     0,   320,   321,
       0,     0,     0,   322,   323,   324,   325,  5028,     0,   326,
       0,   328,     0,     0,   329,     0,     0,     0,     0,   330,
     331,     0,     0,     0,     0,   333,     0,     0,     0,   334,
     335,     0,   336,   337,  5029,     0,     0,   338,     0,   339,
       0,     0,     0,   341,     0,     0,   342,  5030,     0,   343,
     344,     0,     0,     0,     0,     0,   345,   346,     0,   347,
       0,   348,     0,   349,   350,     0,     0,     0,     0,  -418,
       0,     0,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,     0,   373,   374,   375,
     376,     0,   377,   378,     0,     0,     0,     0,   379,   380,
     381,   382,   383,   384,     0,     0,   385,   386,     0,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,   398,   399,     0,     0,   400,   401,
     402,   403,   404,     0,     0,     0,     0,   406,     0,     0,
       0,   407,     0,   408,   409,     0,   410,   411,  5031,     0,
       0,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,   416,     0,   417,     0,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,     0,     0,   431,   432,     0,   433,     0,   434,   435,
     436,   437,   438,     0,   439,   440,   441,     0,     0,   442,
       0,     0,     0,   443,   444,     0,   445,   446,     0,     0,
     447,   448,   449,   450,   451,     0,   452,   453,     0,   454,
       0,   456,  -418,     0,   457,   458,   459,   460,   461,   462,
     463,   464,     0,     0,     0,   466,   467,     0,   468,   469,
     470,  5032,   471,     0,     0,     0,   473,   474,   475,     0,
     476,     0,   477,   478,     0,   480,   481,     0,   482,   483,
       0,     0,     0,   484,   485,   486,   487,     0,     0,     0,
     488,     0,     0,     0,     0,     0,     0,   491,     0,   493,
       0,   494,   495,   496,   497,   498,     0,     0,     0,     0,
       0,   499,   500,   501,     0,   502,     0,     0,   503,     0,
       0,   504,     0,   505,     0,   506,     0,   508,   509,   510,
     511,     0,     0,     0,   513,     0,     0,   514,   515,   516,
     517,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     524,   525,     0,     0,   526,   527,   528,   529,     0,     0,
     530,   531,     0,   532,   533,   534,   535,     0,     0,     0,
       0,     0,   536,   537,     0,     0,     0,     0,   539,   540,
       0,     0,   541,   542,     0,   543,   544,     0,     0,     0,
       0,     0,   547,     0,     0,   548,     0,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   552,     0,   553,     0,
       0,   554,     0,     0,     0,   555,     0,   556,   557,   558,
     559,     0,     0,  -418,     0,     0,     0,   560,   561,   562,
       0,   563,     0,   565,   566,     0,     0,   567,     0,     0,
     568,   569,   570,   571,   572,     0,   573,     0,     0,     0,
       0,     0,     0,     0,     0,   574,   575,   576,     0,   577,
     578,   579,     0,     0,     0,     0,   581,     0,   582,     0,
       0,     0,     0,     0,     0,   583,   584,     0,     0,   585,
       0,   586,     0,   587,   588,     0,     0,     0,   589,   590,
     591,   592,   593,   594,   595,   596,     0,   597,   598,   599,
       0,   601,   602,   603,   604,   605,   606,     0,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,     0,   631,   632,   633,   634,   635,   636,   637,
       0,   638,   639,   640,   641,     0,     0,   643,   644,   645,
     646,   647,   648,   200,   201,     0,   202,   203,   204,   205,
     206,     0,     0,   207,     0,     0,     0,     0,   208,     0,
       0,     0,     0,   210,   211,   212,   213,   214,   215,     0,
    -463,     0,     0,     0,   217,     0,     0,     0,   218,     0,
       0,   219,   220,   221,     0,   222,     0,     0,     0,     0,
       0,   225,  5025,     0,   226,   227,     0,   228,   229,     0,
       0,     0,     0,   232,   233,   234,  5026,   236,   237,     0,
     238,   239,     0,   240,   241,     0,   243,     0,   245,   246,
     247,   248,   249,   250,     0,   251,   252,     0,   253,   254,
     255,     0,   257,     0,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,   260,     0,     0,     0,   261,   262,
     263,     0,     0,   264,     0,     0,     0,     0,   265,     0,
       0,     0,     0,     0,   267,   268,     0,   269,     0,     0,
       0,     0,     0,   270,   271,   272,   273,   274,     0,     0,
       0,     0,     0,     0,   276,   277,   278,     0,     0,     0,
     279,     0,     0,   281,     0,   282,   283,   284,     0,     0,
     285,   286,     0,   287,   288,   289,   290,   291,     0,     0,
       0,   293,   294,   295,   296,   297,     0,     0,   298,   299,
    5027,   300,   301,   302,   303,   304,     0,     0,     0,     0,
       0,     0,     0,   307,   308,     0,   309,     0,     0,     0,
     310,     0,   311,   312,   313,   314,     0,   315,     0,   316,
       0,     0,     0,     0,   318,     0,     0,     0,     0,   320,
     321,     0,     0,     0,   322,   323,   324,   325,  5028,     0,
     326,     0,   328,     0,     0,   329,     0,     0,     0,     0,
     330,   331,     0,     0,     0,     0,   333,     0,     0,     0,
     334,   335,     0,   336,   337,  5029,     0,     0,   338,     0,
     339,     0,     0,     0,   341,     0,     0,   342,  5030,     0,
     343,   344,     0,     0,     0,     0,     0,   345,   346,     0,
     347,     0,   348,     0,   349,   350,     0,     0,     0,     0,
    -418,     0,     0,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,     0,   373,   374,
     375,   376,     0,   377,   378,     0,     0,     0,     0,   379,
     380,   381,   382,   383,   384,     0,     0,   385,   386,     0,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,   398,   399,     0,     0,   400,
     401,   402,   403,   404,     0,     0,     0,     0,   406,     0,
       0,     0,   407,     0,   408,   409,     0,   410,   411,  5031,
       0,     0,   413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   414,   415,   416,     0,   417,     0,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,     0,     0,   431,   432,     0,   433,     0,   434,
     435,   436,   437,   438,     0,   439,   440,   441,     0,     0,
     442,     0,     0,     0,   443,   444,     0,   445,   446,     0,
       0,   447,   448,   449,   450,   451,     0,   452,   453,     0,
     454,     0,   456,  -418,     0,   457,   458,   459,   460,   461,
     462,   463,   464,     0,     0,     0,   466,   467,     0,   468,
     469,   470,  5032,   471,     0,     0,     0,   473,   474,   475,
       0,   476,     0,   477,   478,     0,   480,   481,     0,   482,
     483,     0,     0,     0,   484,   485,   486,   487,     0,     0,
       0,   488,     0,     0,     0,     0,     0,     0,   491,     0,
     493,     0,   494,   495,   496,   497,   498,     0,     0,     0,
       0,     0,   499,   500,   501,     0,   502,     0,     0,   503,
       0,     0,   504,     0,   505,     0,   506,     0,   508,   509,
     510,   511,     0,     0,     0,   513,     0,     0,   514,   515,
     516,   517,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   524,   525,     0,     0,   526,   527,   528,   529,     0,
       0,   530,   531,     0,   532,   533,   534,   535,     0,     0,
       0,     0,     0,   536,   537,     0,     0,     0,     0,   539,
     540,     0,     0,   541,   542,     0,   543,   544,     0,     0,
       0,     0,     0,   547,     0,     0,   548,     0,   549,     0,
     550,   551,     0,     0,     0,     0,     0,   552,     0,   553,
       0,     0,   554,     0,     0,     0,   555,     0,   556,   557,
     558,   559,     0,     0,  -418,     0,     0,     0,   560,   561,
     562,     0,   563,     0,   565,   566,     0,     0,   567,     0,
       0,   568,   569,   570,   571,   572,     0,   573,     0,     0,
       0,     0,     0,     0,     0,     0,   574,   575,   576,     0,
     577,   578,   579,     0,     0,     0,     0,   581,     0,   582,
       0,     0,     0,     0,     0,     0,   583,   584,     0,     0,
     585,     0,   586,     0,   587,   588,     0,     0,     0,   589,
     590,   591,   592,   593,   594,   595,   596,     0,   597,   598,
     599,     0,   601,   602,   603,   604,   605,   606,     0,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,     0,   631,   632,   633,   634,   635,   636,
     637,     0,   638,   639,   640,   641,     0,     0,   643,   644,
     645,   646,   647,   648,   200,   201,     0,   202,   203,   204,
     205,   206,     0,     0,   207,     0,     0,     0,     0,   208,
       0,     0,     0,     0,   210,   211,   212,   213,   214,   215,
       0,  -463,     0,     0,     0,   217,     0,     0,     0,   218,
       0,     0,   219,   220,   221,     0,   222,     0,     0,     0,
       0,     0,   225,  5025,     0,   226,   227,     0,   228,   229,
       0,     0,     0,     0,   232,   233,   234,  5026,   236,   237,
       0,   238,   239,     0,   240,   241,     0,   243,     0,   245,
     246,   247,   248,   249,   250,     0,   251,   252,     0,   253,
     254,   255,     0,   257,     0,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,   260,     0,     0,     0,   261,
     262,   263,     0,     0,   264,     0,     0,     0,     0,   265,
       0,     0,     0,     0,     0,   267,   268,     0,   269,     0,
       0,     0,     0,     0,   270,   271,   272,   273,   274,     0,
       0,     0,     0,     0,     0,   276,   277,   278,     0,     0,
       0,   279,     0,     0,   281,     0,   282,   283,   284,     0,
       0,   285,   286,     0,   287,   288,   289,   290,   291,     0,
       0,     0,   293,   294,   295,   296,   297,     0,     0,   298,
     299,  5027,   300,   301,   302,   303,   304,     0,     0,     0,
       0,     0,     0,     0,   307,   308,     0,   309,     0,     0,
       0,   310,     0,   311,   312,   313,   314,     0,   315,     0,
     316,     0,     0,     0,     0,   318,     0,     0,     0,     0,
     320,   321,     0,     0,     0,   322,   323,   324,   325,  5028,
       0,   326,     0,   328,     0,     0,   329,     0,     0,     0,
       0,   330,   331,     0,     0,     0,     0,   333,     0,     0,
       0,   334,   335,     0,   336,   337,  5029,     0,     0,   338,
       0,   339,     0,     0,     0,   341,     0,     0,   342,  5030,
       0,   343,   344,     0,     0,     0,     0,     0,   345,   346,
       0,   347,     0,   348,     0,   349,   350,     0,     0,     0,
       0,  -418,     0,     0,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,     0,   373,
     374,   375,   376,     0,   377,   378,     0,     0,     0,     0,
     379,   380,   381,   382,   383,   384,     0,     0,   385,   386,
       0,   387,     0,   388,     0,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,   398,   399,     0,     0,
     400,   401,   402,   403,   404,     0,     0,     0,     0,   406,
       0,     0,     0,   407,     0,   408,   409,     0,   410,   411,
    5031,     0,     0,   413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   416,     0,   417,     0,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,     0,     0,   431,   432,     0,   433,     0,
     434,   435,   436,   437,   438,     0,   439,   440,   441,     0,
       0,   442,     0,     0,     0,   443,   444,     0,   445,   446,
       0,     0,   447,   448,   449,   450,   451,     0,   452,   453,
       0,   454,     0,   456,  -418,     0,   457,   458,   459,   460,
     461,   462,   463,   464,     0,     0,     0,   466,   467,     0,
     468,   469,   470,  5032,   471,     0,     0,     0,   473,   474,
     475,     0,   476,     0,   477,   478,     0,   480,   481,     0,
     482,   483,     0,     0,     0,   484,   485,   486,   487,     0,
       0,     0,   488,     0,     0,     0,     0,     0,     0,   491,
       0,   493,     0,   494,   495,   496,   497,   498,     0,     0,
       0,     0,     0,   499,   500,   501,     0,   502,     0,     0,
     503,     0,     0,   504,     0,   505,     0,   506,     0,   508,
     509,   510,   511,     0,     0,     0,   513,     0,     0,   514,
     515,   516,   517,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   524,   525,     0,     0,   526,   527,   528,   529,
       0,     0,   530,   531,     0,   532,   533,   534,   535,     0,
       0,     0,     0,     0,   536,   537,     0,     0,     0,     0,
     539,   540,     0,     0,   541,   542,     0,   543,   544,     0,
       0,     0,     0,     0,   547,     0,     0,  5285,     0,   549,
       0,   550,   551,     0,     0,     0,     0,     0,   552,     0,
     553,     0,     0,   554,     0,     0,     0,   555,     0,   556,
     557,   558,   559,     0,     0,  -418,     0,     0,     0,   560,
     561,   562,     0,   563,     0,   565,   566,     0,     0,   567,
       0,     0,   568,   569,   570,   571,   572,     0,   573,     0,
       0,     0,     0,     0,     0,     0,     0,   574,   575,   576,
       0,   577,   578,   579,     0,     0,     0,     0,   581,     0,
     582,     0,     0,     0,     0,     0,     0,   583,   584,     0,
       0,   585,     0,   586,     0,   587,   588,     0,     0,     0,
     589,   590,   591,   592,   593,   594,   595,   596,     0,   597,
     598,   599,     0,   601,   602,   603,   604,   605,   606,     0,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,     0,   631,   632,   633,   634,   635,
     636,   637,     0,   638,   639,   640,   641,     0,     0,   643,
     644,   645,   646,   647,   648,   200,   201,     0,   202,   203,
     204,   205,   206,     0,     0,   207,     0,     0,     0,     0,
     208,     0,     0,     0,     0,   210,   211,   212,   213,   214,
     215,     0,     0,     0,     0,     0,   217,     0,     0,     0,
     218,     0,     0,   219,   220,   221,     0,   222,     0,     0,
       0,     0,     0,   225,     0,     0,   226,   227,     0,   228,
     229,     0,     0,     0,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,     0,   240,   241,     0,   243,     0,
     245,   246,   247,   248,   249,   250,     0,   251,   252,     0,
     253,   254,   255,     0,   257,     0,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,   260,     0,     0,     0,
     261,   262,   263,     0,     0,   264,     0,     0,     0,     0,
     265,     0,     0,     0,     0,     0,   267,   268,     0,   269,
       0,     0,     0,     0,     0,   270,   271,   272,   273,   274,
       0,     0,     0,     0,     0,     0,   276,   277,   278,     0,
       0,     0,   279,     0,     0,   281,     0,   282,   283,   284,
       0,     0,   285,   286,     0,   287,   288,   289,   290,   291,
       0,     0,     0,   293,   294,   295,   296,   297,     0,     0,
     298,   299,     0,   300,   301,   302,   303,   304,     0,     0,
       0,     0,     0,     0,     0,   307,   308,     0,   309,     0,
       0,     0,   310,     0,   311,   312,   313,   314,     0,   315,
       0,   316,     0,     0,     0,     0,   318,     0,     0,     0,
       0,   320,   321,     0,     0,     0,   322,   323,   324,   325,
       0,     0,   326,     0,   328,     0,     0,   329,     0,     0,
       0,     0,   330,   331,     0,     0,     0,     0,   333,     0,
       0,     0,   334,   335,     0,   336,   337,     0,     0,     0,
     338,     0,   339,     0,     0,     0,   341,     0,     0,   342,
       0,     0,   343,   344,     0,     0,     0,     0,     0,   345,
     346,     0,   347,     0,   348,     0,   349,   350,     0,     0,
       0,     0,     0,     0,     0,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,     0,
     373,   374,   375,   376,     0,   377,   378,     0,     0,     0,
       0,   379,   380,   381,   382,   383,   384,     0,     0,   385,
     386,     0,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,   398,   399,     0,
       0,   400,   401,   402,   403,   404,     0,     0,     0,     0,
     406,     0,     0,     0,   407,     0,   408,   409,     0,   410,
     411,   412,     0,     0,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   414,   415,   416,     0,   417,     0,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,     0,     0,   431,   432,     0,   433,
       0,   434,   435,   436,   437,   438,     0,   439,   440,   441,
       0,     0,   442,     0,     0,     0,   443,   444,     0,   445,
     446,     0,     0,   447,   448,   449,   450,   451,     0,   452,
     453,     0,   454,     0,   456,     0,     0,   457,   458,   459,
     460,   461,   462,   463,   464,     0,     0,     0,   466,   467,
       0,   468,   469,   470,     0,   471,     0,     0,     0,   473,
     474,   475,     0,   476,     0,   477,   478,     0,   480,   481,
       0,   482,   483,     0,     0,     0,   484,   485,   486,   487,
       0,     0,     0,   488,     0,     0,     0,     0,     0,     0,
     491,     0,   493,     0,   494,   495,   496,   497,   498,     0,
       0,     0,     0,     0,   499,   500,   501,     0,   502,     0,
       0,   503,     0,     0,   504,     0,   505,     0,   506,     0,
     508,   509,   510,   511,     0,     0,     0,   513,     0,     0,
     514,   515,   516,   517,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   524,   525,     0,     0,   526,   527,   528,
     529,     0,     0,   530,   531,     0,   532,   533,   534,   535,
       0,     0,     0,     0,     0,   536,   537,     0,     0,     0,
       0,   539,   540,     0,     0,   541,   542,     0,   543,   544,
       0,     0,     0,     0,     0,   547,     0,     0,   548,     0,
     549,     0,   550,   551,     0,     0,     0,     0,     0,   552,
       0,   553,     0,     0,   554,     0,     0,     0,   555,     0,
     556,   557,   558,   559,     0,     0,     0,     0,     0,     0,
     560,   561,   562,     0,   563,     0,   565,   566,     0,     0,
     567,     0,     0,   568,   569,   570,   571,   572,     0,   573,
       0,     0,     0,     0,     0,     0,     0,     0,   574,   575,
     576,     0,   577,   578,   579,     0,     0,     0,     0,   581,
       0,   582,     0,     0,     0,     0,     0,     0,   583,   584,
       0,     0,   585,     0,   586,     0,   587,   588,     0,     0,
       0,   589,   590,   591,   592,   593,   594,   595,   596,     0,
     597,   598,   599,     0,   601,   602,   603,   604,   605,   606,
       0,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,     0,   631,   632,   633,   634,
     635,   636,   637,     0,   638,   639,   640,   641,     0,     0,
     643,   644,   645,   646,   647,   648,  3658,  3659,     0,     0,
       0,     0,  3660,     0,  3661,     0,  3662,  3663,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3664,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3665,     0,     0,  3666,     0,     0,
       0,     0,     0,     0,     0,  3667,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3314,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3668,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3669,
       0,  3670,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3671,  3672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3673,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3674,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3675,     0,     0,     0,     0,     0,     0,     0,     0,
    3676,  3677,     0,  3678,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3679,  3680,  3681,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3682,
    3683,  3684,     0,     0,     0,     0,  3685,     0,     0,  3686,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3687,  3688,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3689,  3690,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3319,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3691,
       0,     0,     0,  3692,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3693,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3694,     0,     0,  3695,     0,
       0,  3696,  3697,  3698,  3699,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3700,  3701,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3702
};

static const yytype_int16 yycheck[] =
{
       6,    43,   816,     0,   115,     0,    97,   829,  1079,    15,
     984,  1080,    18,     0,   963,   964,    22,  1072,  1231,  1067,
    1231,  1569,  1180,    21,  1323,    31,   732,  2087,  1131,  1360,
    2094,  1069,    38,  2553,   983,    41,  1060,   116,     6,    43,
      46,    39,  1710,    49,  2410,    43,  2546,    53,  1030,    55,
    2330,  2331,    57,  2920,  2236,  2294,  2094,  2051,  2051,  2392,
    1095,  2394,  1323,  1741,    60,    59,  1153,  1154,  1284,    64,
    2403,  3117,  1095,   693,    22,  2453,  2454,    64,  1409,  1651,
    1062,  2773,  3704,  3321,  1173,  1651,  2581,  2132,  2421,    60,
    2585,    97,  2672,  2806,   116,  1182,   183,  1462,  2076,  1671,
      19,    49,  1619,  3203,  1619,  1928,  1929,  1194,  1195,  1196,
    2443,    30,  2372,  1200,  2447,  2979,    35,  1689,  1941,  1942,
    1943,  1486,  1487,  1488,  1489,  1490,   121,  1492,  2571,  2572,
    2573,  1561,  1562,  1563,  3170,  3704,  2368,  2369,  1619,  2145,
     676,   677,   148,  2016,   680,  2588,  2838,  3560,  1247,  2168,
    3148,  2586,  1239,  1410,  2132,  3724,  3725,  1653,  2127,  3607,
    2680,  1657,   662,   663,  2546,    21,  2915,  2546,  2815,  2546,
    2613,   177,  2555,   179,  2617,  1671,   182,   183,   184,   185,
     981,   801,   802,    39,   804,  2423,  2424,  1683,  2210,  3469,
    2633,  2634,  4376,   199,  2546,  2455,  2639,   817,  2578,  1247,
     148,  2546,  4376,     9,  2377,  2227,  2586,  2578,  1146,  1147,
    1148,   179,  2655,  2656,   182,  2586,  3231,  2341,  2240,  1157,
    3231,  2664,    48,    29,  2246,  1328,  2852,  1632,    34,   844,
     845,   846,  4317,  2742,   849,   850,   121,   185,   853,  3810,
     855,   856,   857,    22,   859,  4283,    52,  2441,  2442,    21,
    1188,   199,    21,  1191,    35,    35,    52,    73,  2666,    71,
    2537,    68,  3677,  3678,    18,    19,  3681,    21,    18,    19,
      71,  2825,  1210,  1211,  1256,   125,  1214,    11,    18,    19,
      64,  3113,    71,  2380,  3699,    21,    18,    19,    73,    59,
      48,  1138,  1139,   246,  1232,  1233,   144,   156,   125,  1237,
    1238,    77,   156,    21,  1118,   197,    18,    19,    18,    19,
      18,    19,   125,  1416,   197,   194,   176,   125,   933,  3606,
     194,    39,  2948,   100,    48,    43,    21,  2365,  2661,   156,
    2368,  2369,   156,    18,    19,     5,    19,  2519,    73,    18,
      19,    70,   160,   194,    39,    78,  4092,  2529,   156,   263,
     150,   111,   131,  4257,   158,    23,    18,    19,    18,    19,
      73,   125,   194,    21,   162,   686,    62,    35,    18,    19,
    1775,   192,   235,   126,  2725,   167,   231,    18,    19,   153,
      73,    49,    18,    19,   156,    52,   123,    18,    19,   195,
     164,   316,   156,    61,    62,    18,    19,   388,  4201,   156,
      43,  4018,    18,    19,   373,   367,   176,   998,   200,   193,
     180,   372,    18,    19,    18,    19,    18,    19,    44,  4405,
     156,   285,   473,   276,   194,   130,  1464,  3665,   103,  2405,
     144,    53,    18,    19,   285,   111,   156,   501,   388,   156,
     430,  2417,    64,   583,   333,   231,  1484,   572,  5068,   465,
      12,    31,   276,   285,   572,   572,   194,  3695,  3696,   258,
      21,   238,    37,  1169,   156,   191,  1280,   572,   255,  3884,
    3506,     9,  2448,   194,   156,   235,  2971,  1183,   156,  2543,
     401,   258,   156,  3500,   637,   198,   378,    13,   654,  1311,
    1312,   637,   482,  1442,   271,    19,   374,   139,   197,  4764,
     197,  4195,   501,  2479,  1453,  2543,   543,    21,   246,   276,
     247,   503,   197,  3013,   572,   125,   109,   548,   197,   276,
     282,  1545,  4201,   138,    23,   246,   216,   563,   138,   158,
     566,   235,   401,     9,   537,   388,   316,   212,   230,  4233,
     276,    65,   615,    18,    19,    18,    19,   285,   204,   246,
     249,  2733,  4000,  4232,  1578,    31,  1594,  1595,    23,  2553,
    3273,   331,    61,    62,   285,  4830,   370,   641,   571,   429,
      35,   176,  4610,   263,    18,    19,   612,   389,   355,  3493,
    3494,   450,  1404,   670,    49,   239,   511,   624,   389,  3503,
    3504,    65,   249,  3088,  4216,   249,    61,    62,   629,   566,
     389,  1137,  2862,  1103,  2937,    73,   433,   485,    37,   371,
    2849,  2850,   386,   228,   140,    18,    19,   609,   228,   744,
     786,   388,  2955,  2956,  2957,  2958,   433,   626,   420,  2811,
    2812,  1251,   785,   387,   418,   293,   390,   387,   130,   785,
     390,    18,    19,   564,   219,   785,   433,   387,   186,  2713,
     390,   404,   388,   603,  3149,   387,   662,   663,   390,   429,
     282,    70,   780,    77,   670,   401,   672,   784,  1288,   150,
     456,  5291,   471,  2933,   470,  2713,   781,   387,  3011,   387,
     390,   570,   390,  4096,   502,  3018,   150,   413,  1308,   203,
     332,   163,   682,  4372,   369,    18,    19,    67,   435,   327,
     477,  2825,   387,  2963,  2964,   390,   103,   596,   387,   373,
    2009,   390,   785,  4699,   662,   663,  1331,    18,    19,   806,
     716,   785,   130,   285,  2769,   387,   732,   387,   390,   355,
     390,  3231,   256,   194,   404,   786,  3449,   387,  1825,   393,
     390,   533,   606,   547,  2808,   716,   387,  3098,  2009,   390,
     603,   387,   377,  4838,   390,  4170,   387,  4560,  2019,   390,
    3126,   609,   373,   724,   387,  4180,   192,   390,   730,   785,
    2808,   387,   549,  4188,   390,   433,  1367,  4815,  4816,  2839,
    1867,   387,   256,   387,   390,   387,   390,   501,   390,   465,
     219,  2769,    18,    19,   785,   587,  2841,   571,    81,  4416,
     806,   387,   808,   470,   390,   231,  2378,   813,  2380,  4224,
     805,   635,   781,   550,   543,  3395,   903,  3397,   805,  1140,
     604,  2815,  2815,  3083,   429,  3657,   630,  1327,  2345,   754,
    2345,   756,   785,   241,   634,   926,   603,   572,  2203,   694,
    4127,   847,  2207,  2716,   758,  4591,   852,  2212,   262,  3182,
     563,  3184,  3185,  2676,   717,   511,  3299,  3190,  3191,   612,
    1947,  2985,   595,  2841,  2345,  4950,   687,  3200,  3201,  3042,
     563,  3044,  3205,  1811,  3207,   615,   963,  3210,   635,   637,
    3213,  1381,  2247,  2248,   971,   972,  1733,   647,  3720,  3332,
    2558,  3334,  1392,   785,   648,    18,    19,   903,   648,   635,
     583,   699,   785,   909,   609,  3348,   785,  3350,   648,  3601,
     723,   785,   387,   637,   387,   390,   648,   390,   547,   925,
     926,  1945,  3365,  2983,   783,   785,   785,   623,  4832,   783,
     781,   785,   493,   601,  2940,   785,   648,   785,   648,  3493,
     648,  1879,   984,   387,  3570,  1883,   390,  3573,   954,   781,
    3188,  3228,  1031,  3050,   688,  3215,   783,   963,   626,   783,
    1807,  1072,  1073,   648,   780,   971,   972,  1905,   786,   648,
     968,  1058,   748,   785,   758,   783,   756,   981,  3386,   786,
     781,    18,    19,   981,   387,   643,   648,   390,   648,   785,
     996,   997,   781,  1084,  1073,   780,  4032,   572,   648,   780,
    1006,   780,  1089,   583,   781,   566,  5091,   648,   613,  1031,
     387,   783,   648,   390,   781,   785,   785,   648,  3257,   783,
    2537,   696,  2537,    77,  5062,   648,   783,   781,  1023,   553,
    1036,   785,   648,  4050,  4051,   628,  1023,  1032,  1060,  1130,
     790,  4612,   648,   781,   648,   785,   648,   783,   996,   781,
    2153,  3915,  1058,   785,   860,   141,  2537,    18,    19,   620,
     781,  1067,   648,   783,   387,   785,   783,   390,   785,   739,
     740,   781,  4641,   781,  1080,   785,   637,   785,  1084,   553,
    1086,  1087,  1079,  1089,  1079,  1091,   387,  3063,   785,   390,
    1096,   783,  1079,  1099,  1100,   563,   781,  1103,   754,  3465,
    2778,   783,   601,   785,  1110,   783,   785,   785,   772,   783,
    4156,   785,   780,  1119,  1120,  1121,   922,   609,  1124,   781,
    4034,  1127,   928,   785,  1130,   785,  1132,   781,   785,  1135,
    1136,   781,  1100,  1131,   543,   785,   601,  4417,  3114,   536,
     781,   511,  2547,   572,   785,   781,  3122,  1032,    65,   785,
     781,  3127,   780,   634,   785,  1103,   785,    47,   984,   631,
     785,   387,   785,  1169,   390,   781,  5350,   158,  3232,   785,
     634,  1877,  3820,   648,   785,   648,   637,  1183,  1257,   785,
     785,   785,   204,   785,  1179,   238,   200,  3835,   614,  2292,
    4511,   160,  1179,  2142,  3232,   275,  1201,   125,  2267,   785,
    4198,   609,  5376,   122,   648,   488,   112,   707,   262,   115,
      40,   139,    71,   122,  2427,   219,  2427,    13,   271,   780,
    1307,    87,  3555,    18,    19,  1231,   681,   209,   259,    18,
      19,  2779,   369,   194,  1321,    77,   422,   692,  1774,   316,
     176,  1247,   656,   657,   447,   648,    22,  2546,   487,   402,
     968,    18,    19,  1789,   125,   653,  5341,  1263,  1349,   345,
    1266,   125,   566,   981,   387,    18,    19,   390,  3651,  3652,
    1357,   648,   237,   968,  4289,    18,    19,   777,  4289,   188,
    1285,  1286,  2330,  2331,  1289,  2546,   378,  1292,  1293,  1294,
    3528,  1287,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,
     282,  1307,   174,   186,   160,  4018,   781,   263,  1314,  1315,
    1316,  1317,   785,  1319,  1320,  1321,  1287,  1408,  1324,  1325,
    1326,  1327,    35,  1329,  1330,   648,   216,  3587,  1334,   484,
    1328,   534,  4081,  3572,  1425,   749,   750,  3576,   981,   256,
    1346,   785,  3842,  1349,   140,  2051,    57,   648,  1316,    62,
     387,  1357,  1320,   390,  1360,   131,  1324,   125,  1364,  1365,
     293,  2183,  2163,  1361,   122,  4780,   196,  4782,   209,  3242,
    2171,   290,   292,  1993,  1380,  1381,  1463,   282,  3638,  1327,
    4027,   290,   785,   266,  4953,  1391,  1392,    11,  1394,  1395,
    2938,  1413,  3758,  3759,   162,    21,  4222,  2012,   535,  4225,
     586,   484,  1408,  1409,   332,   370,   420,    52,   785,   407,
    3283,  1417,  1454,  1131,  3608,  2714,   158,   380,  1416,  1425,
     262,  2752,   648,   380,   477,  3485,   387,  2462,  2463,   390,
     188,  3764,  1380,  1381,  1440,   456,  1131,  4063,  4064,  2462,
    2463,   282,  1448,  1391,  1392,  3505,  1394,   407,   365,  1540,
    1454,  4551,  4552,  2714,   373,   433,  1454,  1463,   122,  1538,
    3842,   219,   785,  3842,   373,  3842,  1553,  3902,  1559,  3642,
    3439,    21,   456,  4099,  4100,   160,  3600,  2693,  3050,  4105,
    3989,  4107,  3054,  1570,   785,  3153,   369,  2818,  2918,   511,
    3842,   583,  2749,   429,  4142,   237,   356,  3842,  5067,  4147,
     433,   372,   372,  4151,    33,  1361,  3525,  3513,  3514,   194,
      18,    19,  3481,  1519,  1520,  3958,   498,  2604,  1605,  3541,
    3542,   246,  3902,  1545,  4972,   648,  2026,  1333,  1534,  2894,
     389,  3902,   290,   502,  1540,   455,  3971,  1037,   592,  2904,
    2698,  2699,  2907,   167,  2631,  2910,  4413,  1553,    18,    19,
     378,   276,   566,  1559,  2174,   635,   547,   179,  3603,   785,
    2817,   615,   428,   585,  1570,  3571,    18,    19,   572,   433,
    3393,  2670,   287,  3396,  4572,  4988,   200,    18,    19,  3151,
    3152,  3841,   547,    18,    19,  3151,  5208,  1582,    18,    19,
    4911,  3971,   387,   465,  1600,   390,   486,  1592,   387,  1605,
    3971,   390,   656,   657,   372,   231,   156,  3839,  3840,   278,
    1328,   648,  5181,   243,   583,   373,  1622,  1623,   535,  2708,
     387,   652,  2670,   390,  3957,  3603,   290,   780,   370,    18,
      19,   639,   709,  1328,   387,   350,   553,   390,    18,    19,
    4140,    21,   370,  1361,   387,    25,   502,   390,   604,   572,
    3523,   243,  2188,    85,    18,    19,  3152,   498,   369,   637,
    4308,   659,   785,   388,  4700,   630,  1361,   198,    18,    19,
     576,   194,  1714,   579,   579,   594,  4171,   613,    18,    19,
     643,   231,   212,   612,   197,   594,   643,   648,   774,   775,
     776,   777,   246,   785,  3954,   749,   750,   780,  1416,   659,
    4526,   125,   572,  4416,    21,  3277,   125,   728,   401,   373,
     643,  3228,   572,  3228,  3013,   572,   636,   572,  4956,  4765,
     249,  1416,   276,  1717,   369,  2663,   572,   644,   258,  1735,
    1736,    48,   754,  2771,   128,    71,  1454,   597,   162,  2842,
    2843,  2844,    18,    19,   728,  1751,   275,  3228,   785,  3622,
     372,   367,  3013,  3183,   780,  4855,  3186,  3187,   784,  3189,
      18,    19,  3192,  3193,  3194,  3195,  3196,  3197,  3198,  3199,
      18,    19,  3202,  3451,  3204,   780,  3206,   785,  3208,   122,
     709,  1787,  3212,   615,  1790,  1791,  1792,   401,  1736,  4289,
    4370,  5360,    18,    19,  1800,   637,   420,    18,    19,  4663,
     416,  3839,  3840,  1751,   572,   547,  4066,    18,    19,     0,
     733,  1454,   653,   482,   656,   657,   635,   502,  4993,   547,
     781,  4996,    21,  1791,  1792,   470,   245,   156,   543,   165,
     456,   672,   704,   705,   388,  4095,   594,    18,    19,  1787,
    5029,  5030,    18,    19,   122,   188,   369,   125,  1935,  4109,
     363,   401,   572,   648,  4114,  4481,   501,  4483,   388,   648,
    4960,   293,  4101,  2901,  1951,    18,    19,   493,   615,   400,
     127,  1877,  1878,  4919,  3747,    74,   219,   415,   603,   387,
     572,   648,   390,    18,    19,    18,    19,   733,   630,   356,
     122,  4604,  4074,   125,    71,   648,   179,  4340,   583,   293,
    3161,   615,   630,   137,  4424,   648,   456,   749,   750,   533,
     188,    18,    19,   442,   742,   743,   108,   387,   152,  2868,
     390,    18,    19,   780,   784,   780,    25,    18,    19,  1935,
     594,   235,  3231,   563,   239,   387,   566,   509,   390,   697,
     566,   219,   361,   493,   249,  1951,   387,   290,   372,   390,
     564,  3824,   387,   785,   786,   390,   188,   387,   637,   263,
     390,   160,   635,   587,   160,  2052,   785,   589,    18,    19,
    3231,   563,  1968,  1978,   566,   167,  1971,    18,    19,   510,
     353,   316,   277,   605,  1971,   280,  1991,   219,   165,  1994,
     785,   248,   781,  1999,   620,  3256,  1992,  1968,   387,   493,
     212,   390,  2008,   156,  2091,  2096,  2097,   387,   200,   572,
     390,   637,   290,   733,  5189,   127,   566,   369,   785,   194,
    2026,  1992,   160,   387,    18,    19,   390,   216,  4523,   637,
     373,  4076,   785,  4027,  4027,   607,   235,   387,   785,   786,
     390,   733,   785,  4818,  2050,  2051,  2052,   387,  4823,   603,
     390,   780,  2139,   389,  2674,  4287,  4288,   786,   290,   128,
    2008,  2067,   564,  5163,   263,  2071,  4305,   781,  2155,   168,
     620,   785,   566,  2079,   263,  2695,  2082,  2697,  2026,   651,
    4125,  4126,   186,   366,   367,  2091,  4131,   637,   393,   372,
    2096,  2097,    13,    18,    19,   373,   448,   401,  4076,  5288,
    5289,  3310,  2050,  2194,  3161,   572,   785,    18,    19,  2815,
     285,   387,   785,  3444,   390,  3324,   773,  2208,  4744,  3493,
     231,  2127,   457,  2129,   781,  2131,   620,   141,  3502,   387,
     597,  2079,   390,  2139,  2082,   430,   248,    18,    19,   387,
     648,   373,   390,   637,  3967,  4209,  3969,  4125,  4126,  2155,
     138,   220,  3483,  4131,   780,  2153,  3259,   681,  2156,  2163,
    2131,   387,   266,  3424,   390,  2163,   387,  2171,   692,   390,
     733,  4209,  4947,  2171,   592,  4867,   387,   785,   648,   390,
      18,    19,   293,  2189,  2190,  2191,  2192,  2193,  2194,  2195,
    4568,  4569,  3860,    18,    19,  3411,   648,   615,  2204,  3256,
    2206,  3532,  2208,   197,   235,  2211,   387,   648,  2295,   390,
    1582,   387,   389,   648,   390,   449,    61,    62,   648,   140,
    1592,  2189,  2190,  2191,   293,  2193,    71,   781,   420,    80,
     780,    82,   263,   783,   387,   785,  2323,   390,  2206,    84,
     228,    18,    19,  2211,  2192,  4484,   480,  2195,    13,  4287,
    4288,   594,   387,  3466,   387,   390,  3469,   390,  3469,   648,
      18,    19,    18,    19,    18,    19,    18,    19,   648,   230,
    2266,    18,    19,   243,   125,  4608,    77,   785,    13,  2321,
     387,    18,    19,   390,   648,   212,   780,    18,    19,  2295,
     387,    13,    93,   390,  2292,  2266,   387,   148,   648,   390,
      18,    19,  5121,  3285,    18,    19,   589,  2313,   648,  2351,
      18,    19,   282,   433,   167,   785,   594,  2323,   429,  3406,
      18,    19,   605,  4201,  2330,  2331,  4004,   127,  2415,    21,
    2336,   345,   780,   785,   454,  2341,   187,   387,    18,    19,
     390,   714,   715,   716,   785,  4678,   387,    18,    19,   390,
     785,   781,   773,  4719,  4232,  4721,    48,  4402,   137,  2401,
     781,   786,   594,   194,  2370,  2452,  4426,    32,  2313,    59,
    2341,  2377,   648,   152,   566,   140,   496,  2383,  2384,  2385,
    2386,  2387,  2388,  2389,   583,   583,  3421,  2393,  2336,  2395,
     648,  2336,   781,   387,  3607,   587,   390,  3420,   185,  2405,
     648,  2407,  2408,    19,  2410,   140,  2412,  2413,  3446,  2415,
    2416,  2417,    18,    19,    79,   246,  2422,   781,   140,  2425,
     612,  2427,   648,   227,  4402,   229,  2432,   648,   249,  2435,
    2436,   781,   235,    61,    62,  2153,   628,   648,  2156,   681,
    2446,   781,  2448,    71,  3266,  2163,  2452,    86,    18,    19,
     692,   272,  3661,  2171,   285,   230,    18,    19,  2153,  2550,
    2379,  2156,   387,  2469,   265,   390,   105,   648,   212,  5139,
    4619,  2390,   648,  2479,  2480,  4624,   387,  2396,   780,   390,
     456,  5300,  5301,   197,   786,  3694,   176,   564,  2436,   154,
     180,  3529,    64,  3702,  2581,   648,   745,   137,  2585,  3537,
    3709,   212,    74,   122,   194,   781,   387,  2426,   668,   390,
     670,  2430,   152,   648,   681,   648,   765,    89,  2437,  2438,
    2163,  2469,  3735,   781,  3735,   692,    18,    19,  2171,   778,
     779,   235,  2538,   781,   234,   235,  2542,   566,  4916,  4917,
      38,   648,   343,  3842,  2550,  5412,   781,  3048,    46,   387,
     785,   648,   390,  2559,  2560,   781,    12,   648,  3059,  3060,
     781,   261,   387,  2558,   780,   390,    18,    19,   369,   188,
     781,  4719,   780,  4721,  2292,  2581,   300,   301,  3400,  2585,
     780,  3842,  4915,    18,    19,   366,   367,   781,  4160,   440,
    2538,   785,  2560,   780,  2542,    18,    19,  2292,   648,   785,
     781,   780,    18,    19,  2609,   781,  5276,   648,  4757,   780,
     387,  4891,  4761,   390,   780,    18,    19,    18,    19,    18,
      19,    22,   780,    18,    19,    18,    19,   572,  2719,   387,
     431,   387,   390,   387,   390,   387,   390,   780,   390,  2726,
     387,   331,  4310,   390,    18,    19,   781,    19,   781,   780,
     387,   781,   493,   390,   648,   785,   387,  5177,   122,   390,
    2666,   125,   781,   235,  2670,  5335,   785,  5337,    82,   387,
    4819,   290,   390,   387,   781,  4824,   390,  4226,   780,   387,
    4229,  4230,   390,  5353,   781,   563,   194,   780,   566,   387,
     781,   122,   390,    18,    19,   493,   781,  4028,  4880,   623,
     785,   781,   626,  2709,  2710,   785,  2701,   387,    18,    19,
     390,   125,  4077,  2719,  2701,   780,   387,   780,  3876,   390,
    2726,   445,   446,   648,   188,   566,   780,  5397,  5398,   780,
     131,   781,   533,   241,   148,   637,  2742,   648,   640,   429,
     781,  2747,  5002,    26,  4075,  2751,  2752,    61,    62,   781,
     415,  3909,  3910,   785,   373,   219,   780,   188,   772,   773,
     774,   775,   776,   777,   780,    18,    19,   648,   566,   141,
    3592,  3593,   437,   187,   781,  2781,   781,  3935,   785,   620,
     785,   387,   667,   668,   390,   670,   881,  4000,   219,   884,
     780,  2797,  2798,  3413,   889,   780,   227,   780,   229,   894,
     781,    84,   320,   321,   785,  5325,   780,   325,   326,  2815,
     648,  2806,  2818,   478,  2905,   718,   719,   387,   780,  2825,
     390,   780,   620,   648,    19,   387,   290,  2823,   390,  2871,
    2825,   786,   781,  2781,  3921,    21,   785,  3861,  2825,   637,
     780,  4140,   656,   657,  2842,  2843,  2844,  3916,   780,  2797,
    2798,   781,  2823,   212,  2825,   785,   781,  1012,  1013,   290,
    1015,  4684,  1017,  4293,  4294,  4295,  4296,  2871,  4440,  4441,
     781,   648,  2878,  2871,   539,   158,   781,   781,   717,  4140,
     785,   785,  4946,   780,  2971,   781,    26,   197,   780,   785,
     648,  3978,   648,    23,   648,   387,   648,   780,   390,  2905,
     781,   648,  2908,  2909,   780,    35,   781,   780,  4946,   373,
     785,   648,   780,   781,   100,  4975,  2922,   648,   781,    49,
     780,  2927,   785,   780,  5184,  2930,   780,  2932,   108,   781,
     648,    61,    62,   785,   648,   387,  5000,  5001,   390,   780,
     648,   781,   373,   781,    84,   785,   141,   780,   456,   122,
     648,  3038,   387,   141,   237,   390,   781,   150,   151,   564,
    2908,  2909,  5000,  5001,   387,  2971,   212,   390,   648,   780,
     156,   387,   781,   345,   390,   594,   785,   648,   493,  2985,
    2986,  2987,   780,   780,   387,   493,   387,   390,   387,   390,
    4289,   390,   387,   135,   387,   390,   781,   390,   419,   781,
     785,  3088,  3008,   785,   781,   781,   192,   781,   194,   785,
      64,   785,   780,   387,  2985,   188,   390,   781,     7,   780,
      74,   785,   481,   781,   654,   781,   212,   781,  4289,   781,
     780,   217,  3038,   385,   781,    89,  3042,    26,  3044,    64,
     323,   221,   648,  3049,   781,   231,   219,   780,  3054,    74,
     781,   566,   238,   780,  5387,   781,   378,  3063,   566,   785,
     246,  3148,  3149,   781,    89,   781,   381,  4398,  4017,   785,
    5403,  3077,   258,   781,   563,   781,   197,   387,   648,   785,
     390,   780,  3088,   781,   780,   271,   648,   370,  3094,   481,
     276,   780,  4423,   231,   781,    84,  5429,   237,   785,   285,
     781,   781,  2462,  2463,   785,   620,   621,  4176,  3114,   781,
     781,    21,   620,   785,   246,   781,  3122,   290,  4187,   785,
    3126,  3127,   637,   781,  2842,  2843,  2844,   785,   780,   637,
     594,   781,   504,   505,   387,   785,  3142,   390,   780,   193,
     781,   194,  3148,  3149,   785,   199,  3233,  2842,  2843,  2844,
     345,  1218,  1219,  2871,   781,   144,   648,   345,   785,   780,
      21,    12,   780,   594,   194,  2244,  2245,   780,   193,   355,
      64,  3258,   564,  3179,   781,   781,   780,   569,   785,   780,
      74,   235,   575,   323,   141,   781,   197,   781,   780,   785,
     100,   785,   378,   781,  3142,    89,   648,   785,   780,  4412,
     373,   575,   388,   780,  4417,  3211,  4417,  3286,   781,   263,
     235,   781,   785,   648,   394,   780,   621,   781,   781,   781,
     612,   785,   785,   780,   404,   648,   780,  3233,  2871,   781,
     370,   411,   648,   785,   780,   780,   628,   781,   263,   100,
     781,   785,   780,   780,   785,   648,   156,   648,   237,   648,
     781,   780,  3258,   648,   785,   648,   781,   108,   246,   781,
     785,  3259,   654,   785,   547,   780,  3272,   780,    26,  3275,
     780,  3277,   780,   780,   648,   781,   127,   781,  3273,   785,
     780,   785,  3277,   780,   194,   780,   780,  3282,  3283,   781,
    3277,   477,   780,  3288,   780,   156,   780,   780,    33,   193,
     780,   780,   212,   780,   780,   199,   780,   217,   780,   504,
     505,   780,   780,   780,   141,   501,   504,   505,   100,    77,
     501,  4027,   378,   501,  3272,   212,    84,  3275,   238,   781,
      13,   786,   785,   194,   323,   515,   246,   786,   648,   780,
     785,   235,   785,   780,    96,    48,   781,   630,   258,   200,
     786,   212,   780,   156,   156,   197,   217,   111,   781,   781,
     780,   271,   160,   549,   418,   781,   276,   784,   783,   263,
    3461,   160,   160,   785,   249,   285,   401,   238,   781,    48,
    3386,   370,   781,   276,   293,   246,   781,   195,   345,   160,
     747,   384,   243,   418,   171,   648,  3402,   258,   770,   771,
     772,   773,   774,   775,   776,   777,   141,   547,   533,   519,
     271,   709,     7,   193,   263,   276,   263,   603,    71,   177,
      12,   594,  4491,  4492,   285,  4494,   184,    13,   614,   615,
     634,   781,   612,  3439,   781,   286,   140,  3443,  3444,  4597,
      10,   785,   781,    77,  3450,   355,  4501,  4502,   786,   635,
     781,   637,   781,   781,  3449,  3461,   238,   140,   781,  3465,
    3466,   781,   451,  3469,   781,   519,   749,   502,   378,   780,
     275,   601,   378,   667,  3469,  3481,   258,  3483,   388,   237,
     709,   764,  3469,   563,   100,   516,   615,  3493,  3494,   271,
     630,   785,   622,   623,   355,    26,  3502,  3503,  3504,    50,
      30,    30,  3450,   282,    31,   785,   583,   401,   785,   287,
     785,  4333,   698,   487,   249,    37,   108,   378,   345,   300,
     301,    71,  3493,  3494,   418,   733,  3532,   388,   572,   273,
     785,  3502,  3503,  3504,   785,   127,   658,   220,   785,   784,
     275,  3259,   786,   166,   780,    33,    77,   504,   505,    77,
     604,  5099,  3558,    84,  3560,   194,   543,   563,   547,   166,
    3565,   222,   543,   211,  3259,   323,   543,   477,   287,   420,
     157,    88,   785,   355,   785,   770,   771,   772,   773,   774,
     775,   776,   777,   771,   772,   773,   774,   775,   776,   777,
     194,   501,    21,   115,  3600,   781,  3602,   783,   785,   785,
     122,  3607,   136,   237,   790,   379,   364,   199,   559,   749,
     345,   156,   370,    21,   646,   103,   477,   781,   729,    27,
      48,   654,   238,   729,   764,   519,   572,   158,   100,  3600,
     158,   366,   367,   637,   122,   785,  3642,   503,    87,   549,
     501,   630,   258,   235,  3650,     7,   177,   780,   499,   110,
     583,   158,   401,   184,    74,   271,    64,   179,   401,   401,
    4698,   583,   136,    71,   445,   446,   188,    75,   261,    77,
     261,   401,   136,   401,   120,    48,   401,   504,   505,   401,
    4749,    89,  4751,  4752,   401,   585,   401,   619,   549,   619,
     785,   785,   501,   603,   286,   477,    13,   219,    64,   103,
     188,   141,   710,   628,   758,   615,   237,   442,    74,   237,
     604,   780,  4781,   564,   780,   566,  3722,   125,   122,   492,
     781,   785,   141,    89,   610,   635,    43,   637,    57,  3735,
     364,   378,  3738,  3739,   448,   171,   370,   156,     7,   355,
     111,   717,   603,   524,   525,   526,   378,   614,     7,   600,
     228,   592,  3758,  3759,   615,   200,  3762,   245,   780,  4972,
     749,   612,   378,   781,   781,   781,   238,   549,   290,   504,
     505,   781,   781,   197,   635,   764,   637,    94,   781,   781,
     226,    98,   517,   781,   188,  4759,   258,   773,   698,   547,
     785,   781,   323,   785,   785,   203,   780,   780,   390,   271,
     785,  3807,   290,   781,  3810,   439,   781,  4855,   781,   249,
     781,   781,   781,   781,  3820,   772,   773,   774,   775,   776,
     777,   781,   122,   781,   786,   125,   690,   193,   777,  3835,
     786,  3837,   786,   364,   356,   780,   364,   698,   780,   370,
     781,   245,   370,  4891,   527,   528,   785,   530,   531,   532,
    3856,   373,   786,   192,   785,   263,   784,   708,   785,  3865,
     287,   477,   287,   160,   758,   287,   549,   785,   378,   235,
     780,   781,   630,   783,   287,   785,   287,   160,   161,   635,
     790,   287,   583,   355,   236,   373,   290,   785,   188,   335,
     785,  4713,   583,   339,   785,   401,   583,   263,    13,   160,
     346,   785,   210,   378,   197,   345,   378,   499,  3856,   397,
     197,   439,  4960,   547,   456,   583,   583,   255,   201,   219,
     781,  5079,   783,   194,   785,   433,   345,   519,   786,   790,
     786,   214,  4906,   549,   786,   785,   253,   249,   786,   774,
     786,   252,   561,   770,   771,   772,   773,   774,   775,   776,
     777,   122,   181,   493,   781,   194,   785,   194,   366,   367,
     514,   501,   608,    60,   372,   599,   781,   785,   108,   373,
     378,   254,   564,   405,   566,   194,   402,   569,   572,   669,
     787,   427,  5085,  3989,   267,   342,   404,   722,   404,   572,
     290,   749,   572,   397,  4000,   785,   630,   380,    60,   615,
     786,    15,   478,  5161,   780,   477,   764,    21,   600,   263,
     418,   294,   604,   263,   598,   332,   547,   188,   263,   547,
     612,  4027,  4028,  4018,   403,    39,   566,   167,  4034,    43,
     263,   707,   378,   673,   249,   770,   771,   772,   773,   774,
     775,   776,   777,    57,    58,   491,   673,   160,   219,    63,
     572,   160,   418,   160,   576,   160,   160,   579,   160,   160,
     200,   160,   654,  4034,   504,   505,   160,   589,   160,  4075,
     160,   599,   594,   373,   160,   597,   359,   549,   160,   396,
     620,   621,   160,   160,  4171,   504,   505,   160,   160,   497,
    4096,   160,   160,     7,   160,   235,   160,   637,    12,   630,
      14,   493,   630,    17,   160,   160,   594,   160,   160,   501,
     160,  4198,   160,    27,    28,  5163,   708,   160,   160,   290,
     160,    37,   160,   160,  4166,   458,   459,   460,   461,   462,
     463,   464,   160,   160,   160,  5348,  4142,  5348,  4144,   547,
     141,  4147,   160,   615,    58,  4151,   286,    61,    62,    63,
      64,   160,   160,   160,  4160,    69,   160,    71,   160,  5372,
     160,  5372,   709,    77,   286,  4171,   758,   759,   654,    83,
      84,   642,   378,    87,   566,   465,   781,   780,  5391,   154,
    5391,   781,    96,   781,   245,   245,   632,   786,  4194,   786,
     594,   781,  4198,   781,   572,   572,   604,   111,  5411,   115,
    5411,   518,   373,   781,   650,   781,   122,   572,   785,   697,
     785,   125,   141,   786,   786,   129,   583,   786,   749,   780,
     655,   780,  5196,   137,   138,  5294,   385,   583,   620,   621,
     144,  4237,  4238,   764,   197,   731,   780,   780,   152,   785,
     780,   212,   733,   560,   158,   637,  4194,    27,   728,   433,
     772,   773,  4258,   197,  5068,   169,   781,   141,   428,   197,
     615,   612,   785,   179,   156,   336,   780,   780,   780,   555,
      12,   404,   188,   456,   404,   415,   785,  4283,   192,    73,
     420,   533,   533,   492,    64,   533,   533,   533,   780,  4237,
    4258,    71,   615,   697,   594,    75,   263,    77,   706,   378,
     592,   263,  4308,   219,   367,   637,   785,   780,   564,    89,
     583,  3313,   451,  3315,  4320,  4310,   785,   583,   781,   233,
     564,   235,   730,   781,   373,   785,   780,   378,   242,   780,
     770,   771,   772,   773,   774,   775,   776,   777,  5409,   378,
     212,   749,   750,   780,   345,   125,   780,   780,   262,   780,
     758,   770,   771,   772,   773,   774,   775,   776,   777,   499,
     572,   122,     7,   780,    62,   249,    35,    12,   780,    14,
     141,   285,  4320,   473,   290,    21,   781,   780,   780,   519,
     780,   414,    27,    28,   247,   247,   721,   781,   780,   752,
    4501,  4502,  4398,    62,   781,   781,    48,   495,  4404,   780,
     785,   781,   285,   688,   688,    12,  4412,   781,   322,   785,
     547,  4417,  4418,    58,   160,   785,   345,  4423,    63,   385,
     774,  4416,   231,   594,   564,   643,   340,   188,   282,   569,
     344,   141,    77,   780,  5256,   160,  4523,   197,    83,    84,
     356,   785,    87,   112,  4450,  5394,   115,   587,   258,   391,
     781,    96,   368,   781,   123,   781,   372,   373,   219,   781,
     600,   345,   781,   258,  4470,    48,   111,   217,   382,   103,
     373,   615,   612,   142,   388,   498,   160,  5291,   160,   785,
     125,   395,   160,   263,   129,  4572,   404,    48,   628,   780,
     404,   780,   137,   160,  1631,   228,  1633,  1634,   103,   144,
     245,  1638,  1639,   504,   505,  4511,   278,   152,   786,  4515,
     111,   111,   369,   158,   654,  1652,   780,  4523,  1655,  1656,
     189,  1658,   436,   162,  1661,  1662,  1663,  1664,  5350,   290,
     401,  1668,   730,   441,   125,   125,  1673,   451,   452,   453,
     780,  1678,  1679,  1680,  1681,  1682,   780,   192,   780,  1686,
    1687,   566,   780,   780,   583,  1692,   781,  1694,  1695,  1696,
     384,  1698,  1699,   404,  1701,   772,  4572,  1704,   708,   483,
    1707,  1708,  1709,   378,   345,   504,   505,   780,   378,   516,
     373,   781,   245,   637,   781,   781,   366,   367,   781,  5403,
     235,   260,   372,   781,   781,   401,   433,   242,   378,   197,
     583,   210,    21,   378,  4610,  4696,  4612,  4613,   269,  4604,
     246,   785,   373,   781,   786,  5429,   785,   262,   197,   759,
     504,   505,   698,   790,   790,   539,   540,   541,   542,   790,
     258,   258,   258,   547,  4640,   345,   404,   160,   418,   126,
     285,    48,   277,  4649,    48,   404,    48,   153,    48,   774,
     564,   478,   780,   567,    35,    35,   572,  3659,  3660,   609,
     576,   626,  3664,   579,   125,   730,   263,    77,   263,    64,
     203,   263,    35,   589,   373,   416,   590,   322,   594,   693,
     373,   597,   373,    93,   698,   354,   378,   780,   357,   603,
    4696,   378,    77,    21,   781,   340,   780,  4703,  3700,   344,
     516,   786,   488,   265,  3706,  3707,  3708,   781,   428,  3711,
     785,   781,   342,  4719,   728,  4721,    48,   497,   785,   378,
     388,   175,   781,   637,   134,   285,   640,   785,   385,   210,
     744,    21,   147,   504,   505,   781,    35,   781,   566,   258,
     781,   258,   160,   388,   406,   781,   781,   781,    77,   781,
     395,   781,   120,   120,   785,  4703,   780,    48,   780,   404,
      48,   522,    48,   388,   378,   620,   435,   547,   780,   770,
     771,   772,   773,   774,   775,   776,   777,   373,  4784,   637,
     781,   368,   111,     4,    15,   621,    21,   801,   802,   785,
     804,   805,    81,   511,   504,   505,   143,    37,   373,   785,
      21,   780,   228,   817,   781,   404,   451,   785,   194,  4815,
    4816,   725,   726,   727,   373,    21,   342,   781,    39,   173,
     781,    48,   378,   263,   604,   194,   786,   385,    21,   158,
     785,   780,   276,   594,   160,   749,   750,   162,   483,   319,
     509,   770,   771,   772,   773,   774,   775,   776,   777,   781,
     764,   674,   781,   759,   780,   265,   772,   773,   637,   158,
     398,    48,   473,   162,   780,   149,    15,   112,   781,   781,
     785,  4877,   637,   609,   781,   115,  4881,   162,   780,   136,
     781,   781,   122,   780,   780,  4891,   770,   771,   772,   773,
     774,   775,   776,   777,   539,   540,   541,   542,   780,   913,
     780,   780,   547,   202,   574,  4911,   235,   136,   136,   158,
     579,   780,   378,   781,    63,   538,   484,   484,   785,   564,
     654,  4927,   567,   222,   679,   692,   706,    48,   692,   692,
      48,  4973,   535,   343,   780,   555,   155,   634,   607,   179,
     954,    32,   787,   385,    64,    64,   781,    19,   188,   703,
     730,   482,   781,   634,   968,   197,   366,   367,   603,   369,
     554,    32,   385,   385,   781,   143,  4972,   981,  4974,   749,
     750,   134,   484,   692,   689,  4981,  4982,   228,   758,   219,
     702,   650,  4988,   465,     6,   378,   378,   246,   287,   154,
      48,   783,   637,   322,   171,   640,   609,  5003,   130,   770,
     771,   772,   773,   774,   775,   776,   777,   154,   230,  5015,
     781,   340,   634,   292,   783,   124,   231,   787,   703,    54,
    5026,   431,   575,    56,   373,  5031,   143,   783,  5115,   780,
     154,  5118,   575,    66,   215,   364,   785,   501,    54,  5036,
     783,  5036,   154,    76,   194,   575,   194,   455,   194,  5036,
     290,   636,   125,   785,   378,   699,  5062,    90,    91,    92,
     770,   771,   772,   773,   774,   775,   776,   777,   196,  3428,
    5036,  5158,  3219,   106,  3225,  3221,  4612,  3216,  3223,  4608,
     725,  4615,  3833,  4623,   383,  4638,  3635,  5085,  5066,  1627,
    4948,  5242,  1139,  5243,  1108,  4640,  4837,  5429,  5387,  5104,
      46,  2814,  2747,  3989,   749,   750,  4934,   985,  5399,  5115,
    5303,  4934,  5118,  5212,  4934,  4934,   356,  1131,  5303,   764,
     419,  5289,  5238,   533,  4934,  5131,  3842,  5237,  1142,  1143,
      35,  4934,   372,   373,  2367,  1094,  2374,  1151,  1152,  1153,
    1154,  1155,  1156,  4934,   443,  3424,  4934,  2284,  4289,  2539,
    1164,  1165,  5158,  1167,  1168,  4140,  4934,  3283,  1172,  1173,
    4310,  4934,  1176,  1177,  1178,  1179,  4934,  1181,  1182,   468,
     160,  4934,  3282,  5179,  3288,  1189,  1190,  4091,  1192,  1193,
    1194,  1195,  1196,  4934,  4738,  1199,  1200,  1201,  1202,  1203,
    1204,  1205,  1206,  1207,  4508,  1209,   186,  5186,  1212,  1213,
    5265,  2345,  2462,  1217,  4906,  5198,  3277,  1221,  1222,  1223,
    5196,   201,  3863,   512,  4160,  3678,  4934,  4161,   547,  4213,
    1234,  1235,  1236,  3711,   214,  1239,  3710,  4537,  1242,  1243,
    1244,  1245,  1246,  5208,  4973,   564,  4216,  1251,  2375,  4934,
    3382,  4910,  4757,  2382,   543,  4819,  4824,  3049,  1262,  1263,
    4761,  4771,  4515,   158,  1786,  3061,  1270,   162,  1272,  1273,
    5265,  4187,  4306,  3848,   563,  2402,  3261,   566,  2959,  2966,
    1284,  1285,  1286,  2463,  1288,  1289,   266,   267,  1292,  1293,
    1294,  5368,  2419,  1297,  1298,  1299,  1300,  1301,  1302,  1303,
    1304,  4934,  4589,  2463,  1308,    56,  2462,   202,  1602,  1313,
    2252,   334,  5308,   992,   294,    66,  1564,  2254,  3741,  5315,
    2803,  5029,  5030,  3080,  1328,    76,  2797,   222,   351,  1761,
    2457,  2458,  1736,  3179,  2778,  3450,    64,  4005,  2465,    90,
      91,    92,   572,  2134,  5029,  5030,   576,   955,   954,   579,
    1263,  1999,  5348,  4331,  2316,   106,  2707,  1361,  5354,   589,
    4855,  1933,  2670,  5359,   594,  4876,  5256,   597,  5163,  2825,
    2825,  1183,  5368,  2825,  2825,  5179,  5372,  5085,  5350,  5376,
    4723,  4443,  4981,   363,  3762,  4982,  1157,  1006,  4062,  4452,
    4877,  1519,   287,  4679,  3735,  5391,  5029,  5030,  3509,  4755,
    5085,  4850,    16,  2714,  2323,  2009,  1079,  5403,  1517,  1079,
    1369,  3449,  1416,  3449,  4420,  5411,  5155,  4024,  3447,  1423,
    4403,  4412,  1601,  1079,  5409,  2552,  2903,  1075,   984,  1079,
    5138,  5139,  5409,  5429,  2902,  2225,  1076,   417,  2735,  2107,
    3142,  2106,  3453,  5176,  4121,  4498,  5391,  5155,  5255,   472,
    1454,  5411,  1456,  5138,  5139,  4372,  4232,  4417,  4726,  3211,
    2986,  4304,  1266,  1452,  2156,  5171,   489,   756,   757,    43,
    5155,   760,   761,   762,   763,  2871,  2171,    43,  1450,  2151,
    5219,   940,  2149,  2781,    39,  1361,  2550,  4693,   383,  2954,
    2551,  4860,  1412,   943,  1068,  5234,    11,    11,  1139,  5187,
    1139,  1139,  4248,  3851,  4307,  5138,  5139,  4633,  5247,  3752,
      -1,  5219,  1516,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5155,    -1,   419,    -1,  5234,    -1,   551,    -1,
      -1,  1535,    -1,    -1,  5219,    -1,    -1,    -1,    -1,  5247,
      -1,    -1,   772,   773,  1559,   568,    -1,    -1,   443,  5234,
     780,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   698,
      -1,    -1,  5247,    -1,    -1,    -1,    -1,  5306,  5276,    -1,
      -1,    -1,    -1,   468,    -1,  1579,    -1,  5316,    -1,    -1,
    5288,  5289,  5321,   334,    -1,    -1,  5219,    -1,    -1,   728,
      -1,  5276,    -1,    -1,    -1,    -1,    -1,    -1,  5306,    -1,
     351,  5234,    -1,  5288,  5289,   744,    -1,    -1,  5316,    -1,
      -1,    -1,    -1,  5321,  5247,    -1,  5355,   512,  5357,    -1,
      -1,  5306,    -1,    -1,    -1,    -1,    -1,  5335,    -1,  5337,
      -1,  5316,    -1,    -1,    -1,    -1,  5321,    -1,    -1,    -1,
    5379,    -1,    -1,  5276,    -1,  5353,    -1,  5355,   543,  5357,
    5335,    -1,  5337,    -1,    -1,  5288,  5289,    -1,    -1,    -1,
     116,   117,   118,   119,   120,    -1,   805,    -1,  5353,    -1,
    5355,  5379,  5357,  5306,    -1,  5414,  5415,    -1,    -1,    -1,
    5419,    -1,    -1,  5316,    -1,    -1,    -1,    -1,  5321,  5397,
    5398,    -1,    -1,    -1,  5379,    -1,    -1,    -1,    -1,   910,
      -1,    -1,  5335,    -1,  5337,    -1,  5414,  5415,    -1,    -1,
      -1,  5419,  5397,  5398,    -1,    -1,    -1,    -1,    -1,    -1,
    5353,    -1,  5355,    -1,  5357,    -1,    -1,    -1,    -1,  5414,
    5415,    -1,    -1,    -1,  5419,    -1,    -1,    -1,   489,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   968,    -1,    -1,
      -1,    -1,   232,    -1,  5397,  5398,    -1,   223,   224,   225,
     226,    -1,    -1,    -1,   913,    -1,    -1,    -1,    -1,    -1,
      -1,  5414,  5415,    -1,    -1,    -1,  5419,   998,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1813,
      -1,    -1,    -1,  1817,    -1,   954,    -1,   568,    -1,    -1,
      -1,  1825,    -1,  1827,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   756,   757,  1867,    -1,   760,   761,   762,   763,  2996,
      -1,  2998,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,
      -1,   337,   338,   339,    -1,    -1,    -1,    -1,    -1,    -1,
     346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1911,  1912,  1913,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1947,    -1,    -1,    -1,    -1,  1952,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1971,    -1,    -1,
      -1,   427,    -1,    -1,  1978,   445,   446,    -1,    -1,  1983,
      -1,  1985,    -1,    -1,    -1,    -1,    -1,  1991,    -1,  1993,
    1994,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1142,  1143,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1151,  1152,    -1,    -1,  1155,  1156,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1164,  1165,    -1,  1167,  1168,
      -1,    -1,    -1,  1172,   490,   491,  3163,  1176,  1177,  1178,
    1179,    -1,  1181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1189,  1190,    -1,  1192,  1193,    -1,    -1,    -1,    -1,    -1,
    1199,    -1,    -1,  1202,  1203,  1204,  1205,  1206,  1207,    -1,
    1209,    -1,    -1,  1212,  1213,    -1,    -1,    -1,  1217,    -1,
      -1,    -1,  1221,  1222,  1223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1234,  1235,  1236,    -1,    -1,
      -1,    -1,    -1,  1242,  1243,  1244,  1245,  1246,    -1,    -1,
    3237,  3238,  3239,  3240,    -1,    -1,    -1,  1328,    18,    19,
      -1,    -1,    -1,  1262,  1263,    -1,    -1,    -1,    -1,    -1,
      -1,  1270,    -1,  1272,  1273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2153,
    1361,    -1,  2156,    -1,    -1,    -1,  1367,    -1,    -1,  2163,
    2164,    -1,    -1,    -1,  2168,    -1,    -1,  2171,    -1,    -1,
    2174,  1382,    -1,    -1,  1313,    -1,   632,    -1,    -1,    -1,
    2184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   649,   650,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1416,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,   117,   118,   119,
     120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   711,   712,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   732,    -1,   734,   735,   736,   737,   738,    -1,
      -1,   741,    14,    -1,    -1,    17,    -1,    61,    62,    63,
      -1,   751,    -1,    -1,  1423,    -1,    -1,    71,  2292,    -1,
      32,    -1,    -1,    77,    36,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    50,    51,
      -1,    -1,    -1,    -1,    -1,    -1,    58,  1456,    -1,    -1,
      -1,    63,    64,   223,   224,   225,   226,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
    1561,  1562,  1563,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,  2365,    -1,    -1,  2368,  2369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,  1516,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,    -1,    -1,  1535,    -1,    -1,    -1,
      -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,
      -1,    -1,    -1,    -1,    -1,   335,    -1,   337,   338,   339,
    1579,    -1,    -1,    -1,    -1,    -1,   346,    -1,   190,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,   218,    -1,   262,  2483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,
     390,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,    -1,    -1,   427,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,   281,
      -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,
      -1,    -1,  2566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2575,  2576,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     490,   491,  2596,  2597,    -1,  2599,    -1,    -1,  2602,  2603,
    2604,  2605,  2606,    -1,    -1,  2609,    -1,    -1,    -1,    -1,
      -1,   395,    -1,    -1,  2618,    -1,    -1,    -1,    -1,  2623,
     404,  2625,    -1,  2627,  2628,    -1,  2630,  2631,    -1,    -1,
      -1,  2635,  2636,  2637,    -1,    -1,    -1,  2641,  2642,  2643,
     382,  2645,    -1,  2647,    -1,  2649,    -1,  2651,    -1,  2653,
      -1,    -1,    -1,    -1,  2658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2674,    -1,    -1,   415,  1813,    -1,    -1,    -1,  1817,    -1,
      -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,  1827,  2693,
      -1,  2695,    -1,  2697,  3821,  3822,    -1,  2701,    -1,   483,
      -1,    -1,    -1,  2707,  2708,    -1,   448,    -1,    -1,   451,
      -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,   632,    -1,   476,    -1,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,   648,   649,
     650,   493,    -1,    -1,    -1,   539,   540,   541,   542,   501,
      -1,    -1,    -1,   547,   506,   507,   508,    -1,    -1,    -1,
      -1,    -1,  1911,  1912,  1913,    -1,    -1,    -1,    -1,    -1,
     564,    -1,    -1,   567,    -1,    -1,    -1,    -1,  2792,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,    -1,    -1,
      -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1952,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1971,    -1,    -1,    -1,    -1,    -1,  2842,  2843,
    2844,    -1,    -1,    -1,  1983,    -1,  1985,    -1,   590,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,   606,    -1,    -1,  2871,    -1,  2080,
    2081,    -1,   614,    -1,    -1,    -1,    -1,    -1,   620,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    63,  2920,    -1,    -1,   661,
     662,   663,   664,    -1,    -1,    -1,  2930,    -1,  2932,    77,
      -1,    -1,    -1,    -1,   676,    83,    84,    -1,    -1,    87,
      -1,   725,  2153,    -1,    -1,  2156,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,   749,   750,    -1,    -1,    -1,
      -1,   713,    -1,    -1,    -1,  2979,    -1,   125,    -1,    -1,
     764,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,   753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2164,    -1,    -1,    -1,  2168,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   780,    -1,
      -1,    -1,    -1,    -1,    -1,  2184,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2292,    -1,  4210,  4211,    -1,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    14,   242,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    36,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2362,    -1,    -1,    -1,  2366,    -1,    -1,    79,    -1,
    2371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   322,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2397,  2398,  2399,  2400,
      -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     131,   132,    -1,    -1,    -1,    -1,    -1,    -1,  2429,    -1,
      -1,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2453,  2454,    -1,    -1,    -1,   395,    -1,   170,
      -1,    -1,    -1,    -1,    -1,  3259,   404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,
      -1,    -1,    -1,  3297,   215,    -1,    -1,   218,    -1,    -1,
      -1,  3305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3335,  3336,    -1,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,  2483,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3361,    -1,    -1,
     281,    -1,    -1,    -1,   285,    -1,    -1,  3371,    -1,  3373,
      -1,  3375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,  3406,    -1,    -1,    -1,    -1,  3411,    -1,  3413,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2575,  2576,    -1,    -1,
      -1,    -1,    -1,  3447,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   603,    -1,  2596,  2597,    -1,
    2599,   382,    -1,  2602,  2603,  2604,  2605,  2606,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2618,
    3484,    -1,  3486,    -1,  2623,    -1,  2625,    -1,  2627,  2628,
      -1,  2630,    -1,    -1,   415,    -1,  2635,  2636,  2637,    -1,
      -1,    -1,  2641,  2642,  2643,   426,  2645,    -1,  2647,    -1,
    2649,    -1,  2651,    -1,  2653,    -1,    -1,    -1,    -1,  2658,
      -1,  3525,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,
     451,    -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,    -1,   478,    -1,    -1,
      -1,  3565,  2701,    -1,    -1,    -1,   487,    -1,  2707,    -1,
      -1,    -1,   493,    -1,    -1,    -1,    -1,   725,    -1,    -1,
     501,    -1,  2793,    -1,    -1,   506,   507,   508,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,   539,    -1,
      -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,
      -1,  2842,  2843,  2844,    -1,    -1,    -1,  3641,    -1,    -1,
    4767,  4768,  4769,    -1,    -1,   566,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2792,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2873,    -1,    -1,    -1,    -1,    -1,    -1,   590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   602,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,   620,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2918,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   676,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4898,    -1,    -1,  4901,  4902,  4903,  4904,    -1,    -1,
      -1,  2920,    -1,    -1,    -1,    -1,    -1,    -1,  2999,    -1,
      -1,    -1,   713,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3012,    -1,  3014,  3015,  3016,  3017,    -1,  3019,  3020,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3839,  3840,    -1,    -1,    -1,
    2979,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   780,
      -1,    -1,  4989,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4998,  4999,    -1,    -1,    -1,  3880,    -1,  3089,    -1,
    5007,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3913,
      -1,  3915,    -1,    -1,  3918,  3919,    -1,  3921,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3932,    -1,
      -1,    -1,    -1,  3937,    -1,    -1,  3940,    -1,    -1,  3943,
    3944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3965,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3183,    -1,  3978,  3186,  3187,    -1,  3189,    -1,
      -1,  3192,  3193,  3194,  3195,  3196,  3197,  3198,  3199,    -1,
      -1,  3202,    -1,  3204,    -1,  3206,    21,  3208,  3209,    -1,
      -1,  3212,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4024,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3259,    -1,
      -1,    -1,    77,    -1,    -1,  4059,  4060,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4078,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    21,    -1,    -1,    -1,    -1,    -1,    27,    28,    -1,
      -1,   156,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4152,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3297,    -1,
      -1,    -1,    -1,    63,    -1,    -1,  3305,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3335,  3336,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,    -1,
     235,   111,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,  3361,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,  3371,    -1,  3373,    -1,  3375,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,  4255,  4256,    -1,    -1,    -1,   156,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4287,  4288,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    35,    -1,    -1,   322,    -1,    40,
      -1,    42,    -1,    44,    45,    -1,    -1,    -1,  3447,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,  3484,    -1,  3486,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,  3575,    -1,    -1,    -1,    -1,    -1,
     395,   112,    -1,    -1,   115,    -1,   401,    -1,    -1,   404,
      -1,    -1,   123,    -1,    -1,    -1,  3525,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3609,    -1,
      -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4413,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,
      -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4434,   456,  4436,    -1,    -1,    35,    36,    -1,    -1,    -1,
     340,    -1,    -1,    -1,    -1,    -1,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    61,    62,    -1,   205,   206,    -1,    -1,   493,    -1,
      -1,    -1,    72,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,    -1,    97,    -1,    99,
      -1,   401,  3641,    -1,   404,    -1,   247,    -1,    -1,   109,
      -1,    -1,    -1,    -1,   539,   540,   541,   542,    -1,   260,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,   564,
      -1,   566,   567,    -1,    -1,    -1,    -1,   288,   289,  4553,
     291,    -1,    -1,    -1,    -1,    -1,   456,   157,   158,    -1,
      -1,    -1,    -1,   163,    -1,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,   603,    -1,
      -1,    -1,  4586,   483,    -1,    -1,    -1,   328,   329,   330,
      -1,    -1,    -1,   493,    -1,   620,    -1,    -1,   198,    -1,
     200,    -1,  3813,    -1,    -1,    -1,   347,   348,   349,   209,
      -1,   211,   637,   354,    -1,    -1,   357,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3838,    -1,    -1,
      -1,    -1,    -1,    -1,   375,   376,    -1,    -1,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4663,
      -1,    -1,  4666,    -1,   564,    -1,   566,   567,   409,   410,
      -1,    -1,    -1,    -1,    -1,  4679,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,
     725,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,
     620,    -1,  4726,    -1,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,   764,
      -1,  3880,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   780,   497,    -1,   783,    -1,
     501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   513,    -1,  3913,    -1,  3915,    -1,    -1,  3918,
    3919,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3932,    -1,    -1,    -1,    -1,  3937,    -1,
      -1,  3940,    -1,    -1,  3943,  3944,    -1,    -1,   408,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   419,
     420,    -1,   422,   423,   424,   725,  3965,    -1,    -1,    -1,
      -1,    -1,   573,    -1,    -1,   576,    -1,    -1,   579,   580,
     581,   582,    -1,    -1,   444,    -1,  4850,    -1,    -1,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   764,    -1,    -1,    -1,  4079,  4080,
      -1,  4082,    -1,    -1,    -1,    -1,    -1,  4881,    -1,    -1,
     780,   622,   623,   783,    -1,  4024,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,
      -1,   511,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4059,  4060,    -1,    -1,    -1,  4929,    -1,    -1,    -1,    -1,
    4934,    -1,    -1,    -1,    -1,    -1,  4940,    -1,    -1,  4078,
      -1,    -1,    -1,   543,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4962,    -1,
      -1,    -1,    -1,   563,    -1,    -1,   566,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   586,    -1,    -1,  4200,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4152,    -1,    -1,    -1,    -1,    -1,  5023,
      -1,    -1,    -1,    -1,   624,  5029,  5030,    -1,    -1,    -1,
      -1,   631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   785,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5072,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5085,  4293,  4294,  4295,  4296,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4304,    -1,    -1,    -1,    -1,    -1,    -1,
    5104,    -1,    -1,    -1,    -1,    -1,    -1,  4318,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4255,  4256,    -1,     7,
    5124,    -1,  5126,    -1,    12,    -1,    14,    -1,    -1,    17,
      -1,    -1,  5136,    -1,  5138,  5139,    -1,    -1,    -1,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5155,    -1,    -1,   754,   755,    -1,   757,    -1,    -1,
     760,   761,   762,   763,    -1,   765,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,  5217,    -1,  5219,    -1,    -1,    34,    35,
      -1,    -1,    -1,   111,    40,    -1,    42,    -1,    44,    45,
    5234,  5235,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,    -1,  5247,    -1,    -1,    62,    -1,    -1,   137,
     138,    -1,    -1,    -1,    -1,  4466,   144,    -1,    -1,    -1,
      -1,  5265,    -1,    -1,   152,    -1,    -1,  4478,    -1,    -1,
     158,  5275,  5276,    -1,  4413,    -1,    -1,    -1,    -1,    -1,
      -1,   169,    -1,    -1,  5288,  5289,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4434,   112,  4436,    -1,   115,
      -1,    -1,  5306,    -1,   192,    -1,    -1,   123,    -1,  5313,
      -1,    -1,  5316,    -1,    -1,    -1,    -1,  5321,    -1,    -1,
      -1,    -1,    -1,    -1,  5328,    -1,   142,    -1,    -1,    -1,
      -1,  5335,    -1,  5337,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   159,    -1,   233,    -1,   235,    -1,  5353,
      -1,  5355,    -1,  5357,   242,    -1,    -1,  4568,  4569,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   187,    -1,   189,   262,  5379,    -1,    -1,   194,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,
     206,  4602,    -1,  5397,  5398,    -1,    -1,   285,    -1,    -1,
    5404,    -1,    -1,    -1,  4615,    -1,    -1,    -1,  5412,    -1,
    5414,  5415,    -1,    -1,  4553,  5419,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4637,    -1,    -1,    -1,
      -1,   247,    -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   260,    -1,    -1,  4586,    -1,    -1,
      -1,    -1,   340,    -1,    -1,    -1,   344,    -1,    -1,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
     388,    -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,
      -1,    -1,   328,   329,   330,    -1,   404,    -1,    -1,    -1,
      -1,    -1,  4733,    -1,  4663,    -1,    -1,  4666,    -1,    -1,
      -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,
    4679,   357,    -1,    -1,    -1,    -1,    -1,    -1,   436,    -1,
      -1,    -1,    -1,    -1,    -1,  4766,    -1,    -1,    -1,   375,
     376,    -1,    -1,   451,   452,   453,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4726,    -1,    -1,
      -1,    -1,    -1,   409,   410,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4879,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
      -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,
      -1,    -1,   590,    -1,    -1,  4916,  4917,    -1,    -1,    -1,
      -1,  4850,    -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,
      -1,    -1,   640,    -1,    -1,    -1,    -1,   573,    -1,    -1,
     576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4997,    -1,    -1,    -1,
    4929,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4962,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   650,    -1,    -1,   725,   726,   727,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5085,    -1,   764,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5023,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5109,  5110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5072,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5124,    -1,  5126,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5136,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5235,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5275,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,  5313,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,  5328,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,  5404,   125,   126,   127,    -1,
     129,    -1,    -1,  5412,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,   566,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
     774,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,   774,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,    -1,    -1,    -1,
      -1,    -1,    -1,   772,   773,    -1,    -1,    -1,    -1,   778,
      -1,   780,    -1,    -1,    -1,   784,    -1,    -1,    -1,   788,
     789,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,    -1,    -1,    -1,    -1,    -1,   772,   773,
      -1,    -1,    -1,    -1,   778,    -1,   780,    -1,    -1,    -1,
     784,    -1,    -1,    -1,   788,   789,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,   766,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   780,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     789,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,   766,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,   780,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   789,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,   766,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,   780,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,   789,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
      -1,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,   785,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   784,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   784,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     784,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   784,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   784,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   784,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   784,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     784,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   784,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   781,    20,    -1,   784,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   784,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   784,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,   620,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,   780,   781,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   781,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   781,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   780,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,   766,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   780,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   780,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   780,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   780,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   780,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,   774,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,   774,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,   774,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,   774,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,   774,     8,     9,
      10,    11,    12,    13,    14,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    99,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
     130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
     210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,   285,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,   506,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,   587,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,   609,
     610,   611,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
     609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,   609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,    -1,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,   521,   522,   523,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    18,    19,    20,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,   387,    -1,    -1,   390,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,   648,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,   502,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,   594,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,   372,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    95,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,   522,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,   660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,    -1,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,   763,   764,   765,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,   763,   764,   765,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,   452,   453,   454,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,    -1,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,    -1,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,    -1,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,    -1,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
      -1,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
     150,   151,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,    -1,
     760,   761,   762,   763,   764,   765,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,   634,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,   751,   752,    -1,   754,   755,   756,   757,    -1,
      -1,   760,   761,   762,   763,   764,   765,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,   634,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,   751,   752,    -1,   754,   755,   756,   757,
      -1,    -1,   760,   761,   762,   763,   764,   765,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,    -1,   760,   761,   762,   763,   764,   765,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,   751,   752,    -1,   754,   755,
     756,   757,    -1,    -1,   760,   761,   762,   763,   764,   765,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,    -1,   760,   761,   762,   763,   764,
     765,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,   751,   752,    -1,
     754,   755,   756,   757,    -1,    -1,   760,   761,   762,   763,
     764,   765,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,   751,   752,
      -1,   754,   755,   756,   757,    -1,    -1,   760,   761,   762,
     763,   764,   765,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,   751,
     752,    -1,   754,   755,   756,   757,    -1,    -1,   760,   761,
     762,   763,   764,   765,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,    -1,   760,
     761,   762,   763,   764,   765,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,   751,   752,    -1,   754,   755,   756,   757,    -1,    -1,
     760,   761,   762,   763,   764,   765,    34,    35,    -1,    -1,
      -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,   289,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   347,
     348,   349,    -1,    -1,    -1,    -1,   354,    -1,    -1,   357,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,
      -1,   579,   580,   581,   582,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   650
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   753,   780,   792,   793,   796,   797,   798,
     799,   800,   802,   807,   809,   834,   835,   836,   837,   839,
     842,   865,   887,   894,   895,  1133,  1134,  1136,  1138,  1140,
    1143,  1145,  1146,  1147,  1148,  1149,  1151,  1152,  1187,  1188,
    1196,  1197,  1200,  1213,  1215,  1219,  1222,  1223,  1227,  1229,
    1234,  1238,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1255,
    1256,  1382,  1415,  1416,  1417,  1418,  1419,  1420,  1421,  1422,
    1423,  1424,  1425,  1426,  1427,  1428,  1429,  1430,  1431,  1439,
    1440,  1461,  1462,  1466,  1470,  1476,  1490,  1491,  1493,  1497,
    1506,  1516,  1520,  1522,  1523,  1593,  1595,  1597,  1619,  1626,
    1628,  1629,  1630,  1632,  1636,  1638,  1664,  1670,  1671,  1672,
    1673,  1709,  1716,  1717,  1719,  1720,    12,   108,   127,   200,
     243,   286,   420,   499,   564,   566,   600,   612,   708,  1683,
    1684,  1685,  1688,   282,   371,  1228,  1665,   572,  1568,   235,
       5,     6,     8,     9,    10,    11,    12,    15,    20,    23,
      25,    26,    27,    28,    29,    30,    32,    36,    40,    43,
      44,    45,    47,    49,    50,    53,    56,    57,    59,    60,
      61,    63,    65,    66,    67,    68,    69,    70,    72,    73,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    87,    88,    90,    91,    92,    93,    94,    98,   103,
     106,   110,   111,   112,   115,   120,   121,   126,   127,   129,
     135,   136,   137,   138,   139,   143,   146,   147,   148,   152,
     154,   155,   157,   158,   159,   162,   163,   165,   166,   167,
     168,   169,   170,   173,   174,   175,   176,   177,   180,   181,
     183,   184,   185,   186,   187,   190,   191,   195,   196,   198,
     202,   204,   205,   206,   207,   209,   211,   215,   216,   218,
     221,   222,   226,   227,   228,   229,   232,   233,   234,   237,
     242,   243,   244,   248,   252,   253,   255,   256,   260,   262,
     265,   266,   269,   272,   273,   279,   280,   282,   284,   286,
     287,   295,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     316,   317,   318,   320,   321,   322,   323,   325,   326,   331,
     332,   333,   334,   335,   336,   339,   340,   342,   344,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   357,   358,
     361,   362,   363,   364,   365,   369,   370,   374,   376,   377,
     379,   380,   381,   384,   394,   395,   396,   398,   400,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   413,
     415,   416,   417,   419,   421,   422,   423,   424,   425,   427,
     428,   429,   432,   436,   437,   439,   440,   443,   444,   445,
     446,   447,   449,   450,   452,   453,   454,   457,   458,   459,
     460,   461,   462,   463,   464,   466,   468,   469,   471,   472,
     473,   475,   478,   479,   480,   481,   483,   485,   486,   487,
     488,   489,   491,   492,   496,   497,   498,   499,   503,   507,
     509,   510,   511,   512,   514,   515,   516,   517,   518,   524,
     525,   526,   528,   531,   534,   536,   538,   539,   540,   541,
     542,   543,   546,   547,   550,   551,   552,   553,   554,   555,
     558,   559,   560,   561,   563,   564,   567,   568,   569,   570,
     573,   574,   576,   577,   578,   579,   585,   586,   590,   591,
     592,   595,   596,   598,   599,   601,   602,   605,   608,   610,
     612,   613,   619,   621,   624,   628,   630,   631,   632,   633,
     640,   641,   642,   644,   645,   646,   647,   650,   653,   654,
     655,   656,   657,   659,   668,   669,   670,   672,   673,   674,
     676,   679,   681,   688,   689,   692,   694,   696,   697,   701,
     702,   703,   704,   705,   706,   707,   708,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   746,   747,   748,   749,   750,   751,   752,   754,   755,
     756,   757,   759,   760,   761,   762,   763,   764,   765,   859,
    1565,  1574,  1584,  1585,  1586,  1588,  1589,  1592,   316,   457,
     563,   566,  1622,  1622,   641,  1666,   108,   199,   286,   390,
     499,   519,   564,   569,   600,   604,   612,   654,   708,   758,
     759,  1109,  1110,  1435,  1680,  1684,  1685,  1686,  1687,  1688,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    96,    97,   102,   104,   107,   108,
     113,   114,   115,   120,   122,   125,   171,   178,   179,   188,
     195,   205,   207,   213,   219,   226,   230,   241,   245,   271,
     279,   290,   319,   324,   335,   339,   341,   345,   346,   347,
     348,   349,   356,   366,   367,   368,   372,   373,   397,   409,
     410,   412,   427,   455,   456,   475,   477,   484,   485,   491,
     544,   545,   552,   556,   557,   562,   572,   576,   577,   578,
     579,   588,   589,   590,   594,   597,   612,   616,   617,   618,
     620,   625,   627,   632,   633,   650,   665,   666,   671,   677,
     678,   680,   683,   684,   685,   686,   687,   691,   693,   695,
     746,   772,   773,   774,   778,   780,   784,   788,   789,  1082,
    1248,  1266,  1267,  1270,  1271,  1272,  1274,  1278,  1281,  1283,
    1284,  1286,  1287,  1288,  1295,  1296,  1297,  1320,  1321,  1544,
    1546,  1549,  1550,  1551,  1552,  1553,  1554,  1557,  1560,  1562,
    1565,  1574,  1675,  1677,   108,   167,   200,   235,   286,   420,
     499,   519,   564,   587,   600,   612,   628,   654,   708,   759,
    1435,  1574,  1228,   103,   536,   896,    13,    14,    99,   130,
     144,   167,   170,   183,   210,   235,   241,   274,   285,   421,
     425,   441,   449,   457,   493,   506,   507,   558,   587,   609,
     611,  1565,  1568,  1575,  1579,  1586,  1589,  1590,  1592,  1642,
    1643,  1563,  1574,   808,   566,   128,   220,   293,  1441,   407,
     659,    87,   428,  1521,   111,   235,   647,  1524,   243,   563,
    1620,  1622,  1228,  1574,  1517,   487,   612,  1622,  1228,   128,
     293,  1442,  1465,   653,  1507,   522,   884,   888,   889,  1574,
      13,   425,  1642,  1666,  1574,    13,   140,   220,   527,   528,
     530,   531,   532,   549,  1257,  1258,  1259,  1678,    61,    62,
     125,   209,   282,   352,   404,   498,   585,   653,   654,   672,
     708,   784,  1084,  1565,  1577,  1585,  1586,  1588,  1589,  1591,
    1594,  1604,  1609,  1610,  1477,   888,   204,   511,   585,   754,
    1195,   204,  1195,  1563,  1574,   566,  1471,   407,   659,   243,
    1622,  1627,  1574,   484,  1451,  1455,   660,  1383,  1384,  1574,
      32,    79,   154,   415,   437,   478,   539,  1712,  1274,  1574,
    1565,   401,  1000,   780,  1676,  1677,   243,   282,  1270,  1245,
    1246,  1248,  1382,     0,   156,   794,   415,   104,   274,   612,
    1160,  1568,  1574,  1578,  1580,  1581,  1654,  1656,   126,   404,
     612,  1189,  1190,  1191,  1192,  1193,  1194,   194,   246,   285,
    1260,  1261,  1413,   388,   603,  1395,  1396,   276,   603,  1396,
    1401,  1413,  1247,  1248,   130,   609,    17,   195,  1494,  1495,
    1563,   160,  1164,  1574,   160,   859,   137,   152,   449,   480,
    1631,   212,   859,  1578,  1574,  1563,   564,   230,  1434,   212,
     167,  1142,  1683,  1622,  1666,  1235,  1236,  1563,   780,   866,
     786,   583,   185,  1432,  1563,  1432,    19,  1667,   230,  1031,
     235,   212,   456,  1578,   235,   717,  1574,   564,   263,   758,
    1031,  1031,   212,   263,   604,  1031,   235,   566,  1679,  1679,
    1683,  1688,   780,   780,   780,  1281,   780,   780,   780,  1270,
    1333,   780,   780,   780,   780,   780,   780,   780,   780,  1269,
    1269,   780,  1069,   780,   780,   780,   572,   780,   780,   780,
    1676,   780,   780,   780,   780,   780,   780,   780,   780,   780,
    1270,   780,   780,   780,  1331,  1332,  1560,  1574,   780,   780,
     780,   780,   780,   780,   780,   780,   780,  1270,  1069,   780,
     780,   780,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   780,   780,   780,   780,  1069,   572,   780,   780,   780,
     572,   780,   780,   780,    37,   219,   572,   780,  1269,  1069,
    1069,   780,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   780,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   780,  1281,  1281,  1281,   620,  1246,  1248,  1270,   784,
    1322,  1578,  1574,   785,    18,    19,    21,   387,   390,   572,
     648,  1268,  1275,  1276,  1573,  1574,   160,   161,   201,   214,
     254,   267,   294,   359,  1279,    33,   141,   249,   275,   345,
     366,   367,   442,   504,   505,   517,   722,   770,   771,   772,
     773,   774,   775,   776,   777,  1277,  1281,    71,   389,   572,
    1569,   259,   652,   780,   786,  1434,  1434,  1434,  1574,   212,
    1434,  1434,   717,  1574,  1434,   564,  1434,  1434,  1434,   212,
    1434,  1622,   803,  1498,   135,   419,  1641,   481,   481,   564,
     569,   612,   628,   654,   654,   385,   780,  1657,   563,   378,
    1657,    67,   511,  1657,   109,   628,  1657,   784,  1657,   378,
     583,   785,   381,    68,   433,   786,  1578,   197,   231,  1183,
    1574,  1568,  1718,  1270,   246,    85,   293,  1526,   194,   194,
    1621,  1622,   197,    35,   316,   756,  1480,  1518,  1574,  1231,
    1581,  1230,  1622,   246,  1443,  1434,  1509,   316,   511,   754,
     756,  1508,  1510,   621,   885,   501,   890,  1641,   378,   197,
     378,   583,  1667,  1266,  1259,   501,   654,   786,    35,   125,
     160,   502,  1085,  1452,  1578,   194,   583,  1452,   255,   433,
    1611,  1612,  1614,  1616,    13,   125,   365,  1579,  1582,  1650,
     212,   784,  1578,    35,   125,  1087,  1088,  1578,   786,   125,
     585,  1600,  1608,  1610,   785,  1601,  1452,    36,    61,    72,
      97,    99,   109,   158,   163,   166,   176,   198,   200,   209,
     211,   282,   316,   381,   408,   419,   420,   423,   424,   444,
     498,   511,   547,   566,   631,   755,   757,   760,   761,   762,
     763,   765,  1084,  1195,  1478,  1480,  1481,  1483,  1484,  1485,
    1605,   890,   433,   637,  1201,  1202,  1203,   447,   534,  1208,
    1209,  1210,  1208,  1563,  1574,  1718,   780,   785,  1383,   785,
     780,  1385,    37,   219,  1545,  1569,  1711,  1711,  1711,    96,
    1710,  1711,  1711,   156,   786,   780,    48,   156,  1248,   156,
     197,   111,   156,   781,   781,  1260,   781,   783,  1574,  1269,
     780,   138,   228,   784,   125,   138,   228,  1652,   465,   785,
    1659,   160,   160,   160,   785,   503,   609,  1262,   146,   392,
     784,  1411,  1412,  1414,  1578,   249,  1261,  1413,  1260,    48,
      13,   140,  1674,  1400,  1401,   290,   373,   594,  1402,  1403,
    1546,  1574,  1674,  1400,  1395,  1396,  1401,   231,   293,   429,
    1468,  1469,  1465,   195,  1494,   160,   194,  1244,  1439,  1440,
    1461,  1466,  1492,  1496,  1545,  1574,   333,   570,   596,  1135,
    1581,  1139,  1574,  1574,   747,  1578,  1574,  1137,   384,     7,
      26,    84,   144,   237,   323,   370,   451,   630,   749,   764,
     967,   968,   981,   982,   983,   989,   991,   992,   993,   994,
    1481,     7,    12,    14,    17,    27,    28,    58,    63,    64,
      69,    77,    83,    84,    87,    96,   111,   125,   129,   137,
     138,   144,   152,   158,   169,   192,   233,   235,   242,   262,
     285,   322,   340,   344,   382,   388,   395,   404,   436,   451,
     452,   453,   483,   539,   540,   541,   542,   547,   564,   567,
     590,   603,   637,   640,   725,   726,   727,   749,   750,   764,
    1032,  1035,  1037,  1038,  1091,  1165,  1166,  1168,  1169,  1171,
    1173,  1174,  1175,  1176,  1178,  1180,  1574,   171,  1574,   859,
     533,  1689,  1690,  1141,  1432,   249,   785,   235,   263,   401,
    1106,  1241,  1242,  1270,  1329,  1330,  1574,   810,   811,   176,
     429,   785,  1214,    59,   176,   180,   194,   331,   429,  1224,
    1225,  1226,    57,   369,   369,   448,  1668,  1277,  1574,  1574,
    1574,   519,   193,  1574,   709,     7,   961,  1574,   263,  1581,
    1653,  1655,  1650,  1574,   263,  1574,  1574,  1031,    11,   167,
     200,   420,   587,   846,  1682,  1690,  1696,  1698,  1699,  1704,
     200,   846,  1681,  1690,  1696,  1699,  1704,  1679,  1270,  1270,
      13,   140,  1327,  1378,  1327,  1327,  1327,   634,  1335,  1270,
    1270,  1330,  1330,  1270,  1270,   140,  1327,  1378,   781,   373,
     781,   781,  1270,  1270,  1270,  1270,  1560,   116,   117,   118,
     119,   120,   223,   224,   225,   226,   335,   337,   338,   339,
     346,   427,   490,   491,   632,   649,   650,  1373,  1374,  1270,
    1329,   112,   115,   576,   579,  1375,   140,  1323,  1270,  1270,
    1270,  1270,  1373,  1270,  1330,  1332,    10,   785,   786,   140,
    1327,  1270,  1270,   140,  1327,  1270,  1270,  1330,  1330,  1330,
    1270,  1330,  1274,  1270,  1270,  1270,  1270,  1270,  1270,   781,
    1270,  1327,  1327,  1270,  1270,   140,  1327,  1270,  1374,  1374,
    1270,    46,   268,   584,  1270,  1270,   781,  1561,  1562,  1574,
    1327,  1327,  1270,  1270,  1270,  1327,  1327,  1330,   781,   781,
    1270,  1270,  1270,  1270,  1270,   784,  1299,  1300,  1546,  1553,
    1574,   781,   781,   781,  1281,  1260,   781,   785,   209,   282,
     498,  1606,   502,  1270,  1267,  1573,  1574,  1270,  1270,  1270,
     179,   372,   589,   605,  1277,    13,    20,  1272,  1280,  1274,
    1274,   780,  1676,  1281,  1274,  1274,  1274,  1274,   275,   667,
    1273,  1274,  1274,   245,  1274,   245,  1274,  1274,  1274,  1274,
    1274,    33,   249,   275,   442,  1578,  1281,  1569,  1569,  1270,
    1292,  1293,  1294,   774,  1574,  1574,   859,  1574,   378,  1574,
     859,  1578,   709,   989,   991,  1436,  1437,  1438,   859,  1574,
    1581,  1649,  1432,  1650,  1574,  1574,  1434,   615,   804,    35,
     158,   162,   202,   222,   287,   383,   419,   443,   468,   512,
     543,   756,   757,   760,   761,   762,   763,  1499,  1503,  1504,
    1622,    86,   784,   897,   898,   899,   900,  1574,  1639,   563,
    1574,  1658,  1581,  1578,   200,   420,   566,  1640,  1649,  1643,
      21,  1376,  1377,   186,   363,  1574,  1633,  1574,  1718,  1443,
     516,   785,    50,   282,  1525,    30,    30,  1563,  1623,  1624,
    1432,   784,   801,  1568,    31,   287,   785,   583,  1232,  1233,
    1563,  1432,  1563,  1574,  1513,  1511,  1512,   785,  1569,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   489,   551,
     568,   891,   893,   785,  1637,  1581,  1649,  1640,   487,  1669,
    1668,   197,  1251,  1252,  1413,    13,   365,  1650,  1574,    71,
    1090,  1270,  1581,   733,   572,  1571,   273,   380,   643,   785,
    1615,   785,  1613,   658,  1596,   784,   785,  1574,   209,   282,
     498,   653,   672,  1607,  1452,  1574,  1611,  1601,  1452,  1602,
    1603,  1604,  1609,    13,    35,   125,   192,   378,   484,   709,
    1270,  1618,   166,   275,   635,  1380,  1489,   780,   108,   167,
     200,   420,   566,   587,   612,   628,  1489,    13,  1479,  1578,
    1400,   197,   249,  1482,  1486,   198,    70,   543,   194,   543,
     563,    70,   543,    13,    43,    94,    98,   253,   332,   396,
     518,   560,  1472,  1473,  1474,   166,   222,   543,  1400,  1489,
    1489,  1489,  1489,  1489,   211,  1489,   543,   287,   157,   422,
     586,   234,   235,   261,  1108,    73,   563,   543,   624,   380,
     643,    88,   785,  1198,   785,   194,   833,   125,  1270,  1456,
    1457,  1458,  1455,  1384,  1386,  1574,    21,   785,   379,  1714,
     559,  1715,   646,   258,   471,  1713,  1574,  1270,   277,   280,
     430,  1001,  1002,  1581,   136,   781,   156,   795,   781,   729,
      48,  1578,   654,   729,    48,   637,    65,   256,   365,   535,
     553,   644,  1646,  1647,  1581,  1654,   637,  1157,  1566,  1568,
    1566,  1566,  1191,   667,   668,   670,  1263,  1264,  1265,   572,
    1570,  1570,  1578,   785,   503,  1270,  1397,  1558,  1248,  1249,
     377,   785,  1248,  1249,  1400,  1400,   197,  1433,  1564,  1574,
    1468,  1183,  1578,    87,   433,  1026,  1027,  1030,  1037,  1038,
    1039,  1091,   860,  1574,  1574,   194,   369,   316,   709,     7,
     860,   780,   110,   978,  1452,  1453,  1453,   978,  1453,  1453,
     583,  1453,  1453,   785,  1034,   158,    74,    89,   199,   401,
     519,  1047,  1049,  1106,  1182,  1453,    64,    89,   235,  1182,
     401,  1453,  1453,  1182,  1453,   401,   401,  1453,  1453,  1453,
    1453,   583,   136,  1453,   261,   401,   564,    64,    89,   193,
     401,   418,  1106,  1182,   261,  1453,   401,   401,   564,   136,
    1453,  1453,  1453,  1453,  1453,  1182,   401,    48,  1453,  1453,
     401,    21,    74,   160,   583,  1106,  1186,   401,   401,  1453,
     585,  1453,  1453,  1453,   139,   332,  1453,  1453,   401,  1453,
     619,   619,  1453,  1453,  1453,  1453,  1035,    71,  1084,   450,
    1000,  1167,   785,   785,   501,   710,  1724,  1144,   492,   628,
    1690,   144,   609,  1221,   125,  1237,  1574,  1236,  1563,   780,
     780,  1242,   781,   785,   232,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   317,   318,   445,   446,   711,
     712,   732,   734,   735,   736,   737,   738,   741,   751,   825,
     826,   832,   458,   459,   460,   461,   462,   463,   464,   812,
     813,  1563,   610,  1225,    57,   448,   171,   838,   378,     7,
     717,   111,   378,  1031,   978,   614,   962,     7,   228,   125,
     785,   841,   592,   780,   592,   615,  1122,  1123,  1563,   200,
    1031,   859,  1574,   859,   859,  1690,   785,   781,  1327,   781,
    1270,   781,   781,   781,  1270,   150,   634,  1334,    21,    25,
     781,   615,   781,   781,   781,   615,   785,  1330,   781,   774,
     781,   785,   785,   781,   781,   781,   197,   785,   781,   785,
    1330,   781,   785,   785,   785,   773,   785,   781,   781,   780,
    1560,  1574,  1327,   781,   781,   781,  1327,   781,   785,   781,
     781,   781,   781,   785,   781,   249,   781,   785,   785,   781,
     785,   785,   781,   781,   781,   785,   197,   785,  1327,   781,
     781,   785,   785,   785,   781,   197,  1270,   197,  1270,   197,
    1270,   197,   781,   785,   781,   781,   781,   781,   785,    21,
     781,   785,   781,   785,   781,   781,   690,  1305,  1305,   781,
     785,  1298,   781,  1298,   785,  1578,   781,  1305,  1305,  1305,
     785,  1330,   786,   786,   786,  1578,  1270,   790,   179,   372,
     589,   605,  1676,    19,  1270,   165,  1274,   780,  1270,  1270,
    1274,   780,  1676,  1281,  1274,  1268,   781,   785,   780,   786,
     786,  1563,  1436,  1434,  1034,   969,   970,   971,   989,   785,
      52,   470,  1184,   192,  1730,  1432,   784,   805,   806,   287,
     287,   287,   287,   287,   287,   785,  1432,  1505,   115,   576,
     579,   892,   902,  1321,  1551,  1560,  1578,   785,   160,   378,
     781,   785,   583,   774,  1574,  1583,  1648,   637,  1644,  1574,
     160,   186,   201,   214,   266,   267,   294,   363,   417,  1634,
    1635,  1379,  1380,  1563,  1568,  1568,  1239,  1240,  1563,   236,
    1377,   785,  1578,   122,   188,   219,   290,   373,   594,  1408,
    1409,  1410,    31,   583,  1519,  1581,  1581,   785,   583,   176,
     429,   613,  1216,  1217,  1218,   401,  1344,  1345,   583,  1515,
      13,  1514,  1514,  1510,   785,   160,   210,   378,   197,  1648,
    1574,   145,   700,   720,   766,   780,   789,  1253,  1254,  1336,
    1338,  1346,  1347,  1348,  1349,  1350,  1351,  1352,  1563,  1676,
    1379,  1251,   583,   583,   583,    35,  1089,  1578,   583,  1452,
     456,  1150,  1150,   433,   454,   496,  1617,  1614,  1612,  1650,
    1578,  1582,   194,   786,   786,   786,   786,   786,  1610,  1270,
    1618,   785,  1608,   249,  1487,  1569,  1270,   774,  1031,   859,
     859,   859,  1563,   859,  1581,  1563,   287,   350,   543,  1489,
    1574,   859,  1489,  1581,  1482,   859,  1489,   252,   561,   181,
     194,  1475,   785,  1487,  1482,   194,   833,  1482,  1486,  1486,
    1482,  1489,  1489,   514,  1203,   608,  1211,  1210,    60,   781,
     785,   781,   785,  1676,  1545,   405,   194,   786,   781,    73,
     780,    73,   780,   402,  1004,   216,   263,   787,  1453,   404,
     572,   733,    13,   365,  1650,   404,   572,   733,  1571,  1578,
     572,   572,   572,    19,  1645,   320,   321,   325,   326,  1158,
    1159,     5,   404,   739,   740,  1154,  1155,  1156,  1433,   669,
    1264,  1084,  1086,  1412,   342,    22,   131,  1398,  1399,   785,
    1403,  1403,  1433,  1563,  1574,   197,   785,   786,  1467,  1254,
     219,   290,   373,   594,  1406,  1409,   380,  1027,    84,    77,
      93,   265,   343,   369,   431,   533,   862,   864,    60,   478,
     263,   263,   598,   980,   108,   221,   394,   404,   411,   515,
     612,   844,   845,  1568,   966,   967,   995,  1408,  1565,  1568,
     966,   995,   995,  1574,  1568,  1731,  1406,   968,  1453,  1130,
    1574,  1106,  1107,  1228,  1107,    64,   193,   418,  1048,  1105,
    1110,  1121,  1130,  1574,   780,  1574,   125,  1179,  1574,  1574,
    1574,  1574,  1574,  1228,   122,   188,   290,   373,   594,  1407,
     122,   188,   219,   290,   373,   594,  1405,  1574,  1405,    13,
    1172,  1372,  1574,  1228,  1568,  1568,  1568,  1568,  1084,  1453,
    1405,  1172,  1574,  1574,   263,  1372,   263,  1574,  1574,  1578,
    1574,  1172,  1453,   186,   266,   369,  1041,  1405,   125,  1181,
    1574,  1407,  1407,  1574,  1228,  1393,  1394,  1561,   125,  1036,
    1405,  1568,  1228,  1574,  1574,  1563,  1228,  1228,    80,    82,
     125,   148,   187,   440,  1040,  1036,  1036,   125,  1405,  1574,
    1405,  1172,   780,   372,  1578,  1731,  1731,  1406,  1453,  1453,
     403,     7,   144,  1032,  1175,  1176,  1169,  1173,  1176,   718,
     719,   979,  1453,   707,  1728,   378,   854,  1161,   127,   248,
    1563,   673,   673,  1172,   418,  1368,  1369,  1370,  1574,   249,
    1270,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   785,   833,   160,   160,
     160,   160,   160,   160,   160,   785,   833,  1028,  1029,  1030,
    1563,   980,   709,   642,  1563,  1408,   286,    77,   177,   184,
     364,   963,   964,   965,   981,   982,   983,   984,   987,   988,
     989,   990,   991,   992,   993,   994,   978,    48,   637,   654,
    1653,  1659,  1453,   597,   843,  1321,  1544,    47,   216,   486,
    1125,  1125,   378,    21,   231,   275,   456,   780,   996,   997,
     998,   999,  1000,  1033,  1035,  1246,  1248,  1448,  1528,  1574,
     859,   780,   473,  1705,     9,    31,   959,   245,  1270,   781,
    1304,  1305,  1304,  1304,  1304,   575,  1270,  1270,   154,    35,
      62,   112,   115,   123,   142,   189,   260,   354,   357,   435,
     509,   579,   607,   650,  1058,  1062,  1328,   282,   579,  1085,
    1085,  1328,   781,  1304,   781,   245,   245,  1270,  1270,  1270,
     388,  1325,  1270,  1270,  1270,  1270,  1270,  1274,   781,  1304,
     781,  1304,  1270,  1270,  1270,  1270,  1270,  1270,  1330,  1304,
    1304,   245,  1270,  1270,  1270,   781,  1304,  1270,  1270,  1270,
    1270,   197,  1270,   197,  1270,   197,  1270,  1270,  1304,  1304,
    1270,    35,    62,  1405,  1327,  1304,   780,  1306,  1307,  1308,
    1574,   231,   694,  1302,  1299,   781,  1302,   781,  1281,  1305,
    1544,   781,   786,  1131,  1272,   781,   785,  1281,  1281,  1373,
    1373,    19,  1270,   165,  1294,  1329,   774,  1574,  1574,  1177,
    1178,  1180,  1408,  1438,  1034,  1581,  1184,  1578,   785,   833,
    1504,  1500,   900,   903,   904,   899,   374,   485,   901,  1640,
    1574,  1649,   786,   786,   583,   655,  1379,   780,  1400,  1344,
     785,  1241,  1242,  1570,   293,   433,   643,  1625,  1624,  1270,
    1568,   583,  1233,  1563,  1218,   780,   501,   620,   621,   780,
    1444,  1445,  1447,  1448,  1449,  1408,   833,   833,   893,   892,
     385,  1640,  1649,   197,   780,  1676,   780,  1254,  1338,  1347,
    1348,  1349,  1350,   731,   785,   100,   238,   258,   271,   355,
     477,   549,  1339,  1340,  1341,  1344,  1377,   212,  1390,  1379,
    1650,  1650,  1650,   733,  1571,  1571,   728,  1651,  1651,    78,
     595,   433,  1406,  1598,  1599,  1452,  1603,  1568,   197,  1488,
     781,  1574,   615,  1489,   428,  1400,  1474,  1488,  1489,  1581,
    1489,  1563,  1563,  1489,   197,   524,   525,   526,   832,  1212,
     612,  1204,  1566,  1458,  1574,   785,   336,   156,   780,  1274,
     780,  1274,  1406,   555,  1005,   780,    12,  1003,  1405,  1570,
    1150,   404,   456,   404,  1651,    21,    48,  1646,  1405,  1405,
    1405,  1405,  1159,   285,   606,   174,   465,   704,   705,   697,
    1406,  1406,    77,   748,  1153,  1156,  1085,    73,  1529,  1558,
     615,  1377,   786,  1254,  1564,   774,  1574,   501,  1453,  1453,
    1568,   533,   533,   533,   533,   533,   492,  1574,   378,  1405,
    1568,   975,   976,   977,   981,   989,   991,  1568,  1568,  1568,
    1568,  1405,  1568,  1568,   781,   785,  1578,  1130,   402,   780,
    1130,   780,   263,   263,   367,  1050,  1051,  1052,  1121,  1107,
     780,   615,   592,  1043,  1044,  1045,  1047,  1574,    34,    35,
      40,    42,    44,    45,    62,   112,   115,   123,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   328,
     329,   330,   347,   348,   349,   354,   357,   375,   376,   409,
     410,   497,   501,   513,   573,   576,   579,   580,   581,   582,
     622,   623,   650,  1053,  1056,  1057,  1058,  1059,  1060,  1061,
    1062,  1064,  1052,  1052,   656,   657,  1124,   144,   501,  1172,
    1574,  1224,   785,  1406,   125,  1085,  1568,   564,  1574,  1184,
     637,   564,  1568,  1053,  1172,   785,  1398,  1172,   583,   583,
    1372,  1172,  1505,  1089,  1085,   969,   373,  1725,  1726,  1453,
     137,   152,  1729,    81,   488,   451,  1162,  1385,   378,   378,
     781,   781,   785,  1237,   780,  1405,  1566,  1405,  1405,  1566,
    1566,  1407,  1566,  1405,  1405,  1566,  1566,  1566,  1566,  1566,
    1566,  1566,  1566,  1405,  1405,  1566,  1552,  1566,  1405,  1566,
    1405,  1566,  1568,  1405,   372,   829,  1580,   372,   831,  1566,
    1405,   378,   742,   743,   830,  1406,   826,   780,   814,   814,
     780,   819,   819,   780,   822,   822,   780,   817,   813,  1030,
     780,   439,   599,   972,   973,   974,   981,   985,   986,   987,
     988,   989,   991,  1408,  1578,   780,   840,   212,  1453,  1453,
    1453,  1453,  1034,   969,   733,  1571,  1578,  1650,  1157,   612,
     709,  1723,   781,  1563,  1448,  1563,   275,  1043,   998,   997,
    1034,  1260,   999,   473,   847,  1700,   123,   247,   435,   550,
    1042,   780,   130,   241,   609,   960,  1270,   781,  1304,  1270,
     575,   780,  1073,  1074,  1074,   780,  1068,   780,  1066,  1067,
    1073,   414,  1063,  1065,  1073,    62,   247,  1068,   247,  1074,
     721,  1282,    21,   752,   781,   781,   781,  1304,  1304,  1270,
    1270,   781,   781,   785,   781,    48,   495,  1324,   785,   785,
     781,   785,   781,   249,  1289,  1290,  1304,  1304,   781,   781,
     781,   781,   785,   781,   781,  1270,   781,   194,   781,   781,
     785,  1304,   781,   785,   785,   781,  1270,   781,  1270,   781,
    1270,   781,   781,   781,   780,  1096,  1096,   785,   781,  1307,
    1309,  1310,   688,   688,  1305,   785,  1301,  1302,  1305,  1302,
     781,   744,  1285,  1574,  1330,   781,  1272,   781,   785,  1281,
     781,  1180,  1178,   971,   806,   194,   637,  1501,   160,   785,
    1648,   637,  1661,   774,   774,  1574,  1649,   385,  1400,  1457,
     501,  1444,  1445,  1240,  1563,  1242,   231,  1243,  1527,  1528,
     643,   282,  1581,  1371,  1372,  1463,  1464,  1561,   781,  1446,
    1556,  1557,  1561,  1574,   780,  1450,  1454,   160,   197,  1648,
    1649,  1270,  1377,  1270,   785,   781,   781,   781,   781,   781,
    1336,  1337,  1338,  1346,  1336,   258,   258,   391,  1343,   238,
     271,   477,  1342,  1343,  1346,  1336,  1336,  1377,  1385,    48,
     217,  1381,  1390,  1150,  1150,   103,  1034,  1618,  1407,  1400,
     163,   631,  1649,   373,  1400,   615,  1482,  1482,   498,   160,
     160,   785,   160,   404,  1205,  1405,  1007,  1574,   781,  1007,
     781,    48,   780,  1009,  1274,   160,   780,   228,  1651,  1150,
    1571,   456,  1651,   219,  1568,  1572,   733,  1571,   125,   245,
     361,   103,   125,  1406,   245,  1569,  1569,   153,   164,   386,
     571,  1530,  1531,   278,  1532,  1254,  1344,  1574,  1379,   786,
    1467,  1463,  1036,  1568,   111,   111,   127,   248,   369,   162,
    1034,   845,   780,  1406,   401,  1010,  1011,   780,  1270,  1130,
     730,   780,   780,  1127,  1128,  1129,  1574,  1125,  1125,   781,
     785,  1053,  1073,  1073,  1074,    23,    35,    49,   601,   626,
    1073,  1084,  1092,  1093,  1094,  1068,   780,  1094,    62,   622,
    1059,  1094,  1094,    62,   623,   623,   626,   780,  1074,  1068,
    1068,  1094,  1073,  1074,   441,  1046,  1099,    27,    71,    75,
      77,   125,   367,   372,   378,   418,   497,   547,   604,   706,
     749,   750,   758,  1049,  1052,  1076,  1077,  1078,  1090,  1098,
    1277,    35,  1073,  1095,  1073,  1073,  1074,   780,  1067,  1075,
    1066,   125,   125,  1053,  1574,  1090,  1090,   566,     9,   186,
    1185,  1394,  1574,  1574,   246,  1216,   781,   772,  1034,   373,
     772,  1727,  1730,   367,   416,    25,   168,   848,   583,   137,
     152,   850,  1691,  1372,  1372,  1369,   827,   828,  1405,   781,
     815,   816,  1574,   781,   820,   821,  1574,  1583,   781,   823,
     824,  1566,  1567,   780,   781,   818,  1128,  1453,  1453,  1034,
     840,   384,  1128,   353,   714,   715,   716,  1574,  1568,   995,
     995,  1406,   965,   404,    21,    48,  1154,  1724,   780,  1563,
     781,  1035,  1042,   378,   867,   868,   869,  1574,   516,  1706,
     378,  1373,  1270,   122,   290,   373,   594,  1094,   373,   373,
     781,  1328,   245,  1555,  1373,  1373,  1270,  1326,  1558,  1545,
     781,  1270,  1270,  1330,    44,   355,   781,   637,  1291,  1270,
    1373,  1270,  1270,  1270,  1270,   781,   781,   781,  1406,   781,
     781,  1405,  1304,   781,   401,  1311,  1270,  1305,  1305,   197,
    1303,  1328,   125,   162,   372,  1357,  1359,  1360,  1361,   781,
    1330,  1502,   433,    56,    66,    76,    90,    91,    92,   106,
     334,   351,   472,   489,   551,   568,   905,   904,   583,   210,
     637,  1660,   781,  1463,    21,  1459,   378,  1460,  1243,   269,
     246,   781,   785,  1452,  1447,  1448,   781,   785,   786,  1456,
     785,   892,  1649,   197,   785,  1385,   781,  1336,   790,   258,
    1343,  1343,   258,   258,   378,   615,   378,   615,   192,   231,
     614,  1363,  1364,  1365,  1366,  1367,  1270,  1391,  1559,  1270,
     698,  1387,  1381,  1651,  1651,   404,  1406,   833,  1649,  1379,
    1489,  1270,  1568,  1568,   832,  1568,   160,   126,  1206,   781,
     785,   781,  1002,  1010,   781,  1406,  1006,  1007,    48,  1651,
    1651,  1571,  1651,   404,   456,  1651,  1406,   125,   723,   125,
    1406,    48,    48,   153,    48,  1531,   537,   571,  1533,  1534,
    1379,  1379,  1379,   478,   977,  1128,  1574,   781,   785,  1128,
     781,   780,  1128,  1270,   781,   785,   780,  1398,  1044,  1046,
      35,    23,   601,  1084,    35,  1094,  1085,  1132,  1545,  1094,
     626,  1132,  1094,   509,   607,   651,  1070,  1071,  1072,  1563,
    1185,  1089,    82,   125,   148,   187,  1080,  1568,   115,   576,
     579,   772,   773,   780,  1082,  1083,  1547,  1548,  1549,  1550,
     609,   125,   125,   139,   332,  1081,   263,  1408,  1453,  1453,
     263,  1048,    71,  1078,   203,  1054,   263,   372,   724,  1095,
    1094,  1095,  1070,   373,  1070,  1070,   780,  1548,  1185,  1563,
    1574,   780,   373,  1726,   373,   416,  1270,  1270,   378,   854,
     859,   378,    77,   855,    21,   637,  1220,   781,   785,   781,
     785,   781,   785,   786,   781,   785,   816,   781,   785,   781,
     995,   995,   974,   780,   781,  1566,  1566,  1566,  1566,  1572,
     733,  1571,  1153,  1728,  1128,   781,   996,   516,   488,   781,
     785,  1056,  1568,   239,   249,   393,   870,   871,   872,   873,
    1563,   781,   781,   781,   781,   781,   781,   785,  1282,  1569,
     781,   781,   781,   785,  1304,   781,   785,   781,   342,   265,
     428,   781,   781,   781,   781,   781,   781,  1097,   785,    48,
     388,  1312,   186,   266,  1302,  1547,   781,  1360,  1361,   378,
     781,   175,   285,  1649,   385,   210,    21,  1663,  1379,  1459,
    1574,  1460,   147,   566,  1464,  1458,  1447,  1448,  1556,  1574,
     781,  1454,  1649,  1544,  1377,   781,   258,   258,  1270,   780,
    1270,   780,  1106,  1106,  1364,   639,   785,  1392,  1307,  1388,
    1389,  1387,  1568,   160,   406,  1207,  1574,   216,   263,   781,
     781,  1568,  1651,  1651,  1571,   120,   120,  1545,  1545,    48,
    1545,    48,    48,  1534,  1395,  1395,   378,   781,   620,  1012,
    1011,   781,  1126,  1127,   781,   781,    77,   262,   749,   750,
    1117,  1118,  1119,  1120,  1123,  1124,  1129,   373,  1085,  1095,
     781,   785,   781,  1072,   780,  1100,   637,  1079,  1552,  1552,
    1270,  1082,   621,  1731,  1731,  1089,    15,    21,  1270,  1170,
    1171,  1010,  1373,   511,  1568,   143,  1163,  1448,  1692,   373,
     828,   816,   821,  1574,   824,   785,   780,   637,  1111,  1112,
    1113,  1120,   844,  1114,  1115,  1116,  1120,   228,   404,  1729,
     781,  1568,   848,  1701,   869,  1090,   781,   785,  1574,   194,
     373,   781,    21,  1558,  1270,   342,   173,   781,  1405,  1391,
      48,   430,   482,   682,  1313,  1319,  1305,   378,   162,   699,
    1660,   385,  1581,  1400,  1460,  1385,   263,  1563,    73,  1353,
    1371,  1371,   194,  1362,  1362,  1559,    21,   785,  1568,   160,
    1199,   780,  1003,   111,   465,  1721,  1722,  1651,  1545,  1545,
    1545,   276,  1404,  1404,   162,  1111,   249,   272,    77,   111,
     235,   322,   340,   364,   564,  1023,  1024,  1025,  1481,  1114,
     781,   785,  1117,  1398,  1568,  1453,  1453,  1453,  1119,   781,
    1094,  1545,  1094,  1101,  1574,   319,  1102,   759,   781,   780,
     781,   781,   849,   856,   857,   637,  1693,   674,   816,   816,
     398,  1177,  1113,   781,  1177,  1116,    48,  1117,   853,   854,
     473,  1707,   872,  1056,   149,   781,   112,   781,   781,  1397,
      33,   103,   245,   697,  1314,  1315,  1316,  1546,  1552,  1663,
     637,  1662,   609,  1344,   780,   781,   781,   781,   212,   258,
     388,   780,   780,  1308,  1389,  1568,   833,  1274,   780,   136,
     369,   535,  1403,   780,  1014,  1016,   574,  1453,   136,   136,
    1453,  1453,  1453,  1453,   780,  1020,  1025,   158,  1099,  1127,
    1405,  1731,  1731,  1398,   781,   785,   198,   400,   510,   378,
    1103,  1574,  1270,   538,   851,    54,    68,   182,   230,   257,
     270,   381,   474,   858,   909,   911,   912,   913,   915,   916,
     917,   918,   919,   920,   922,   930,   931,   934,   945,   948,
     950,   951,  1565,  1576,  1587,  1588,  1589,  1592,    53,    64,
     282,   781,   785,  1565,  1408,  1177,   850,  1056,   861,  1090,
     484,  1068,   245,   697,  1315,  1317,  1546,  1552,   484,  1270,
     692,   679,  1318,   692,   692,   654,  1463,  1086,   701,  1354,
    1355,  1574,  1377,    48,    48,  1368,  1370,   781,  1007,  1453,
     535,   780,  1015,  1016,  1017,   327,  1013,  1016,  1568,  1453,
    1453,  1408,  1408,  1406,  1574,   555,  1021,  1022,  1453,  1574,
     130,   609,   781,  1270,   155,   852,   932,   935,  1574,   197,
     363,   923,   910,  1576,  1576,  1574,   914,   797,   292,   455,
     636,   954,    32,   952,   787,    64,   385,    64,   816,   855,
    1090,   134,   862,   863,  1277,  1708,   191,   413,  1694,  1695,
     781,  1270,   681,    19,   681,   681,  1373,   103,   212,   369,
     696,    13,   125,   365,  1650,   482,  1535,   703,   781,   785,
     194,  1056,   781,   781,   554,  1008,   781,  1570,   781,   785,
     327,  1018,  1019,  1274,  1568,  1568,  1578,   781,   785,  1578,
      52,   369,   470,   501,  1104,  1104,   548,   629,  1055,  1270,
    1270,   634,   937,   941,   197,  1574,   925,   926,  1270,   875,
     908,   909,   911,   913,   915,   917,   918,   919,   920,   922,
     930,   945,   948,   950,   875,   955,   953,   946,   949,   385,
     385,   781,   143,  1702,   134,   908,  1578,  1697,  1373,  1317,
     692,   484,   689,  1596,   228,  1529,  1544,  1355,   702,  1090,
    1406,  1008,  1722,  1016,   781,   785,  1023,  1022,     6,   125,
     372,   378,   378,  1076,   933,   942,   150,   941,   944,   246,
     154,  1270,   154,   908,   783,   608,  1270,   876,   954,   952,
     856,   861,   908,   681,    48,  1532,  1353,   171,  1356,  1019,
     609,   130,   634,   936,   938,  1270,   875,   154,   921,   230,
     927,   292,   783,   957,   956,   124,   874,   877,   947,  1576,
     947,  1703,  1545,   231,  1536,   703,  1104,  1104,   939,   938,
     944,   943,    54,   924,  1574,   575,  1270,   143,    95,   172,
     880,   906,  1574,   154,   908,   783,   908,   373,   780,  1538,
    1544,  1270,   154,   575,   785,   875,   958,   875,   215,   785,
    1056,    86,   105,   783,   278,   482,  1537,   781,   784,  1539,
    1540,  1561,   501,  1541,  1357,  1358,  1360,   940,    54,   875,
    1574,   928,   154,   154,   194,  1574,  1090,   194,   194,  1578,
     781,   785,  1542,  1543,  1561,  1359,  1361,   575,   150,   151,
     929,   455,   636,   878,   125,   907,   883,   884,  1405,   879,
    1540,   785,  1452,   378,   875,   875,   925,   521,   523,   881,
     882,   883,   886,  1277,  1574,  1270,  1244,  1543,  1458,   785,
     908,   196,   882
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   791,   792,   792,   792,   792,   792,   792,   793,   794,
     793,   793,   795,   795,   796,   796,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   798,   799,
     799,   800,   801,   801,   803,   802,   804,   804,   805,   805,
     806,   808,   807,   810,   809,   811,   809,   812,   812,   813,
     813,   813,   813,   813,   813,   813,   814,   814,   815,   815,
     816,   817,   817,   818,   818,   819,   819,   820,   820,   821,
     822,   822,   823,   823,   824,   825,   825,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   827,
     827,   827,   828,   829,   829,   830,   830,   830,   831,   831,
     832,   832,   832,   832,   833,   833,   834,   834,   834,   834,
     835,   836,   838,   837,   837,   837,   837,   837,   837,   837,
     837,   839,   839,   840,   840,   840,   840,   840,   841,   841,
     842,   842,   842,   843,   843,   844,   844,   845,   845,   845,
     845,   845,   845,   845,   847,   846,   849,   848,   848,   850,
     850,   850,   850,   851,   851,   852,   852,   853,   853,   854,
     854,   855,   855,   857,   856,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   859,   859,
     860,   860,   861,   861,   862,   862,   862,   862,   862,   862,
     862,   863,   863,   863,   864,   864,   865,   866,   866,   867,
     867,   868,   868,   869,   870,   870,   871,   871,   872,   873,
     873,   873,   873,   874,   874,   875,   875,   876,   876,   877,
     877,   878,   877,   879,   877,   880,   880,   881,   881,   882,
     883,   883,   884,   885,   885,   886,   886,   886,   886,   886,
     887,   888,   888,   889,   889,   890,   890,   891,   891,   892,
     892,   892,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   894,   895,   896,   896,   896,   897,
     897,   898,   898,   899,   900,   900,   901,   901,   902,   903,
     903,   904,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   906,   906,   907,   907,   908,
     908,   908,   908,   908,   908,   908,   908,   908,   908,   908,
     908,   908,   910,   909,   912,   911,   914,   913,   916,   915,
     917,   918,   919,   921,   920,   922,   923,   923,   923,   924,
     924,   926,   927,   928,   925,   929,   929,   929,   930,   930,
     932,   933,   931,   935,   934,   936,   936,   937,   937,   939,
     940,   938,   942,   943,   941,   944,   944,   946,   945,   947,
     947,   949,   948,   951,   950,   953,   952,   954,   955,   956,
     954,   957,   958,   954,   959,   959,   960,   960,   960,   961,
     961,   962,   962,   963,   963,   964,   964,   965,   965,   965,
     965,   965,   965,   965,   965,   965,   965,   965,   965,   966,
     966,   967,   967,   968,   968,   968,   968,   968,   968,   968,
     968,   969,   969,   970,   970,   971,   972,   972,   973,   973,
     974,   974,   974,   974,   974,   974,   974,   975,   975,   976,
     976,   977,   977,   977,   978,   979,   979,   980,   981,   982,
     983,   984,   985,   986,   987,   988,   989,   990,   991,   991,
     992,   993,   994,   995,   995,   996,   996,   997,   997,   998,
     998,   998,   999,   999,  1000,  1001,  1001,  1001,  1001,  1001,
    1001,  1002,  1002,  1003,  1003,  1004,  1004,  1005,  1005,  1005,
    1006,  1006,  1007,  1007,  1008,  1008,  1009,  1009,  1010,  1010,
    1011,  1012,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1017,  1016,  1018,  1018,  1019,  1019,  1020,  1020,  1021,  1021,
    1022,  1023,  1023,  1024,  1024,  1025,  1025,  1025,  1025,  1025,
    1025,  1025,  1025,  1026,  1026,  1027,  1027,  1028,  1028,  1029,
    1029,  1030,  1030,  1030,  1031,  1031,  1032,  1032,  1033,  1033,
    1034,  1034,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1035,  1036,  1036,  1037,
    1038,  1039,  1040,  1040,  1040,  1040,  1040,  1040,  1041,  1041,
    1041,  1042,  1042,  1042,  1042,  1043,  1043,  1044,  1044,  1045,
    1046,  1046,  1047,  1047,  1047,  1047,  1047,  1047,  1048,  1049,
    1049,  1050,  1050,  1051,  1051,  1052,  1053,  1053,  1054,  1054,
    1055,  1055,  1055,  1056,  1056,  1056,  1056,  1056,  1056,  1056,
    1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,
    1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,
    1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,  1056,
    1057,  1057,  1057,  1057,  1057,  1057,  1057,  1057,  1058,  1058,
    1059,  1059,  1060,  1060,  1060,  1060,  1060,  1061,  1061,  1061,
    1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1064,  1064,
    1065,  1065,  1066,  1066,  1066,  1067,  1068,  1068,  1069,  1069,
    1069,  1070,  1070,  1071,  1071,  1072,  1072,  1072,  1073,  1073,
    1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,  1077,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,
    1078,  1078,  1078,  1079,  1079,  1080,  1080,  1080,  1081,  1081,
    1081,  1082,  1083,  1083,  1084,  1084,  1085,  1085,  1086,  1086,
    1087,  1087,  1088,  1088,  1089,  1089,  1090,  1090,  1091,  1091,
    1092,  1092,  1092,  1093,  1093,  1093,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1095,  1095,  1097,  1096,  1098,  1098,  1099,
    1100,  1100,  1101,  1101,  1102,  1102,  1102,  1102,  1103,  1103,
    1103,  1103,  1103,  1104,  1104,  1104,  1104,  1104,  1105,  1105,
    1106,  1106,  1107,  1107,  1108,  1108,  1108,  1109,  1109,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1111,  1111,  1112,
    1112,  1113,  1113,  1114,  1114,  1115,  1115,  1116,  1117,  1117,
    1118,  1118,  1119,  1119,  1120,  1120,  1120,  1120,  1120,  1121,
    1121,  1121,  1122,  1122,  1123,  1123,  1124,  1124,  1125,  1125,
    1125,  1126,  1126,  1127,  1127,  1128,  1128,  1129,  1129,  1130,
    1130,  1131,  1131,  1132,  1132,  1133,  1133,  1135,  1134,  1137,
    1136,  1139,  1138,  1141,  1140,  1142,  1140,  1144,  1143,  1145,
    1146,  1146,  1146,  1146,  1147,  1148,  1149,  1149,  1149,  1149,
    1149,  1149,  1149,  1150,  1150,  1151,  1152,  1153,  1153,  1153,
    1154,  1154,  1155,  1155,  1156,  1156,  1156,  1156,  1156,  1156,
    1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,  1156,
    1157,  1157,  1158,  1158,  1159,  1159,  1159,  1159,  1160,  1161,
    1161,  1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,
    1165,  1166,  1166,  1167,  1167,  1168,  1168,  1168,  1168,  1169,
    1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1170,
    1170,  1171,  1171,  1172,  1172,  1173,  1173,  1173,  1173,  1173,
    1174,  1174,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,
    1175,  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1176,  1176,
    1176,  1177,  1177,  1177,  1177,  1177,  1178,  1179,  1179,  1180,
    1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1184,  1185,
    1185,  1185,  1186,  1186,  1186,  1186,  1187,  1187,  1188,  1189,
    1189,  1190,  1190,  1191,  1191,  1191,  1192,  1193,  1194,  1195,
    1195,  1196,  1198,  1199,  1197,  1200,  1201,  1201,  1202,  1202,
    1203,  1203,  1203,  1203,  1204,  1204,  1205,  1205,  1206,  1206,
    1207,  1207,  1208,  1208,  1209,  1209,  1210,  1210,  1211,  1211,
    1212,  1212,  1212,  1212,  1212,  1213,  1214,  1214,  1214,  1215,
    1216,  1216,  1217,  1217,  1218,  1218,  1218,  1219,  1220,  1220,
    1221,  1221,  1221,  1222,  1223,  1224,  1224,  1225,  1225,  1226,
    1226,  1226,  1226,  1226,  1226,  1227,  1228,  1228,  1228,  1230,
    1229,  1229,  1231,  1231,  1232,  1232,  1233,  1234,  1234,  1235,
    1235,  1236,  1237,  1237,  1238,  1238,  1239,  1239,  1240,  1241,
    1242,  1242,  1243,  1243,  1244,  1244,  1244,  1244,  1245,  1245,
    1245,  1245,  1245,  1246,  1246,  1246,  1246,  1246,  1246,  1246,
    1247,  1247,  1247,  1247,  1247,  1248,  1248,  1248,  1249,  1249,
    1249,  1250,  1250,  1251,  1251,  1252,  1253,  1253,  1254,  1254,
    1255,  1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,  1260,
    1261,  1261,  1261,  1262,  1262,  1263,  1264,  1264,  1265,  1265,
    1266,  1266,  1266,  1267,  1267,  1268,  1268,  1268,  1268,  1268,
    1269,  1269,  1270,  1270,  1270,  1270,  1270,  1270,  1270,  1270,
    1270,  1270,  1270,  1271,  1271,  1271,  1271,  1271,  1272,  1272,
    1272,  1272,  1272,  1272,  1272,  1272,  1272,  1272,  1272,  1272,
    1272,  1272,  1272,  1272,  1272,  1273,  1273,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1275,  1275,  1276,  1276,  1277,  1277,  1278,  1278,
    1279,  1279,  1279,  1279,  1279,  1279,  1279,  1280,  1280,  1281,
    1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,
    1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,
    1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,  1281,
    1281,  1281,  1281,  1281,  1282,  1282,  1283,  1283,  1283,  1283,
    1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,
    1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,
    1283,  1283,  1283,  1283,  1284,  1284,  1284,  1284,  1284,  1284,
    1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,
    1284,  1284,  1284,  1284,  1284,  1284,  1285,  1285,  1286,  1286,
    1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,
    1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,  1286,
    1286,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1288,  1288,
    1289,  1289,  1290,  1290,  1291,  1291,  1292,  1292,  1293,  1293,
    1294,  1295,  1295,  1296,  1296,  1296,  1296,  1296,  1296,  1296,
    1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,
    1296,  1296,  1296,  1296,  1297,  1297,  1297,  1297,  1297,  1297,
    1297,  1297,  1297,  1297,  1297,  1298,  1298,  1299,  1299,  1300,
    1300,  1300,  1301,  1301,  1302,  1302,  1302,  1303,  1303,  1303,
    1304,  1304,  1305,  1306,  1306,  1307,  1308,  1309,  1310,  1310,
    1311,  1311,  1312,  1312,  1313,  1313,  1314,  1314,  1315,  1315,
    1315,  1315,  1315,  1316,  1317,  1317,  1317,  1317,  1317,  1318,
    1318,  1318,  1318,  1318,  1319,  1319,  1319,  1320,  1321,  1322,
    1322,  1322,  1323,  1323,  1324,  1324,  1325,  1325,  1326,  1326,
    1327,  1328,  1328,  1328,  1328,  1328,  1328,  1328,  1328,  1328,
    1328,  1328,  1328,  1328,  1328,  1328,  1329,  1329,  1330,  1330,
    1331,  1331,  1332,  1332,  1333,  1333,  1334,  1334,  1335,  1335,
    1336,  1336,  1336,  1337,  1337,  1338,  1338,  1338,  1338,  1338,
    1338,  1339,  1339,  1339,  1340,  1340,  1340,  1340,  1341,  1341,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1346,  1346,  1346,
    1346,  1346,  1346,  1347,  1347,  1348,  1348,  1349,  1350,  1350,
    1351,  1351,  1352,  1352,  1353,  1354,  1354,  1355,  1355,  1355,
    1356,  1356,  1357,  1357,  1357,  1357,  1358,  1358,  1359,  1360,
    1361,  1361,  1361,  1362,  1362,  1362,  1362,  1363,  1363,  1364,
    1364,  1365,  1365,  1366,  1366,  1367,  1368,  1368,  1369,  1369,
    1370,  1370,  1371,  1372,  1372,  1373,  1373,  1373,  1373,  1373,
    1373,  1373,  1373,  1373,  1373,  1373,  1373,  1374,  1374,  1374,
    1374,  1374,  1374,  1374,  1374,  1374,  1375,  1375,  1375,  1375,
    1376,  1376,  1377,  1377,  1378,  1378,  1379,  1379,  1380,  1381,
    1381,  1382,  1382,  1383,  1383,  1384,  1385,  1385,  1386,  1386,
    1387,  1387,  1388,  1388,  1389,  1390,  1390,  1391,  1391,  1392,
    1392,  1393,  1393,  1394,  1395,  1395,  1396,  1397,  1397,  1398,
    1398,  1399,  1399,  1400,  1400,  1401,  1402,  1402,  1402,  1403,
    1403,  1403,  1403,  1403,  1404,  1404,  1405,  1405,  1405,  1405,
    1405,  1405,  1406,  1406,  1406,  1406,  1406,  1407,  1407,  1407,
    1407,  1407,  1408,  1408,  1408,  1408,  1408,  1409,  1410,  1410,
    1411,  1411,  1412,  1412,  1413,  1414,  1414,  1414,  1415,  1416,
    1417,  1418,  1419,  1419,  1420,  1421,  1422,  1423,  1424,  1425,
    1426,  1427,  1428,  1429,  1429,  1430,  1431,  1432,  1432,  1433,
    1433,  1434,  1434,  1435,  1435,  1436,  1436,  1437,  1437,  1438,
    1438,  1439,  1439,  1439,  1440,  1440,  1440,  1441,  1441,  1441,
    1441,  1442,  1442,  1443,  1443,  1444,  1444,  1444,  1445,  1445,
    1445,  1446,  1446,  1447,  1448,  1448,  1448,  1449,  1449,  1450,
    1450,  1451,  1451,  1452,  1452,  1453,  1453,  1454,  1455,  1456,
    1456,  1457,  1457,  1458,  1458,  1459,  1459,  1460,  1460,  1461,
    1462,  1462,  1463,  1463,  1464,  1465,  1465,  1466,  1466,  1466,
    1467,  1467,  1468,  1468,  1469,  1469,  1469,  1470,  1471,  1471,
    1472,  1472,  1473,  1473,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1475,  1475,  1477,  1476,  1478,  1478,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1478,
    1478,  1478,  1479,  1479,  1480,  1480,  1481,  1481,  1482,  1482,
    1483,  1483,  1484,  1484,  1485,  1485,  1485,  1485,  1486,  1486,
    1487,  1487,  1488,  1488,  1489,  1489,  1489,  1490,  1491,  1492,
    1492,  1492,  1492,  1492,  1492,  1493,  1493,  1494,  1494,  1495,
    1495,  1496,  1496,  1496,  1498,  1497,  1500,  1499,  1499,  1501,
    1501,  1502,  1501,  1503,  1503,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1505,  1505,  1507,  1506,  1506,  1508,  1508,
    1509,  1509,  1511,  1510,  1512,  1510,  1513,  1510,  1510,  1514,
    1514,  1515,  1515,  1517,  1516,  1518,  1518,  1519,  1519,  1520,
    1521,  1521,  1521,  1522,  1523,  1524,  1524,  1525,  1525,  1526,
    1526,  1526,  1527,  1527,  1528,  1528,  1529,  1529,  1530,  1530,
    1531,  1531,  1531,  1531,  1532,  1532,  1533,  1533,  1534,  1534,
    1535,  1535,  1536,  1536,  1537,  1537,  1538,  1538,  1538,  1539,
    1539,  1540,  1540,  1541,  1541,  1542,  1542,  1543,  1544,  1544,
    1544,  1544,  1545,  1545,  1545,  1546,  1547,  1547,  1547,  1548,
    1548,  1549,  1550,  1550,  1550,  1550,  1550,  1550,  1550,  1550,
    1550,  1551,  1551,  1552,  1552,  1552,  1553,  1553,  1553,  1554,
    1554,  1554,  1555,  1555,  1556,  1556,  1557,  1557,  1558,  1559,
    1560,  1560,  1561,  1561,  1562,  1562,  1563,  1563,  1564,  1564,
    1565,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1572,
    1573,  1574,  1574,  1575,  1575,  1576,  1576,  1577,  1577,  1578,
    1578,  1578,  1579,  1579,  1579,  1580,  1580,  1581,  1581,  1582,
    1582,  1583,  1584,  1584,  1584,  1584,  1584,  1585,  1585,  1585,
    1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,
    1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,
    1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,
    1586,  1586,  1586,  1586,  1586,  1586,  1587,  1587,  1587,  1588,
    1588,  1588,  1588,  1588,  1588,  1588,  1588,  1588,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,  1589,
    1589,  1589,  1590,  1590,  1590,  1591,  1591,  1591,  1591,  1592,
    1592,  1592,  1592,  1592,  1593,  1594,  1594,  1594,  1594,  1594,
    1594,  1594,  1595,  1595,  1595,  1595,  1595,  1595,  1595,  1596,
    1596,  1597,  1597,  1598,  1598,  1599,  1600,  1600,  1601,  1601,
    1602,  1602,  1603,  1603,  1604,  1604,  1604,  1604,  1604,  1605,
    1605,  1605,  1605,  1606,  1606,  1606,  1606,  1607,  1607,  1607,
    1607,  1607,  1607,  1608,  1609,  1609,  1609,  1609,  1609,  1609,
    1609,  1610,  1610,  1610,  1611,  1611,  1612,  1613,  1613,  1614,
    1615,  1615,  1616,  1616,  1617,  1617,  1617,  1617,  1618,  1618,
    1618,  1618,  1618,  1618,  1618,  1618,  1619,  1620,  1621,  1620,
    1620,  1622,  1622,  1623,  1623,  1624,  1625,  1625,  1625,  1625,
    1626,  1627,  1627,  1628,  1629,  1630,  1631,  1631,  1631,  1631,
    1631,  1631,  1631,  1631,  1631,  1632,  1632,  1632,  1632,  1632,
    1633,  1633,  1634,  1634,  1634,  1634,  1635,  1635,  1635,  1635,
    1635,  1636,  1636,  1637,  1636,  1636,  1636,  1638,  1638,  1639,
    1638,  1638,  1640,  1640,  1640,  1640,  1641,  1641,  1642,  1642,
    1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,
    1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,
    1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,
    1643,  1643,  1643,  1643,  1644,  1644,  1645,  1645,  1646,  1646,
    1647,  1647,  1647,  1648,  1648,  1648,  1648,  1648,  1649,  1649,
    1650,  1650,  1651,  1651,  1652,  1652,  1653,  1653,  1653,  1653,
    1653,  1653,  1653,  1654,  1654,  1654,  1654,  1654,  1654,  1654,
    1654,  1654,  1654,  1655,  1655,  1656,  1656,  1657,  1657,  1658,
    1658,  1659,  1659,  1659,  1659,  1659,  1660,  1660,  1661,  1661,
    1662,  1662,  1662,  1662,  1662,  1663,  1663,  1665,  1664,  1666,
    1666,  1667,  1667,  1667,  1668,  1668,  1668,  1669,  1669,  1670,
    1671,  1671,  1672,  1673,  1674,  1674,  1674,  1675,  1676,  1677,
    1678,  1678,  1678,  1678,  1678,  1678,  1678,  1678,  1679,  1680,
    1680,  1680,  1681,  1681,  1681,  1681,  1681,  1682,  1682,  1682,
    1682,  1682,  1682,  1683,  1683,  1684,  1685,  1686,  1686,  1686,
    1687,  1688,  1688,  1688,  1689,  1689,  1689,  1691,  1690,  1692,
    1693,  1693,  1693,  1693,  1694,  1694,  1695,  1695,  1697,  1696,
    1698,  1698,  1700,  1701,  1702,  1703,  1699,  1705,  1706,  1707,
    1708,  1704,  1709,  1709,  1709,  1709,  1709,  1709,  1710,  1710,
    1711,  1711,  1711,  1712,  1712,  1713,  1713,  1713,  1714,  1714,
    1715,  1715,  1715,  1716,  1716,  1717,  1717,  1718,  1718,  1719,
    1720,  1720,  1721,  1721,  1722,  1722,  1722,  1723,  1723,  1724,
    1724,  1725,  1725,  1726,  1726,  1727,  1727,  1728,  1728,  1729,
    1729,  1729,  1730,  1730,  1731
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     1,     2,     0,     4,     0,     2,     3,     1,
       2,     0,     3,     0,     6,     0,     6,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     3,     1,     3,
       1,     2,     3,     5,     7,     2,     3,     1,     3,     3,
       2,     3,     1,     3,     1,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       5,     3,     3,     3,     3,     3,     3,     3,     1,     0,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     0,     3,     9,     6,     7,     9,
       4,    10,     0,     6,     2,     9,     7,     6,     7,    11,
       7,     8,     7,     0,     3,     3,     6,     3,     0,     3,
      12,    11,    11,     1,     1,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       0,     2,     0,     2,     2,     2,     2,     2,     3,     3,
       1,     1,     1,     2,     3,     3,     3,     0,     3,     0,
       1,     3,     1,     3,     0,     1,     3,     1,     4,     0,
       1,     1,     1,     0,     3,     2,     3,     0,     3,     5,
       5,     0,     7,     0,     6,     1,     1,     1,     3,     1,
       1,     1,     3,     0,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     4,     0,     1,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     0,
       2,     0,     4,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     3,     3,     1,     1,     2,     1,     2,     1,     0,
       2,     1,     2,     1,     6,     6,     5,     4,     5,     4,
       5,     0,     1,     0,     3,     0,     2,     0,     8,     9,
       0,     1,     1,     3,     0,     2,     0,     3,     1,     3,
       5,     0,     4,     3,     1,     1,     1,     3,     1,     3,
       0,     4,     1,     3,     1,     1,     0,     3,     1,     3,
       3,     0,     1,     2,     1,     3,     4,     3,     3,     3,
       4,     4,     3,     1,     2,     1,     4,     0,     1,     1,
       2,     1,     1,     1,     0,     3,     1,     2,     1,     3,
       0,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     1,     1,     3,     4,     4,     3,
       2,     2,     3,     3,     2,     3,     3,     1,     1,     4,
       4,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       0,     1,     6,     7,     7,     7,     8,     3,     4,     0,
       2,     0,     1,     0,     1,     2,     2,     9,     0,     2,
       0,     1,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     5,     5,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     2,     0,     1,     1,     1,     1,     1,
       0,     1,     0,     1,     1,     5,     0,     3,     0,     2,
       3,     0,     1,     2,     1,     1,     1,     1,     3,     3,
       3,     3,     0,     1,     0,     1,     0,     1,     2,     1,
       1,     2,     2,     2,     4,     3,     1,     3,     2,     1,
       2,     1,     2,     2,     2,     2,     3,     2,     2,     2,
       1,     3,     3,     0,     3,     1,     1,     1,     1,     1,
       1,     2,     1,     1,     2,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     1,     0,     2,     0,     1,
       1,     2,     2,     1,     2,     2,     0,     1,     1,     1,
       3,     1,     3,     0,     1,     0,     4,     0,     1,     5,
       0,     3,     3,     1,     0,     2,     2,     2,     0,     3,
       3,     6,     6,     1,     1,     2,     2,     2,     2,     2,
       1,     1,     0,     1,     1,     1,     1,     0,     1,     1,
       2,     1,     2,     2,     3,     2,     3,     0,     1,     1,
       2,     1,     3,     0,     1,     1,     2,     1,     0,     1,
       1,     2,     1,     1,     3,     2,     1,     3,     3,     1,
       3,     3,     0,     1,     2,     2,     1,     1,     1,     1,
       1,     3,     1,     2,     5,     3,     1,     1,     4,     0,
       1,     0,     2,     1,     3,     4,     4,     0,     5,     0,
       5,     0,     5,     0,     5,     0,     4,     0,    10,     7,
       6,     6,     6,     4,     7,     7,     6,     8,     7,     5,
       5,     5,     5,     0,     2,     8,     3,     0,     2,     2,
       0,     1,     1,     2,     2,     2,     2,     5,     3,     3,
       3,     3,     5,     4,     3,     4,     4,     2,     2,     2,
       0,     2,     2,     1,     2,     2,     2,     2,     3,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     1,
       2,     1,     3,     1,     2,     0,     1,     1,     3,     2,
       2,     3,     6,     5,     3,     4,     4,     4,     4,     5,
       4,     3,     3,     8,     7,     4,     4,     1,     1,     0,
       1,     2,     2,     1,     1,     1,     3,     3,     1,     3,
       1,     3,     6,     5,     2,     6,     5,     4,     4,     3,
       3,     3,     3,     2,     2,     6,     8,     5,     4,     4,
       4,     3,     5,     5,     5,     5,     1,     3,     1,     1,
       1,     0,     1,     1,     2,     2,     3,     1,     1,     3,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     2,     2,     2,     0,
       1,     1,     3,     1,     1,     1,     3,     3,     3,     1,
       1,     4,     0,     0,    11,     3,     0,     1,     1,     3,
       3,     6,     2,     2,     0,     3,     0,     3,     0,     3,
       0,     3,     0,     1,     1,     3,     1,     1,     0,     2,
       1,     3,     3,     3,     1,     4,     0,     1,     1,     5,
       0,     1,     1,     2,     1,     1,     1,     5,     0,     3,
       0,     5,     4,     2,     4,     0,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     4,     0,     1,     1,     0,
       4,     3,     3,     5,     1,     3,     3,     5,     7,     1,
       3,     2,     1,     1,     8,     5,     1,     3,     3,     4,
       0,     4,     0,     2,     1,     2,     1,     1,     3,     2,
       3,     3,     2,     3,     4,     3,     4,     2,     3,     2,
       1,     4,     4,     4,     4,     3,     3,     4,     1,     1,
       1,     9,     8,     0,     1,     2,     1,     1,     1,     3,
       2,     2,     0,     1,     2,     1,     1,     1,     2,     1,
       3,     4,     4,     1,     1,     2,     0,     1,     2,     1,
       3,     1,     1,     1,     2,     0,     2,     2,     1,     1,
       0,     2,     3,     3,     3,     2,     3,     4,     3,     4,
       3,     4,     1,     3,     4,     3,     4,     1,     3,     4,
       5,     7,     6,     8,     6,     5,     6,     4,     3,     5,
       4,     6,     3,     4,     1,     1,     0,     3,     3,     3,
       3,     3,     3,     5,     5,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       3,     2,     2,     2,     2,     1,     3,     5,     6,     2,
       4,     7,     2,     7,     9,    12,     5,     6,     6,     4,
       4,     5,     3,     3,     0,     1,     4,     6,     2,     4,
       4,     4,    10,     6,     8,     8,     6,     4,     4,     6,
       4,     4,     4,     6,     4,     7,     7,     7,     6,     6,
       6,     6,     3,     4,     6,     8,     2,     2,     8,     8,
       6,     6,     1,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     2,     2,     2,     0,     2,     4,     4,
       4,     4,     3,     8,     6,     8,     4,     6,     4,     6,
       8,     4,     3,     6,     4,     6,     4,     7,     7,    10,
       1,     4,     4,     4,     4,     4,     6,     4,     4,     6,
       2,     3,     0,     4,     0,     3,     0,     1,     1,     3,
       2,     1,     1,     5,     6,     5,     5,     5,     7,     5,
       6,     5,     6,     5,     6,     5,     6,     5,     5,     5,
       5,     5,     6,     8,     4,     4,     4,     4,     4,     5,
       7,     7,     6,     6,     9,     0,     3,     1,     1,     1,
       1,     2,     0,     2,     0,     2,     2,     0,     2,     2,
       0,     1,     2,     1,     1,     1,     3,     4,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     2,     2,
       2,     4,     2,     4,     1,     2,     2,     2,     4,     0,
       3,     2,     2,     3,     1,     1,     1,     4,     2,     3,
       1,     4,     0,     1,     0,     2,     0,     3,     3,     1,
       2,     2,     3,     2,     1,     2,     1,     2,     1,     1,
       2,     2,     2,     1,     1,     2,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     4,     1,     1,     5,     7,     5,     7,     3,
       3,     3,     4,     4,     1,     2,     2,     1,     3,     3,
       0,     1,     0,     1,     0,     1,     4,     1,     1,     1,
       1,     1,     1,     3,     5,     3,     3,     4,     3,     3,
       3,     4,     8,     5,     4,     1,     3,     3,     7,     4,
       0,     1,     0,     1,     1,     2,     1,     2,     3,     3,
       1,     1,     2,     0,     2,     3,     3,     1,     1,     6,
       6,     1,     2,     0,     1,     1,     0,     1,     1,     1,
       1,     3,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     0,     1,     2,     0,
       2,     2,     3,     3,     1,     4,     0,     3,     1,     3,
       0,     2,     1,     3,     3,     0,     4,     3,     1,     0,
       1,     3,     1,     2,     0,     1,     3,     3,     1,     0,
       1,     1,     1,     0,     1,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     2,     1,     2,     5,     2,     1,     2,     6,
       6,     4,     6,     4,     5,     4,     4,     5,     4,     4,
       4,     5,     5,     4,     4,     6,     4,     1,     3,     1,
       3,     0,     2,     0,     1,     0,     1,     1,     3,     1,
       1,     9,    10,     8,     6,     7,     6,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     4,     1,     3,
       4,     3,     1,     2,     1,     2,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     0,     1,     3,     4,     0,
       1,     3,     1,     1,     1,     0,     3,     0,     5,    10,
       0,     1,     3,     1,     3,     0,     1,    10,     7,     8,
       0,     2,     0,     2,     1,     1,     1,     3,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     3,     6,     2,     2,
       1,     5,     6,     6,     2,     5,     5,     2,     2,     1,
       4,     3,     2,     3,     2,     2,     1,     1,     3,     5,
       2,     4,     6,     4,     3,     3,     2,     3,     2,     2,
       2,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     0,     1,     0,     2,
       0,     1,     0,     1,     0,     1,     1,     2,     1,     1,
       0,     2,     0,     2,     0,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     3,     1,     1,     0,     3,     2,
       1,     0,     1,     1,     0,     4,     0,     4,     1,     0,
       3,     0,     3,     3,     1,     2,     2,     2,     2,     2,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     3,     1,
       0,     2,     0,     4,     0,     4,     0,     3,     1,     0,
       1,     0,     2,     0,     3,     3,     3,     2,     2,     3,
       0,     1,     1,     2,    18,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     1,
       3,     4,     3,     3,     0,     2,     2,     1,     3,     3,
       0,     4,     0,     3,     1,     1,     0,     3,     2,     3,
       1,     1,     2,     0,     2,     3,     1,     3,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     2,     0,     1,     1,     1,     3,     5,     2,     1,
       1,     1,     1,     1,     3,     5,     1,     3,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     5,     5,
       7,     7,     3,     3,     3,     6,     6,     6,     4,     0,
       2,     4,     6,     1,     3,     1,     2,     2,     0,     2,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     4,     6,     2,     3,     3,
       2,     1,     3,     3,     2,     2,     1,     0,     2,     3,
       0,     2,     2,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     3,     0,     3,
       3,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     3,     4,     5,     4,     2,
       6,     5,     9,     3,     3,     4,     3,     6,     7,    10,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     7,     0,     9,     8,     6,     5,     9,     0,
      11,     7,     0,     1,     1,     1,     0,     1,     1,     3,
       2,     3,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     2,     2,     2,     0,     3,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     3,     1,     3,
       1,     3,     0,     3,     0,     3,     4,     5,     4,     6,
       6,     7,     1,     7,     9,     5,     6,     8,     4,     7,
       7,     8,     2,     1,     3,     1,     3,     0,     3,     1,
       3,     0,     2,     2,     2,     2,     0,     3,     0,     3,
       0,     3,     4,     3,     3,     0,     3,     0,     3,     0,
       1,     0,     3,     2,     0,     1,     2,     0,     1,     4,
       4,     5,     2,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       3,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     1,     2,     1,
       2,     3,     3,     3,     0,     3,     3,     0,     7,     2,
       0,     3,     4,     4,     1,     1,     0,     2,     0,    12,
       7,     6,     0,     0,     0,     0,    14,     0,     0,     0,
       0,    11,     4,     4,     3,     4,     3,     3,     0,     2,
       1,     3,     5,     1,     1,     0,     1,     1,     0,     2,
       0,     1,     3,     5,     3,     3,     3,     1,     3,     4,
       6,    10,     1,     5,     0,     2,     3,     1,     1,     0,
       3,     1,     3,     1,     3,     1,     2,     0,     3,     0,
       1,     1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2139 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2196 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2202 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2203 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24208 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2243 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 24418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 24483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 24504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 24515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 24526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 24537 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 115:
#line 2357 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 24554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 24566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 24576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 24591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 24600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 24623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 24634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 24645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 24656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 24667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 24678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 24690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 24701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 24750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 24780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 24790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 24841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 25001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 25009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 25017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 25025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 25033 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 25050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 25058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 25066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 25122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 25130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 25138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 25162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 25182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 25190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 25200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 25210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 25218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 25226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 25234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 25243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 25252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 25260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 25280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 25288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 25299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 25305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 25324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 25337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 25345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 25353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 25361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 25371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 25383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 25394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2991 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 25414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 3007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 25482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 3066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 25499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 25513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 25521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 25529 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 25539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 25588 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 25612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 25620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3208 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 25659 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 25689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 25697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 25705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 25713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 25722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 25730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 25738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 25884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 25899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25949 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 26001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3500 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3501 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3505 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3506 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3512 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3514 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 26037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3516 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 26043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3518 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 26049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3520 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 26055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3522 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 26061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3524 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3529 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3530 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 26079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3531 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 26085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 26093 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 26101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 26109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 26115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3555 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 26123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 26175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 26226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 26232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3685 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 26238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 26244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 26250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3691 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3696 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 26270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 26295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3734 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 26394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 26460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 26498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3924 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 26511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3933 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 26577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 4004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 4006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 26601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 4011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 26625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 4034 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 4049 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 4070 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 4076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 26683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 26774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 26786 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 26798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 26804 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4191 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4213 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 26866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 26872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 26878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 26884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4227 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 26890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 26896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 26902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 26908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 26914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 26920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 26926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 26932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 27002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 27012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 27022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 27032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 27064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 27073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 27085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 27101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 27111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 27121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4398 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 27127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 27133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 27139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 27145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 27151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 27157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 27163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 27169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 27175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 27181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 27187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 4420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 27193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 4422 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 27199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 4427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 27223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 4447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 27247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 4470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 27256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 4475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 27265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4499 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 27271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 27294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27351 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4574 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4582 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4630 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 27428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27547 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4800 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4872 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4880 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4918 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 27744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4936 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4959 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 27771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4969 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 5014 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 27825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 5021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 27833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 5028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 27841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5045 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5053 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5095 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5103 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5111 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27960 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5149 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27987 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 28009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 28030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 28036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 28042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 28062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 28081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5251 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 28096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 28105 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5270 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 28122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 28156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5332 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5340 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5381 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28246 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5398 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5406 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 28300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 28306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 28312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5456 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 28318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 28324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 28330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 28336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5476 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 28344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 5482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 28350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 5484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 28358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 5490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 5496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28374 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 5502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 5525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 5531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 5537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 5568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 5586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 28468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 28488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28494 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5640 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 28500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 28506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 28520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 28528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 28536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 28544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 28552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 28560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 28568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 28576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 28592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 28600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 28608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 28616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 28631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 28639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 28645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 28695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 28704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 28713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 28724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5878 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 28766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 28774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 28782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 28798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 28814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 28832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 28850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28869 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 28875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 28883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 28891 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 28897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 6003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 6005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 6016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 28942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 28948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 6022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 6028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 6037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 6045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 6049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 6054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 29003 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 6061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 29009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 6067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 29017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 6071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 29025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 6078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 29036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 6085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 29046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 6094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 29061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 29069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 6112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 29079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 29089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 29095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 29101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 29107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 29113 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 29123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 6144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 29133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 29141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 29147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 29173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 29179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 29185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 29191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 29197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 29203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 29209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 29215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 29237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6229 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6230 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6234 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6235 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 29270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 29279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 29295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 29363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 29379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 29387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 29395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 29411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 29419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	        }
#line 29427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 29442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 29450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 29458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 29466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 29474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 29495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 29503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 29511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 29519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 29527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 29535 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 29543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 29551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 29559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 29567 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 29591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 29599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 29607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 29615 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 29623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 29631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 29665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 29671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 29683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 29689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 29695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 29701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 29707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 29713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 29719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 29725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 29731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6507 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 29737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 29743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6512 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 29749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6513 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 29755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6514 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 29761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6515 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 29767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 29793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 29799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 29807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 29813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 29822 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 29880 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 29889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 29895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 29901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 29931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 29937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 29945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 29966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 29984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 29992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 30000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 30008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 30016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 30024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 30032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 30040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 30071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 30084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 30092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 30100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 30122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 30130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 30157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 30165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 30173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 30181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 30189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 30197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 30205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 30213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 30221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 30229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 30299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 30307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 30315 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 30321 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 30327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 30333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 30339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 30345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 30351 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 30357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 30363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6876 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6880 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6881 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6885 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6886 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6887 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6888 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6889 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 30423 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 30429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6895 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 30435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 30441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6897 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 30447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 30456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 30462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 30468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 30486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 30495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 30504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 30513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 30522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 30531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 30537 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6967 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 30564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 30570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 30578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 30584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 30590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 30601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 7000 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 7001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 30625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 7004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 30631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 30640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 30646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 30669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 30689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 30697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 30705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 30713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 30721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 30729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 30745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 30753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 30761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 30801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 30809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 30817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 30825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 30833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 30846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 30854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 30862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 30884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 30892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 30898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 30904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 30910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 30916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 30922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 30928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 30957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 30969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 31000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 31006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 31016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 31022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 31028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7261 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7262 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 31052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 31061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 31070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 31082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 31092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 31102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 31159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 31171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 31186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7355 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 31198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 31204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 31216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 31222 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 31228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 31239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 31250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 31256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 31262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 31268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 31274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 31283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 31292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 31301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 31310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 31319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 31325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 31331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 31337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 31343 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 31349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 31355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 31361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7460 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7465 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7470 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7471 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31391 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7472 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 31403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 31411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 31419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 31427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 31435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 31467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31493 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 31540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 31560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 31566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 31572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 31578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 31594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 31616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 31622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 31628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 31634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 31640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 31646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 31652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 31658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 31664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 31670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 31676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 31697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 31766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 31782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 31791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 31806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 31821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 31833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 31846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7854 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7873 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32023 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 8006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32105 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 8029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 32117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 8043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 32135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 8058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 32152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 8071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 32162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 8077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 32178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 32194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 32209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 32215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 32221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 32230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 32240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 32250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 32261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 32272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 32288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 32298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 32310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 32329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 32341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 32353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 32364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 32375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 32386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 32397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 32407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 32417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 32427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 32443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 32459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 32469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8300 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8305 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8306 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 32497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 32507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 32517 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 32527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 32542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 32585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 32591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32597 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 32603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32609 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 32634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 32643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 32651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 32659 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 32668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 32677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 32687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 32695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 32703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 32711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 32719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 32727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 32735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 32785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 32793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 32801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 32809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 32817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 32841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 32849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 32855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 32863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 32871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 32877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 32914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 32943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 32951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 32959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 32984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 33000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 33032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 33040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 33048 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 33056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 33064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 33072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 33080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 33088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 33096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 33104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 33112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 33120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 33130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 33138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 33146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 33155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 33164 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 33173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 33179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 33188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 33197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 33207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 33217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 33223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 33231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 33249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 33255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 33263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 33281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 33299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 33305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 33311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 33317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 33323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 33329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8834 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8835 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8836 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8837 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 33362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 33372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 33407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 33413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 33428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 33445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 33475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 33492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 33500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 33524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 9005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 33532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 33543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 9016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 33551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 9020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 33559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33567 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 9030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 33575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 9040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 33592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 9046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 9050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 33608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 9056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 33616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 9060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 33624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 9067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 33632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 9071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 9078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 33648 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 9082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 33656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 9089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 33664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 9093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 33672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 33681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 33707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 33716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 33725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 33733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 33748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 33760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 33766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 33796 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 33802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 33808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 33818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 33824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 33843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 33853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 33864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 33875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 33884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 33914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 33920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 33926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 33932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 33938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 33944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 33952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 33958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 33978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9312 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 33992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 34024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 34032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 34041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 34051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 34061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 34069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 34075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 34081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 34089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 34097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 34107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 34117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 34125 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 34133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 34139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 34150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 34170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 34179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 34187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 34195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 34203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 34211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 34219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 34227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 34235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 34243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 34251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 34259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 34267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 34275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 34283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 34291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 34299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 34307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 34315 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 34323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 34329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 34335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 34343 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 34352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 34360 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 34373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 34391 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 34409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 34415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 34421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 34427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 34437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 34447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 34455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 34467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 34475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 34484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 34492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 34502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 34512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 34522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 34530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 34538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 34546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 34552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 34558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 34564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 34570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 34576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 34582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 34613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 34627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 34633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 34657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9862 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9863 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34706 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 34714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 34722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 34730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 34738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 34746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 34754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 34762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 34770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 34778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 34795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 34803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 34820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 34831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 34839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 34852 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 34860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 34868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 34876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 34888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 10000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 34896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 10004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 10008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 10013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 10018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 34934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 10026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34954 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 10047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 10051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 10055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 10059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 10063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 10067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 35002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 10071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 35010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 10075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 10079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 10083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 10087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 10091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10109 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 35066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10120 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 35072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 35078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 35084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 35090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 35096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 35102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 35108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 35114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 35134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 35140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 35156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 35164 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 35172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 35188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 35194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 35202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 35210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 35218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 35226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 35234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 35242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 35250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 35258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 35269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 35277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 35285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 35293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 35301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 35309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 35317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 35328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 35340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 35346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 35352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 35360 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 35368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 35376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 35384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 35392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 35400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 35424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 35434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 35450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 35458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 35474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 35482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 35490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 35498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 35507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 35516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 35525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 35533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 35541 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 35549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 35557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 35566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 35574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 35582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 35590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 35598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 35606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 35622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 35630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 35638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 35646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 35663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 35671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 35679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 35728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 35736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 35744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 35760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 35768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 35776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 35784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 35792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 35800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 35808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 35816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 35848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 35864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35880 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 35888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 35896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 35904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 35912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 35928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 35936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 35944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 35952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 35962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 35972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 35982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 35992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 36002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 36020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 36028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 36036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 36042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 36056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 36062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 36068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 36074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 36080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 36086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 36092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 36120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 36128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 36136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 36166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 36180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 36196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 36212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 36252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 36260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 36268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 36276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 36284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 36292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 36300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 36308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 36316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 36324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 36332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 36340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 36348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 36363 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 36378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 36386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 36394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 36407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 36416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 36425 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 36431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 36437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 36443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 36449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 36457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36465 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 36473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 36481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 36489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 36497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 36505 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 36513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 36521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36529 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36537 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 36545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 36553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 11005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 36561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 11012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 36569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 11022 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 36587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 11039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 36595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 11043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 36603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 11050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 36611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 11054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 36619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 11061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 36627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 11065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 36635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 11072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 36643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 36651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 11085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 36660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 11090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 36668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 11097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 36676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 36684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 36692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 36700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 36708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 36716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 36724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 36732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 36740 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 36748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 36756 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 36764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 36772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 36780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 36788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 36795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 36801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 36807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 36813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 36821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 36838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 36846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 36854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 36876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 36882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 36888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 36894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 36922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 36933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 36956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 36968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37023 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 37045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 37056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 37067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 37090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 37101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 37195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 37205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 37211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 37217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 37231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 37237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 37243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 37251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 37259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 37267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 37275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 37288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 37296 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 37302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 37308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 37314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 37320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 37326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 37332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 37338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 37344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 37350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 37356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 37364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 37370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 37376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 37382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 37388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 37394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 37404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 37410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 37416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 37424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 37430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 37436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 37453 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 37465 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 37481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 37496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 37504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 37514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 37524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 37532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 37545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 37553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 37561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 37569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 37596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 37605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 37611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 37623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 37629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 37635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 37643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 37651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 37659 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 37667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 37673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 37679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 37685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 37691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 37697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 37706 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 37715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 37724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11874 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 37730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 37741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 37751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 37761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 37771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 37780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 37793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 37806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11948 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 37818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 37824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 37830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 37836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 37842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 37848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11955 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 37854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 37860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 37866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 37872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 37878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 37884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 37890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 37896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 37902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 37908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 37914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 37920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 37926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 37932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11975 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 37938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11976 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 37944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11977 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11978 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 37962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 37968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 37974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 12002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 37980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 12006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 12008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 37994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 12015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 38002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 12019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 38010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 12026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 38019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 38029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 38046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 38059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 38067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 38077 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 38087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 38095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 38103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 38113 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 38123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 38134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 38140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 38148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 38157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 38174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 38180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 38208 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 38214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 38222 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 38231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 38248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 38254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 38260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 38266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 38274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 38284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 38294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 38304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 38312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 38320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 38328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 38336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 38344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12286 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 38368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12288 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38374 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12289 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12290 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12291 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12295 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 38404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12297 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12298 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12299 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 38422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12303 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12304 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12305 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12306 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38446 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12307 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12311 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 38464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 38476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 38482 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12320 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 38488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 38498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 38508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 38516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 38524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 38532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 38540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 38554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 38564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 38591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 38629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 38665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 38673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 38689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12509 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 38700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 38726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 38738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 38806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 38815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 38825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 38833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 38841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 38899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 38905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 38911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 38947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 39001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 39013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 39019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12821 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 39038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 39044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 39050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12835 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 39063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 39072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 39081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 39090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 39099 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 39108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 39117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 39127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 39145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 39151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 39159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 39165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 39174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 39184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 39193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 39203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 39225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 39235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 39253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 13004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 39262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 13009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 39276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 13022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 39285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 13027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 39293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 39302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 13052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 39308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 13053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 39314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 13058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 39325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 13065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 39338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 39347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 39367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 39375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 39383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 39395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 39401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 39407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 39413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 39421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 39427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 39433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 39439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 39445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 39451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 39457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 39463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 39469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 39475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 39481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 39487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 39493 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 39504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 39515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13203 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
           }
#line 39524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13208 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
           }
#line 39533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13213 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
           }
#line 39542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13218 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
           }
#line 39551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13223 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
           }
#line 39560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13228 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
          }
#line 39569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_plugins((yyloc));
            MAKE_CMD(p);
          }
#line 39578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
            MAKE_CMD(p);
          }
#line 39587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
            MAKE_CMD(p);
          }
#line 39596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
            MAKE_CMD(p);
          }
#line 39605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);
            MAKE_CMD(p);
          }
#line 39623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_binlogs((yyloc));
            MAKE_CMD(p);
          }
#line 39632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            auto *p= NEW_PTN PT_show_replicas((yyloc));
            MAKE_CMD(p);
          }
#line 39644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_replicas((yyloc));
            MAKE_CMD(p);
          }
#line 39653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
            MAKE_CMD(p);
          }
#line 39662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
            MAKE_CMD(p);
          }
#line 39671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
            MAKE_CMD(p);
          }
#line 39684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_engines((yyloc));
            MAKE_CMD(p);
          }
#line 39693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 39705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 39717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
            MAKE_CMD(p);
          }
#line 39726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
            MAKE_CMD(p);
          }
#line 39735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            auto *p= NEW_PTN PT_show_profiles((yyloc));
            MAKE_CMD(p);
          }
#line 39748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
            MAKE_CMD(p);
          }
#line 39757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13360 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
             MAKE_CMD(p);
          }
#line 39766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
            MAKE_CMD(p);
          }
#line 39775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
            MAKE_CMD(p);
          }
#line 39784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
            MAKE_CMD(p);
          }
#line 39793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
            MAKE_CMD(p);
          }
#line 39802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_privileges((yyloc));
            MAKE_CMD(p);
          }
#line 39811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, false);
            MAKE_CMD(tmp);
          }
#line 39820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, false);
            MAKE_CMD(tmp);
          }
#line 39829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
            MAKE_CMD(tmp);
          }
#line 39838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), 0, 0, true);
            MAKE_CMD(tmp);
          }
#line 39847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), 0, true);
            MAKE_CMD(tmp);
          }
#line 39856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
            MAKE_CMD(tmp);
          }
#line 39865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
            MAKE_CMD(tmp);
          }
#line 39874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
            MAKE_CMD(tmp);
          }
#line 39883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
            MAKE_CMD(tmp);
          }
#line 39892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_master_status((yyloc));
            MAKE_CMD(p);
          }
#line 39901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            auto *p= NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
            MAKE_CMD(p);
          }
#line 39912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13447 "sql_yacc.yy" /* yacc.c:1646  */
    {
           auto *p= NEW_PTN PT_show_client_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           MAKE_CMD(p);
          }
#line 39921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13452 "sql_yacc.yy" /* yacc.c:1646  */
    {
           auto *p= NEW_PTN PT_show_user_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           MAKE_CMD(p);
          }
#line 39930 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13457 "sql_yacc.yy" /* yacc.c:1646  */
    {
           auto *p= NEW_PTN PT_show_thread_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           MAKE_CMD(p);
          }
#line 39939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13462 "sql_yacc.yy" /* yacc.c:1646  */
    {
           auto *p= NEW_PTN PT_show_table_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           MAKE_CMD(p);
          }
#line 39948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13467 "sql_yacc.yy" /* yacc.c:1646  */
    {
           auto *p= NEW_PTN PT_show_index_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           MAKE_CMD(p);
          }
#line 39957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
            MAKE_CMD(tmp);
          }
#line 39966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
            MAKE_CMD(tmp);
          }
#line 39975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
            MAKE_CMD(tmp);
          }
#line 39984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
            MAKE_CMD(p);
          }
#line 39993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
            MAKE_CMD(p);
          }
#line 40002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
            MAKE_CMD(p);
          }
#line 40011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *p= NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
            MAKE_CMD(p);
          }
#line 40020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
            MAKE_CMD(tmp);
          }
#line 40029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
            MAKE_CMD(tmp);
          }
#line 40038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 40050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 40056 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 40086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 40092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 40098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 40104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40110 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 40116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13566 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 40122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13567 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 40128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 40134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 40140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13573 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 40146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 40154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 40162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 40170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 40178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 40196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 40218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 40229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 40235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 40244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 40255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13678 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 40278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13695 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13700 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 40306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 40318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 40334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13738 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13743 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 40346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13745 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 40352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13747 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 40358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13749 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 40364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13751 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 40370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 40380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13759 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 40386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13761 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 40392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13763 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 40398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13765 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 40404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13767 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 40410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13769 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 40416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13771 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 40422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13773 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 40428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13775 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 40434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13777 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 40440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13779 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 40446 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13781 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 40452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 40458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 40467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13796 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 40484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 40494 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 40504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13828 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 40514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 40523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13839 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 40529 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13841 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 40538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 40558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13863 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 40564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13867 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 40570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13868 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 40576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13872 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 40597 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 40607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13894 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 40624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 40632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 40645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 40658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13939 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 40664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 40670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13941 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 40676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 40686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 40709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 40715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 40721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 40745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 40757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 40763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 40769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 40775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 40781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 40790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 40799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 40809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 40818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 40827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 40833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 40839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 40848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 40857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 40866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 40872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 40878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 40890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40918 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 40942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 40948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40960 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 41010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 41020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 41038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 41091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 41108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 41124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 41130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 41144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 41152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 41192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 41200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 41206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 41212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 41218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 41226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 41234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 41242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 41248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 41254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 41262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 41273 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 41281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 41289 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41297 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 41313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 41323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 41355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 41367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 41373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 41484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 41492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 41509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 41515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 41544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 41567 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41573 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41579 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 41585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 41594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 41603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 41611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 41626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 41635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 41644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 41654 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 41662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 41670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 41678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 41686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 41697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 41709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 41721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 41734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 41742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 41769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 41778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 41787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41796 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 41802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 41808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 41816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 41824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41844 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 41850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 41861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 41871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 41877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 41883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41891 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 41907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 41913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41949 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42003 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15461 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 42035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 42043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 42051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 42059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 42067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 42078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 42086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 42094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42110 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 42118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 42126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 42134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 42142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 42148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 42154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 42162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2780:
#line 15559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 42168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 15560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 42174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 42180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 42186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 42192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 42198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 42204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 42210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 42216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 42224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 42232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 42240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 42248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 42256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 42264 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 42276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 42284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 42292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15627 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 42338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 42344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 42350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 42359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 42365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 42377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 42396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 42405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 42413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 42422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 42442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-3].lexer.lex_str), "INNODB"))
            {
              if ((yyvsp[0].ulong_num) > UINT_MAX32 - 1)
              {
                my_error(ER_SYSTEM_KEY_ROTATION_MAX_KEY_ID_EXCEEDED, MYF(0));
                MYSQL_YYABORT;
              }
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_SYSTEM_KEY, EMPTY_CSTR, (yyvsp[0].ulong_num));
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-3]));
              MYSQL_YYABORT;
            }
          }
#line 42463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "REDO"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_REDO_SYSTEM_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 42479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"), 0);
          }
#line 42487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"), 0);
          }
#line 42495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)), 0);
          }
#line 42503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)), 0);
          }
#line 42511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 42530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 42549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 42557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 42565 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42573 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 42592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 42598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 42604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15880 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 42610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15881 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 42616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15882 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 42622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 42628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 42634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 42640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 42646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 42652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 42658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 42667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 42686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 42695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 42713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 42722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 42734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 42743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 42762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 42771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 42787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 42801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 42807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 42813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 42819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 42825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 42856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 42862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42880 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 42892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 42898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 42904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 42910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 42916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 42922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 42928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 42934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 16064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 42940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 16066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 42946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 16068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 42952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 16070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 42961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 16075 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 42967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 42985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16091 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 42991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 42997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 43003 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 43009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 43015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 43021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 43027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 43033 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 43039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 43045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 43051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 43057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 43063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 43069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 43095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 43109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 43123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 43286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 43301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 43316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 43333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 43351 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 43367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 43379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 43448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 43466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 43481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 43498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 43516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 43532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 43544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 43571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 43580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 43586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16517 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 43592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 43602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 43612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 43620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 43628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 43636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 43644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16556 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43650 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16558 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 43656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16562 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16567 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 43674 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16569 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 43682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 43691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16578 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 43697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16580 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 43703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16584 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 43709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 43718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 43728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16598 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16602 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43740 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 43752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 43758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 43764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 43770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 43776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 43782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16621 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16622 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 43807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 43820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 43868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 43876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 43882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 43888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 43894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 43900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 43906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 43912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 43923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 43929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 43940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16734 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16736 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16738 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 43973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 43981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16798 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43987 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16800 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16802 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16807 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 44005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16812 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 44011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16814 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 44017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16816 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 44023 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16821 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 44029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16823 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 44035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16825 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 44041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 44081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 44133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 44139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 44145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 44151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 44157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 44163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 44169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16941 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 44178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16947 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 44187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16964 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 44223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16996 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 44254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 17033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 44275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 17051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 44296 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 17073 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 44323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 44331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 17103 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 44376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 17144 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 44388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 17152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 44447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 17211 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 44471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 17231 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 44479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 17236 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 44491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 17244 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 44503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 17252 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 44516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 17266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 17271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 17276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 44543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 17281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 44552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 17286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 44561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 17291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 44570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 17298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 17299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 17303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 44595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 17312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 44609 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 17322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 44628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 17339 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 17340 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 17344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 17345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 44652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 17346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 44658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 17350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 17351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 44670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 17356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 44676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 44682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 17360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 44688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 44698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 44708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 44718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 44728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 44738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 17401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 44748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 44761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 44772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 44794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 44802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 44810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 17470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 44818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 44826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 44834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 44840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 44846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 44857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 44863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44885 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 44896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 44910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 44928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 44937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 44943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 44952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 44961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 44967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 44973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 44990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 44994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}

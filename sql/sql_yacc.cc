/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    NOT_A_TOKEN_SYM = 1150,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define NOT_A_TOKEN_SYM 1150
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1014
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   84697

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  780
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  920
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3025
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5298

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   777,     2,     2,     2,   765,   760,     2,
     769,   770,   763,   762,   774,   761,   775,   764,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   776,   772,
       2,     2,     2,     2,   773,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   766,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   778,   759,   779,   767,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     745,   746,   747,   748,   749,   750,   751,   752,   753,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     754,   755,     2,   756,   757,   758,   768,   771
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2009,  2009,  2010,  2015,  2025,  2043,  2050,  2063,  2062,
    2087,  2094,  2096,  2100,  2101,  2106,  2107,  2108,  2109,  2110,
    2111,  2112,  2113,  2114,  2115,  2116,  2117,  2118,  2119,  2120,
    2121,  2122,  2123,  2124,  2125,  2126,  2127,  2128,  2129,  2130,
    2131,  2132,  2133,  2134,  2135,  2136,  2137,  2138,  2139,  2140,
    2141,  2142,  2143,  2144,  2145,  2146,  2147,  2148,  2149,  2150,
    2151,  2152,  2153,  2154,  2155,  2156,  2157,  2158,  2159,  2160,
    2161,  2162,  2163,  2164,  2165,  2166,  2167,  2168,  2169,  2170,
    2171,  2172,  2173,  2174,  2175,  2176,  2177,  2178,  2179,  2180,
    2181,  2182,  2183,  2184,  2185,  2186,  2187,  2188,  2189,  2190,
    2191,  2192,  2193,  2194,  2195,  2196,  2200,  2210,  2211,  2215,
    2235,  2242,  2253,  2252,  2263,  2265,  2269,  2270,  2274,  2287,
    2286,  2306,  2305,  2319,  2318,  2333,  2334,  2337,  2344,  2351,
    2358,  2365,  2372,  2380,  2389,  2395,  2402,  2409,  2417,  2426,
    2432,  2438,  2446,  2454,  2460,  2467,  2474,  2482,  2494,  2500,
    2507,  2514,  2522,  2532,  2533,  2537,  2541,  2545,  2549,  2553,
    2563,  2567,  2571,  2576,  2587,  2592,  2596,  2600,  2604,  2605,
    2609,  2613,  2617,  2622,  2626,  2630,  2634,  2640,  2674,  2678,
    2682,  2686,  2692,  2693,  2703,  2704,  2707,  2709,  2710,  2714,
    2720,  2726,  2735,  2739,  2743,  2750,  2755,  2763,  2767,  2783,
    2787,  2798,  2802,  2817,  2827,  2837,  2842,  2850,  2857,  2870,
    2869,  2884,  2886,  2898,  2918,  2937,  2957,  2971,  2985,  2990,
    2999,  3004,  3016,  3028,  3042,  3058,  3062,  3069,  3078,  3086,
    3100,  3102,  3123,  3124,  3128,  3132,  3136,  3140,  3144,  3149,
    3153,  3161,  3160,  3192,  3191,  3200,  3209,  3210,  3216,  3222,
    3232,  3238,  3246,  3248,  3257,  3258,  3262,  3268,  3277,  3278,
    3286,  3286,  3344,  3345,  3346,  3347,  3348,  3349,  3350,  3351,
    3352,  3353,  3354,  3355,  3356,  3360,  3374,  3393,  3394,  3398,
    3399,  3404,  3406,  3408,  3410,  3412,  3414,  3416,  3422,  3423,
    3424,  3428,  3432,  3439,  3446,  3447,  3454,  3456,  3460,  3461,
    3465,  3516,  3518,  3522,  3523,  3527,  3577,  3578,  3579,  3580,
    3584,  3585,  3589,  3590,  3595,  3598,  3622,  3721,  3739,  3738,
    3817,  3813,  3889,  3890,  3895,  3897,  3902,  3925,  3936,  3940,
    3962,  3963,  3967,  3971,  3984,  3990,  3996,  4005,  4018,  4044,
    4050,  4051,  4057,  4058,  4063,  4069,  4082,  4084,  4104,  4110,
    4112,  4114,  4116,  4118,  4120,  4122,  4124,  4126,  4128,  4130,
    4132,  4137,  4151,  4168,  4169,  4171,  4176,  4182,  4191,  4197,
    4206,  4214,  4242,  4250,  4252,  4261,  4266,  4272,  4281,  4289,
    4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,  4309,
    4311,  4313,  4318,  4338,  4362,  4366,  4374,  4375,  4376,  4377,
    4378,  4379,  4380,  4381,  4382,  4383,  4384,  4385,  4386,  4391,
    4390,  4401,  4401,  4461,  4460,  4517,  4517,  4539,  4596,  4643,
    4667,  4666,  4691,  4713,  4715,  4716,  4720,  4738,  4759,  4767,
    4805,  4759,  4833,  4835,  4836,  4840,  4841,  4846,  4856,  4845,
    4908,  4907,  4921,  4922,  4926,  4927,  4932,  4940,  4931,  4990,
    4998,  4989,  5044,  5057,  5062,  5061,  5099,  5100,  5105,  5104,
    5138,  5138,  5157,  5156,  5204,  5219,  5227,  5218,  5285,  5293,
    5282,  5335,  5337,  5342,  5344,  5346,  5361,  5362,  5369,  5370,
    5377,  5378,  5382,  5388,  5397,  5398,  5399,  5400,  5401,  5402,
    5403,  5404,  5405,  5406,  5407,  5411,  5412,  5416,  5422,  5431,
    5432,  5433,  5434,  5435,  5436,  5437,  5441,  5442,  5446,  5452,
    5461,  5465,  5466,  5470,  5476,  5485,  5486,  5487,  5488,  5489,
    5490,  5491,  5495,  5496,  5500,  5506,  5515,  5516,  5517,  5521,
    5525,  5526,  5530,  5534,  5541,  5548,  5555,  5562,  5569,  5576,
    5583,  5590,  5597,  5604,  5608,  5615,  5622,  5629,  5630,  5705,
    5711,  5715,  5720,  5725,  5731,  5739,  5749,  5750,  5764,  5772,
    5776,  5780,  5784,  5788,  5792,  5799,  5800,  5805,  5806,  5824,
    5825,  5837,  5838,  5843,  5852,  5853,  5858,  5864,  5874,  5875,
    5887,  5888,  5892,  5898,  5907,  5916,  5919,  5924,  5932,  5933,
    5937,  5941,  5948,  5955,  5965,  5964,  5982,  5988,  5997,  5998,
    6003,  6004,  6008,  6014,  6023,  6030,  6031,  6035,  6041,  6050,
    6052,  6054,  6056,  6058,  6060,  6062,  6064,  6073,  6074,  6078,
    6079,  6083,  6088,  6093,  6108,  6109,  6113,  6119,  6128,  6134,
    6142,  6144,  6148,  6152,  6156,  6160,  6164,  6168,  6172,  6176,
    6180,  6184,  6188,  6192,  6196,  6200,  6204,  6208,  6225,  6229,
    6233,  6237,  6241,  6245,  6249,  6253,  6257,  6261,  6265,  6269,
    6273,  6277,  6281,  6285,  6292,  6306,  6310,  6314,  6318,  6322,
    6323,  6324,  6325,  6326,  6327,  6331,  6332,  6333,  6337,  6338,
    6339,  6340,  6344,  6350,  6359,  6360,  6364,  6371,  6372,  6380,
    6386,  6392,  6397,  6414,  6422,  6430,  6434,  6435,  6439,  6440,
    6444,  6445,  6449,  6453,  6457,  6478,  6480,  6484,  6485,  6486,
    6490,  6494,  6498,  6502,  6506,  6510,  6514,  6518,  6523,  6528,
    6537,  6546,  6550,  6554,  6559,  6568,  6572,  6595,  6599,  6603,
    6607,  6611,  6615,  6619,  6620,  6624,  6628,  6632,  6637,  6642,
    6647,  6652,  6657,  6661,  6665,  6670,  6674,  6681,  6683,  6685,
    6687,  6689,  6691,  6693,  6695,  6700,  6701,  6705,  6706,  6710,
    6711,  6712,  6713,  6714,  6718,  6719,  6720,  6721,  6722,  6726,
    6731,  6735,  6737,  6741,  6742,  6743,  6744,  6749,  6753,  6762,
    6766,  6771,  6775,  6784,  6785,  6789,  6790,  6791,  6799,  6800,
    6804,  6808,  6812,  6813,  6814,  6823,  6824,  6825,  6826,  6829,
    6830,  6835,  6839,  6843,  6844,  6848,  6867,  6886,  6890,  6894,
    6898,  6902,  6906,  6910,  6914,  6918,  6922,  6926,  6930,  6934,
    6938,  6942,  6946,  6950,  6954,  6958,  6967,  6972,  6988,  6989,
    6996,  6997,  6998,  7002,  7003,  7004,  7008,  7014,  7018,  7022,
    7023,  7027,  7036,  7040,  7041,  7045,  7054,  7058,  7059,  7063,
    7069,  7073,  7074,  7078,  7079,  7084,  7085,  7089,  7096,  7104,
    7110,  7120,  7124,  7129,  7134,  7139,  7146,  7152,  7163,  7164,
    7172,  7171,  7183,  7185,  7189,  7204,  7205,  7209,  7216,  7226,
    7227,  7228,  7229,  7234,  7238,  7243,  7248,  7254,  7263,  7264,
    7265,  7266,  7267,  7271,  7272,  7277,  7278,  7282,  7283,  7287,
    7288,  7289,  7293,  7294,  7298,  7302,  7306,  7310,  7314,  7318,
    7322,  7326,  7332,  7333,  7337,  7343,  7352,  7353,  7367,  7368,
    7372,  7378,  7387,  7391,  7392,  7396,  7402,  7411,  7412,  7417,
    7418,  7422,  7446,  7447,  7448,  7452,  7453,  7457,  7458,  7462,
    7463,  7467,  7468,  7469,  7473,  7479,  7489,  7495,  7510,  7516,
    7526,  7527,  7536,  7537,  7541,  7542,  7546,  7552,  7564,  7575,
    7590,  7589,  7610,  7609,  7631,  7630,  7652,  7651,  7670,  7664,
    7687,  7686,  7722,  7744,  7763,  7783,  7791,  7813,  7837,  7848,
    7850,  7865,  7879,  7885,  7897,  7909,  7923,  7924,  7928,  7938,
    7947,  7948,  7952,  7953,  7957,  7963,  7969,  7977,  7992,  8000,
    8008,  8015,  8022,  8029,  8036,  8042,  8048,  8054,  8066,  8078,
    8087,  8088,  8092,  8093,  8097,  8103,  8109,  8115,  8124,  8138,
    8139,  8140,  8141,  8145,  8146,  8158,  8159,  8163,  8164,  8168,
    8169,  8184,  8189,  8197,  8201,  8209,  8213,  8218,  8219,  8228,
    8232,  8243,  8247,  8251,  8255,  8259,  8264,  8269,  8274,  8279,
    8286,  8290,  8294,  8298,  8303,  8308,  8313,  8318,  8322,  8329,
    8330,  8334,  8338,  8345,  8346,  8354,  8361,  8366,  8370,  8375,
    8386,  8387,  8395,  8399,  8403,  8407,  8411,  8415,  8420,  8424,
    8428,  8432,  8436,  8440,  8444,  8448,  8452,  8456,  8460,  8464,
    8468,  8472,  8476,  8480,  8484,  8488,  8494,  8498,  8505,  8510,
    8515,  8523,  8524,  8529,  8534,  8540,  8549,  8553,  8557,  8574,
    8578,  8582,  8598,  8600,  8604,  8605,  8609,  8610,  8611,  8615,
    8616,  8617,  8621,  8622,  8623,  8624,  8628,  8633,  8641,  8642,
    8652,  8668,  8666,  8688,  8705,  8708,  8715,  8719,  8726,  8730,
    8737,  8741,  8748,  8753,  8756,  8763,  8766,  8773,  8776,  8783,
    8786,  8794,  8797,  8804,  8808,  8815,  8819,  8827,  8831,  8856,
    8857,  8858,  8863,  8868,  8875,  8889,  8890,  8891,  8895,  8904,
    8905,  8909,  8910,  8918,  8919,  8920,  8924,  8934,  8935,  8954,
    8959,  8966,  8976,  8984,  8992,  8993,  8997,  8998,  9006,  9008,
    9010,  9012,  9014,  9016,  9021,  9028,  9029,  9030,  9035,  9034,
    9040,  9047,  9052,  9060,  9061,  9065,  9078,  9082,  9091,  9097,
    9106,  9113,  9114,  9118,  9123,  9130,  9136,  9145,  9152,  9159,
    9160,  9170,  9171,  9175,  9179,  9184,  9188,  9224,  9228,  9232,
    9236,  9275,  9281,  9288,  9294,  9301,  9306,  9312,  9320,  9324,
    9328,  9332,  9336,  9344,  9345,  9346,  9353,  9358,  9362,  9374,
    9396,  9420,  9421,  9425,  9429,  9430,  9434,  9440,  9449,  9456,
    9468,  9471,  9475,  9480,  9484,  9488,  9497,  9503,  9512,  9516,
    9520,  9527,  9528,  9532,  9536,  9537,  9541,  9542,  9546,  9552,
    9558,  9568,  9569,  9577,  9578,  9579,  9580,  9581,  9585,  9586,
    9591,  9597,  9602,  9608,  9612,  9616,  9620,  9624,  9628,  9632,
    9636,  9640,  9644,  9648,  9652,  9665,  9669,  9673,  9678,  9682,
    9689,  9693,  9700,  9704,  9708,  9712,  9720,  9724,  9728,  9733,
    9738,  9746,  9754,  9758,  9759,  9763,  9767,  9771,  9775,  9779,
    9783,  9787,  9791,  9795,  9799,  9803,  9807,  9811,  9815,  9819,
    9823,  9824,  9828,  9829,  9836,  9837,  9841,  9842,  9846,  9847,
    9848,  9849,  9850,  9851,  9852,  9856,  9857,  9861,  9862,  9863,
    9864,  9865,  9866,  9870,  9871,  9872,  9873,  9874,  9875,  9879,
    9883,  9887,  9891,  9895,  9899,  9900,  9904,  9908,  9912,  9916,
    9920,  9924,  9928,  9932,  9936,  9940,  9944,  9948,  9953,  9960,
    9971,  9972,  9982,  9986,  9990,  9994,  9998, 10002, 10006, 10010,
   10014, 10018, 10022, 10026, 10030, 10034, 10038, 10042, 10046, 10050,
   10055, 10060, 10065, 10069, 10073, 10077, 10081, 10086, 10090, 10109,
   10113, 10117, 10121, 10125, 10130, 10135, 10139, 10143, 10148, 10152,
   10156, 10160, 10164, 10168, 10172, 10176, 10181, 10185, 10189, 10193,
   10197, 10209, 10213, 10217, 10221, 10225, 10229, 10233, 10237, 10241,
   10245, 10249, 10253, 10257, 10261, 10265, 10269, 10273, 10277, 10281,
   10285, 10289, 10293, 10297, 10301, 10307, 10313, 10319, 10325, 10331,
   10335, 10353, 10357, 10364, 10366, 10379, 10380, 10384, 10385, 10389,
   10390, 10394, 10400, 10409, 10416, 10417, 10421, 10425, 10429, 10433,
   10437, 10447, 10457, 10461, 10465, 10469, 10473, 10482, 10486, 10490,
   10494, 10498, 10502, 10506, 10510, 10514, 10518, 10528, 10532, 10536,
   10540, 10544, 10548, 10552, 10563, 10574, 10578, 10582, 10595, 10599,
   10604, 10613, 10616, 10624, 10627, 10631, 10640, 10643, 10647, 10655,
   10658, 10665, 10672, 10676, 10683, 10690, 10697, 10718, 10721, 10729,
   10732, 10740, 10743, 10751, 10754, 10763, 10768, 10775, 10779, 10783,
   10787, 10791, 10798, 10805, 10809, 10813, 10817, 10821, 10829, 10832,
   10836, 10840, 10844, 10850, 10851, 10852, 10856, 10863, 10867, 10874,
   10878, 10885, 10886, 10891, 10896, 10900, 10901, 10905, 10910, 10920,
   10927, 10934, 10953, 10961, 10968, 10975, 10982, 10989, 10996, 11003,
   11010, 11017, 11024, 11032, 11042, 11043, 11047, 11053, 11062, 11063,
   11067, 11073, 11082, 11083, 11087, 11088, 11092, 11100, 11109, 11110,
   11111, 11124, 11125, 11206, 11210, 11215, 11219, 11223, 11233, 11240,
   11241, 11242, 11246, 11247, 11248, 11249, 11252, 11253, 11256, 11258,
   11261, 11263, 11271, 11272, 11276, 11305, 11306, 11307, 11308, 11310,
   11312, 11316, 11317, 11326, 11327, 11331, 11338, 11339, 11343, 11356,
   11367, 11380, 11394, 11401, 11407, 11416, 11420, 11430, 11437, 11440,
   11448, 11452, 11457, 11462, 11467, 11478, 11481, 11484, 11488, 11492,
   11500, 11503, 11504, 11505, 11509, 11510, 11514, 11520, 11529, 11530,
   11538, 11539, 11543, 11548, 11554, 11558, 11564, 11573, 11579, 11587,
   11591, 11600, 11612, 11613, 11614, 11615, 11616, 11617, 11618, 11619,
   11620, 11621, 11622, 11623, 11627, 11628, 11629, 11630, 11631, 11632,
   11633, 11634, 11635, 11639, 11640, 11641, 11642, 11645, 11647, 11651,
   11652, 11655, 11657, 11661, 11662, 11666, 11670, 11671, 11678, 11682,
   11689, 11694, 11703, 11720, 11728, 11735, 11741, 11751, 11754, 11761,
   11767, 11776, 11790, 11791, 11798, 11803, 11814, 11815, 11830, 11835,
   11845, 11852, 11853, 11857, 11864, 11869, 11879, 11880, 11884, 11885,
   11889, 11890, 11894, 11901, 11907, 11913, 11922, 11926, 11930, 11934,
   11938, 11945, 11946, 11950, 11951, 11952, 11953, 11954, 11955, 11959,
   11960, 11961, 11962, 11963, 11967, 11968, 11969, 11970, 11971, 11975,
   11976, 11977, 11978, 11979, 11983, 11988, 11989, 11993, 11999, 12008,
   12012, 12019, 12026, 12032, 12036, 12044, 12057, 12073, 12082, 12092,
   12115, 12150, 12157, 12172, 12182, 12197, 12206, 12217, 12237, 12259,
   12282, 12287, 12296, 12303, 12310, 12316, 12325, 12331, 12340, 12341,
   12345, 12346, 12350, 12351, 12355, 12361, 12370, 12371, 12378, 12398,
   12418, 12436, 12449, 12466, 12482, 12483, 12484, 12493, 12497, 12498,
   12509, 12511, 12515, 12520, 12525, 12533, 12538, 12543, 12551, 12557,
   12566, 12573, 12574, 12578, 12582, 12583, 12587, 12592, 12602, 12607,
   12616, 12617, 12620, 12622, 12626, 12630, 12635, 12640, 12644, 12650,
   12659, 12660, 12668, 12672, 12686, 12690, 12699, 12716, 12717, 12721,
   12728, 12740, 12748, 12749, 12755, 12768, 12778, 12791, 12793, 12797,
   12798, 12802, 12803, 12804, 12808, 12814, 12816, 12819, 12821, 12824,
   12825, 12828, 12832, 12836, 12840, 12844, 12848, 12852, 12856, 12860,
   12868, 12871, 12885, 12884, 12895, 12904, 12910, 12922, 12933, 12944,
   12959, 12966, 12974, 12976, 12999, 13003, 13008, 13007, 13018, 13017,
   13027, 13045, 13052, 13060, 13068, 13076, 13084, 13092, 13102, 13124,
   13129, 13151, 13160, 13169, 13175, 13180, 13185, 13190, 13195, 13200,
   13205, 13211, 13220, 13228, 13232, 13236, 13243, 13250, 13257, 13264,
   13271, 13278, 13285, 13291, 13301, 13311, 13316, 13321, 13326, 13335,
   13337, 13339, 13344, 13345, 13348, 13350, 13354, 13355, 13359, 13360,
   13364, 13365, 13369, 13370, 13371, 13372, 13376, 13377, 13381, 13382,
   13386, 13387, 13391, 13392, 13393, 13398, 13405, 13412, 13413, 13414,
   13415, 13416, 13417, 13424, 13425, 13430, 13433, 13447, 13454, 13455,
   13460, 13468, 13467, 13480, 13479, 13493, 13497, 13498, 13511, 13510,
   13533, 13534, 13539, 13541, 13543, 13545, 13547, 13549, 13551, 13553,
   13555, 13557, 13559, 13561, 13563, 13565, 13567, 13569, 13571, 13573,
   13578, 13579, 13584, 13583, 13590, 13600, 13601, 13606, 13611, 13620,
   13620, 13623, 13622, 13639, 13644, 13645, 13649, 13650, 13665, 13664,
   13675, 13676, 13686, 13690, 13704, 13716, 13717, 13718, 13724, 13735,
   13774, 13775, 13779, 13780, 13784, 13785, 13786, 13790, 13791, 13795,
   13796, 13800, 13801, 13805, 13810, 13814, 13819, 13825, 13830, 13838,
   13839, 13843, 13848, 13852, 13857, 13865, 13866, 13870, 13871, 13875,
   13876, 13880, 13881, 13882, 13886, 13892, 13901, 13902, 13909, 13910,
   13914, 13922, 13942, 13963, 13968, 13974, 13979, 13987, 13994, 14001,
   14011, 14030, 14031, 14032, 14043, 14044, 14045, 14046, 14058, 14062,
   14066, 14070, 14074, 14078, 14085, 14089, 14093, 14097, 14101, 14109,
   14113, 14117, 14131, 14132, 14136, 14140, 14149, 14156, 14163, 14167,
   14171, 14175, 14179, 14183, 14192, 14198, 14211, 14217, 14228, 14229,
   14259, 14272, 14285, 14301, 14317, 14334, 14338, 14339, 14346, 14362,
   14363, 14374, 14375, 14385, 14386, 14397, 14398, 14408, 14409, 14410,
   14414, 14415, 14416, 14420, 14425, 14433, 14437, 14451, 14456, 14464,
   14488, 14489, 14490, 14491, 14492, 14499, 14500, 14501, 14508, 14509,
   14510, 14511, 14512, 14513, 14514, 14515, 14516, 14517, 14518, 14519,
   14520, 14521, 14522, 14523, 14524, 14525, 14526, 14527, 14528, 14529,
   14530, 14531, 14532, 14533, 14534, 14535, 14536, 14537, 14538, 14539,
   14540, 14541, 14542, 14543, 14558, 14559, 14560, 14567, 14568, 14569,
   14570, 14571, 14572, 14573, 14574, 14575, 14583, 14584, 14585, 14586,
   14587, 14588, 14589, 14590, 14591, 14592, 14593, 14594, 14595, 14596,
   14597, 14598, 14599, 14600, 14601, 14602, 14603, 14604, 14605, 14606,
   14607, 14608, 14609, 14610, 14611, 14612, 14613, 14614, 14615, 14616,
   14617, 14618, 14619, 14620, 14621, 14622, 14623, 14624, 14625, 14626,
   14627, 14628, 14629, 14630, 14631, 14632, 14633, 14634, 14635, 14636,
   14637, 14638, 14639, 14640, 14641, 14642, 14643, 14644, 14645, 14646,
   14647, 14648, 14649, 14650, 14651, 14652, 14653, 14654, 14655, 14656,
   14657, 14658, 14659, 14660, 14661, 14662, 14663, 14664, 14665, 14666,
   14667, 14668, 14669, 14670, 14671, 14672, 14673, 14674, 14675, 14676,
   14677, 14678, 14679, 14680, 14681, 14682, 14683, 14684, 14685, 14686,
   14687, 14688, 14689, 14690, 14691, 14692, 14693, 14694, 14695, 14696,
   14697, 14698, 14699, 14700, 14701, 14702, 14703, 14704, 14705, 14706,
   14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14715, 14716,
   14717, 14718, 14719, 14720, 14721, 14722, 14723, 14724, 14725, 14726,
   14727, 14728, 14729, 14730, 14731, 14732, 14733, 14734, 14735, 14736,
   14737, 14738, 14739, 14740, 14741, 14742, 14743, 14744, 14745, 14746,
   14747, 14748, 14749, 14750, 14751, 14752, 14753, 14754, 14755, 14756,
   14757, 14758, 14759, 14760, 14761, 14762, 14763, 14764, 14765, 14766,
   14767, 14768, 14769, 14770, 14771, 14772, 14773, 14774, 14775, 14776,
   14777, 14778, 14779, 14780, 14781, 14782, 14783, 14784, 14785, 14786,
   14787, 14788, 14789, 14790, 14791, 14792, 14793, 14794, 14795, 14796,
   14797, 14798, 14799, 14800, 14801, 14802, 14803, 14804, 14805, 14806,
   14807, 14808, 14809, 14810, 14811, 14812, 14813, 14814, 14815, 14816,
   14817, 14818, 14819, 14820, 14821, 14822, 14823, 14824, 14825, 14826,
   14827, 14828, 14829, 14830, 14831, 14832, 14833, 14834, 14835, 14836,
   14837, 14838, 14839, 14840, 14841, 14842, 14843, 14844, 14845, 14846,
   14847, 14848, 14849, 14850, 14851, 14852, 14853, 14854, 14855, 14856,
   14857, 14858, 14859, 14860, 14861, 14862, 14863, 14864, 14865, 14866,
   14867, 14868, 14869, 14870, 14871, 14872, 14873, 14874, 14875, 14876,
   14877, 14878, 14879, 14880, 14881, 14882, 14883, 14884, 14885, 14886,
   14887, 14888, 14889, 14890, 14891, 14892, 14893, 14894, 14895, 14896,
   14897, 14898, 14899, 14900, 14901, 14902, 14903, 14904, 14905, 14906,
   14907, 14908, 14909, 14910, 14911, 14912, 14913, 14914, 14915, 14916,
   14917, 14918, 14919, 14920, 14921, 14922, 14923, 14924, 14925, 14926,
   14927, 14928, 14929, 14930, 14931, 14932, 14933, 14934, 14935, 14936,
   14937, 14938, 14939, 14940, 14941, 14942, 14943, 14944, 14945, 14946,
   14947, 14948, 14949, 14950, 14951, 14952, 14953, 14954, 14955, 14956,
   14957, 14958, 14959, 14960, 14961, 14962, 14963, 14964, 14965, 14966,
   14978, 14979, 14980, 14992, 14993, 14994, 14995, 15004, 15005, 15006,
   15007, 15008, 15019, 15028, 15032, 15036, 15040, 15047, 15055, 15063,
   15075, 15079, 15084, 15089, 15094, 15099, 15104, 15112, 15113, 15117,
   15121, 15128, 15134, 15143, 15148, 15155, 15165, 15166, 15171, 15175,
   15183, 15187, 15191, 15192, 15193, 15194, 15195, 15199, 15200, 15201,
   15202, 15206, 15207, 15208, 15209, 15213, 15214, 15215, 15216, 15217,
   15218, 15223, 15231, 15237, 15241, 15246, 15250, 15257, 15261, 15268,
   15272, 15276, 15283, 15287, 15294, 15301, 15302, 15306, 15313, 15314,
   15318, 15319, 15323, 15324, 15325, 15326, 15330, 15331, 15332, 15336,
   15340, 15344, 15348, 15352, 15361, 15372, 15377, 15376, 15382, 15392,
   15393, 15397, 15398, 15402, 15430, 15431, 15432, 15437, 15441, 15452,
   15459, 15467, 15475, 15482, 15489, 15505, 15517, 15536, 15540, 15544,
   15553, 15564, 15580, 15581, 15585, 15586, 15587, 15588, 15592, 15593,
   15594, 15595, 15596, 15602, 15607, 15623, 15622, 15641, 15646, 15657,
   15662, 15679, 15678, 15695, 15708, 15709, 15710, 15711, 15714, 15716,
   15720, 15726, 15735, 15742, 15744, 15746, 15748, 15750, 15752, 15754,
   15756, 15758, 15760, 15762, 15764, 15766, 15768, 15770, 15772, 15774,
   15779, 15781, 15795, 15797, 15799, 15801, 15803, 15805, 15807, 15809,
   15811, 15813, 15815, 15817, 15819, 15821, 15826, 15827, 15830, 15832,
   15836, 15837, 15841, 15851, 15861, 15874, 15888, 15900, 15912, 15924,
   15944, 15950, 15959, 15965, 15974, 15975, 15979, 15980, 15983, 15994,
   16005, 16016, 16029, 16043, 16055, 16066, 16080, 16098, 16109, 16120,
   16134, 16145, 16159, 16174, 16187, 16198, 16203, 16211, 16216, 16224,
   16225, 16229, 16235, 16243, 16245, 16249, 16253, 16257, 16264, 16265,
   16270, 16271, 16275, 16276, 16280, 16285, 16287, 16292, 16293, 16301,
   16300, 16310, 16311, 16316, 16317, 16318, 16323, 16324, 16325, 16329,
   16330, 16334, 16346, 16355, 16365, 16374, 16388, 16389, 16390, 16394,
   16398, 16402, 16409, 16410, 16411, 16412, 16413, 16414, 16415, 16421,
   16432, 16441, 16443, 16445, 16450, 16451, 16452, 16453, 16454, 16458,
   16459, 16460, 16461, 16462, 16463, 16473, 16474, 16479, 16492, 16505,
   16507, 16509, 16514, 16519, 16521, 16523, 16529, 16530, 16532, 16538,
   16537, 16577, 16628, 16629, 16630, 16631, 16641, 16643, 16649, 16654,
   16672, 16662, 16739, 16757, 16781, 16805, 16811, 16852, 16778, 16919,
   16939, 16944, 16952, 16917, 16973, 16978, 16983, 16988, 16993, 16998,
   17006, 17007, 17010, 17019, 17029, 17047, 17048, 17052, 17053, 17054,
   17058, 17059, 17064, 17065, 17067, 17072, 17078, 17087, 17093, 17102,
   17108, 17117, 17134, 17143, 17166, 17170, 17178, 17181, 17185, 17192,
   17193, 17198, 17204, 17208, 17215, 17225, 17232, 17245, 17246, 17250,
   17251, 17259, 17260, 17265, 17273, 17274
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "NOT_A_TOKEN_SYM", "CHANGED_PAGE_BITMAPS_SYM",
  "CLIENT_STATS_SYM", "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM",
  "INDEX_STATS_SYM", "TABLE_STATS_SYM", "THREAD_STATS_SYM",
  "USER_STATS_SYM", "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM",
  "SEQUENCE_TABLE_SYM", "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD",
  "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "';'", "'@'", "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept",
  "start_entry", "sql_statement", "$@1", "opt_end_of_input",
  "simple_statement_or_begin", "simple_statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "$@3",
  "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "master_tls_ciphersuites_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt",
  "create_compression_dictionary_allowed_expr", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_describe_column", "flush", "$@48",
  "flush_options", "$@49", "opt_flush_lock", "$@50", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@56", "grant", "$@57", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@58", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@59",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,  1150,  1300,  1301,  1302,  1303,  1304,
    1305,  1306,  1307,  1308,  1350,  1351,  1353,  1354,  1355,   124,
      38,    45,    43,    42,    47,    37,    94,   126,  1356,    40,
      41,  1357,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4454

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4454)))

#define YYTABLE_NINF -2829

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6777,  3113,  1973, -4454,   590,  1051, 68326,   143,  1884,  1884,
     537,  3360, -4454, -4454, -4454, 12428,  3685, -4454, 68326,  1973,
     341, 45826, 68326, -4454,   865,  1575,    19,   279,   124,   710,
    1973, 68326, -4454,  1060,  1631,  1973,  1676,  1102, 60826, 46576,
     537, 68326,  3337, 28557, -4454, -4454, 60826,   975,   934, 68326,
    1176,   943,  1017, 68326,  1103, 61576,  1411, 21716,  2327,  1397,
    1295,  1493, -4454,  2349,  2045, -4454,  2029, -4454, -4454,  1838,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, 53326, -4454, -4454,  1680,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454,  2144,    45,  1231, -4454, -4454, -4454, -4454,  1115,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
     232, -4454, -4454, -4454, -4454, -4454, 62326, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454,  2186, 68326,  2207, 68326,    66,  2175,
   68326, 59326, 68326, 68326,  1882,  2286,  2203,  2270, -4454, -4454,
    2445, -4454, -4454,  1884,   537, -4454, -4454, 68326, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,  1815, -4454,  1827,
   -4454, -4454, -4454, -4454, -4454, -4454,  2049,  2501, -4454, -4454,
   68326, 68326, -4454,  2675,  2494,  2508,  2519,  2311, 59326,    56,
   68326, -4454,  2194,    20,  2494,  2494,  2588,   909,  2494,  2567,
   -4454,  2242, -4454, -4454, -4454,  2445,  2811, -4454,  2090,  2109,
    2111, 21716, -4454,  2137,  2150,  2195, 16298,  2198,  2212,  2225,
    2236,  2262,  2265,  2279,  2287,  2287,  2290,  2292,  2332,  2335,
    -136,  2367, -4454,  2384,  1295,  2391, -4454, -4454,  2396,  2398,
    2415,  2423, -4454,  2428,  2430,  2448, 17072,  2456,  2461, -4454,
   39070,  2464,  2466,  2483,  2487,  2490,  2492,  2493,  2497,  2499,
   -4454, -4454, 16298,  2290, -4454, -4454, -4454,  2504,  2505,  2506,
    2513,  2517,  2527,  2534,  2535,  2539,  2541,  2551,  2556,  2559,
    2560,  2561,  2569,  2290, -4454,  1071,  2570,  2572,  1088,  2573,
   -4454,  2579, -4454,   213,  2584,  2287,  2290,  2290,  2585,  2586,
    2590,  2593,  2594,  2595,  2596,  2598,  2601,  2604,  2610,  2611,
    2614,  2617,  2618,  2619,  2620,  2621,  2631,  2633, 21716, 21716,
   -4454, 21716, 10880, 29308, -4454, 68326, -4454, -4454,  2116, -4454,
   48826,  4190, -4454,  3496, 21716,  1179, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454,  2296, -4454, -4454, -4454,
   -4454, -4454,   130, -4454,  2634,  2180, -4454, -4454,  2286,  2286,
    2286, 68326,  2746,  2286,  2286,  2294, 68326,  2286,  2458,  2286,
    2286,  2286,  2817,  2286,  1884, -4454, -4454, -4454, -4454,  2980,
    2715,  2719,  2533, -4454,  2555, -4454, -4454, -4454,  2830, -4454,
    2635, -4454,  2690, -4454,  2892,  2635, -4454,   239,  2635,   189,
   -4454, -4454, -4454,  2635, -4454, -4454, -4454, -4454,  -237, -4454,
   -4454, -4454, -4454,  1082, -4454,  2898,   122, 59326,  3086, -4454,
   -4454, -4454,  3057, 68326,   590, -4454, -4454, 16298, -4454,  3075,
   -4454,   343,  3142,  3146, -4454, -4454,  1884,  3209,   194, 68326,
   54076, -4454,  1884, -4454, -4454,  3162, -4454,    51,   816,  2789,
   -4454, -4454,  2908, -4454,  2715,  3033,   297,   175, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, 12428,  3337,
   -4454, -4454,    78,  2915,  1384, -4454, -4454, 49576,  1345, -4454,
     176, -4454, 72076, -4454,  3207, 30059, 51076, -4454,  2645, -4454,
   -4454, -4454, -4454, -4454, -4454, 70576,  2647,   992,  7784,  2908,
   -4454,  1727,    32, -4454,  1727, -4454,  2648, -4454, 68326, 68326,
     590, -4454, -4454, -4454, -4454,  2661,  2657, -4454, 68326,  2666,
   -4454,  2663, -4454,   259,   259,   259,  3345,   259, -4454,   259,
    3407,  2669,  2676,  3398,  3291,  2435,  3296, -4454,  3256,  3351,
    2695,   405,    23,  1115, -4454, -4454,  2694, 68326,  2287, -4454,
    2698,  2112, -4454, -4454,  2696, -4454,  2185, -4454,   -61,  4057,
   -4454,  2859,   -27, 27806,  3223,  2144, -4454,  1895,  3426,  1784,
    3200, -4454, 51826,  1784,  3200, -4454,    45,  1231,  1528,  3187,
   -4454,  3321,  2197, 54826,  1267, -4454, -4454, 54076, -4454, 68326,
   59326, -4454, 68326, -4454,  3099,  2866,  8865, 68326,  3314, -4454,
   68326, 68326,  2955, -4454, 68326, -4454,    61, -4454,  1557, 16298,
   -4454, 68326, -4454, -4454,    64, -4454,   243,  1263,   136,   153,
   68326, 68326, 68326,  2971,  3298, 68326,  2784,  3488, 68326, -4454,
    3236, 54076, 75076, 68326, -4454,  3237, 68326, 68326,  2494,  1821,
    1369, -4454, -4454, 16298, 16298,  1902,  3434,  3498,  3498,  3498,
     315,  2875, 16298, 16298, 16298, 16298, 16298, 16298,  2074,  2750,
   -4454, -4454,   -17, -4454,  2751, 16298, 16298, -4454, 16298, 16298,
   68326, -4454,  5105, 16298, 16298,  1068,  3382, 16298, 16298, 16298,
   10880,  5678, 16298, 16298, 68326,  3514,  2756, -4454,  2760,  2094,
   16298, 16298,  2119, 16298, 16298, 16298, 16298, 16298, -4454, -4454,
   16298, 16298, 21716, 16298, 16298, 16298, 16298, 16298, 16298,  2766,
   16298,  3498,  3498, 16298, 16298,  2135, -4454, -4454, 16298,  3083,
    3083, -4454, 16298, 11654, 16298, -4454, -4454, -4454,  2768, -4454,
   -4454, -4454, 68326,  3498,  3498, 16298, 16298, 16298,  3498,  3498,
   16298,  2769,  2771, 16298, 16298, 16298, 16298, 16298, 21716,  2772,
    2773,  2786,  3434,  3434,  3434,   651,   109,    23,   170,   188,
   -4454,  3059, 16298, 16298, -4454, -4454, 63076, -4454, -4454, -4454,
   16298, -4454, 16298, 16298, -4454, -4454, -4454, -4454, -4454, -4454,
    2897, -4454, -4454, -4454, 17846, 21716, 21716,  2793, 21716, 21716,
   -4454, -4454, 21716, 21716, 21716,  3290,  2899, 21716, 21716, 22490,
   23264, 21716, 21716, 21716, 21716,  1149,  3434, 59326, 21716, -4454,
   -4454,  2296,  2296, 16298, 42070, 68326, 68326, 68326,  3189, 68326,
   68326, 59326,  2860,  1319, 68326, 68326, 54076, 68326, 75076, 68326,
   68326,  2286,  2953,  4268, 32312, -4454, -4454, -4454, -4454, -4454,
    3007, -4454, -4454, -4454, -4454, -4454, 68326, -4454, -4454, 54076,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, 59326, -4454,  1161,
   54076, 47326,   152, -4454, 69076, 68326, -4454,   590, -4454,  3162,
    3060, -4454,  2799,   315,  3525, -4454, -4454,  3304,  3557,  3562,
   68326, 68326,  -148, -4454, -4454,  3563,  3306, -4454, -4454,  2822,
    3015, 68326, 68326, -4454, 68326, 68326, -4454, -4454, -4454, -4454,
    2828, -4454, -4454,  2296,  4807, -4454,  2839, 54076, 54076,  1161,
    3129,   136,   172, -4454, -4454, 73576, 68326, -4454, -4454, -4454,
   -4454,  3547, 16298, -4454, 54076,  2889,  3051,  3353,    41, -4454,
    2850,  2853, -4454,  2970, -4454, -4454,  2856, -4454,  2858, 68326,
    1735,   992, -4454, -4454, -4454, -4454, -4454, 68326,  2861,   176,
   -4454,  2647,   992, 30810, -4454, 10106,  3468, -4454,   861,  2869,
    3463,   861, 55576,  3200,   272,   565,   207,   294, -4454,  3445,
   -4454,  3104,  3088, -4454, -4454,   325,  3713, -4454,  3487, -4454,
    1001, -4454,  3112,  3200,   861,   861,   861,   861,   861,  3447,
     861, -4454,  3369,  3502,    35,  2352,   221,   714, -4454, -4454,
   -4454, -4454,  2890, -4454,  1056,  3574, -4454,  2891, -4454,  3472,
   -4454, -4454,  2799, 18620,  1103,  2666, 68326, 68326,  3646, -4454,
   -4454,  2894, -4454,  3292,  3114, -4454,  3030, -4454, -4454,   910,
   -4454, 68326, 16298,  1851, -4454, -4454, 54076,  3542, -4454, -4454,
     470, -4454,  3527, -4454, -4454,  2916,  2958,  3640, 59326,  3036,
    2963,   168, -4454,  1754, 54076,  3056,  3535,  3537,  3538,  3539,
    3541, -4454,  3543, -4454,  2928,  3545, -4454,  3302, -4454, -4454,
    2571,  3135,  3135, 59326,  2935, -4454, -4454, -4454,  3211, -4454,
   -4454,  1895, 16298, -4454, -4454,  1115, -4454, -4454, -4454, -4454,
   -4454, -4454,   218, -4454, -4454,  1115, -4454,  3200,  3200, -4454,
   -4454, -4454, -4454, 63826,  1528,  3057, 59326,  3623, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
    3587, -4454, -4454,  3348,  3402,  3712, -4454,  2951,  3612,   992,
     992,  3612,   992,   992, -4454,  3149, -4454,   992,   114, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,  3579,  2888,   992,
    2241,  3339,   992,   992,  3667,   992,  3341,  3346,   992,   992,
     992,   992,  3163,  3613, -4454,   992,  3493,  1092,  3551,  3506,
     992,  3372, -4454,  1333,  3641,   992,   992,   992,   992,   992,
    3667,  3375,  3732,   992,   992,  3381,  1445,  3383,  3386,   992,
     992,   992,   992,  1499,   992,   992,  3387,   992,  3164,  3170,
     992, -4454, -4454,   992,  6200, -4454, -4454, -4454,  2580, -4454,
   -4454,  2001, -4454, -4454,  3023,  3025, -4454, -4454, -4454, -4454,
    3299, -4454,  3092, -4454,  3311,  3176, -4454,  2955,    76, 64576,
   68326, -4454, -4454,  3037,  3040,  1894, -4454,   315,  3035,  3038,
   -4454,  5657,  3145, -4454, -4454, 68326, -4454, -4454, -4454, -4454,
    3205, -4454, -4454, -4454, -4454,  1790, -4454,  3759,  3371, -4454,
   -4454,  3649, -4454,  3439,  3815,  3106,  3716,  3446,  2494,  3612,
    3212,  3821, -4454,  3601, -4454,    97,  2858,  3238, -4454,  3062,
    1483, 68326,  3633,  2494, 68326, 68326, 68326, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, 68326, -4454, -4454, -4454, -4454, -4454,
   -4454,  2955,   228,   429, -4454,  3498,  3064, 16298,  3065,  3067,
    3072, 16298,   351,  1893,   479,  1365,  1458,   493,   191, 16298,
    3074, 13202, -4454,  3077, -4454, -4454,   230,   260,   525,   658,
    3078, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454,  3648, -4454,   266,  3081, -4454, -4454, -4454, -4454,  3079,
   -4454, 16298,  1323,   268,   328,   196,  3093,   349,  1693,  1728,
    3097, 68326, 68326,  3498,  3091,  1357,  1364,  3498,  3102,   421,
    1366,  1760,  1913,  1925,   434,  1931,  3775,  1398,   465,   523,
    1451,   725,   730, -4454,  1514,  3103,  3107,   810,   206,  3498,
    3108,   224,  3100,  3110,  1530, 13976, 14750, 15524,   237,   844,
   -4454,  3111, -4454,  2760,  3117,  3118,   226,   185,  1556,  3121,
    3127,  1939,  3186,  3186,  1578,   875,  1608,   875,   918,   129,
    3186,  3186,  3186,   376, -4454, 16298,  3116,  3125,  3140, 59326,
   16298,   166, -4454, -4454, -4454,  2630,   212, -4454, -4454, -4454,
   -4454, -4454,   873, -4454,  3148, -4454,  1295,  2753,  3153, 10880,
   -4454,   320,  3153,  3715,  2484,  2484, 21716, -4454,  3152,  2123,
    2788, 17072,  1003, 17072,  1003,  3153,  3153,  3153, -4454, 21716,
    3154, 21716, 21716, -4454,  3434, -4454, -4454, 48826,  3157,  3156,
   -4454, -4454,  1021, -4454, -4454,  3147, 68326,  1319, -4454, -4454,
    2286, -4454, -4454, -4454,   246, -4454, -4454,   184, -4454,  3158,
     135,  2858,  3736, -4454, 68326,  3161, -4454,  3652,  3655,  3659,
    3661, -4454, -4454, -4454, -4454,  3664, -4454,  3668, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454,  3180, -4454, 68326, 27055,
   59326, -4454,  3182, -4454,  3797, -4454,  3583, -4454, -4454,  1945,
    3380, -4454, -4454, -4454, -4454, 42820,   557, -4454, -4454, 68326,
   -4454,   214,   346,  4105,  3335, -4454,  2799, 68326,   590,   590,
   68326, -4454,  3737, -4454, -4454,   241,  3201, -4454,  3202, 59326,
   -4454, -4454,  1221,   244, 54076, 54076,  3203, -4454,  3399,   177,
    3580, -4454,  3406,  3971,   816, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,  3216,  3825,
    3786,  3619,  3801,  3158, 42820, -4454, 68326, -4454, 24794,  3335,
   -4454,  3802,  3421,  3423,   622, -4454, 56326, -4454,   315,   539,
    3552, -4454,  3552,  1307, -4454, -4454,  3755, -4454,  3582, -4454,
   75076, -4454, 59326, 75076,  3818,  3242,  3245,  3246,  3250,  3251,
   71326, 16298, -4454, -4454, -4454, 10106,  3254, -4454, 71326, -4454,
   -4454, 21716,  2384, -4454, -4454,  2539, -4454,   315, -4454,  3783,
    2296, 16298, -4454, -4454,  3270,  2494, 68326, 68326, 68326, 68326,
   68326, 54076, 68326, -4454,  1450,  1450, -4454, -4454, -4454,   861,
   68326, -4454, 68326,   861, 54076, -4454,   272, 68326,   861, -4454,
    3785,  3477, -4454, -4454, -4454,  3858, -4454, -4454,  3850,  3272,
   -4454,  3783, -4454,  3472,   272, -4454, -4454, -4454, -4454, -4454,
   -4454,  3857, -4454, -4454, -4454, -4454,   272, -4454, -4454, -4454,
     272,   272,   272,   861,   861,  1727, -4454, -4454,  3555,    32,
    3995, -4454,  2384,   315,  3283,  3285, -4454, -4454, -4454,  1946,
   -4454,  1295,   259,  3665, -4454,  3863, -4454, -4454, -4454, -4454,
   -4454,  1643,  1639, -4454,   138,   148,  3669,   270,  3301,   992,
   -4454, -4454, -4454, -4454,  3670,  1100, -4454, 74326,  3674,  1128,
   59326,  3500,  3509, -4454, -4454,  3511, -4454, -4454,   578,  2178,
   -4454,  2687,   208,   590,  1791,   590,  1482,   590,   590,  2100,
     590,  3472,  3925,  3960, 68326,  3418, -4454,  2010, -4454, -4454,
   -4454, -4454,  2607, -4454, 31561,  3746,  2248,  3318, -4454, -4454,
   -4454, 51826, 51826, -4454, -4454, -4454, -4454, 68326,   -18, -4454,
    3319, -4454, 25550, -4454,  1590,   101, -4454, -4454, -4454, -4454,
    2537,  2339,  3620,  3834,  3503,  2339,  1525,   590,  2697, -4454,
    2431,   590,  2697,  2431,  2431, 68326,  1590, -4454,  1847,   992,
   -4454, 68326,  1894,  1973,  1894, -4454,   252, 68326, 39820, 65326,
   68326, 68326, 68326, 68326,  1973,  1791,  1482, 68326,  1482, 66076,
    1973,   590,   590,   590,   590,  2607,   992,  1482, -4454, 66076,
   -4454, 68326, 68326,  3839, 68326,  3841, 68326, 68326, -4454, 59326,
   68326, 66076, -4454,   992,  1701,  1482, 66826,  1791,  1791, 68326,
    1973, 68326,  2749,   590,  1973, -4454, 68326, -4454, -4454, 68326,
   68326,  1973,  1973,  2745,  2749,  2749,  3401, -4454, -4454, 68326,
    1482, 66076,  3342, -4454, -4454, 57076,  1590, -4454,   992,   992,
    3703, -4454, -4454,  7056,  9134,  1988,   992,  3409,  3735,   999,
   68326, -4454,  3444,  3451, -4454, -4454, -4454, -4454, -4454,  1894,
   66076, 67576,  3869, -4454, 16298,  3975,  3977,  3982,  3983,  3984,
    3985,  3986,  3987,  3988,  3989,  3990,  3991,  3992,  3997,  3998,
    3999,  4000,  4002,  4003,  4005,  4014,  4015,  4017,  4020,  4021,
    4023,  4027,  4028,  4029,  4030,    29, -4454, -4454,  4031,  4033,
    4036,  4037,  4038,  4041,  4042,    72, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454,   151, 68326,  3503,  3497,  3513, 68326,  1221,
   -4454,  3919,  2552,  3612,   284,  3553, 54076,  3744,   992,   -45,
    1144,  1144,  3832, -4454,  4224, 68326, 68326,  3452,   759, -4454,
     486, -4454, 19394, -4454,  3455,  3186,   315,  3186,  3186,  3186,
    1455, 16298, 16298,  4059,  4231, -4454, 57826, -4454, -4454, -4454,
   57826,  4231,  1967,  3186,  3456, -4454,  3969,  3996, -4454, -4454,
   -4454, 16298, 16298, -4454, 16298,   336, -4454, 16298, 16298, 16298,
   16298, 16298, -4454, -4454, 21716, -4454,  3454,  3464,  3186, -4454,
   -4454,  3465,  3186, 16298, -4454, -4454, -4454, -4454, 16298, -4454,
   16298, -4454, 16298, 16298, -4454, 16298, 16298, -4454,  3186,  3186,
   20168, 16298, 16298,  3466,  3186, -4454, 16298, 16298, 16298, -4454,
   16298,  2514, 16298,  2530, 16298,  2643, 16298, -4454, 16298, -4454,
    3186,  3186, -4454, 16298,  1998, -4454,  1482, -4454,  3498,  3186,
   -4454, 40570, -4454, -4454,    70,  2783,  3470,    70,  3473, 21716,
    3186, -4454, -4454, -4454,  1972, -4454, -4454, -4454,  3469,   315,
   -4454, -4454, -4454, -4454, -4454, -4454, 21716,   242, 21716,  3715,
   21716,  5678,  5678,  2819, 10880, -4454,  1552,  3715, -4454, -4454,
   16298, 16298, 43570, 68326,   402, -4454,  1221,    30, -4454,   164,
   -4454, -4454, 54076, -4454, -4454, -4454, -4454, -4454,   135, 59326,
    3459, -4454, -4454, -4454, -4454, -4454,  3472, -4454,  3696,  3202,
   -4454,  3666,  3675,  3676, -4454, 33814, -4454, -4454, -4454, -4454,
   33814,   100,  1161, -4454, 68326, 54076,  3471,  3475,  3478,  3680,
    3609, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454,  3335,  3499,  3200, -4454,  3580, -4454, -4454,  3495,
   -4454,  1557,  3135,  1283, 68326, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, 16298,   590, -4454,  3684, -4454,
   68326, 68326, -4454, -4454, -4454, -4454,   119, -4454,  3505,  3443,
   -4454,  1221, -4454, -4454,  3472, -4454,  4807, 27055,  3886,  1161,
   54076,  4078, -4454, -4454,  3507,  1295,  3508, 24038,  3550, -4454,
    3504,  2680, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
    3580,  3120,  4074,  3335, 75076, 75076, 75076, -4454, -4454, -4454,
    3556,  3051,  3051,  3564,  3564,   323,  3865, -4454, -4454, -4454,
   -4454,  2858, -4454, -4454,  1590, -4454, -4454, -4454, -4454, -4454,
     992,   315, -4454, 30810, -4454,   590,  4102, -4454,   315,  3532,
   68326, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,  3690,   861, -4454,
   -4454, -4454, -4454, -4454,  3884,  3200,  3713,  4102, -4454,   861,
   54076,   861, 68326, 68326,   861, -4454, -4454, -4454,  4117, -4454,
     590, -4454, 18620, -4454, 68326, -4454,  3546, -4454,  3980, 68326,
    4161,  3554, 21716,  3558, 21716,  1590,  3766,  3559,  4312,  1482,
    3135, -4454,  3552,  3926, -4454, -4454,  2858, -4454,  3873,  3929,
    3564,  2338, -4454, -4454, -4454, -4454,   461,  1482,  1482,  1482,
    1482,  2687, -4454,   948,   884,  2260,  1590, -4454,   208, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454,   590,  4176,  3934,  3567, -4454, -4454, 57826,  4272, -4454,
   -4454, -4454, -4454, -4454, -4454, 16298, -4454, -4454,  1273,   358,
    1435, 25550, 68326, 44320, -4454,   -81, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454,   992,   590,  3814,  3822,  3826,  3828,  3830,
    3856, -4454, -4454,  4001, -4454,   590,  1031,   590,   590,   590,
     590,  1482,   590,   590,  1986, -4454, -4454, -4454,   302, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, 59326,
   -4454, -4454, -4454, 68326,   255, 68326,  3595,  4103,  4106,   700,
   68326,  1894,  3605,  3761,  3778, 50326, 84047, -4454, -4454, -4454,
    4011,  4011,  2174,   463, 66076, -4454, -4454, 68326, -4454, -4454,
    1790,  3607, -4454,  1590, -4454, -4454, -4454, -4454, 52576,   590,
   -4454,  3819, -4454, -4454, 68326,  3607, -4454, -4454,   472, -4454,
    3747,  3823,   590, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, 84047, 66076,  3616, -4454,  2171, -4454, -4454,
   -4454, -4454, 66076,  3809,  3811, -4454, 68326, 66076, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, 68326, -4454, -4454, -4454, 56326, 57826, -4454,  3271,
    3122,  6200, -4454, -4454, -4454,  3023, -4454, -4454, -4454,   184,
    4022,   992,  2274,   192, -4454,  3945, -4454, -4454,  2663,  4024,
    4025,  3628, -4454,  3630, -4454,  3632, -4454, 64576,   315,  3638,
    1482,   590,  1482,  1482,   590,   590,  1482,  1482,   590,   590,
     590,   590,   590,   590,   590,   590,  1482,  1482,   590,  2120,
     590,  1482,   590,   590,  1482, 58576,  1253,  1482,   788,  5657,
   -4454,  3639,  3639,  3642,  3642,  3643,  3643,  3645,  3145, -4454,
   -4454,   215,  3647,  2389,  1221, 59326,  3654, -4454,  4198,   992,
     992,   992,   992, -4454,   307, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,   184,  1292, 59326,
   75076, -4454,  3056,  1442,  3845,  3651, -4454,  2296, -4454, -4454,
   -4454, -4454, -4454, 68326,  2435, -4454, 68326, -4454, 37569, -4454,
   -4454, -4454, -4454,   962,  1529, -4454,  1895,  1231, -4454,   364,
    3951, -4454, -4454,  1089,  3656, -4454, -4454,   401, 17072,  1649,
    3186, -4454, -4454, -4454, -4454, -4454, 16298,   315,  2358, -4454,
    3658,  3658,  3660, -4454,  3662,  4004,  3658, -4454,  4366, -4454,
   -4454,  4187,  3660,  4188,  3658, -4454,  3718,  3673,  3681,  3682,
    3186, -4454,  3186, 16298, 16298,  1669,   355,  1679,  4388,  3958,
     950,  1054,   387, -4454,  1704,  3993,  3186, -4454,  3186, -4454,
    1714,  1792,  1811,  1840,  1135,  1867,  2004, -4454, -4454, 17072,
    1873,   310,   389,  3186, -4454,  1875,  1151,  1168,  1887, 16298,
    1889, 16298,  1903, 16298,  1934,  1955, -4454, -4454,  1982,  3689,
    3689,  3686,  3691, -4454, 68326, -4454, -4454, -4454, -4454,  3774,
    3777,  3186,  3693,  3693,    70,  3186,    70,   141, -4454, -4454,
   68326, -4454, -4454, -4454, 16298,  1179,   182, -4454, -4454, 21716,
     411, 21716, -4454,  3699, -4454, -4454, -4454, -4454,  4186,  4461,
   -4454, -4454,  3935, -4454, -4454, -4454,  3161, -4454, -4454,   123,
    4323,  3711, -4454, -4454, -4454, -4454, -4454, 42820, -4454,  1180,
    3724, 45070, 54076,  4104,  3200, 18620, -4454,  3501, 68326,  1894,
    4257,   908,  3853,  4219, -4454, -4454, -4454,   315, -4454, 54076,
   -4454, -4454, -4454, 68326, 68326,  1103, -4454, 35316, -4454, -4454,
   -4454, -4454,  3738, -4454, -4454,  4344, -4454,  4308, 42820,  3158,
   54076, 16298,  3120, 16298,  3739,  3740,  3741,  3742,  3745,  3748,
   25550, 25550,  4251,  4256, -4454,  4125,  1541,  4125, -4454, 38319,
   25550, 25550,  2996,  2663,  4469,  4302,  4074,  2858,  2858,  2858,
    3552,  3552, -4454,  4420, -4454, -4454, -4454, -4454, -4454, -4454,
     316, -4454, 10106, -4454, -4454,  1791, -4454,   209, -4454, 54076,
   -4454,  4151, -4454, -4454, -4454, -4454,  3911, -4454,   272,   272,
   -4454,  4034, -4454, -4454, -4454,  1482, -4454, -4454, 68326,  2346,
   68326,  2999, -4454,  4477,  3758, 21716,  4368,  3760,  4303, -4454,
    3564,  3552,  3051,   -57, -4454,   126,  1376, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454,  1537,  4430,  3520,  4297, -4454,
   -4454, -4454, -4454, -4454,   590,  4384, -4454, -4454,  1610,  4267,
   -4454, 25550,  3580, 44320,  1028, -4454, -4454,  3772, 68326,   590,
   -4454, -4454, -4454,  4437, -4454,  4439,  1935,  4389, -4454, -4454,
     319, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454,  1525, -4454,  3784,  1590,  4153,  3787, 16298,
   68326, -4454, -4454,  3827, -4454, -4454,  3789, -4454, 41320,  1144,
    1144,  2031, -4454, -4454, -4454, 84047, -4454,  3658,  3658,  3658,
   -4454, -4454,  1816,  3660, -4454, -4454,  3790, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454,   438,  2677, -4454, -4454,   438,
   -4454, -4454, -4454,   134,  2190, -4454, -4454, -4454, -4454, -4454,
    3791, -4454,  3658,  3660,  3660, -4454, -4454,   438,  3658, -4454,
    3658,  4120,  3916, -4454,   157,  3658,  3658,  3658,  3793,  3662,
   -4454, -4454, -4454, -4454, -4454,  4440,  4441, -4454, 84047, -4454,
   68326, -4454,  3547,  3547, -4454, -4454, -4454, -4454,  4006, -4454,
   -4454,   433, -4454, 68326, -4454, -4454, 68326, 68326,    12,   119,
    3798, -4454, -4454, -4454,  3806,     9, -4454,   -42, -4454, -4454,
    3736,  2037,   426,  4007,  2440, -4454, 68326, 68326, -4454, -4454,
   67576, -4454,  1482, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   36067, -4454, -4454, 36818, -4454, -4454,   -91, -4454, -4454,  2022,
   -4454, -4454, 41320,   992,   992, -4454,   335, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454,  4185, 41320,  1276, 68326,
     590,  2431,  2431,  1590,  2901, -4454,  4169, -4454,  2462,  2858,
     208, -4454, -4454,  3092, -4454,  3805, -4454, -4454, 68326,  2052,
   -4454, -4454,  5655,  1895, -4454,  1089,  4197, 68326, -4454, -4454,
   -4454, -4454,  4060, -4454, -4454, -4454, -4454,  4200,  5678, -4454,
   -4454,   315, 16298,  1079, -4454, -4454,   438,  4206, -4454,  1421,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454,  3810, -4454, -4454, -4454, -4454, -4454,  5678,
    5678, -4454, -4454, 16298, -4454, 16298,   259,  3816, 16298, 16298,
   -4454, 16298, -4454,   334,  3817,  3947, -4454, -4454, -4454, -4454,
   -4454, -4454, 16298, -4454, -4454,  5678, -4454, 16298, -4454, -4454,
   16298, -4454, -4454, 16298, 16298, -4454,  2033, -4454,  2054, -4454,
    2099, -4454, -4454, -4454,  1590,  3824,  3829,  1482,  3186, -4454,
    3831,  4191, -4454, -4454, -4454, 16298, -4454, -4454,  3186, -4454,
    3186,  4392, -4454,  2069, -4454, -4454, -4454, 16298,  1179, -4454,
   -4454, -4454, -4454, -4454, -4454,  4164, -4454,  4855, 33814,  4026,
    4390, -4454, -4454, -4454, -4454,  1225, -4454, -4454,  2082, 68326,
    4577,  4225, -4454,  1894,  4257,  4333, -4454,  4361, -4454, -4454,
   -4454, -4454,  3838,  3607,  3836, -4454,   992,  1674,  2083, -4454,
   -4454, -4454,  3840, 18620,  3837, -4454, 27055, 54076,  4416,  3158,
    1284,  2663,  2107, 25550, -4454, -4454, -4454, -4454, -4454,  2680,
    3835,  3844,  3848,  2680, -4454, -4454, -4454,  4358, -4454,  4125,
    4125,  4359,  4360, -4454,  3123,  4094,   473, -4454, 16298, 16298,
    3922,  4302,  3564,  3564,  4220,  1590, -4454, -4454,  3200, -4454,
   -4454,  3158, -4454,  3200, 54076,  3335,   861, 16298, -4454,  2121,
   -4454, -4454,  2128, -4454,  4352,  4153, -4454,  3144,  1590, 68326,
    4582, -4454,  3564,  3564,  3051, -4454, -4454, -4454,  3564,  4227,
     -34, -4454,  1590, -4454,   144, -4454, -4454,  3560, -4454,   590,
    4584,  4585,  4482,  4588,  1610, -4454,  1236, -4454,  1028,  3335,
    1538, -4454,  3874, -4454,  1171, -4454, -4454, -4454, -4454, -4454,
   -4454,   912, -4454, 41320, -4454, 68326,  2129, -4454, 41320,  2170,
    3870, -4454, 41320, 16298, -4454,  2138, -4454,   210, -4454, -4454,
   -4454, 50326,  4120, -4454, -4454, -4454,  4603,   394, -4454,  4605,
   -4454,   438, 57826, -4454, -4454, -4454, -4454,   259, -4454,  1526,
   -4454,   438, -4454, -4454,  4018, -4454, -4454, -4454,   259,   438,
   -4454, -4454, -4454, -4454,  1641, 68326,   433, -4454, -4454, 56326,
    2658,   590,  3606,  3915, -4454,  4032, -4454,  4522,  1645,  4385,
    1221,  4386,  4586, -4454, -4454,  3959, -4454,  4452,  4393,   744,
   -4454,  4622, -4454,   438,  4622,  1641,  4285, -4454,  1641,  1641,
   -4454,  3843,   433, -4454, -4454, -4454, 68326, 68326, -4454, -4454,
   -4454, -4454, -4454,  3890, -4454, -4454,  4287,  4022, -4454,  4289,
   -4454, -4454,  4248, -4454, 16298, 16298,  4290, 68326,  4291, -4454,
    4590,  4650,  3607,  1395, -4454,  2139, -4454, -4454, -4454,  2151,
   -4454, -4454, -4454,  2156, -4454, -4454,  3897, -4454,  2179, -4454,
   -4454, -4454, 68326, -4454,  2191,  2202,  2431,  2431,  2496,  1276,
    3904,  2221,   590,   590,   590,   590, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454,   126,  1400, -4454,  3409, 41320,  3905,  5587,
   -4454,  4158,  4189,  3906,  3909, -4454, 84047,   590,   274, 68326,
    1782,   315,  3908,  3914,  3920,  3921, -4454,  3924,  2226, -4454,
    3927,  3930,  2184,  3912, -4454, -4454,  3186,  2189,  1328,  2253,
    4337,  4431, -4454,  4276, -4454,  2193,  1796,  2219,  2228,  2233,
    2378, -4454, -4454, -4454, -4454, -4454, -4454,  3931, -4454, -4454,
    4637,  4307,   315, -4454, -4454,   303,    70, -4454,  2254,  4535,
    4427, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, 54076,  4328,  4505,  4695,
    3335,   146, 68326,  4225,  4571, -4454, -4454, -4454,  4154, -4454,
   68326, 18620, -4454, -4454,  1674, 68326, 42070,  3949,  3738, -4454,
    3158, 54076,  1278, -4454,  3458,  2330, -4454, -4454,  4463,  4464,
   -4454, -4454, 16298,  3954, 16298,  3955, -4454, -4454,  1894,  1894,
   -4454,   473, -4454, -4454,   315,   605, -4454,   315, 68326, -4454,
    3922, -4454, -4454, -4454, -4454, -4454,  3472,  3158, -4454, -4454,
     315, -4454, 68326, -4454,   300,  2266, -4454, -4454,  3956,  3953,
     590, -4454, -4454,  3564, -4454,  3564,  3051, -4454,  4609, -4454,
   -4454, -4454,  4610, -4454,   259,   259,  4677,   259, -4454,  4683,
    4684,  1236, -4454, -4454,  4345,  4345, -4454,  2280,  4114, -4454,
    4153,  2283, -4454, 68326,  2305,  2403,   980, 41320,  4362, -4454,
   -4454, -4454, -4454, -4454, -4454, 57826, -4454, -4454,  4622,  2310,
   -4454, -4454, -4454,  2318, -4454, -4454, -4454, -4454, -4454,  1641,
   -4454,  3968, -4454,   420,  4108, -4454, -4454, -4454, -4454, -4454,
    3666,  3675,  3676,  2120,  2120, 16298, -4454, -4454, -4454, -4454,
    4371,  4122, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   56326, -4454,  4726,  4725, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454,  3973, -4454, -4454, 16298, -4454, -4454,  2302, -4454,  4153,
   -4454, -4454, -4454, -4454,   315,  5678,  4667, -4454, -4454,  4239,
     590,  4608,  2435,  4387, -4454, -4454,  1482, -4454, 68326, -4454,
   68326, 68326, -4454,   590,  4009, -4454,  3994,   369, -4454, -4454,
   -4454,  1525,   366, -4454, -4454, -4454,  4533, -4454,  4363, -4454,
    2274,  2319, -4454, -4454,   590,   426, -4454, 68326,  3547, -4454,
   -4454, -4454, -4454,  4008,  4010, -4454, 68326,  4568, -4454, -4454,
   -4454, -4454, -4454, -4454,  4396, -4454, -4454, -4454, 16298, -4454,
   -4454, 16298, -4454, -4454,  4432,  4599, -4454, -4454, -4454, -4454,
   -4454, -4454,  4016,  1482, 16298,  4727,   -20, -4454, -4454,  3186,
   -4454, -4454, -4454,  1225, -4454,  4391, 54076, -4454,  3200,  4225,
    2663, -4454,  4510, 68326, -4454, -4454, -4454, -4454, -4454,  4012,
   -4454, -4454,  3158,   216, -4454, -4454, -4454, -4454,   315, 68326,
     315, 68326,  4583,  4583, -4454, -4454, 16298, -4454,  4758,  4035,
   -4454, -4454, -4454, -4454,  4039,  4312, -4454, -4454,   282, -4454,
   -4454,  3564, -4454, -4454, -4454, -4454,   259, -4454,   259,   259,
   -4454,  4509,  4509,   369,  1828,  2879, -4454,   366,  2357, -4454,
     980,  2171,   590,   992, -4454,   980, -4454, -4454, -4454, -4454,
   -4454,  4044, -4454, -4454,   438,   259,   438, -4454, 68326,  4462,
    4045, -4454, -4454, -4454,  2446, -4454, -4454, -4454, -4454,  4046,
    2510, -4454, -4454,  2365, -4454, -4454, -4454, -4454, -4454,  4152,
   -4454,  4118, -4454, -4454, -4454, -4454, -4454, 68326, 68326,  4397,
     402,   369, -4454, -4454,  2373,   402,   366, -4454, -4454,  4746,
   -4454, -4454,   980, -4454,  4290,  4324, -4454, -4454, -4454,  1651,
   84047,  4651,  4048, -4454,  2520, -4454, -4454, -4454,  4049,  4047,
   16298, -4454, -4454, -4454, -4454,   546, -4454,  4695, -4454,  4162,
   -4454, -4454, -4454,  4192,  3580,  4051,  4052,  4053,  4054,  1777,
    4056,  4061, -4454,  4063, 68326, 21716,  4064,  4662,   835, -4454,
   -4454, -4454, -4454, -4454, -4454, 51826, -4454, -4454, -4454,  4068,
    4228,   992,  4668,  4669,   992,   992,   992,   992,  4070,  2879,
   -4454,  4645, -4454,  4120, 68326, -4454, -4454, -4454,  1482, -4454,
    2171, -4454, -4454, -4454,  2380, -4454,  1423,  4428, 68326, -4454,
   16298, -4454, -4454,  4278, -4454, 81826,  1613, -4454, -4454,  4071,
    4055,  2327, -4454, -4454, -4454, -4454, -4454,  1221,   402,  2440,
   -4454, 84047, -4454, -4454,  3547,  4365, -4454, -4454, -4454,  3318,
    3204,  4367, 16298,  4150,  4166, -4454, -4454,  4155,  4160, -4454,
    4196, -4454, 68326,  2607, 69826,  3458, -4454, -4454,  4795, -4454,
    4798, 67576, 67576, -4454, -4454,  3366, 68326,   992,  4318, -4454,
   -4454,  4085, -4454, -4454,   133,   590,   992,   992,  1221,  1221,
    1590, 68326,  4301, -4454, -4454,   992, -4454, -4454, -4454, -4454,
   -4454, 68326, -4454, -4454, -4454,   505, -4454, -4454,  2524, 16298,
    4702,  4226, 68326,  1596, -4454, 83326, 83326, 68326, -4454, -4454,
   -4454, -4454,  7800, -4454, -4454,  1116, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,  4826, -4454,  4083,
   -4454, -4454, -4454, -4454,  4800,  4481,  4803, -4454, 68326, -4454,
   -4454, -4454,  4590,  3547,  4019, -4454,  1440, 16298,  1814, -4454,
    4849,  1883,  1915, -4454,  5678, -4454,   313, -4454, -4454, -4454,
   72826,  3836,  4395,  4167,  2385, -4454,  9337, -4454, -4454, -4454,
    4099,  2400,  4317,  2405,  3135, -4454, -4454,  2407, -4454, 20942,
   -4454, -4454, -4454, -4454,   590,   590, -4454, -4454, -4454, -4454,
   59326,  2421, -4454, 59326, -4454,  1505,  1505,  1774,   315, 16298,
   -4454, 16298,  4238, -4454, -4454,  4681, 68326, -4454, -4454, -4454,
   -4454, 16298, -4454, 81826, 81826, -4454, -4454, -4454, -4454,  4842,
    4494, -4454,  4495,  4112,  4741, -4454, -4454, -4454, -4454,  4751,
   81826, -4454, -4454, 59326, -4454,  5678, -4454,  3204, -4454, -4454,
    4194,  4403, -4454,  4199, -4454,  2970, -4454, -4454,  2858,  4661,
    4272,  1278, -4454, 69826,  4201,  3547, -4454, -4454,  1590, -4454,
    4317,  4425, -4454,  4085, -4454,  2424, -4454,  3715, -4454, -4454,
    2879, -4454,  4301, -4454, -4454,  4885, -4454,  1067,  4514,  4515,
   -4454, -4454,  3959,   315,   315, -4454,   395, -4454, -4454,  4648,
    4742, 16298,   315, 78076,  4129, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, 82576, 16298,
   -4454,  1116,  4826, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, 81826,  1974, -4454, -4454, -4454, -4454, -4454,  4856,  4267,
     216, -4454, -4454,  4734, -4454, -4454, -4454, -4454, -4454, 20942,
   -4454, -4454, -4454, -4454, -4454,  4298,  4778, -4454,  4275, 16298,
   81826, -4454,  4756, -4454,  4686,   315,  4625,  4142, -4454,  4143,
     315,  4796, 83326, 83326, -4454,  4019, -4454, -4454,   259,  4691,
   -4454, -4454,  4221, -4454,  1505,  1505, -4454,   416, -4454,   315,
   78826,  4869, 68326, -4454,  4350, -4454, -4454, 16298,  4783, 60076,
   79576,  4156, -4454, -4454, -4454, 81826, -4454,  4554,  4163,  1278,
   -4454, -4454, 16298, -4454,  4775,  4355, -4454,  4159, -4454, 81826,
     315, 81826, -4454, -4454,  4719,  6615,  1911, -4454,  4165, -4454,
   -4454,   805, 33063,  4434,  1205,   315,  4882, 81826, 68326, 75826,
    4784, 80326,  4745, 68326,  3547,  4747,  4750, -4454, -4454, -4454,
   -4454, -4454, 59326,  2444, -4454, -4454, 68326, -4454,  1278, -4454,
   -4454, -4454,  1566,  1566,  4562,  4373, -4454, 76576, -4454,  2714,
    4496,  4314, -4454, -4454,  4827,  1147, -4454, -4454, -4454, 34565,
    4179, -4454,   992,  2296, -4454,  4576, -4454,  4578,   105, 81826,
   81826, -4454, -4454, -4454, -4454, 48076, 16298, -4454, -4454, -4454,
   -4454,  2349, -4454, 68326, 18620,  4793,  4258, -4454, -4454, 77326,
   81076, -4454, -4454, -4454, 26305, -4454, -4454, -4454,  4763, -4454,
     315, -4454, -4454, -4454, 48076, -4454, -4454, -4454
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1887,  2937,  1195,  2889,     0,     0,     0,     0,     0,     0,
    2891,  2937,   107,  2013,  2014,     0,  1830,     7,     0,  1195,
     363,     0,     0,   119,     0,  1844,     0,  2075,     0,     0,
    1195,     0,  2068,     0,     0,  1195,  1892,  2052,   340,     0,
    2891,     0,  1260,     0,  1922,  2751,     0,     0,     0,     0,
    1905,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2752,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,    98,  1157,
      99,    33,    83,    28,    29,    32,    76,    82,    77,    78,
      91,  1226,  1223,  1751,  1225,  1238,  1246,  1247,  1248,  1888,
      45,    58,    49,    46,    48,    52,    51,    60,    61,    47,
      59,    56,    57,    50,    54,    55,    53,    71,    84,   103,
       0,    43,   100,    96,    44,    63,  2015,    64,    85,    80,
      73,   104,    74,    92,    94,    93,    75,   102,    97,    87,
      18,    68,    88,    67,    14,    35,    89,    90,    81,   105,
      72,   101,    70,    34,     0,  1027,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1828,     0,   968,  2935,  2936,
    2937,  1197,  1196,     0,  2891,  2172,  1182,     0,  2257,  2256,
    2259,  2261,  2262,  2263,  2264,  2265,  2266,  2208,  2268,  2269,
    2270,  2271,  2272,  2273,  2209,  2274,  2275,  2276,  2277,  2278,
    2279,  2210,  2211,  2281,  2282,  2283,  2284,  2286,  2212,  2213,
    2287,  2288,  2289,  2291,  2292,  2293,  2294,  2295,  2296,  2297,
    2215,  2298,  2216,  2299,  2300,  2302,  2303,  2335,  2304,  2305,
    2306,  2307,  2308,  2309,  2218,  2310,  2311,  2312,  2313,  2314,
    2315,  2316,  2317,  2318,  2219,  2319,  2320,  2322,  2324,  2325,
    2326,  2327,  2328,  2220,  2329,  2330,  2331,  2333,  2221,  2336,
    2338,  2339,  2340,  2342,  2341,  2343,  2344,  2247,  2345,  2346,
    2205,  2348,  2349,  2350,  2351,  2352,  2354,  2355,  2248,  2356,
    2357,  2358,  2359,  2222,  2223,  2361,  2362,  2363,  2364,  2370,
    2365,  2366,  2367,  2647,  2369,  2224,  2371,  2225,  2375,  2374,
    2376,  2168,  2377,  2169,  2378,  2226,  2381,  2382,  2383,  2384,
    2227,  2386,  2387,  2388,  2389,  2390,  2391,  2392,  2228,  2393,
    2394,  2395,  2396,  2397,  2398,  2648,  2400,  2401,  2402,  2403,
    2405,  2406,  2408,  2410,  2411,  2412,  2413,  2415,  2416,  2417,
    2427,  2418,  2419,  2420,  2422,  2421,  2423,  2424,  2425,  2428,
    2407,  2430,  2431,  2432,  2433,  2434,  2435,  2436,  2438,  2439,
    2440,  2441,  2442,  2443,  2444,  2445,  2446,  2447,  2448,  2449,
    2450,  2451,  2452,  2453,  2454,  2455,  2456,  2457,  2459,  2460,
    2461,  2462,  2249,  2229,  2464,  2466,  2467,  2469,  2472,  2473,
    2474,  2476,  2480,  2481,  2482,  2483,  2484,  2486,  2485,  2487,
    2490,  2492,  2493,  2491,  2494,  2495,  2496,  2230,  2231,  2498,
    2499,  2500,  2250,  2502,  2504,  2503,  2251,  2505,  2506,  2507,
    2509,  2510,  2511,  2512,  2513,  2515,  2516,  2517,  2518,  2519,
    2252,  2520,  2521,  2232,  2522,  2253,  2523,  2525,  2524,  2526,
    2528,  2529,  2527,  2233,  2532,  2534,  2535,  2537,  2538,  2540,
    2234,  2542,  2543,  2544,  2546,  2545,  2547,  2235,  2548,  2549,
    2554,  2555,  2556,  2557,  2651,  2558,  2559,  2207,  2236,  2560,
    2237,  2562,  2563,  2564,  2565,  2566,  2567,  2568,  2569,  2570,
    2571,  2572,  2573,  2575,  2576,  2238,  2577,  2578,  2579,  2580,
    2239,  2581,  2583,  2584,  2585,  2586,  2587,  2588,  2255,  2589,
    2590,  2591,  2592,  2593,  2594,  2595,  2597,  2598,  2599,  2600,
    2606,  2604,  2605,  2607,  2608,  2609,  2240,  2610,  2611,  2613,
    2614,  2615,  2616,  2241,  2242,  2617,  2618,  2619,  2620,  2622,
    2623,  2624,  2625,  2627,  2629,  2630,  2631,  2632,  2633,  2634,
    2635,  2636,  2243,  2637,  2638,  2639,  2649,  2541,  2260,  2385,
    2628,  2301,  2561,  2399,  2463,  2650,  2372,  2280,  2214,  2347,
    2360,  2465,  2479,  2497,  2533,  2603,  2612,  2458,  2477,  2489,
    2373,  2539,  2574,  2601,  2254,  2626,  2414,  2368,  2206,  2321,
    2323,  2478,  2514,  2258,  2379,  2267,  2437,  2475,  2552,  2550,
    2551,  2553,  2536,  2471,  2337,  2470,  2409,  2508,  2404,  2429,
    2501,  2426,  2530,  2488,  2353,  2531,  2582,  2468,  2285,  2290,
    2217,  2380,  2596,  2602,  2621,  2334,  2332,   294,  2179,   276,
    2180,  2201,  2202,  2203,  2200,  2204,     0,     0,  2740,  2739,
       0,     0,  2892,  2893,   624,     0,     0,     0,     0,     0,
       0,  1831,     0,   904,   624,   624,     0,   906,   624,     0,
     903,     0,   211,  2920,  2920,  2937,  2939,  2941,  2259,  2208,
    2272,     0,  2141,     0,     0,     0,  1602,     0,  2212,     0,
    2292,  2294,     0,     0,  1288,  1288,   785,     0,     0,     0,
    2317,  2318,  2147,     0,     0,     0,  2138,  2148,  2361,  2365,
    2367,     0,  2140,  2376,     0,     0,     0,     0,  2397,  2145,
       0,     0,  2441,  2443,     0,     0,  2447,  2448,  2449,  2450,
    2124,  1347,     0,   785,  2137,  2144,  2130,  2494,  2495,     0,
    2505,     0,     0,  2540,     0,     0,  2545,  2554,     0,     0,
    2585,     0,     0,   785,  2123,  2606,  2604,  2605,  2607,     0,
    2139,  2240,  2146,     0,  2620,  1288,   785,   785,     0,     0,
       0,  2631,  2632,  2639,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1280,     0,     0,     0,  1346,     0,  1427,  2911,  1805,  1279,
    1283,  1300,  1305,  1322,     0,  1339,  1358,  1359,  1361,  1463,
    1360,  1366,  1484,  1367,  1485,  1365,  2134,  1364,  1363,  2135,
    2136,  1281,  1357,  2159,  2179,  2158,  1373,  2909,  1828,  1828,
    1828,     0,     0,  1828,  1828,     0,     0,  1828,     0,  1828,
    1828,  1828,     0,  1828,     0,   112,  2021,   364,   365,     0,
    2788,  2801,  2802,  2798,  2803,  2821,  2804,  2808,     0,  2800,
    2869,  2192,     0,  2807,     0,  2869,  2805,     0,  2869,     0,
    2806,  2811,  2822,  2869,  2799,  2181,  2191,  2190,  2869,  2641,
    2640,  2182,  2642,     0,  2790,     0,  2164,     0,     0,  1846,
    1847,  1845,  1114,     0,     0,  2076,  2077,     0,  2080,     0,
    2081,  2084,     0,  2740,  2734,  2736,     0,     0,     0,     0,
       0,  1198,     0,  1849,  1893,  1850,  1848,  1828,     0,   330,
     339,   341,   342,   338,  2788,     0,     0,  2893,  2904,  2919,
    2914,  2913,  2916,  2917,  2918,  1265,  2915,  2912,     0,  1261,
    1263,  1264,   840,     0,     0,  2682,  2685,  2453,  2487,  2686,
    2608,  2683,  2541,  2684,  2254,     0,     0,  2185,  2709,  2644,
    2645,  2646,  2643,  2186,  2652,     0,  2676,     0,  1990,   342,
    1126,  1151,  1134,  1127,  1151,  1259,  2164,  1906,     0,     0,
       0,  2749,  2750,  2748,  2078,     0,  1258,  1869,     0,  1728,
    1731,  1733,  2985,     0,     0,     0,  2980,     0,  2986,     0,
       0,  2158,     0,     0,     0,     0,     0,  2910,     0,     0,
       0,     0,     0,     0,     1,    10,     0,     0,  1288,  2189,
    2620,     0,  2188,  2187,  2193,  2195,  2846,  2867,  2873,     0,
    1128,  1143,     0,     0,     0,  1224,  1267,  1228,     0,  2906,
    1760,  1752,     0,  2906,  1760,  1235,  1751,  1237,  1899,  1892,
    2017,  2361,  1887,  2018,     0,   960,  1028,     0,   964,     0,
       0,  2753,     0,   962,     0,  1984,  1035,     0,     0,   989,
       0,     0,  2946,   966,     0,  2890,     0,  1208,  1219,  1594,
     293,     0,   121,   123,  1165,  1824,  1184,     0,  2896,     0,
       0,     0,     0,  2942,     0,     0,     0,   476,     0,   905,
     908,     0,     0,     0,   907,   910,     0,     0,   624,  2946,
    2946,  2920,  2940,     0,     0,  1721,  1380,  1721,  1721,  1721,
    1603,     0,     0,     0,     0,     0,     0,     0,  1721,     0,
    1421,  1394,     0,  1422,     0,     0,     0,  2149,     0,     0,
       0,  1377,     0,     0,  1594,     0,  1571,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1598,  1600,  2158,  1721,
       0,     0,  1721,     0,     0,     0,     0,     0,  1293,   836,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1721,  1721,     0,     0,  1721,  1435,  2151,     0,     0,
       0,  2150,     0,     0,     0,  2143,  2142,  2125,     0,  1438,
    1440,  1439,     0,  1721,  1721,     0,     0,     0,  1721,  1721,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1370,  1369,  1371,     0,     0,  2911,     0,  2691,
    1567,  1569,     0,     0,  1343,  1342,     0,  1341,  1340,  2178,
       0,  1282,     0,     0,  1287,  1286,  1348,  1349,  1350,  1351,
       0,  1352,  1353,  1354,     0,     0,     0,     0,     0,     0,
    1345,  1344,     0,     0,     0,     0,  1324,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1372,     0,     0,  2173,
    2126,     0,     0,  1479,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1832,     0,     0,     0,     0,     0,     0,
       0,  1828,   114,     0,     0,  2789,  2781,  2819,  2818,  2823,
       0,  2820,  2816,  2824,  2825,  2809,     0,  2795,  2813,     0,
    2797,  2815,  2814,  2794,  2810,  2817,  2796,     0,  2792,  2784,
       0,     0,  1717,  2758,     0,     0,   120,     0,  1115,  1850,
       0,  2999,  2996,  2074,     0,  2085,  2086,  2082,     0,     0,
       0,     0,     0,  1983,  1982,     0,     0,  2069,  2905,  1200,
       0,     0,     0,  1851,     0,     0,  2054,  2061,  2059,  2063,
    2053,  2056,   331,     0,     0,   361,  2775,     0,     0,  2784,
    2899,  2896,  1251,  1262,   839,     0,     0,   842,  2708,  1870,
    1871,   851,     0,   841,     0,     0,     0,     0,     0,  2654,
    2718,  2715,  2714,  2667,  2662,  2661,  2197,  2842,  2660,     0,
    2695,     0,   846,   848,   847,  2705,   845,     0,     0,  2608,
    2655,  2676,     0,     0,  2653,     0,     0,   840,  2002,     0,
       0,  2002,     0,  1760,  1986,  1991,  1989,     0,  2688,  1954,
    2689,  1982,     0,  1930,  1953,     0,  1907,  1946,     0,  2690,
       0,  1985,     0,  1760,  2002,  2002,  2002,  2002,  2002,     0,
    2002,  1923,     0,     0,     0,     0,     0,     0,   337,  1156,
    1155,  1130,  1152,  1153,     0,     0,  1133,  1135,  1136,   201,
    1904,  2997,  2998,  1876,     0,  1729,     0,     0,     0,  2129,
    2128,  2982,  2127,  2990,  2992,  2976,     0,  2979,  2978,  2987,
       3,     0,     0,   565,     4,     6,     0,     0,  1227,  1244,
       0,  1243,    11,   106,  2196,     0,     0,     0,     0,     0,
       0,     0,  2864,     0,     0,  1010,     0,     0,     0,     0,
       0,  1163,     0,  1159,  1158,     0,  1131,  1145,  1272,  1271,
    1274,  2329,     0,     0,  1804,  1798,  1801,  1800,     0,  1266,
    1230,  1229,     0,  2908,  2907,     0,  1231,  1761,  1769,  1770,
    1768,  1762,  1763,  1767,  1766,     0,  1233,  1760,  1760,  1236,
    1903,  1902,  1901,     0,  1899,  1114,     0,     0,  2007,  2008,
    2009,  2010,  2011,  2006,  2005,  2019,  2020,  2944,  2945,  2943,
     853,  2938,   277,  2755,     0,     0,   277,     0,     0,  1872,
    1872,     0,  1872,  1872,   544,     0,   543,  1872,   630,   497,
     499,   500,   501,   502,   503,   504,   505,     0,  1112,  1872,
    1112,     0,  1872,  1872,  1112,  1872,     0,     0,  1872,  1872,
    1872,  1872,     0,     0,   854,  1872,     0,     0,  1112,     0,
    1872,     0,  1096,     0,     0,  1872,  1872,  1872,  1872,  1872,
    1112,     0,     0,  1872,  1872,     0,  1122,     0,     0,  1872,
    1872,  1872,  1872,     0,  1872,  1872,     0,  1872,     0,     0,
    1872,  1057,  1058,  1872,  1068,   626,   654,   655,     0,   958,
     959,  1029,  1031,  1100,  1037,  1036,  1065,  1070,  1098,  1099,
       0,  1829,  3011,   970,     0,     0,   969,  2946,  1179,     0,
       0,   896,   895,     0,     0,  1219,  1210,  1596,     0,  1595,
     275,     0,     0,  1167,  1166,     0,  1164,  1192,  1191,  1189,
       0,  1190,  1188,  1183,  1185,  1186,  2895,     0,     0,  2897,
    2901,     0,   209,     0,     0,     0,     0,     0,   624,     0,
     478,     0,   909,  2854,  2865,   225,   207,     0,   911,     0,
     935,     0,     0,   624,     0,     0,     0,  2934,  2922,  2929,
    2930,  2933,  2932,  2931,     0,  2928,  2921,  2924,  2925,  2927,
    2926,  2946,     0,     0,  1722,  1721,     0,     0,     0,     0,
       0,     0,  1604,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1289,     0,   786,  1445,     0,     0,     0,     0,
       0,  1693,  1694,  1695,  1696,  1704,  1697,  1698,  1699,  1706,
    1711,  1700,  1701,  1707,  1708,  1709,  1702,  1710,  1705,  1703,
    1712,     0,  1692,     0,     0,  1716,  1713,  1715,  1714,     0,
    1572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1721,     0,     0,     0,  1721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1455,     0,     0,     0,     0,     0,  1721,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1417,     0,  2161,  2160,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1518,     0,  1518,     0,     0,
       0,     0,     0,     0,  1374,     0,     0,     0,     0,     0,
       0,     0,  1278,  1285,  1284,  1291,  1290,  1292,  1296,  1301,
    1294,  1298,     0,  1355,  2266,  1303,     0,     0,  1336,     0,
    1306,  1316,  1337,  1320,  1327,  1328,     0,  1323,     0,  1325,
    1326,     0,  1330,     0,  1329,  1333,  1334,  1335,  1338,     0,
       0,     0,     0,  1362,  1368,  1388,  1389,  1283,     0,  1480,
    1481,  2154,  2162,  1808,  1815,  1810,     0,  1832,  1812,  1820,
    1828,  1836,  1837,  1817,   630,  1834,  1816,   506,  2840,  1813,
    1116,  1823,  3024,  1821,     0,     0,   113,     0,     0,     0,
       0,  2038,  2040,  2048,  2039,     0,  2047,     0,  2041,  2049,
    2042,  2046,  2045,  2044,  2043,  2022,  2025,  2031,  2050,     0,
       0,   362,   366,   368,     0,   371,     0,  2812,  2871,     0,
       0,  2793,  2786,  2787,  2785,     0,  2826,  2791,  1718,     0,
    2757,  2358,  2461,     0,  1723,  2165,  3001,     0,     0,     0,
       0,  2083,     0,  2738,  2735,  1717,  2737,  2741,  1194,     0,
     109,   110,     0,     0,     0,     0,  1199,  1203,     0,  1169,
    1632,  2058,  2066,  2064,     0,   329,   354,   349,   357,   351,
     353,   352,   358,   359,   360,   355,   350,   356,   343,     0,
       0,     0,     0,  2773,     0,  2900,     0,  2902,     0,  1723,
    1252,  1251,     0,     0,     0,  2711,     0,  2707,  2706,     0,
     986,  2175,   986,     0,  2720,  2721,     0,  2712,     0,  2713,
       0,  2666,     0,     0,  2669,     0,     0,     0,     0,     0,
       0,     0,  2710,  2675,  2674,     0,  2677,  2678,     0,  2681,
    2729,  2730,  2727,  2733,  2728,  2731,  2732,  2726,  2702,  1998,
       0,     0,  2004,  1952,     0,   624,     0,     0,     0,     0,
       0,     0,     0,  1924,     0,     0,  1945,  1996,  1997,  2002,
       0,  1995,     0,  2002,     0,  1963,  1986,     0,  2002,  1919,
       0,     0,  1911,  1916,  1912,     0,  1918,  1917,  1920,  1908,
    1909,  1998,  1935,   201,  1986,  1944,  1965,  1969,  1968,  1967,
    1966,  1957,  1951,  1934,  1941,  1949,  1986,   901,   900,   899,
       0,     0,  1986,  2002,  2002,     0,  1140,  1141,     0,     0,
       0,  1129,  1881,  1880,     0,  1877,  1879,  1868,  1730,     0,
    1735,     0,     0,     0,  2977,  2993,  2975,  2981,  2988,  2989,
    2974,  2162,     0,   566,     0,     0,   569,     0,     0,  1872,
    1245,    12,     9,  1018,     0,     0,  2194,     0,     0,     0,
       0,     0,     0,  2877,  2875,     0,  2876,  2874,  2831,  2846,
    2868,     0,   990,     0,     0,     0,     0,     0,     0,     0,
       0,   201,     0,  1147,     0,     0,  1277,  1274,  1268,  1275,
    2174,  1803,   843,  1799,     0,     0,  1756,  1753,  1755,  1241,
    1239,     0,     0,  1242,  1240,  1232,  1234,     0,     0,  1826,
    1897,  1900,     0,  2016,     0,   853,   619,   622,   621,   623,
       0,   965,     0,     0,     0,   963,     0,     0,   495,  1873,
       0,     0,   495,     0,     0,     0,     0,   631,  1984,  1872,
    1113,   952,   897,  1195,   897,  1074,     0,   952,     0,     0,
       0,     0,     0,     0,  1195,     0,     0,     0,     0,     0,
    1195,     0,     0,     0,     0,     0,  1872,     0,  1083,     0,
    1039,     0,     0,     0,     0,     0,     0,     0,  1084,     0,
       0,     0,  1040,  1872,     0,     0,     0,     0,     0,     0,
    1195,     0,     0,     0,  1195,  1125,     0,  1124,  1123,     0,
       0,  1195,  1195,     0,     0,     0,     0,   660,   661,     0,
       0,     0,     0,  1061,  1062,     0,     0,   627,  1872,  1872,
       0,  1033,  1030,   853,   853,     0,  1872,  3019,  1019,     0,
       0,   967,     0,     0,  1176,  1212,  1206,  1211,  1209,  1219,
       0,  1683,     0,   295,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   201,   153,   185,     0,     0,
       0,     0,     0,     0,     0,   201,   125,  1825,  1193,  1187,
    2894,  2898,   625,   853,     0,     0,     0,     0,     0,     0,
     477,     0,   480,     0,     0,     0,     0,  2873,  1872,     0,
       0,     0,     0,   936,   853,     0,     0,     0,   276,  2969,
       0,  2923,     0,  1441,     0,  1529,  1579,  1529,  1529,  1529,
       0,     0,     0,     0,     0,  1442,     0,  1392,  1443,  1444,
       0,     0,     0,  1529,     0,   787,     0,     0,  1395,  1396,
    1385,     0,     0,  1464,     0,  1575,  1397,     0,     0,     0,
       0,     0,  1465,  1599,     0,  1601,  2162,     0,  1529,  1449,
    1402,     0,  1529,     0,  1403,  1466,  1467,  1468,     0,  1470,
       0,  1451,     0,     0,  1454,     0,     0,  1405,  1529,  1529,
       0,     0,     0,     0,  1529,  1407,     0,     0,     0,  1406,
       0,     0,     0,     0,     0,     0,     0,  1409,     0,  1386,
    1529,  1529,  1457,     0,     0,  1459,     0,  1418,  1721,  1529,
    1566,     0,  1510,  1509,  1523,     0,     0,  1523,     0,     0,
       0,  1511,  1508,  1507,     0,  2692,  2693,  2694,   954,  1568,
    1378,  1297,  1302,  1295,  1299,  1304,     0,     0,     0,  1315,
       0,     0,     0,     0,     0,  1307,  1318,  1321,  1483,  1471,
       0,  1594,     0,     0,  1101,  1819,     0,  1984,  1818,   507,
     508,   510,     0,  1118,  1117,  1814,  3025,  1811,  1116,     0,
     115,   117,  2036,  2033,  2032,  2034,   201,  2035,     0,  2051,
    2023,  2317,  2606,  2607,   375,     0,   347,   346,   348,   372,
       0,     0,  2784,  2870,     0,     0,  2835,  2838,     0,     0,
       0,  2779,  1720,  2768,  2764,  2769,  2771,  2767,  2770,  2772,
    2765,  2766,  1723,     0,  1760,  1724,  1632,  2995,  3000,  1214,
    1215,  1219,     0,     0,     0,   111,  1795,  1796,  1790,  1792,
    1789,  1791,  2071,  1793,  1794,     0,     0,  2070,     0,  1201,
       0,     0,  1174,  1173,  1175,  1168,  1170,  1171,     0,     0,
    1633,     0,  2062,  2065,   201,  2055,     0,     0,     0,  2784,
       0,     0,  2903,  1254,     0,     0,     0,     0,     0,  1253,
    1255,  1256,  1609,  1608,  1639,  1636,  1635,  1638,  1637,  1640,
    1632,  1717,  1742,  1723,     0,     0,     0,   850,   852,   849,
       0,     0,     0,  2844,  2844,     0,     0,  2725,  2717,  2719,
    2716,  2668,  2198,  2843,     0,  2698,  2699,  2700,  2696,  2697,
       0,  2703,  2701,     0,  2680,     0,  2000,  2003,  1725,     0,
       0,  1977,  1971,  1970,  1961,  1972,  1978,  1962,  1981,  1980,
    1979,  1932,  1931,  1927,  1987,  1976,  1974,  1955,  2002,  1975,
    1973,  1913,  1914,  1915,     0,  1760,     0,  2000,  1964,  2002,
       0,  2002,     0,     0,  2002,  1948,  1950,  1154,  1138,  1137,
       0,  1875,     0,  1734,     0,  1732,  2983,  2991,     0,     0,
       0,     0,     0,     0,     0,     0,   571,     0,   567,     0,
       0,   982,   986,     0,   983,   984,   985,  2847,  2175,     0,
    2844,  2860,  2834,  2833,  2832,  2829,     0,     0,     0,     0,
       0,  1011,  1013,     0,     0,     0,     0,   979,   991,   992,
     197,  2170,  1787,  1788,  1786,  1784,  1785,   198,   199,  1777,
    1778,  1774,  1775,  1773,  1776,   200,  1162,  1161,  1160,  1144,
    1132,     0,     0,  1149,  1273,  1276,  1269,     0,  2091,  1797,
    1270,  1758,  1759,  2156,  1757,     0,  1765,  1764,     0,  1717,
    2164,     0,     0,     0,  2166,     0,  1780,  1781,  1779,  1782,
    2012,  1783,   620,  1872,     0,     0,     0,     0,     0,     0,
       0,   278,   287,     0,  2754,     0,   522,     0,     0,     0,
       0,     0,     0,     0,     0,   232,   529,   973,   630,   534,
     547,   548,   545,   974,   533,   535,   975,   546,   498,     0,
     697,   953,   898,   952,  1041,   952,     0,     0,     0,   700,
     952,   897,     0,   932,   953,   696,     0,  1107,  1106,  1108,
     698,   698,     0,     0,     0,   643,   637,     0,   649,  1063,
    1184,  1064,  1690,     0,   639,   640,   641,   662,     0,     0,
     651,     0,  1081,  1082,     0,  1044,  1079,  1080,  1116,   632,
       0,     0,     0,   676,   677,   675,   656,   663,  1110,  1109,
    1111,   635,   636,     0,     0,  1097,  1749,  1756,   665,   644,
     664,   638,     0,     0,     0,  1091,  1052,     0,   674,   672,
     669,   671,   670,   673,   652,   645,   646,   648,   647,   659,
     650,  1051,  2050,   633,   634,   642,     0,     0,  1034,  1112,
    1112,  1069,  1066,  1067,  1032,  1038,  1071,   530,   531,   506,
       0,  1872,  3021,     0,  1021,  1023,  2947,  2948,  1733,     0,
       0,     0,  1686,     0,  1687,  1684,  1685,     0,  1597,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     122,     0,     0,     0,     0,     0,     0,     0,     0,   124,
     210,   853,     0,   511,     0,     0,     0,   220,     0,  1872,
    1872,  1872,  1872,   214,   630,   482,   484,   485,   486,   487,
     488,   491,   489,   492,   490,   493,   494,   506,     0,     0,
       0,  2866,  1010,     0,     0,     0,   231,   230,   941,   943,
     942,   938,   937,     0,     0,  2090,     0,  2089,   696,   204,
     550,   552,   555,   553,   630,   628,  1861,  1863,   557,     0,
       0,   241,  2964,     0,     0,   472,   471,     0,     0,     0,
    1529,  1486,  1530,  1488,  1489,  1492,     0,  1605,     0,  1382,
     799,   799,   783,  1587,   779,   771,   777,  1591,     0,   755,
     769,  1583,   783,  1585,   799,  1592,  1390,     0,     0,     0,
    1529,  1494,  1529,     0,     0,     0,     0,     0,     0,  1573,
       0,     0,     0,  1387,     0,  1475,  1529,  1498,  1529,  1496,
       0,     0,     0,     0,     0,     0,     0,  1502,  1500,     0,
       0,     0,     0,  1529,  1504,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1501,  1503,     0,     0,
       0,     0,     0,  1490,  1537,  1531,  1532,  1533,  1534,     0,
       0,     0,  1521,  1521,  1523,     0,  1523,     0,  1512,  1375,
       0,  1570,  1313,  1308,     0,  1317,     0,  1332,  1331,     0,
       0,     0,  1482,     0,  2155,  2163,  1809,  1807,  1103,  1102,
    1822,  1835,  1984,  2841,  1806,   118,     0,  2037,  2030,  2026,
       0,   367,   376,   369,   373,   374,   370,     0,  2872,  2880,
       0,     0,     0,     0,  1760,     0,  2759,     0,     0,  1219,
    1221,  2087,     0,  2744,  2745,  2743,  2742,  2073,  2072,     0,
    1204,  1205,  1172,     0,     0,  1865,  1864,     0,  1841,  1843,
    1852,  1855,     0,  2067,  2060,     0,   344,     0,     0,  2778,
       0,     0,  1717,     0,     0,  1609,  1639,  1636,  1635,  1638,
       0,     0,     0,     0,  1622,  1630,  1628,  1630,  1625,     0,
       0,     0,  1717,  1733,     0,  1726,  1742,  2665,  2664,  2663,
     986,   986,   987,     0,  2657,  2656,  2723,  2722,  2724,  2671,
     630,  2670,     0,  2679,  1999,     0,  1936,     0,  1960,     0,
    1929,     0,  1947,  1910,  1938,  1928,  1958,  1926,  1986,  1986,
    1925,     0,   202,  1878,  1736,     0,  2994,     5,     0,     0,
       0,     0,   570,     0,   580,     0,     0,     0,     0,  3002,
    2844,   986,     0,  2844,  2857,     0,     0,  2830,  1016,  1014,
    1015,  1017,  1012,   995,   994,   996,     0,     0,     0,  1009,
    1008,  1007,   993,  1146,     0,     0,  1142,   844,     0,  2099,
    1754,     0,  1632,     0,  1723,  1827,  1898,  1897,     0,     0,
     281,   284,   282,     0,   283,     0,     0,     0,   532,   972,
     630,   524,   526,   527,   528,   236,   235,   237,   238,   240,
     239,   234,   978,     0,   541,     0,     0,     0,     0,     0,
     952,   893,   699,     0,   694,   701,     0,   894,     0,     0,
       0,     0,   682,   684,   685,     0,   768,   722,   713,   799,
     716,   715,   861,   783,   727,   774,     0,   776,   773,   748,
     747,   764,   746,   751,   735,   861,   861,   734,   767,   861,
     752,   750,   754,     0,   755,   775,   760,   749,   753,   745,
       0,   766,   799,   783,   783,   731,   765,   861,     0,   758,
     799,   687,   803,   733,   868,     0,     0,   799,   801,   779,
    1089,  1090,   940,   939,  1088,     0,     0,  1047,     0,  1048,
       0,  1050,   851,   851,   657,  1055,  1078,  1077,     0,  1056,
     658,  1119,  1046,     0,  1750,  1045,     0,     0,     0,  1169,
       0,   667,   666,   977,  3015,  3012,  3013,     0,  3023,  3022,
    3024,     0,     0,     0,   246,  2949,     0,     0,  1218,  1220,
       0,  1207,   186,   181,   157,   161,   163,   155,   159,   160,
     162,   166,   167,   165,   169,   170,   173,   174,   171,   164,
     172,   158,   177,   175,   176,   156,   179,   180,   191,   182,
     190,   196,   168,   195,   183,   193,   192,   194,   184,   154,
       0,   127,   128,     0,   129,   130,     0,   131,   132,     0,
     133,   126,     0,  1872,  1872,   213,   630,   513,   515,   516,
     517,   518,   521,   519,   520,   220,     0,     0,   219,     0,
       0,     0,     0,     0,  1984,   215,     0,  2848,  2850,   226,
     990,  3009,  3010,  3011,   217,     0,   556,   205,     0,     0,
     551,   549,   853,  1862,   554,     0,     0,   296,   680,   681,
     679,   678,     0,  2970,   475,   473,   474,     0,     0,  1419,
    1487,  1606,     0,     0,   800,  1580,   861,     0,  1589,     0,
    1590,   781,   780,   772,   770,  1593,   778,   756,  1584,  1588,
    1586,  1582,  1391,     0,  1393,  1384,  1383,  1495,  1493,     0,
       0,  1425,  1447,     0,  1426,     0,     0,     0,     0,     0,
    1399,     0,  1401,     0,     0,  1477,  1499,  1497,  1450,  1469,
    1428,  1452,     0,  1404,  1376,     0,  1429,     0,  1434,  1432,
       0,  1505,  1408,     0,     0,  1415,     0,  1413,     0,  1414,
       0,  1416,  1456,  1458,     0,     0,     0,     0,  1529,  1538,
       0,  1539,  1525,  1524,  1515,     0,  1520,  1519,     0,  1516,
       0,  1526,   955,     0,  1312,  1314,  1310,     0,  1319,  1472,
    1105,  1104,   509,   116,  2028,     0,  2024,     0,     0,     0,
       0,  2783,  2837,  2836,  2839,  2878,  2827,  2760,     0,     0,
    1882,  1884,  1216,  1219,  1221,     0,  1217,     0,  2088,  2746,
    2747,  1202,     0,  1689,  1842,  1890,     0,     0,     0,  1859,
    2153,  2152,  2160,  1876,  1860,  1867,     0,     0,     0,  2774,
       0,  1733,     0,     0,  1647,  1641,  1643,  1644,  1646,     0,
       0,  1609,  1608,  1257,  1624,  1623,  1631,     0,  1629,  1630,
    1630,     0,     0,  1618,  1617,     0,  1680,  1648,     0,     0,
    1737,  1726,  2844,  2844,     0,     0,  2704,  2001,  1760,  1943,
    1942,  1956,  1921,  1760,     0,  1723,  2002,     0,  2984,     0,
     576,   563,     0,   561,   565,     0,   558,     0,     0,   574,
       0,   981,  2844,  2844,     0,  2858,  2177,  2176,  2844,     0,
    2844,   999,     0,   998,  1004,  1001,  1000,     0,  1148,     0,
       0,     0,     0,     0,  2092,  2094,     0,  1802,  1723,  1723,
    2165,  1895,     0,  2167,  1723,   668,   286,   285,   291,   292,
    2756,  1984,   233,     0,  1043,     0,     0,   582,     0,     0,
       0,   702,     0,     0,   950,     0,   949,  1756,   933,   934,
    1073,   696,   687,   721,   714,   732,   855,   866,   864,   858,
     757,   861,     0,   862,   863,   718,   730,     0,   741,     0,
     736,   861,   744,   740,   756,   759,   761,   763,     0,   861,
     729,   728,   738,   725,   788,     0,  1119,   688,   813,     0,
       0,     0,     0,  1344,   807,     0,   873,     0,     0,   816,
       0,   818,     0,   827,   703,   804,   806,   705,     0,     0,
     869,   868,   720,   861,   868,   788,     0,   802,   788,   788,
    1087,     0,  1119,  1691,  1095,  1094,     0,     0,  1121,  1076,
    1748,  1093,  1092,     0,  1049,   653,     0,     0,  3017,     0,
    3020,   988,     0,   256,     0,     0,  1020,     0,   249,   247,
     258,     0,  1181,  1177,  1688,     0,   187,   189,   134,     0,
     136,   138,   143,     0,   145,  2199,     0,   148,     0,   150,
    2171,   152,     0,   139,     0,     0,     0,     0,  1984,   218,
       0,     0,     0,     0,     0,     0,   479,   540,   536,   542,
     539,   483,  2849,     0,     0,   212,  3019,     0,     0,   853,
     629,     0,     0,     0,   297,   299,     0,     0,   306,     0,
       0,  1607,     0,     0,     0,     0,  1581,     0,     0,  1381,
       0,     0,     0,  1576,  1578,  1574,  1529,     0,     0,     0,
       0,     0,  1379,     0,  1473,     0,     0,     0,     0,     0,
       0,  1412,  1410,  1411,   870,  1461,  1460,     0,  1491,  1535,
       0,  1541,  1522,  1514,  1513,     0,  1523,  1309,     0,     0,
       0,   384,   379,   387,   381,   383,   382,   388,   389,   390,
     391,   385,   380,   386,   378,   377,     0,     0,     0,  2887,
    1723,  1882,     0,  1884,     0,  1840,  1213,  1222,     0,  1634,
       0,     0,  1853,  1856,     0,     0,     0,     0,     0,   345,
    2777,     0,     0,  1649,  1717,  1257,  1610,  1626,     0,     0,
    1619,  1627,     0,     0,     0,     0,  1674,  1675,     0,     0,
    1678,  1681,  1682,  1645,  2157,  1746,  1745,  1727,     0,  1250,
    1737,  2659,  2658,  2845,  2672,  1937,   201,  1959,  1940,  1933,
    1139,   564,     0,   562,     0,     0,   560,   568,     0,   575,
       0,   980,  2855,  2844,  2861,  2844,     0,  2862,     0,  1005,
    1006,  1003,     0,  1150,     0,     0,     0,     0,  2093,     0,
       0,  2100,  2102,  1896,  1751,  1751,   525,     0,   585,  1042,
       0,     0,   695,     0,     0,     0,   923,     0,     0,   946,
     683,   686,   857,   856,   860,     0,   859,   717,   868,     0,
     956,   737,   762,     0,   739,   792,   793,   794,   726,   789,
     791,   875,  1072,   821,   828,   830,   832,   831,   822,   820,
       0,     0,     0,     0,     0,     0,   837,   810,   838,  2131,
       0,     0,   833,   834,   835,   824,   817,   825,   819,   826,
       0,   805,     0,     0,   815,   808,   809,   719,   723,   724,
     710,     0,   711,   712,     0,  1085,  1075,  1059,  1120,     0,
    3016,  3014,  3018,   257,   245,     0,     0,  1022,  1024,     0,
       0,  1025,     0,     0,  1180,   178,     0,   135,     0,   144,
       0,     0,   149,     0,     0,   140,     0,   912,   538,   537,
     514,     0,   918,   221,   222,   224,     0,  2851,     0,  2852,
    3021,     0,   206,   203,     0,     0,  2965,     0,   851,  2963,
     309,   307,   308,     0,   302,   304,     0,     0,  1420,   797,
     795,   798,   796,   784,     0,  1423,  1424,  1448,     0,  1506,
    1446,     0,  1400,  1474,     0,     0,  1453,  1430,  1433,  1431,
    1436,  1437,     0,     0,     0,     0,  1543,  1527,  1528,     0,
    1311,  2029,  2027,  2878,  2881,     0,     0,  2780,  1760,  1884,
    1733,  1838,     0,     0,  1889,  1891,  1854,  1857,  1858,  2162,
    1874,  1866,  2776,     0,  1651,  1642,  1621,  1620,  1613,     0,
    1615,     0,  1670,  1670,  1679,  1747,     0,  1743,     0,  1738,
    1739,  1249,  1939,   577,     0,   567,   581,   559,  3006,  2859,
    2863,  2844,   997,  1002,  2097,  2098,     0,  2095,     0,     0,
    2101,  1771,  1771,   912,     0,   605,   583,   918,     0,   945,
     923,  1756,     0,  1872,   689,   924,   925,   927,   928,   931,
     948,     0,   867,   865,   861,     0,   861,   790,     0,   879,
       0,   823,  2133,  2132,     0,   812,   814,   821,   706,     0,
       0,  1054,  1060,     0,   243,   248,   259,   260,   971,  2952,
    2950,     0,   188,   137,   146,   147,   151,     0,     0,     0,
    1101,   913,   914,   916,     0,  1101,   919,   920,   922,     0,
    2853,   208,   923,  2962,   254,     0,   298,   300,  2971,   306,
       0,     0,     0,  1577,     0,  1476,  1478,   871,     0,  1540,
       0,  1564,  1563,  1565,  1536,     0,  1517,  2887,  2879,  2882,
    2761,  1839,  1883,     0,  1632,     0,     0,     0,     0,     0,
       0,     0,  1744,     0,     0,     0,     0,     0,     0,  3003,
    3004,  2856,  2096,  2104,  2103,     0,  1894,  1886,   690,     0,
       0,  1872,     0,     0,  1872,  1872,  1872,  1872,   600,   606,
     608,     0,   691,     0,     0,   692,   951,   930,     0,   926,
    1756,   742,   957,   743,     0,   878,     0,   883,     0,   811,
       0,  1086,  1053,   250,  1026,   411,     0,  2951,  1178,     0,
       0,     0,   228,   915,   216,   229,   921,     0,  1101,   246,
     255,     0,   279,   303,   851,     0,   782,  1398,  1462,  1542,
       0,     0,     0,     0,  1558,  1545,  1546,     0,     0,  2782,
       0,  2888,     0,   843,     0,  1717,  1614,  1616,     0,  1671,
       0,  1683,     0,  1741,  1740,     0,     0,  1872,     0,  3007,
    1772,   594,   587,   590,     0,     0,  1872,  1872,     0,     0,
       0,     0,     0,   584,   607,  1872,   693,   944,   929,   947,
     876,     0,   880,   881,   882,     0,   874,   829,     0,     0,
     252,   437,  2291,   423,   409,     0,     0,  2474,   413,   261,
     264,   262,  1887,   263,   269,     0,   270,   271,   272,   273,
     274,   265,   435,   436,   268,   266,   267,     0,  2183,     0,
    2184,  2245,  2244,  2246,     0,     0,     0,   141,     0,   917,
     223,   227,   258,   851,  2972,   305,  2958,     0,     0,  1553,
       0,     0,     0,  1551,     0,  1547,     0,  1544,  1549,  1548,
       0,  1885,  2105,  2458,     0,  1653,     0,  1650,  1673,  1672,
       0,     0,   578,     0,     0,  3008,   594,     0,   592,     0,
     588,   586,   589,   616,     0,     0,   612,   613,   611,   609,
       0,     0,   602,     0,   877,     0,     0,   707,   251,     0,
     244,     0,     0,   422,   425,     0,     0,   428,   418,   417,
     419,     0,   412,   411,   411,   465,   416,   462,   461,   454,
       0,  2953,     0,     0,     0,  2966,   289,   288,   280,     0,
     411,  2956,  2957,     0,  2960,     0,  1554,     0,  1556,  1555,
       0,     0,  1560,     0,  1561,  2667,  2886,  2885,  2883,     0,
    2091,     0,  1652,     0,     0,   851,  1677,  1676,     0,   572,
     578,  3006,   591,     0,   598,     0,   596,   599,   614,   615,
     605,   601,     0,   610,   889,     0,   888,     0,   885,   884,
     709,   708,   803,   253,   438,   449,   452,   444,   424,     0,
       0,     0,   414,   411,     0,   398,   396,   397,   403,   404,
     405,   406,   407,   408,   399,   402,   400,   401,   411,     0,
     314,     0,     0,  2954,  2955,   142,   260,   279,   290,  2973,
    2959,   411,     0,  1552,  1550,  1559,  1562,  2884,     0,  2099,
       0,  1654,  1655,  1658,   579,   573,  3005,   593,   595,     0,
     604,   603,   891,   892,   890,     0,     0,   704,     0,     0,
     411,   445,     0,   420,     0,   429,     0,     0,   312,   468,
     466,   310,   456,   456,   242,  2967,  2961,  1557,     0,  2107,
    1657,  1659,     0,   597,     0,     0,   446,   452,   442,   450,
     411,     0,     0,   410,     0,   464,   313,     0,     0,     0,
     411,     0,   455,   457,   459,   411,  2106,     0,  2111,     0,
     887,   886,     0,   443,     0,     0,   441,   421,   426,   411,
     469,   411,   323,   322,     0,     0,   392,   463,     0,   315,
    2968,     0,     0,  2118,  1660,   447,     0,   411,     0,   411,
       0,   411,     0,     0,   851,     0,     0,   311,  2109,  2110,
    2108,  2113,     0,     0,  2115,  2116,     0,  2079,     0,  1667,
    1668,  1656,  1661,  1662,     0,     0,   439,   411,   427,   432,
       0,     0,   318,   393,   394,     0,   320,  2117,  2112,     0,
    2119,  2121,     0,  1669,  1663,     0,  1664,     0,     0,   411,
     411,   428,   431,   470,   467,     0,     0,   316,   317,   328,
     327,     0,  2114,     0,     0,     0,     0,  1666,  1665,   411,
     411,   433,   336,   334,   411,   324,   332,   326,     0,   333,
     395,   321,  2120,  2122,     0,   319,   335,   325
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4454, -4454, -4454, -4454, -4454, -4454,    68, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454,  1597, -4454, -4454, -4454, -4454,
   -4454, -4454,  1794,  1803, -4454, -3958, -4454, -4454,  1802, -4454,
     468,  1804, -4454,   466, -4454,  1812, -4454,   476, -4454, -4454,
   -4454,  -907, -2117, -4454, -4454, -4454, -4454, -4454, -4454,  1218,
   -4454, -4454, -4454,   464,  1413,  3864, -4454,   453, -4454,   173,
   -4454, -4454, -4454, -3939,    57,  -115, -4454, -4454,    25,  3388,
    -114, -4453, -4454, -4454, -4454, -4454, -4454, -4454,   458, -4454,
   -4454,   277, -4454, -4454, -2567, -4454, -4454, -4454, -4454, -4454,
   -4454,  -306,  -255,  2626, -4454, -4454, -4454,  4945, -4454,  4040,
   -4454, -2612,  2238, -4454, -4454, -4454, -4454, -4454,  2307, -2557,
   -4454, -4454, -4454,  1084, -4454, -4454, -4454,  -467,   200, -4454,
     203, -4454,   205, -4454,   211, -4454,   220,   227,   231,   233,
   -4454,   234, -4454, -4454,  -262, -4454, -4454, -4454, -4454,   235,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454,  -156, -4454, -4454,
     -64, -4454, -4454,  -154,   236, -4454,  -139,   245, -4454,   247,
   -4454,   -87, -4454,   -83, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454,  1246,  2689,  3974,  2688, -1379, -4454,
    1659, -4454, -4454,   827, -4454, -4454,   987, -1462, -4454,  2558,
   -2411, -2375, -2374, -4454, -4454, -4454, -3024, -3022, -1257, -4454,
   -1255, -2367, -2354, -2235,   822,  1820,  1824,  1822,    26, -4454,
    1046,   437, -4454, -4454, -4454, -3379,    15, -4454, -3746,   661,
   -4454, -4454, -4454, -4454, -3200, -4454, -4454,   -54, -4454, -4454,
      16,    14, -4454,   298, -4454,  2589, -2139,  -500,  2656, -4454,
   -1867, -1622,   579, -1495, -1493, -4454, -4454, -4454,  1293,  1861,
    1018, -4454,  1019, -1535,   970, -3533, -4454, -4454,  -551, -2789,
   -4454, -4454, -4071, -4454, -1970,  1489, -4454, -4454,  -309, -4454,
   -4454, -4454,  1457,  1459, -1188,  1752, -1468, -4454,   670,   204,
   -1569, -4454,    38, -4454,   976, -4454, -4454, -4454, -2965, -4454,
     -37, -2434,   273, -4454, -4454, -2988, -3500, -1492, -4454, -4454,
   -3408, -3722,  1785, -4454, -4454,   337, -4454, -4454, -4454, -4454,
   -3041, -4454, -1554, -2164, -4454, -4454,  2775,   474, -4454,   417,
     475, -4454,   413, -4111, -4454,   469, -1520,  2103, -4454,  3368,
    2097, -2355, -4454, -4079, -2403,   715, -2196, -4454,  1023, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -1986, -4454, -4454,  1359,
   -4454,  2222,  1929, -4454,  2231, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454,  2720, -4454,   656, -1921,  2721, -4454,
    2723,   602, -2459, -1020, -4454, -1001, -4454, -1514,  3565, -2092,
   -3578, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
    2929, -4454, -4454, -4454, -4454, -4454,  4170, -4454,  2932, -4454,
   -4454, -4454, -4454, -4454,  1476, -4454,  2408, -4454, -4454, -4454,
   -4454, -4454,  2125,  3424, -4454, -4454,   112, -4454, -4454, -4454,
   -4454,  2411, -4454, -4454,  3457,  2032, -4454, -4454,  1772,  2441,
   -1651,  1237, -1047,  5107,    10,    53,     8,  -291, -4454,  3080,
   -4454, -4454, -2179, -4454, -4454, -4454, -4454,  4236,  -955, -1014,
   -4454, -4454,  2909, -4454,  4247,  3943,  3230,   787,  4972, -4454,
   -1194, -4454,   -53, -4454, -4454,  -801, -4454, -4454, -4454,  -552,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454,  2540, -4454, -4454, -4454,  3294,  1859, -2537, -4454, -2011,
   -1825, -4454, -2433,   451, -4454, -4454, -4454, -4454, -4454, -4454,
     478, -4454,   178, -4454, -4454, -4454, -1937, -4454, -4454, -4454,
   -4454, -4454,  1408,  2667, -1050, -1062, -4454,  4043, -4454, -4454,
   -4454, -2026, -4454, -2572, -4454, -4454, -4454, -4454, -2714, -2637,
   -4454, -1110,  2432,  2433,  2437,  2438, -4454, -4454,    99, -4454,
     179, -4454, -4454,   -23,   -21, -2150,   610, -4454,   874, -4454,
   -4454, -4454,   373,  1527,   377, -1869, -2295, -1133,  1879, -4454,
   -4454, -2015,  4090, -2031, -1848,  1245,     3,  4240,  3749, -3018,
   -4454,   877, -4454,   487,  1786,   669, -4454, -4454,  1571, -1026,
     -90,   516, -2989, -4454, -1018,   -85, -4454, -2241,   608,   165,
   -2265, -2195, -2010, -1997, -4454, -4454,  2960,   -60, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454,  -536,    54,  -453,  5221,
    3275, -4454,  2591,  4193,  4195, -4454, -4454,  3907,  1862,  1863,
   -4454, -2843, -2679, -4454, -4454, -4454,  -934, -1310,   933,  3768,
    1310,  1871, -2814,   956, -3876,  4208, -4454, -3437,   951,  4209,
    4210, -3265,  3692, -4454, -4454, -4454, -4454, -4454,  2417, -4454,
   -4454, -4454, -4454, -4454, -4454,  3109,  4300,  -961, -2003, -4454,
   -4454, -4454,  1005,  3084,  2422, -1298, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,  2592,
    2181, -4454, -4454, -4454, -4454,  3208, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454,  1885,   250, -4454,  1240,   174, -4454,   886, -4454,
   -4454, -4454, -4454, -4454,    33, -4454, -4454,     5, -2462, -1038,
   -1025,  1134, -1935, -2562, -4454,   971, -3277, -2858,   679,  -686,
   -1183, -1191,    71,  2337,  3910, -1528, -4454,  4649,  -815, -1515,
   -2190,  1074,  4058,    -6, -4454, -3160, -4454,   -55,    98,  2136,
     -68,  3177, -3572, -4454,    -4,     2, -4454,   353,   261, -4454,
   -4454,   344, -4454, -4454, -4454,   267, -4454, -4454, -4454, -4454,
    3872, -4454,  2485,  5254, -4454, -4454, -4454,  3171,  5257,  -821,
    3882,  3195, -4454,  3198, -4454, -4454, -4454, -2013, -4454, -4454,
   -4454,   199, -4454,  2581, -4454, -4454, -4454, -4454, -4454, -4454,
   -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -4454, -1258,
    4382,  5268,  3978, -4454, -4454,  2412, -4454, -1971, -1244, -1080,
   -2529, -4454,  2814,  3788, -4454, -4454,  1766, -4454,  2816,   738,
   -4454, -4454,   587, -4454, -4454,  1110,  4394,  3936, -4454, -4454,
   -4454, -4454, -4454,  4273, -4454,   -16,    -3, -4454,  -360, -4454,
   -4454, -4454,   223,  5304,  5307, -4454, -4454,   169, -4454,  -846,
   -4454, -4454, -4454, -4454, -4454,  4212, -4454, -4454,  4213, -4454,
   -4454, -4454, -4454,  4214, -4454, -4454, -4454, -4454, -4454, -4454,
    1985, -4454, -4454, -4454, -4454, -4454, -4454,   248, -4454, -4454,
   -4454,   278, -4454,  1547, -4454,  1169, -4454,  1109,   812,  1656
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,  1016,  2242,    66,    67,    68,    69,    70,
    2050,    71,  1302,  1986,  2670,  2671,    72,   887,    73,  1711,
    1712,  2475,  2476,  3731,  4179,  4180,  3740,  4194,  3734,  4183,
    4184,  3737,  4188,  4189,  2465,  2466,  4175,  4176,  3719,  3728,
    3722,  2467,  2211,    74,    75,    76,    77,  2483,    78,  3758,
    2497,    79,  3205,  2984,  2985,  1757,  3786,  4166,  4793,  4170,
    4880,  4980,  4809,  3114,  4491,  4794,  4795,  4889,  2507,  2311,
    4924,  2971,  5008,  2972,    80,  1080,  4223,  4224,  4225,  4533,
    4534,  4535,  4536,  5170,  5073,  5141,  5171,  5265,  5271,  5194,
    5284,  5285,  5286,  5269,  1373,  5287,    81,   921,   922,  1375,
    2078,  2684,  2079,    82,    83,   849,  2011,  2012,  2013,  2014,
    3376,  2685,  3371,  3372,  4294,  5195,  5267,  5074,  5075,  4987,
    5076,  4892,  5077,  4991,  5078,  4895,  5079,  5080,  5081,  5082,
    5162,  5083,  4986,  5187,  5070,  5071,  5164,  5239,  5262,  5084,
    4902,  4981,  5128,  4903,  4982,  5157,  5066,  5158,  5182,  5235,
    5067,  5129,  5185,  5132,  5085,  5091,  5172,  5086,  5092,  5087,
    4907,  4998,  5090,  4996,  5089,  5168,  5167,  5210,  3237,  3797,
    1740,  2492,  3183,  3184,  3185,  2987,  2988,  1609,  2658,  2659,
    2660,  3745,  3746,  3747,  3549,  3550,  3551,  2318,  3109,  2976,
    1610,  1611,  1612,  3189,  3749,  3750,  3190,  3191,  1613,  3193,
    1614,  1615,  1616,  2989,  3219,  3220,  3221,  3222,  3223,  2236,
    2237,  3497,  2876,  3494,  4368,  3999,  5039,  4006,  4056,  4057,
    4635,  4961,  4852,  4957,  4853,  4959,  5045,  5046,  4863,  4971,
    4972,  4768,  4769,  4770,  3170,  2305,  2306,  1090,  1674,  3224,
    2328,  1675,  3069,  1676,  1677,  2309,  3084,  3056,  3792,  3581,
    3582,  3583,  4106,  3584,  3009,  2336,  3573,  3574,  4123,  3631,
    4463,  5062,  3632,  3633,  3634,  3635,  3636,  3637,  3638,  3814,
    3639,  3815,  3810,  3811,  3808,  1133,  4428,  4429,  4430,  3804,
    3805,  4138,  4124,  4125,  4126,  4661,  4438,  4455,   796,  4447,
    4082,  1391,  2938,  1414,  1415,  2788,  2097,  1678,  4083,  4084,
    4085,  4132,  3875,  4562,  4128,  4107,  4659,  4784,  4787,  4876,
    5058,  3010,  1704,  3003,  2200,   669,   670,  4690,  4691,  4692,
    4695,  4696,  4697,  4644,  4645,  4646,  4647,  3012,  2502,  4648,
    4649,  3211,  4638,  4064,  4065,  4066,  3013,  3341,  4419,    84,
      85,  1590,    86,  1596,    87,  1592,    88,  1697,  1072,    89,
    2418,    90,    91,    92,    93,    94,  2793,    95,    96,  2907,
    2908,  2909,  2262,  2901,  2902,  1021,  3115,  3684,  4678,  1055,
    1679,  1680,  2412,  1681,  1682,  4671,  1683,  3030,  1684,  1685,
    1686,  1687,  3357,  3358,  3018,  3359,  3059,  2338,  1339,  2665,
    4149,  2390,    97,    98,    99,  1030,  2271,   100,  1476,  1477,
    1478,  1536,  1537,  2273,  2933,  3526,  1471,  1472,  1473,  1031,
    1534,   101,  1716,   102,  2745,  2746,  2747,   103,  4494,  2424,
     104,   105,  1723,  1724,  1725,   106,   193,   107,  1361,  1359,
    2056,  2057,   108,  1076,  1077,  2426,   109,  2719,  2720,  1705,
    1706,  3926,   110,   111,  3226,   113,   797,   115,   116,  2089,
    2090,  2769,  2770,   117,   118,   938,   939,   940,  1035,  1036,
    1540,  2277,  2278,  2279,   798,   799,  1241,  1130,  1707,   801,
     802,  1938,   803,  1242,  1243,  4129,   804,  1254,  1926,   805,
    3823,   806,   807,   808,   809,   810,  3844,  3845,  4254,  1958,
    1959,  1960,   811,   812,   813,  2616,  3886,  3331,  4276,  3241,
    3242,  3325,  4608,  3327,  3880,  3881,  4271,  4566,  4724,  4824,
    4929,  4826,  4930,  4937,  4725,   814,   815,  1230,  1831,  3837,
    3279,  4243,  1776,  3266,  1708,  1709,  1155,  1156,  1121,  2523,
    1782,  2771,  3960,  2772,  3439,  3440,  3441,  3971,  3967,  2749,
    2750,  2773,  2774,  2775,  2776,  2777,  2778,  2779,  4736,  4944,
    4945,  5152,  5231,  5232,  5233,  5234,  4740,  4339,  4340,  4341,
    4342,  4343,  3123,  3124,  3125,  3932,  3031,  1821,  1822,  1829,
    2029,  2030,  1777,  2714,  2142,  3980,  1013,   989,   990,  1488,
    2219,  4349,  4609,  4610,  3445,  4345,  4607,  3065,  3066,  1040,
    1041,  2287,  2943,  2944,  1556,  1557,  1561,  1562,  4756,  3070,
    2960,  2917,  2990,  2961,  2734,  1544,  1545,  1037,  1546,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,  2679,  2298,  1069,   671,
    1973,  1974,  1975,   137,   138,   892,   915,  1364,  3408,  3409,
    3938,  3410,  3228,  3412,  3944,   986,  2319,  2320,  3945,   987,
    2214,  2215,  2216,  4303,  4305,   139,   140,  3934,  3935,   916,
     141,  2954,  1573,  1574,   142,   978,  2178,  2179,  2180,  2845,
     143,   968,  1461,  3988,  3993,  2831,  1356,  1617,  2159,  1464,
    1465,  1466,  2160,  2816,  3466,  2143,   144,   145,  1583,   146,
    1052,  1584,   147,  1303,  2005,  3369,  3906,  4279,  2006,  2007,
    2680,   148,   918,  1370,  1366,  1371,  2063,  2062,  2754,  2752,
     149,   908,  1357,  2737,   150,   897,   151,   152,   901,  2042,
    1347,  3927,  3229,  3529,  4034,  4035,  4037,  4391,  4392,  5030,
    5178,  5220,  5203,  5223,  5224,  5227,  5250,  5251,   816,  1491,
     817,  4448,   818,   819,   820,  3939,   821,  2288,  4346,   822,
    3936,   823,  2780,  2299,   638,  4190,  4191,  1022,  1492,  2281,
    2102,  4018,  1244,  1001,   877,  4909,   958,  1024,  1406,  1025,
    1978,  1407,  2698,   640,   641,   642,  4910,   643,   644,   881,
     963,   645,   153,   964,   154,  2111,   155,  3460,  3461,  1420,
    1424,  2126,  2127,  2128,  1467,  1909,  2120,  1421,  2129,   967,
    1399,  1400,  2109,  1401,  2107,  1402,  2798,  2138,   156,   904,
    1350,   650,  2046,  2047,  3395,   157,   983,   158,   159,   160,
    1061,   161,  2034,  2712,  2713,   162,  2081,   163,  2016,  2025,
    1306,   883,   884,  2701,  2896,  2257,  2258,  2699,  1979,  1408,
    3454,  1522,  1744,  1027,  1745,  1028,  1317,  2019,  1525,  4299,
    3911,  4831,  4577,   164,   194,   653,  1088,  1730,  2086,   165,
     166,   167,   168,  1555,   826,  2781,   827,   941,  1109,   672,
    1766,  1758,   187,   188,   189,   675,   676,   190,  1695,  1696,
    4171,  4680,  4797,  5013,  5014,  1760,  5101,  1761,  1762,  3787,
    4705,  5097,  5175,  1763,  3234,  4228,  4812,  5010,   169,  1497,
    1493,   999,  2230,  2224,  2226,   170,   171,  1342,   172,   173,
    4749,  4750,  3773,  2417,  3675,  3676,  4160,  3112,  3680,  2667
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     639,  1280,  1275,   119,  1000,  1578,   956,  1463,   114,   825,
     112,  1882,   845,  1392,  1396,  1585,   886,  1563,  1836,  1881,
    1567,  1549,  1746,   879,  1044,   907,  1566,  2282,  1026,  1045,
    2723,   637,   923,  1425,  1157,   928,  1971,  3207,  1972,   959,
     923,   879,  2732,   976,  1006,   960,  1688,   984,  3483,   991,
    2946,  2947,  2407,  3333,  2432,  2733,  1510,  1007,  2782,  2890,
    1925,  2997,  1785,  1786,  2337,  1689,  2848,  2612,  2613,  3045,
    3411,  1012,  2686,  1011,  2687,  2621,  2622,  2623,  3664,  3387,
    3335,  3186,  1551,  2335,  2366,  1004,  2026,  3530,  2994,  2995,
    1023,  1838,  3267,   885,  1824,  2307,  3268,  2308,  2310,  4122,
    3685,  4044,  2389,  1851,  1852,  1853,  2343,  2657,  3671,  1855,
    2347,  4002,  2812,  2761,  1084,  1086,  2794,  3187,  3188,   878,
     975,  2084,  1533,  2955,  2367,  3195,  1064,  1047,  3370,  1116,
    3940,   846,  4127,  2153,  2083,  3000,  2379,   878,  3196,  2322,
     976,  3095,   906,  3442,  1422,  3416,  3212,   912,  1891,  3751,
    3025,  3752,  4144,  4145,  2930,  4528,  2186,  2187,  2188,  2189,
    2190,  4186,  2192,  2838,  1101,  1102,  2962,  4302,  1106,  1056,
    3005,   639,  1046,  2028,   639,  1023,  1065,   976,  3326,  2951,
     677,  2849,  3061,  3062,  1234,  1235,  2715,  2663,  1234,  1235,
    1333,   976,  4130,  2851,  1087,  3425,  4094,  4088,  4092,  2854,
    1277,  4093,  1058,  1234,  1235,  1063,  2604, -2057,   651,  1234,
    1235,  2871,  1277,  2903,  1234,  1235,  2249,  1053,  1981,  4102,
    2422,  2873,  2495,  2210,  1234,  1235,  1634,  4487,   905,  1353,
    1234,  1235,  2941,   911,  4504,   898,  1222,  1223, -2212,  1224,
    1713,  2715,  1234,  1235,  1234,  1235,  1234,  1235,  1234,  1235,
    1195,   982,  1276,  1277,  1066,  1234,  1235,  -961,  4153,  4365,
    1234,  1235,  2028,  1759,  1767,  3455,  2210,  5277,  1078,  4379,
    -976,  1903,  4043,  3681,  3661,  2735,  1634,  2490,  1234,  1235,
   -1993,  1068,   880,  1099,  1234,  1235,  1234,  1235,  1731,  4735,
    2321,  1095,  2323,  2324,  2201,  2742,  1489,  2326,  1324,  1042,
     880,  3329,  1717,  1032,   962,  2094,  1321,  -617, -1719,  2339,
    1699,   730,  2345,  2346,  1110,  2348,  3006,  3904,  2351,  2352,
    2353,  2354,  -630,  2733,  4639,  2357,  2733,  2733,  1234,  1235,
    2369,  4158,  3198,  1234,  1235,  2374,  2375,  2376,  2377,  2378,
    1634,  2942, -1984,  2382,  2383,  4016,  1234,  1235,  3160,  2393,
    2394,  2395,  2396,  2742,  2399,  2400,  1793,  2402,  3169,   899,
    2405,  3504,  1048,  2406,  2162,   882,   895,  1234,  1235,  2088,
   -2762,  -618,  3989,  1234,  1235,  1285,  1286,  1287,  4250,  2028,
    1290,  1291,  -630,   882,  1294,  3214,  1296,  1297,  1298,  1281,
    1300,  1277,  1074,  4747,  1034,  2167,   961,  1906,  4236,  4014,
    1604,  3456, -1833,  2581,  1523,  1234,  1235,  1234,  1235,  4467,
    4721,  1038,  4469,  1073,  1619,  2156,  5021,  4413,  1033,  1718,
    3538,  2104,  4376,  1719,   195,  3977,   893,  4581,  1345,  1234,
    1235,  1397,  1196,  1038,  2596,  2185,  1137,  1720,  3041,  1234,
    1235,  -852,  4147,  4642,   847,  3007,  4642,  1234,  1235,  1922,
    3051,  4164,  1234,  1235,  1800,  1427,   943,  2195,  -496,   646,
    4960,  4076,  4722,  -481,  1365,  1474,  1955,  1956,  1157,  2157,
    1907,  5007, -2673,  4077,  3374,  -523,  1538,  2121,  1490,  3177,
    3091,   195,  4301,  1234,  1235,  2638,  2877,  4078,  2125,  4567,
   -2762,  -512,  2733,  1714,  1378,  3235,  1549,  1234,  1235,  1427,
     943,  2521, -2763,  3527,  3857,  1728,  3243,  3244,  3245,  3121,
    1354,  1234,  1235,  4530, -1719,  1059,  4614,  3236,  1278,  1260,
    1261,  2158,  3271,  4531,  2663,  5022,  2251,   754,  4432,  4775,
    1278,  3794,  1316,  2878, -1719,  3776,  1327,  1549,  1698,  3459,
    4683,  1234,  1235,  1234,  1235,  5130,  1060,  3287,  2743,  2295,
    2296,  3289,  3204,  1237,  3264,  1334,  1238,  1237,  2065,  3367,
    1238,  3264,  3206,  4615,  4476,  3552,  5130,  3297,  3298,  4568,
    1032,  1278,  1237,  3304,  1721,  1238,  3364,  1451,  1237,  4820,
   -2212,  1238,  1539,  1237,  1729,  3375,  1238,  3712,  3424,  3316,
    3317,  4808,  4122,  1237,  4165,  2291,  1238,  2895,  3323,  1032,
     647,  3451,  3452,  1094,  3653,  2664,  2743,  3645,  1751,  1398,
    3492,  1237,  2904,  1237,  1238,  1237,  1238,  1237,  1238,  4148,
    1238,  2196, -2763,  -852,  1237,  2049,  1043,  1238,  4643,  1237,
    4369,  4643,  1238,  1138, -1719,  4975,  1346,  3414, -1994,  4814,
    3520,  3521,  3795, -2828,   976,   976,  3360,  1237,  1039,  4821,
    1238,  1033,  1023,  1237,  1097,  1237,  1238,  3566,  1238,  2733,
    1606,  1034,  4723,  3672,  1032,  4336,  1899,  4532,   702,  1475,
    3008,  3453,  1722,  4417, -1719,  1379,  1234,  1235,   894,  4187,
    3682,  3384,  5023,  4421,  2105,  2423,  1908,  1647,  1141,  4251,
    1034,  4424,  5007,  3431,  3453,  4867,  4653,  1237,   195,  1389,
    1238,  1007,  1237,  4731,  4337,  1238,  1931,   896,  3411,  1278,
    1971,  -630,  1972,  1524,  1158,  1237,  1033,  2252,  1238,  4159,
    2661,  1085,  1085,  3972,  3278,  4468,  1954,  2532,   793,  4799,
    4800,  1451,  2744,  4673,   707,  2910,  1237,  2918,  1231,  1238,
    4923,  3413,  1237,  1234,  1235,  1238, -1719,  4748,  1234,  1235,
    1322,  1771,  3446,  1794,  2733,  1034,  2952,  4095,  1380, -1719,
    3905,  1980,  3748,  2161,  3330,  4810,  3443,  1100,  3651,  2545,
   -1993,   900,  3534,  1096,  1237,  4043,  1237,  1238,  3002,  1238,
    3002,  3668,  1282,  2327,  2202,  1197,  3650,  1023,  1279,  1232,
    2744,  4822,  3362,  1511,  1245,  3338,  4072,  3888,  1237,  3890,
    1227,  1238,  1226,  3159,  5278,  2250,  2530,  3565,  1237,  3568,
    2307,  1238,  2308,  2310,  1240,  2048,  1237,  1325,  1240,  1238,
    2686,  1237,  2687, -2057,  1238,  1288,  2059,  2736,  1234,  1235,
    1293,  1279,  1336,  1240, -2828,  1700,   719,  2163,  1715,  1240,
    3990,  1049,  1360,  2624,  1240,  1112,  3168,  3577,  1984, -2762,
    1715,  2421,  1237, -2212,  1240,  1238,   663,    42,  3961,  4142,
    1240,  2833,  1234,  1235,  2715,  2836,  1237,  4380,  2168,  1238,
    2840,  2496,  1240,  -961,  1240,  5035,  1240,   848,  1240,  1509,
    1237,  1023,  3225,  1238, -1719,  1240,  -976,  1340,  2327,  1549,
    1240,  3879,  1393,  1234,  1235,  4039,  3500,  1335,  1111,  2620,
    1411,  1416,  4956,  1358,  1023,  2855,  2856,  2872,  1240,  1715,
    1237,  3891,  1237,  1238,  1240,  1238,  1240,  2874,  3457,   735,
    4310,  3199,  1044,  -617, -1719,  2511,  3803,  1045,  4186,  2880,
      49,  1460,   825,  4323,  3532,  2715,  1234,  1235,  2327,  1355,
    1904,  1023,  2664,   736,  1905,  2630,  1233,  2905,  2906,  1023,
    1023,  1715,  3894,   902,   879,  2605,  3657,  1568,  1240,  2606,
    5003,   959,  1569,  1240,  3646,  2531,  1904,   960,  1234,  1235,
    2549,  4011,   976,  1481,  4015,  1550,  1240,  4244,  1547,  4408,
    2582, -2763,   991,  3214,    54,  2522, -2762,  -618,  2307,  1591,
    2308,  2310,  2292, -1719,  2585,  4414,  2602,  1240,  2586,   667,
    2603,    55,  2512,  1240,  2536,  1594,  4689,  2597,  3767,  5024,
    3796,  1513,  3343,  1012,  2255,  1226,  3344,  1715, -1833,  2999,
    2327,  1047,  3642,  3643,  3567,  3642,  3643,  1023,  4707,  5065,
    2801,  3197,  2962,  1743,  2537,  1240,  1564,  1240,  3940,  4079,
    2542,  1390,  2547,  1301,  -301,  1237,  3039,  1586,  1238,  1480,
    5156,  1023,  2631,  1593,  1023,   119,  1595,  4642,  3515,  1240,
     114,  1690,   112,  3052,  1692,   639,  1046,  3572,   976,  1240,
    3390,  1331,  1234,  1235,  -496,  1710,  2327,  1240,  4409,  -481,
    3858,  2327,  1240,  5218,  1732,  1733,  1734,  4338, -2673,  1737,
    2327,  -523,  1741,  2327,  4312,  1023,  1693,  1747,  3096,  3097,
    1749,  1750,  2548,  3647,   879,  1351,  3110,  -512,  3933,  2327,
    2434,  1362,  1237,  1240,  4976,  1238,  4465,  1237, -2763,  1856,
    1238,  4433,  2790,  2551,  5214,  3832,  3116,  1240, -1994,  3833,
   -1719, -2828,  1367,  1005,  1158,   985,  2140,  1044,   973,  3215,
     762,  1240,  1045,  3662,  1256,  1085,  2240,  4446,  1158,  1602,
     927,  3665,  1389,  1234,  1235,  2555,  3669,  3840,  1227,  3859,
    1226,  3841,   195,  3860,  3755,  2791,  3725,  2886,  2228,  1234,
    1235,  1240,  1104,  1240,  3751,  1509,  3752,  2733,   652,   970,
    1825,  3896,  1949,  1826,  2866,  3897,  1234,  1235,  3203, -1984,
    1882,  3208,  5123,  3215,  2700,  2563,  1883,  1237,  3067,  2513,
    1238,  4232,  1927,  1928,  4848,  2786,  1932,  3391,  2568,  1933,
    1934,  1935,  3788,   880,  1939,  1940,  1942,  1944,  1945,  1946,
    1947,  1948,  1953,  2182,  4068,  4069,   962,   825,  1482,  3800,
    1914,  1237,  3233,  3513,  1238,  3192,  1969,  3194,  2489,  2572,
    2240,  1930,  4643,  4823,  4605,  2632,  4781,  3117,  4783,  2525,
    1277,  2020,  4026,  2506,  1007,  4328,  4329,  2203,  4313,  3827,
     981,  3828,  1237,  2529,  2290,  1238,  1563,  1563,  1602,  2919,
    3987,  1023,  2021,   903,  2294,  3846,   649,  3847,  1962,  1963,
     639,  1965,  1604,  1967,   639,  1023,   197,  5219,   639,  1977,
    1023,   976,  3861,  1982,  1983,  2538,   882,  2573,  2015,  2810,
     879,  4054,  1234,  1235,  1075,  1237,  1240,  1422,  1238,  2082,
    2018,  1964,  4013,  1023,  4925,  1968,  4020,  3764,   961,  1976,
    1726,  1023,  2091,  2688,  1023,  2817,  2099,  1368,  2033,  2035,
    5228,  2662,  3482,   879,  4319,  2920,  3789,  1237,  2204,  4195,
    1238,  1234,  1235,  2726,   976,   976,  1234,  1235,  1259,  3516,
     979,  3370,  4038,  3186,  4201,   976,   976,  3782,   976,  2061,
    3209,  2022,  2928,   880,  3217,  3499,  2921,  5229,  1085,  4233,
    4849,  1023,  1023,  1240,  4060,  1234,  1235,  2155,  1240,  4606,
    2095,  2229,  1234,  1235,  1234,  1235,   956,   879,  1023,  3187,
    3188,  4172,  4173,  1688,  1688,  4941,  2113,  3195,  1950,  2646,
    1971,  1604,  1972,  2114,  3959,  3963,  3909,  3951,  4993,  2727,
    3196,  2122,  1689,  1689,  3974,  3975,  1234,  1235,  3217,   959,
    1202,  2045,  1085,  5005,  1951,   960,  1023,  3976,  2539,   878,
    -698,   888,  2058,  1085,  3377,  2060,  2206,  2922,  2238,  5124,
    2728,  1237,  3342,   992,  1238,   974,   882,  3948,  2668,  3986,
    1550,  3379,  4234,  4351,  4352,    42,  2259,  3002,  1240,  1451,
    1329,  2337,  2633,  2246,  3982,  3983,  2385,  4953,  4466,  1234,
    1235,  4586,  4667,  1234,  1235,  3995,  3996, -1984,  2634,  2407,
     991,  2220,  1131,  4371,  4372,  4665,   971,  2624,  2283,  4374,
     993,  4377,  1240,  2359,  1390,  2231,  2141,  4585,  4210,  2575,
    1023,  3418,  2008,  4041,  2576,  1389,  3884,  1042,  3347,  3348,
    3889,  2729,  1023,  1105,  3296,  4012,  3419,  2656,  1023,  2386,
    2923,  2303,  1237,  1240,  3790,  1238,  4208,  4209,    49,  4122,
    3726,  3727,  1234,  1235,  1081,  5113,  1753,  1023,  1237,  1394,
    3470,  1238,  1606,  4232,  2183,  2337,  2366,   909,  1234,  1235,
    3214,  3475,  1199,  3477,  3514,  1237,  3480,  5054,  1238,   880,
     972,  1369,  4732,  2289,  2335,   994,  1240,  2300,  1278,  1764,
    1023,  4994,  2500,  2293,  1234,  1235,  3392,  5230,  1451,  1116,
     648,  2023,    54,   649,  2580,  2036,  2367,   985,  3517,  3518,
    3332,  1952,   880,  3985,  2730,  2501,  1234,  1235,  1240,    55,
    1587,  3353,   980,  3694,  2919,  2387,  3697,  3698,    42,  4264,
    3701,  3702,  3703,  3704,  3705,  3706,  3707,  3708,  2598,  1038,
    3711,  4872,  3713,  1277,  3715,  3721,  1234,  1235,  3723,  4202,
    3210,  5011,  1727,  2977,   730,  4587,  3642,  3643,  2397,  3791,
    3552,  2409,   882,  1187,  1827,  2820,   880,  1828,  4418,  2615,
    4397,  4958,  4776,  3539,  4962,  4401,  2360,  1234,  1235,  4404,
    1191,  1606,  4021,  2141,  2337,  1330,  4914,  1234,  1235,   919,
    2920,  1237,  2882,  4235,  1238,   882,  2307,  4915,  2308,  2310,
    1701,    49,  3806,  4051,   962,  -553,  2715,  1234,  1235,  1604,
    4713,  5228,  2619,  2427,   976,  3821,  3386,  1234,  1235,  2207,
    2888,  2921,  1240,   889,  3447,  3448,  3449,  2411,  1702,   976,
    1237,  4233,  2726,  1238,  5244,  1237,  3393,  3351,  1238,  3553,
    4354,  3554,  1234,  1235,  3838,  4988,  4989,  2024,  5229,   882,
    3673,  1005,  1234,  1235,  2371,    54,  1008,  2828,  3924,  4569,
    2795,  2924,   977,  4367,  1237,   976,  2978,  1238,  2508,   639,
     639,  1237,  4995,  1237,  1238,   917,  1238,  4378,   639,  1570,
    3215,  2796,  4382,  4030,  2733,  2733,  1271,  1272,  1273,  1274,
    4452,  2429,  2922,  4389,  4031,  1009,   961,  1279,  2727,  3968,
    2509,  2510,  4022,  1240,  4453,  1237,  2477,  3748,  1238,  1755,
    2651,  4869,  1701,  4984,  4238,   890,  2652,  1553,  1003,  1240,
    2829,  3677,  3431,  2797,   913,  1514,  2141,  4390,  4157,  2956,
    1234,  1235,  3969,  4679,  4521,  2731,  1240,  3910,  3765,  2251,
    1702,  1571,  2504,  4873,  4373,   195,   995,  3472,  3839,  1234,
    1235,  2398,  1752,  2883,  1043,  1158,  2556,  1588,  1237,  4076,
    1188,  1238,  1237,  5117,  4619,  1238,  4620,  1390,   996,  1717,
     754,  4077,  2661,  5012,  2628,  2923,  1331,  1192,  1234,  1235,
    4593,  2889,  4298,  1589,  2101,  4078,  1451,  4268,   891,  3760,
    3761,  3762,  3763,  1599,  5055,  3204,  3462,  1427,   943,  4198,
    2957,  4662,  4663,  2639,  1005,  1234,  1235,  3053,  3531,   997,
    4530,  1234,  1235,  1234,  1235,  4916,  2643,  2372,  4023,  2647,
    4531,  1237,  1694,  1023,  1238,  1234,  1235,  1234,  1235,  3852,
    2635,  1234,  1235,  2912,  2524,  1774,  3753,  1237,  3754,  2979,
    1238,  1234,  1235,  1007,  1554,  3863,  3394,  4325,  1395,  2980,
    1003,  1600,  1240,  4874,  2645,  5059,  2981,  1227,  5230,  1226,
    2661,  1278,  3864,  1237,  2115,  4310,  1238,  1007,  2101,  1606,
     998,  1245,  1234,  1235,  2662,  2689,  1756,  1572,  1703,  4985,
     976,  4508,  4509,  2958,  4358,  1237,  1718,  3054,  1238,   914,
    1719,  1240,  2101,  1234,  1235,  5056,  1240,  4454,   976,  2913,
    2526,  4652,  5173,  5173,  1720,  3217,  2738,  2739,  1753,  4838,
    4203,  4204,  4205,  2830,  2725,  1237,  4032,  5215,  1238,  2662,
    1234,  1235,   976,  1158,  1023,  1240,  5057,  4393,  4394,  2686,
    2252,  2687,  1240,  4395,  1240,  4235,  5216,  2116,  3970,  2697,
    4075,  1754,    42,  2702,  4519,  3766,  1237,  1384,  2388,  1238,
    3246,   976,  4493,  3319,   976,  4839,  1237,  2654,  1385,  1238,
    2982,  2789,  1775,  1023,  4532,  1014,  1240,  2952,  1023,  1023,
   -1897,  1234,  1235,  4099,  3771,  1085,  1237,  2802,  4322,  1238,
    3320,  4104,  4048,  4273,  1005,  4274,  1237,  3337,  4135,  1238,
    3055,  2688,  1234,  1235,  3819,  2500,  2924,  4759,  2697,  1085,
    2762,  2914,   976,  2826,  1602,  1007,  3345,  1774,  3346,  1032,
    1023,  1237,  4751,  2546,  1238,    49,  2837,  4833,  2501,  1240,
    4760,  1237,  4551,  1240,  1238,  2661,  1023,  1774,  2716,  4019,
    4457,  2721,   879,  5180,  5181,   879,   959,  1234,  1235,  2253,
    3769,  1721,   960,  2733,   959,  1234,  1235,  2559,  2233,  1701,
     960,  2234,  1774,  4518,  2560,  2527,  2564,  2983,  3915,  2434,
     639,   639,   639,   976,   639,  1023,   976,  2715,  1774,    54,
    4425,  3772,  4080, -1897,  2834,  3895,   639,  1702,  1023,  1386,
    4220,   639,  1240,  4828,  2915,  4840,    55,    42,  2571,  3650,
    1603,  2821,  2822,  2823,  1469,  2825,  3949,  4449,  1240,  1237,
    1034,  4033,  1238,  4049,  2959,  1015,  4621,  2835,  1234,  1235,
    2715,  2715,  2839,  2941,   648,  2891,  2715,   649,  1237,  2733,
    2733,  1238,  1234,  1235,  1240,  2865,  4449,  1234,  1235, -1897,
    3533,  1234,  1235,  1882,  1789,  3265,  1882,  1604,  1007,  1722,
    2824,  2574,  3265,  2827,  3941,  3991,  1240,  1237,  2528,  1547,
    1238,  4802,  2434,  2117,  1843,  4549,  4805,  1234,  1235,  4612,
      49,  1755,   702,   910,  1023,  2937,  1234,  1235,  4426,   879,
    1516,  1234,  1235,  1017,  1237,   191,  1240,  1238,  4932,  1847,
    1237,  1470,  1237,  1238,  1256,  1238,  1234,  1235,  2300,  4578,
    2941,  3783,  3390,  2409,  1237,  1869,  1237,  1238,  1023,  1238,
    1237,  2235,  3893,  1238,  2577,  1564,  1564,  1240,  1029,  2254,
    1237,  2950,  4427,  1238,  3405,  3406,   976,  1240,  1005,  1007,
    2589,  -553,  2942,  2327,  3933,  2340,  3933,  2255,   707,  4594,
    1519,    55, -1897,  4042,  3049,  2330,  1520,  1240,  3038,  2996,
    3962,  1237,  5060,  1520,  1238,  3001,  2607,  1240,  2934,  3973,
    2341,  3014,  3016,  3019,  3020,  3021,  3022,  3023,  1032,  3901,
    1517,  3027,  1237,  3032,   192,  1238,  1054,  1882,  2614,  4921,
    3094,  2948,  1240,  3032,  1694,  3042,  3043,  3900,  3032,  3505,
    3047,  3048,  1240,  1023,  3050,  3032,  3917,  1057,  2949,  1237,
    3060,   880,  1238,  3063,   880,  1883,  1234,  1235,  2617,  2942,
    3073,   962,  2726,  3074,   976,  2916,  3506,  1062,  2118,   962,
    1033,  1577,  1280,  3089,  1451,  3032,  1234,  1235,  2256,  1023,
    1526,  1527,  1003,  5061,  4162,  4086,  1521,  2119,  1756,  2870,
     719,  3678,  2651,  1521,   976,  1070,  2964,  4079,  2869,  3799,
    1237,  1234,  1235,  1238,  3032,  3126,  3679,  5088,  1743,  1034,
    3432,  2925,  2965,  4196,  4197,  4100,  4101,  1071,    25,  3831,
    1240,  1237,  4080,  1005,  1238,  3004,  1067,   648,  2727,  3834,
     649,  2410,  2715,  4163,   882,  4932,  3024,   882,  3575,  1240,
    5293,  3075,  3033,  2552,  1234,  1235,  3179,  2434,  1259,  3640,
    3641,  1393,  1882,   961,  3842,  1393,  2342,  1606,   976,  2956,
    3067,   961,   976,  4213,  3848,  1169,  1237,  1256,  1240,  1238,
    1023,  3118,  3064,   735,  1237,  5016,  3072,  1238,  2553,  3230,
     639,  3285,  1841,  3076,  3077,  1186,  4935,  3192,   880,  3194,
    4214,  3026,  3227,  3028,  4850,  1240,  1068,  2337,  1200,  1201,
    1023,  1240,  3040,  1240,  1023,  1778,  1779,  1780,  1234,  1235,
    2565,  3231,  1234,  1235,  2434,  1240,  1790,  1240,  1234,  1235,
    3057,  1240,  1234,  1235,  2550,  1528,  1529, -1984,  1234,  1235,
    2957,  1240,  4538,  2726,   321,  3172,   323,  1237,  2550,  3176,
    1238,  3088,  3849,  5160,  5018,  3090,  4557,  1844,  3433,  5110,
    1848,  1237,   176,  3179,  1238,  4938,  1237,  4168,  1599,  1238,
    1237,  3850,  1240,  1238,  1079,  3803,  2197,  2198,  3434,  1865,
    1866,   882,  4169,  1870,  3363,  4968,  5019,  3225,  1427,   943,
    1607,  3435,  1081,  1240,  2966,  3328,  1237,  4939,  2408,  1238,
    3851,  1884,  1885,  2199,  3365,  1237,  1889,  1890,  1238,  2727,
    1237,  2963,  5209,  1238,  5211,  1256,  1602,  1263,  1264,  3179,
    1240,  1320,  1082,  2958,  1323,  1237,  1600,  3853,  1238,  1326,
    5237,  1427,   943,  3856,  1328,  3862,  3355,  3356,  1234,  1235,
    2728,  2408,  1227,    36,  1226,  5147,  1023,  3865,   321,  3867,
     323,  1234,  1235,  1023,   920,  4230,  5104,  4470,  1427,   943,
    4472,  4473,   920,  3869,  4513,  4514,  4515,  4516,  2275,  2015,
    2276,  1240,  2967,  2566,  2015,  3436,  1083,  2434,  3378,  1023,
      42,  1259,  5279,  5280,  1087,  2567,  4240,  4241,  4359,  2434,
    4076,  2569,  1240,  4320,  3871,  2434,  3107,  3108,  2968,  2610,
   -1984,  3309,  4077,  2434,   762,  2693,  2863,  5204,   976,  2694,
    2864,  2729,  4256,  1599,  1089,  3872,  4078,  3311,  1882,  3180,
    4737,  1092,  4738,  1602,   976,   976,  3181,  3270,  1427,  4089,
    4434,  2434,  3339,  1091,  4726,  1237,  2434,  1240,  1238,  3422,
    4357,  1158,  3873,  3182,  1023,  1240,  3562,  3227,  1098,  1604,
    3563,   976,  1007,    49,  1007,  1237,  5253,  1093,  1238,  1549,
    2969,  3321,  2636,  5114,  3854,  1227,   956,  1226,  2434,  4249,
    3432,  1600,  3476,  4435,  4602,  4603,   879,   879,   879,  1602,
    1237,  4192,  4193,  1238,  3553,  2045,  3554,  4920,  4245,  3898,
    1103,  4070,  1107,  4261,  2730,  4071,  4436,  3437,  1108,   959,
    2733,  2058,  3401,  4096,  3468,   960,  4097,    54,  1240,  3489,
    4947,  3491,  4219,   174,  4262,  3078,  4071,  3079,  3743,  1259,
    3642,  3643,  1240,  1237,    55,  4278,  1238,  1240,  3349,  4277,
    3313,  1240,    42,  2434,  1023,  4437,   976,   976,  4966,  4967,
    1263,  1264,  4300,  4314,  2959, -1984,  2862,  4315,  3484,  1113,
    3182,  2733,  2733,  3355,  5260,  5261,  1604,  1240,  1279,  4263,
    3080,  2919,  2970,  1598,  3068,  1603,  1240,  4324,  1114,  3438,
    1115,  1240,  1393,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
    1233,  4361,  1599,  3081,  1256,  4362,  1240,  1237,  4363,  4399,
    1238,  1237,  4362,  4400,  1238,   702,  1117,  1237,  4406,  4495,
    1238,  1237,  4407,  4496,  1238,    49,  3182,  1237,  3433,  1118,
    1238,  4497,  1604,  3478,  3479,  4498,  4499,  1599,    42,  1256,
    4500,  1023,  3082,  3802,  1602,  3743,  1451,  2920,  3434,  1668,
    4402,  3753,  1669,  3754,  3564,   976,  2300,  3537,  1007,  4502,
    1600,  3435,  -696,  4503,  4547,  1284,  4761,  3519,  1289,  4550,
    1256,  4505,  2330,  4556,  1119,  4506,    63,  1122,  2921,    54,
    4355,   707,  4507,  3085,  3086,  4356,  4407,  2331,  3179,  1494,
    1495,  1123,  1498,  1393,  1499,  1600,    55,  4693,  3744,  4558,
    4762,  4512,  4698,  1023,  1124,  4407,  4541,  3001,  4559,  3001,
    4544,    49,  4311,  4560,  3014,  1125,  1240,  2897,  2898,  3585,
    1601,  1292,  2899,  2900,  1308,  3103,  3106,  2028,  3032,  1606,
    1603,  3648,  1295,  4552,  4570,  2731,  1240,  2434,  2434,  1299,
    1237,  1126,  1023,  1238,  1127,  3436,  4616, -1984,  3656,  2922,
    4400,  2789,  1393,  1451,  3498,   880,   880,   880,  1128,  4420,
    4633,  1240,  4573,  4637,  4407,    54,  1129,  4407,  3032,  1132,
    4420,  1134,  3508,  3509,  3510,  3511,  3032,  1604,  1872,  1873,
    3032,  3032,    55,   719,   962,  4640,  1918,  4592,  3180,  4407,
    4654,  -696,  5255,  5257,  4655,  3181,   976,  2332,  4656,  4702,
    1023,  1023,  4655,  4407,  1240,  3744, -1719,  1309,  1259,  1451,
    4595,  1135,  1310,  1602,  1136,  1267,  1268,  1269,  1270,  1271,
    1272,  1273,  1274,  4693,  4763,  1304,  4001,  4698,    63,  1882,
    3756,  2427,  2923,  1701,  1882,   174,  1606,  4773,   882,   882,
     882,  4774,  3941,  1259,  1305,  4792,  1139,  1044,  1602,  4400,
    1256,  2028,  1045,  4804,  3768,  1311,  3559,  3563,  4561,  1023,
    4870,  1702, -1719,  1140,  4871,  5032,   735,  3437,  1240,  5033,
    1142,  1312,  1240,  1085,  1259,  1143,   961,  1144,  1240,  1023,
    5037,  4693,  1240,  4641,  3690,  5040,  4698,  5042,  1240,  4362,
     736,  5043,  1606,  2514,  1145,  3083,  2361,  1313, -1719,  1603,
   -1719,  5051,  1146,  1023,  5118,  5052,  2330,  1147,  5119,  1148,
    1307,  4764,   879,  1805,  1005,  2852,  2853,   976, -1719,  1314,
     976,  2362,  3585, -1719,  5248,  1315,  4789,  1149,  5249,  4765,
   -1719,   175,  3227,  3432,  1603,  1152,  1012, -1719,  1226,  3438,
    1153,  3227,  3227,  1159, -1719,  1160,  1604,  3227,  2274,  2275,
     176,  2276, -1719,  4766,  1451,  1269,  1270,  1271,  1272,  1273,
    1274,  2557,  1161,  1318, -1719,  2561,  1162,  1263,  1264,  1163,
    2688,  1164,  1165,  1260,  1261,  3182,  1166, -1719,  1167,  1919,
    1319,  1604, -1719,  1170,  1171,  1172, -1719,  2583,  4079,  1332,
    4791, -1719,  1173,  1337,  3775,  1256,  1174,  3777,  1338,  2333,
    4817,  1240,  1263,  1264,  4977,  3693,  1175,  3695,  3696,  4090,
    3629,  3699,  3700,  1176,  1177,  1607,  -696,  4821,  1178,  1809,
    1179,  3709,  3710,   177, -1719,  2363,  3714,  1605,  3328,  3717,
    1180,  1344,  3724,  1263,  1264,  1181,   702,  1606,  1182,  1183,
    1184,  3931, -1719,  4778,  3892,  -696,  1348, -1719,  1185,  1189,
    1349,  1190,  1193,  2924,  1259,  2330,  4624,  4625,  1194,  4627,
     929, -1719,  4674,  1198,  1202,  1203,   178,  1701, -1719,  1204,
    2331,  3433,  1205,  1206,  1207,  1208, -1719,  1209,  4631,  4632,
    1210,  2697,   174,  1211, -1719,  3914,  1023,   762, -1719,  1212,
    1213,  3434,   976,  1214, -1719,  1702,  1215,  1216,  1217,  1218,
    1219, -1719,   707,  1023,  3435,  3227, -1719,  3032,  1883,   179,
    1220,  3942,  1221,  1283,  1316, -1719,  1352,  2334,  1363,  1374,
    1372,  1377,  2697,  1451,  1023,  1012,  1384,  1226,  1810,  1409,
    1417,  1423,  1813,  1335,   976,   976,  1451,  1007,  1007,  1814,
    1483,  1484,  1487,   976,   976,   976,  1007,  1007,  1007,  5041,
    1486,  1496,  4007,  4767,  1501,  1502,  1503,  1504,  1451,  4927,
    1607,  4855,  1505,  1506,  4858,  4859,  4860,  4861,  3812,  3923,
    3816,   880,  1507,  1023,  -696,  1508,  1512,  1515,   654,  1518,
    2332,  1535,  1548, -1719,  1552, -1719,  1042,   930,  3436,  2028,
     914,  1576,  4000,  1597,  4000,  1691,  1920,   176,  1694,  1259,
    1735,  1736,  -696,  1738,   719,  1739,  1606, -1719, -1719,  1742,
    1748,  4332,  1921,  1263,  1264,  1277,  1701,  1256, -1719,  1781,
    1815,  1774,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
    1792,  1795,  1830,  2919,  1840,   976,  3087,  4040,  1007,  1255,
    1841,  1606,  1883,   180,  1702,  1842,  1863,  4954,  1880,  1892,
    2365,  1893,  1900,  1901,   882, -1719,  4964,  4965,  1256,  1269,
    1270,  1271,  1272,  1273,  1274,  4973,  1902,   931, -1719,   655,
    4730,  1910,  1929,  1500,  3001,  1936,  1937,  1966,  1985,  1970,
    2017,  2145,  4067,  2039,  1817,  2040,  2038,   735,  1267,  1268,
    1269,  1270,  1271,  1272,  1273,  1274,  2041,  2043,  4752,  2920,
    4753,  4754,  2044,  2053,  2052,  -902,  2054, -1719,  2055, -1719,
    3437,   736,  2064,  2468,  2469,  2470,  2471,  2472,  2473,  2474,
   -1719, -1719,   181,  2080, -1719,  2361,  2085,  4782,  2096,  1607,
    2921, -1719,  2100,  2101,  2106,  2330,  2103,  2108,  2110,  2112,
    2146, -1719,  2113, -1719,  2139,  -696,  1386,  1256,  2144,  2164,
    2362,  1882,  2726,   682,  4143,  4025,   656,  2165,  1263,  1264,
    3998,  2166, -1719,  2181,  1607,  2184,  2193,  1883,  2191,  2194,
    4151,  4152,  2208,  2147,  2205,  2209,  2210,  2221,  2222, -1719,
   -1719,  2223,  3438,  2225,  4771, -1719,  2227,   182,  2239,   183,
    3032,  3032,  2726,  2241,  3126,  4381,  2243,  2244,  2245,  -696,
    2247,  2922,  2248,  2261, -1719,  2263, -1719,  2264,  2265,  2266,
    4827,  2267,  2269,  2268, -1719,  2270,  2272,  2280,  2727,  2284,
    2304,  1259,  1634,   184,  2285,  1818, -1719,  2312,  2313,  2314,
    2316,  4440,  2317, -1719,  4181,   185,  2169,  4185,   702, -1719,
    1563,  1987,  2325,  1820, -1719, -1719,  4067,  2329,  4333,  2956,
    2344,  2330,  2349, -1719,  2363,  1257,  2355,  2350,  2727,  2356,
     657,  4067,  1259,  4206,  2358, -1719,  2170, -1719,  1267,  1268,
    1269,  1270,  1271,  1272,  1273,  1274, -1719,  2368, -1719,  4003,
   -1719,  1258,   976,  2370,  2923, -1719,  2380,  2373,  1280,  2956,
    2381,  4226,  2384,  2403,  2391,   706,  1701,  2392,  2401,  2404,
    2334,  4073,  4074,   828,   707,  4931,  4081,  2413,   762,  2414,
    2415,  5020,  2416,  2419,  2420,  2433,  2430,  2171,  4771,  2431,
    2957,  2172,  2434, -1719,  1702,  2478,  2480,  2484, -1719,  2481,
    2482,   186,  2485,  2486,  2488,   712,  2491,  2487,  2493,  2494,
    2498,  2499,  4103,  2505,  2515,  2517, -1719,  2518,  4131,  4133,
    4134,  1259,  2519,  3812,  2533,  2541, -1719,  2535,  2540,  4218,
    2957,  2543,   829,  2544,  1988,  2550,  1256,  4177,  1989,   658,
    5028,  2558,  1260,  1261,   932,   933,  2554,   934,   935,   936,
    1263,  1264,  2562,  2578,  2587,  -696,  2611,  2579,  2584,   659,
     682,  2599,  5102,  2148,  2588,   830,   937,  2600,  2601, -1719,
   -1719,  2625, -1719,  2958, -1719,  2608,   719,  2609,  1990, -1719,
    2626,  4928,  2015,  1267,  1268,  1269,  1270,  1271,  1272,  1273,
    1274,  1263,  1264,  1883,  4366,  2627,  1256, -1356,  1991,  1274,
     831,  2640,  2653,  2644,   660,   824, -1830,  2649,  2666,   661,
    2650,   875,  2662,  2958,  2669, -1719,    42,  -851,  1262,  2672,
    1158,  1023,  2673,  4108,  3404,  3227,  2674,   976,  2675,   875,
    1007,  2676,  2364,   957,  2678,  2677,  2690,  2691,  4440, -1719,
     662,  2692,   730,  2695,   663,   702,  2173,   824,  1002,  2365,
    2141,   832,   664,  2722,   733,  2724,  1715,  2740,   734,   735,
    -696,  2748,  2741,  1992,  2753,  2757,  4108,  4109,  1023,  2751,
    2756,  4110,  4931,  4111,    42,  2924,  2758,  2759,  2760,  2088,
    1263,  1264,  3919,  4000,  2784,  2331,  2785, -1719,  2792,    49,
    1397,  1882,  2804,  1265,   665,  1398,  3322,  2805,  -696,  5225,
    2806,  2807,   706,  -696,  2570,  2808,  2809,  1393,  2813,  2149,
    4460,   707,  2815,  2819,  4110,  1882,  4111,  2841,  2842,  2843,
    4415,  4112,  4267,  5252,  2844,  2174,  2846,  4067,  2331,  4398,
    2150,  2850,  4067,  2861,  2789,  2860,  4067,  2868,  1882,  2862,
    1259, -1719,   712,  3405,  3406,  3585,  5225,    49,   666,  2858,
    2867,  2875,  2892, -1719,  2881,  2151,  1023,  2879,  2887,  1993,
      55,  2893,  1882,  2894,  4112,  2931,  2932,  2935,  2940,  4771,
    5252,  2152,  2945, -1719,  2953, -1719,  2964,  2974,  2973,   976,
    -108,  2975,  3044,  1023,  3046,   833,  3098,   667,   668,  2175,
    5176,  3092,  2965,  3113,  2959,  1994,  3111,  3119,  3127,  -851,
    1259,  3405,  3406,  5009,  3120,  1267,  1268,  1269,  1270,  1271,
    1272,  1273,  1274,   719,  1256,  3129,  4952,  3130,    55,  1995,
     976,  4478,  3131,  3132,  3133,  3134,  3135,  3136,  3137,  3138,
    3139,  3140,  3141,  5006,  2959,  3175, -1719,  3142,  3143,  3144,
    3145,   639,  3146,  3147,  1996,  3148,  1267,  1268,  1269,  1270,
    1271,  1272,  1273,  1274,  3149,  3150,  4431,  3151,   754,  -872,
    3152,  3153,  4441,  3154,   834,  4442,  4181,  3155,  3156,  3157,
    3158,  3161,  4488,  3162,  3432,   760,  3163,  3164,  3165,   730,
     762,  3166,  3167,   763,   835,  3178,  3174,  3200,  1997,  1523,
    3213,  4067,  3407,  3249,  3273,   734,   735,  4477,  1266,  1263,
    1264,  3232,  -872,   976,  5291,  3240,  3272,  3227, -1719,  2869,
   -1719,  2176, -1719,  3366,  3286,  3288,  3303, -1719,  1137,  1998,
    3334,  3274,  3843,  3336,  3340,  3214,  3380,  1187,  1191,   836,
   -2199,  1622,  1623,  3381,   661,  1267,  1268,  1269,  1270,  1271,
    1272,  1273,  1274,  3382,  3383,  2703,  3250,  3399,  3385,  3388,
    3407,  3417,   837,  2177,  3403,  3420,  3421,  3423,  3431,  1263,
    1264,  3430,  1260,  4113,  2966,   838,  3444,  1625,  4114,  3450,
    1023,  2704,  3453,  3251,  4115,  1280,  4580,   839,  3458,  3465,
    4537,  1628,  3467,  1987,  1883,  3469,  2705,  1629,  1630,  3942,
    4589,  1631,  3471,   840,  3481,  1023,  3486,  3487,  5274,  2706,
    3485,  3493,  3227,  3488,  3496,  1260,  4113,  3490,  3495,  3502,
    3501,  4114,  3433,  3503,  4116,  1633,  3524,  4115,  1259,   841,
    3525,  2952,  3328,  3252,  5009,  3528,  3253,  3541,  3546,  1634,
    1246,  1247,  3434,  1635,  3254,  3542,  4613,  1526,  1527,  3543,
    1393,  3544,  2967,  3545,  3569,  3435,  3570,  4443,  4444,  3571,
    3580,  2707,  2708,  3255,  3578,  4445,  3579,  4116,  3572,  3547,
    -553,  3650,  1640,  3655,  3658,  1260,  1261,  3659,  2968,  1280,
    3663,  1248,  3666,   842,  3667,  3674,  3683,  4067,  3688,  2709,
    3689,  4067,  3686,  3687,  1249,  2789,  3690,  3692,  3730,  1023,
    3759,  3733,  3736,  4117,  3739,   754,  3742,  1197,  3813,  4441,
    3256,  3774,  4442,  3757,  3785,  3793,  1988,  3803,  3817,  3807,
    1989,  3809,   760,   843,  3818,  3820,  3835,   762,  1280,  3822,
     763,  1999,  2000,  3824,  1250,  2001,  2002,  2003,  2004,  3436,
    2969,  3825,  3826,  3836,  1023,  3215,  4117,  1251,  3874,  1644,
    3877,  3878,  3882,  4118,  5288,  3883,  1645,  3885,  2710,  3899,
    1990,  1647,  4334,  1619,  1267,  1268,  1269,  1270,  1271,  1272,
    1273,  1274,  1451,  3907,  1252,  3908,  1646,  3912,  3925,  3916,
    1991,  3257,  4181,  5288,  4185,  4685,  3929,  1263,  1264,  3216,
    3227,  3930,  1528,  1529,  3946,  3947,  4118,  3943,  4729,  3964,
    3954,  3955,  3956,  3953,  3965,  3957,  3966,  3978,  3958,  3979,
    4119,  4226,  2711,  3984,  3992,  4004,  3994,  4005,  4008,  4009,
    4710,  4010,  3997,  4024,  1267,  1268,  1269,  1270,  1271,  1272,
    1273,  1274,  4027,  5099,  4029,  4036,  1648,  4042,  4046,  1253,
    4047,  4050,  2970,  4053,  4055,  1992,  4058,  4061,  4062,  4087,
    4098,  4105,  4136,  4119,  1649,  4140,  4141,  4156,  4155,  4200,
    1023,  3437,  4146,  4212,  4217,  4222,  4227,   976,  4229,  4237,
    4239,  1530,  1531,  1532,  4253,  3258,  4246,  4252,  3259,  4275,
    4167,   824,  4270,  3032,  4265,  3032,   824,  4280,  4302,  4266,
    4297,  4269,  4307,  4304,  4443,  4444,  5137,  4308,  4309,  4296,
    4310,  4318,  4474,  4321,  4326,  4316,  4327,  4330,  4331,  1653,
    4348,  5137,  4120, -1612,  4353,  1003,   824, -1611,  1654,  2233,
    4370,  4375,  4384,  4385,  5146,  4386,  4387,  3536,  4412,  4403,
    4416,  4450,   824,  3438,  4422,  -699,  -698,  4451,  4456,  4458,
    3006,  1993,  4785,   196,  4734,  4462,  4464,  4130,  4471,  4479,
    4480,  4177,  4482,  4121,  4483,  4120,  3260,  4490,  4486,  4489,
     876,  4492,  4501,  4511,  4524,  4522,  4526,  4525,  4539,  4553,
    3217,  4181,  4181,  4527,  4540,  4564,  4548,  1994,   876,  -698,
    4541,  4542,  4845,  5137,  4543,  4565,  4554,  4545,   824,   824,
    4546,   824,   824,  5198,  4555,  4563,  4121,  1659,  5200,  4335,
    4571,  1995,  4572,  4574,   824,  4575,  4576,    42,  4582,  4590,
    4583,  4596,  4597,  4599,  4601,  4626,  4617,  4362,  4718,  4622,
    4623,  4628,  4629,  1038,  4634,  4651,  1996,  4658,  3328,   733,
    3261,  4668,  5137,  4666,  5137,  4660,  4669,  4544,  3681,  1564,
    4675,  4677,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
    4681,  4699,  4711,  4688,  1660,  1661,  1662,  4700,  4067,  4712,
    5137,  1663,  4716,  4733,  4715,  4720,  4728,  4739,  4708,  4743,
    1997,  4786,  4877,  4687,  4709,  4755,  4717,  2652,  1664,  4796,
      49,  1665,  4798,  4788,  4807,  4801,  2937,  4811,  4847,  4830,
    4815,  4832,  4854,  4865,  4856,  4857,  4875,   824,  4745,  4744,
    3262,  1998,  5137,  5137,  4780,  4790,  4879,  5295,  4816,  4818,
    4834,  4606,  4835,  4836,  4837,  4841,  1883,  1667,  4946,  4918,
    4842,   648,  3324,  4846,   649,  3126,  3126,  4851,  3263,  4862,
    4000,  4917,  4935,  4948,    54,  4936,  4949,  4938,   824,  4926,
    4940,  4933,  4939,  4955,  4956,  4969,  4970,  4979,  4997,  4999,
    -440,    55,   875,  2066,  5000,  4974,  5001,  5002,  5017,  5036,
    5031,  5038,  5065,  2067,  -458,   957,  4983,  5029,  5068,  5093,
    5094,  4990,  5095,  2068,  5096,  5098,  5104,  5105,  5106,  5108,
    4748,  5122,  5125,  5126,  5133,   119,  5134,  2069,  2070,  2071,
     114,  5138,   112,  5112,  5148,  5151,  5047,  5154,  5155,  5156,
    5161,  4281,  4181,  2072,  5166,  5050,  5163,  5165,  5053, -2618,
    5169,  4282,  5177,  5186,  5179,  5189,  5191,  5201,  5199,  5206,
    5207,  4283,  5202,  5208,  5212,  5226,  5236,  5217,  5240,  5242,
    5258,  5245,   879,  4868,  5246,  4284,  4285,  4286,  5259,  1670,
    5264,  5263,  5266,  5273,  5275,  5277,  5276,  5278,  5100,  5296,
    4992,  4287,  3741,  3903,  1023,  3732,  3735,  1023,  4684,  4686,
    3738,  3729,  4682,  4199,  1765,  4694,  4052,  1673,  4704,  5004,
    5069,  5144,  4922,  5145,  2315,  4706,  4813,   800,  5297,   824,
    5268,   969,  4295,  3218,  3415,  4890,  -553,  3373,  4891,  5281,
    4893,  5183,  5131,  5184,  5174,  5143,  4894,  1023,  5142,  1468,
    4211,  2993,   875,  1999,  2000,  4896,  2998,  2001,  2002,  2003,
    2004,  3902,  4897,   824,   824,  4510,  4898,  4946,  4899,  4900,
    4901,  4904,   824,   824,   824,   824,   824,   824,  4396,  1608,
    4905,  4523,  4906,  3173,  3781,   824,   824,  3780,   824,   824,
    4364,  3784,  4746,   824,   824,  5115,  4912,   824,   824,   824,
     824,  4636,   824,   824,  5120,  5153,  5047,  4864,  5121,  3101,
     824,   824,  3171,   824,   824,   824,   824,   824,  4221,  3779,
     824,   824,   824,   824,   824,   824,   824,   824,   824,  4410,
     824,  4411,  4459,   824,   824,  4091,  4139,  4137,   824,  4657,
    5127,  4461,   824,   824,   824,  3876,  4942,  4758,  4803,  4806,
    4866,  3011,  4772,  3576,  4779,   824,   824,   824,  2503,  3644,
     824,  4423,  4650,   824,   824,   824,   824,   824,   824,  4215,
    3522,  3770,  3512,  4672,  3104,  3105,  3102,  2857,  2859,  4913,
    2302,  2073,   824,   824,  1479,  4154,  4912,  4912,  4911,  2479,
     824,  3400,   824,   824,  3402,  3649,  5188,  2428,  2074,  3691,
    3922,  4306,  3389,  5196,   824,   824,   824,  5247,   824,   824,
    1010,  2783,   824,   824,   824,  1383,  1912,   824,   824,   824,
     824,   824,   824,   824,   824,  1382,  2936,  2648,   824,  4288,
    3352,  2618,  3887,   824,  4843,  5103,  1883,  1839,  3269,  3426,
    3427,   880,  5238,  4825,  3428,  3429,  4289,  5243,   875,  5150,
    5256,  5254,  5111,  4741,  4950,  4604,  1023,  4174,  1791,  4951,
    1883,  1801,  1802,  1803,  1804,  1805,  4350,  4611,  1485,  4913,
    4913,  4844,  3981,  4719,  4150,  2218,  4819,   844,  4911,  4911,
    4757,   875,  2655,  1883,  2939,  1579,  2037,  1580,  3361,  3920,
    3921,  4591,  2217,  4317,  4912,  4912,  3918,  4579,  1575,  5289,
    1581,  4584,  1582,  3473,  2832,  2847,  2301,  1883,  1462,  3474,
    3368,  4912,  2755,  3670,  4388,  4475,  3928,  4630,  5292,   114,
    5109,   112,  5272,  5149,   882,  4742,  4588,  4517,  5289,  3535,
    2803,  3720,  5107,  2124,  1913,   875,  2075,   965,  3463,  2814,
     966,  2123,   824,  2800,  2799,  3396,  1376,   926,  3507,  2027,
    3201,  4727,  2260,  3202,  4829,   673,  1565,  2087,   674,  5116,
    4216,  1381,  1768,  1769,  1770,  4520,  4481,  4290,  1806,  1807,
    1808,  1809,  4701,   957,  4912,   824,  4161,  4913,  4913,     0,
       0,     0,     0,     0,  4291,     0,  4911,  4911,     0,  4912,
       0,     0,     0,     0,  4913,     0,     0,     0,  2076,     0,
       0,     0,  4912,  4911,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2077,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4912,     0,   824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4912,  4912,     0,  4292,     0,     0,     0,
    5270,     0,   824,     0,     0,     0,     0,  4913,     0,     0,
       0,  4912,     0,  4293,     0,     0,  4911,     0,     0,     0,
    5270,  4912,  4913,     0,     0,     0,  4912,     0,     0,     0,
    1810,  4911,  1811,  1812,  1813,  4913,     0,     0,     0,     0,
    4912,  1814,  4912,     0,  4911,     0,     0,     0,     0,  5270,
       0,     0,   824,     0,     0,     0,     0,     0,  4912,     0,
    4912,     0,  4912,     0,  4913,     0,     0,     0,     0,     0,
       0,     0,     0,  4911,     0,     0,  4913,  4913,     0,     0,
       0,     0,     0,     0,     0,  4911,  4911,     0,  4912,     0,
       0,     0,     0,     0,  4913,     0,     0,     0,     0,     0,
       0,     0,     0,  4911,  4913,     0,     0,     0,     0,  4913,
    4912,  4912,     0,  4911,     0,     0,     0,     0,  4911,     0,
       0,     0,  1815,  4913,     0,  4913,     0,     0,     0,     0,
    4912,  4912,  4911,  1341,  4911,  4912,     0,     0,     0,     0,
       0,  4913,     0,  4913,     0,  4913,     0,     0,     0,     0,
    4911,     0,  4911,     0,  4911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4913,     0,     0,     0,     0,     0,     0,     0,     0,
    4911,     0,     0,     0,     0,  1816,  1817,     0,     0,     0,
       0,   876,     0,  4913,  4913,     0,     0,     0,  3214,     0,
       0,     0,  4911,  4911,  1622,  1623,     0,     0,     0,     0,
       0,     0,     0,  4913,  4913,     0,     0,     0,  4913,  1341,
       0,     0,  4911,  4911,     0,     0,     0,  4911,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1625,     0,     0,     0,     0,     0,     0,     0,  1120,     0,
       0,     0,     0,     0,  1628,     0,     0,     0,     0,     0,
    1629,  1630,     0,     0,  1631,     0,     0,     0,     0,     0,
       0,     0,  1622,  1623,     0,     0,     0,   824,  1151,     0,
       0,   824,     0,     0,     0,     0,  1234,  1235,  1633,   824,
       0,   824,     0,     0,  1168,     0,     0,     0,     0,     0,
       0,     0,  1634,     0,     0,     0,  1635,     0,  1625,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1628,     0,     0,     0,     0,  1818,  1629,  1630,
       0,   824,  1631,  -553,     0,  1640,     0,     0,     0,     0,
       0,   876,     0,     0,  1819,  1820,     0,     0,     0,     0,
       0,     0,     0,     0,  1228,     0,  1633,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1634,     0,     0,     0,  1635,   824,   824,   824,     0,     0,
       0,     0,     0,     0,  1801,  1802,  1803,  1804,  1805,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1640,     0,   824,     0,     0,  3215,     0,
     824,     0,  1644,     0,     0,     0,     0,     0,     0,  1645,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   824,
       0,     0,     0,     0,     0,     0,   824,     0,     0,  1646,
       0,   824,     0,   824,     0,     0,     0,     0,     0,   824,
       0,   824,   824,     0,     0,     0,     0,     0,     0,  1343,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2435,
    1644,     0,     0,     0,     0,     0,     0,  1645,     0,     0,
       0,  1806,  1807,  1808,  1809,     0,     0,     0,     0,  1648,
     800,     0,     0,     0,     0,     0,     0,  1646,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1649,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   876,     0,     0,
       0,     0,  2436,  2437,  2438,  2439,  2440,  1526,  1527,  2441,
    2442,  2443,     0,  2444,  2445,  2446,  2447,  2448,  2449,  2450,
    2451,  2452,  2453,     0,  2454,  2455,     0,  1648,     0,     0,
     876,     0,  1653,     0,     0,     0,  1341,     0,  1003,     0,
       0,  1654,     0,     0,     0,  1649,     0,     0,     0,     0,
       0,  2051,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1810,     0,  1811,  1812,  1813,     0,     0,
     875,     0,     0,   875,  1814,     0,     0,     0,     0,     0,
     957,   824,     0,     0,   876,   824,     0,     0,   957,     0,
       0,   824,     0,  3217,     0,     0,     0,     0,     0,     0,
    1653,   824,     0,     0,     0,     0,     0,     0,     0,  1654,
       0,     0,     0,     0,     0,  1237,     0,     0,  1238,     0,
    1659,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,  1772,  1773,     0,     0,     0,
       0,     0,     0,     0,  1783,  1784,     0,     0,  1787,  1788,
       0,     0,  1528,  1529,     0,  1815,     0,  1796,  1797,     0,
    1798,  1799,     0,     0,     0,  1823,     0,     0,     0,  1832,
    1833,  1834,  1835,     0,  1837,     0,     0,  1660,  1661,  1662,
       0,     0,  1845,  1846,  1663,  1849,  1850,     0,  1659,     0,
       0,     0,  1854,     0,     0,  1857,  1858,  1859,  1860,  1861,
    1862,  1664,  1864,    49,  1665,  1867,  1868,   875,     0,     0,
    1871,     0,     0,     0,  1874,  1878,  1879,     0,  1816,  1817,
       0,     0,     0,     0,     0,     0,     0,  1886,  1887,  1888,
       0,     0,     0,     0,     0,  1894,  1895,  1896,  1897,  1898,
    1667,     0,     0,     0,     0,  1660,  1661,  1662,     0,     0,
       0,     0,  1663,     0,  1911,   800,     0,    54,     0,     0,
       0,     0,  1915,     0,  1916,  1917,     0,     0,     0,  1664,
       0,     0,  1665,     0,    55,     0,     0,  1622,  1623,     0,
    2991,     0,     0,  2991,  2991,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1957,     0,     0,  1667,     0,
       0,  -853,  -853,  1625,     0,     0,     0,     0,     0,     0,
       0,  -853,     0,     0,     0,     0,     0,  1628,     0,     0,
       0,     0,     0,  1629,  1630,     0,     0,  1631,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1818,  1633,  1670,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1634,  1240,  1819,  1820,  1635,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1673,     0,     0,     0,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1005,     0,  1640,  -553,
       0,     0,     0,     0,  2098,     0,     0,     0,  2456,  2457,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1670,     0,     0,     0,     0,     0,     0,     0,     0,  2458,
       0,  2459,  2460,  2461,  2462,  2463,     0,  2137,  2464,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1673,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,     0,
       0,   824,   824,     0,     0,  1644,     0,     0,     0,     0,
       0,     0,  1645,     0,     0,     0,     0,     0,     0,     0,
       0,   824,   824,     0,   824,  2213,     0,   824,   824,   824,
     824,   824,  1646,     0,   824,     0,     0,     0,     0,     0,
       0,     0,     0,   824,  2232,     0,     0,     0,   824,     0,
     824,     0,   824,   824,     0,   824,   824,     0,     0,     0,
     824,   824,   824,     0,     0,     0,   824,   824,   824,     0,
     824,     0,   824,     0,   824,     0,   824,     0,   824,     0,
       0,     0,     0,   824,     0,     0,     0,     0,     0,     0,
       0,     0,  1648,     0,  2286,     0,     0,     0,     0,   824,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,     0,   824,     0,   824,     0,
     824,     0,     0,     0,   824,     0,     0,     0,     0,     0,
     824,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1653,     0,     0,     0,     0,
       0,     0,     0,     0,  1654,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,     0,     0,  3586,
    3587,     0,     0,     0,     0,  3588,     0,  3589,     0,  3590,
    3591,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3592,     0,     0,
       0,     0,     0,  1659,     0,     0,     0,  2717,  2718,     0,
       0,     0,     0,     0,   875,   875,   875,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,     0,     0,     0,  3593,     0,     0,
    3594,     0,     0,     0,     0,     0,     0,     0,  3595,     0,
    1660,  1661,  1662,     0,     0,     0,     0,  1663,     0,  2516,
       0,     0,     0,  2520,     0,     0,     0,  3255,     0,   876,
       0,     0,   876,  2516,  1664,     0,     0,  1665,     0,     0,
       0,     0,   824,     0,  3596,     0,     0,     0,     0,     0,
       0,     0,   824,     0,   824,     0,     0,     0,     0,     0,
       0,     1,     0,     0,     2,     0,     0,     0,     0,     0,
       0,     0,  3597,  1667,  3598,     0,     0,     0,     0,     3,
       0,     0,     0,     4,     0,     0,     0,     0,     0,     0,
    3599,  3600,     0,     0,     0,     0,     0,     5,     6,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,     0,
       8,     9,     0,     0,     0,     0,     0,  2591,  2593,  2595,
       0,     0,     0,     0,     0,   824,    10,     0,     0,     0,
       0,     0,  3601,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3602,    11,     0,     0,     0,
       0,     0,  2629,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3603,     0,   876,     0,    12,     0,
       0,  2637,     0,  3604,  3605,     0,  3606,     0,    13,    14,
       0,     0,  2911,  2641,  2911,  2642,  2926,  2927,     0,  2929,
      15,    16,     0,     0,     0,  1670,     0,     0,     0,     0,
       0,     0,     0,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3607,  3608,  3609,     0,    18,     0,     0,
       0,     0,     0,  1673,     0,     0,     0,     0,     0,     0,
       0,     0,  3610,  3611,  3612,     0,  2986,    19,     0,  3613,
    2992,     0,  3614,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,    21,     0,     0,
    3615,  3616,    22,     0,     0,    23,     0,     0,     0,     0,
    3034,  3035,  3036,  3037,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,    25,     0,
       0,    26,     0,     0,  3617,  3618,     0,     0,     0,     0,
       0,     0,  3071,     0,     0,     0,     0,     0,     0,     0,
       0,    27,     0,     0,     0,     0,     0,     0,     0,     0,
    3260,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,    29,  3099,     0,     0,     0,     0,  1619,     0,
    1620,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1622,  1623,     0,     0,     0,     0,     0,
       0,     0,     0,  2811,     0,     0,     0,  2137,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     875,     0,  3619,  2818,  1624,     0,  3620,     0,     0,  1625,
       0,     0,     0,     0,     0,     0,     0,     0,  3621,     0,
       0,     0,     0,  1628,     0,     0,     0,     0,     0,  1629,
    1630,     0,     0,  1631,     0,     0,     0,     0,   824,     0,
       0,     0,  1632,     0,     0,     0,   824,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,  1633,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1634,     0,   824,   824,  1635,     0,     0,  3622,     0,
       0,  3623,    31,  1636,  3624,  3625,  3626,  3627,     0,     0,
    3100,     0,     0,    32,     0,     0,     0,     0,  1639,   824,
       0,     0,     0,     0,  1640,     0,     0,     0,     0,   824,
       0,   824,     0,   824,     0,    33,     0,     0,    34,     0,
      35,     0,     0,    36,     0,     0,     0,  3628,  3629,     0,
       0,     0,     0,    37,    38,     0,     0,     0,  1642,     0,
       0,     0,     0,    39,   824,    40,     0,     0,     0,   824,
       0,   824,     0,     0,    41,  3630,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,    43,     0,
       0,     0,     0,    44,    45,    46,     0,     0,     0,     0,
       0,  1644,     0,     0,     0,   824,     0,     0,  1645,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,     0,  1646,     0,
       0,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,   824,     0,   824,     0,     0,     0,     0,     0,     0,
       0,  1647,     0,    49,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,  1648,    51,
       0,     0,     0,    52,     0,  3398,     0,     0,     0,  5213,
       0,    53,     0,     0,     0,     0,  1649,    54,     0,     0,
    1650,     0,     0,     0,     0,   824,  3128,     0,     0,     0,
       0,     0,     0,     0,    55,     0,     0,     0,     0,     0,
       0,     0,    56,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   876,   876,   876,     0,     0,    57,    58,
      59,    60,     0,     0,  1652,     0,     0,     0,     0,     0,
       0,  1653,     0,    61,     0,     0,     0,     0,     0,     0,
    1654,     0,     0,     0,  3464,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   824,
       0,     0,     0,     0,  3239,     0,     0,     0,     0,     0,
      62,     0,     0,  3247,  3248,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1656,     0,  2911,
       0,     0,     0,  3275,  3276,     0,  3277,     0,     0,  3280,
    3281,  3282,  3283,  3284,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3290,     0,     0,     0,  1659,
    3291,     0,  3292,     0,  3293,  3294,    63,  3295,     0,     0,
       0,     0,  3300,  3301,  3302,     0,     0,     0,  3305,  3306,
    3307,     0,  3308,     0,  3310,     0,  3312,     0,  3314,     0,
    3315,     0,     0,     0,     0,  3318,     0,     0,     0,     0,
    3523,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1660,  1661,  1662,     0,
       0,     0,     0,  1663,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3540,     0,     0,  3350,     0,     0,     0,
    1664,     0,  1957,  1665,  3548,     0,  3555,  3556,  3557,  3558,
       0,  3560,  3561,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1667,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2991,  2991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3654,     0,
       0,     0,     0,  1668,     0,     0,  1669,     0,     0,     0,
       0,  3660,     0,     0,     0,     0,     0,  3397,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   824,     0,   824,     0,     0,   824,   824,
       0,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,   824,     0,     0,
     824,     0,     0,   824,   824,     0,     0,     0,     0,     0,
    2911,  1670,     0,  2911,  2911,     0,     0,  2911,  2911,  2911,
    2911,  2911,  2911,  2911,  2911,   824,     0,  2911,     0,  2911,
       0,  2911,  3716,     0,     0,  2911,     0,   824,     0,  1673,
       0,     0,     0,     0,     1,     0,     0,     2,     0,  1353,
    1426,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2213,     0,     4,     0,     0,     0,
       0,     0,     0,     0,     0,  1427,   943,     0,     0,   876,
       5,     6,     0,   824,     0,     0,  1428, -1992,     7,     0,
       0,     0,     0,     8,     9,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
       0,  1429,     0,  1430,     0,     0,     0,     0,   824,   824,
       0,     0,     0,  1431,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,     0,     0,     0,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2286,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0, -1984,  1432,    15,    16,     0,     0,  1433,     0,     0,
    1434,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1435,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,   824,     0,     0,     0,     0,     0,     0,
       0,     0,  1436,     0,  1437,     0,     0,     0,     0,     0,
      19,     0,     0,  1438,     0,  1439,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
      21,     0,     0,     0,     0,    22,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    24,     0,     0,     0,     0,     0,     0,
       0,    25,     0,     0,    26,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    27,     0,  1440,     0,     0,     0,
       0,     0,     0,     0,   824,   824,     0,     0,     0,     0,
       0,    28,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1441,     0,     0,     0,     0,     0,  2991,  2991,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4017,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1442,     0,     0,     0,     0,
       0,     0,     0,  4028,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,  4045,     0,
       0,     0,  1443,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1444,  1445,     0, -1988,  1446,  1447,     0,
    3798,     0,     0,     0,     0,    31,     0,     0,  3801,     0,
       0,   824,     0,     0,     0,     0,    32,     0,  1448,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,   824,  3829,  3830,     0,    33,     0,
       0,    34,     0,    35,     0,     0,    36,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    37,    38,     0,     0,
       0,  3855,     0,     0,     0,     0,    39,     0,    40,     0,
       0,  3866,  1449,  3868,     0,  3870,     0,    41,     0,     0,
       0,     0,     0,    42,     0,  1450,     0,     0,     0,     0,
       0,    43,     0,     0,     0,     0,    44,    45,    46,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -2687,     0,     0,
       0,  1451,     0,     0,     0,     0,     0,     0,     0,    47,
       0,     0,     0,     0,     0,     0,    48, -1992,     0,     0,
    1452,     0,     0,     0,     0,   824,     0,  2213,     0,     0,
       0,     0,     0,     0,     0,     0,    49,     0,     0,     0,
   -1988,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   824,  2911,     0,     0,     0,     0,
      50,     0,     0,  3950,     0,  3952,     0,     0,     0,     0,
       0,     0,    51,     0,     0,     0,    52,     0, -2687,  4207,
       0,     0,     0,     0,    53,  1453,     0,     0,     0,     0,
      54,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2137,     0,     0,    55,     0,     0,
       0,     0,     0,     0,     0,    56,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   824,     0,
       0,   824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   824,     0,    61,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    62,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1454,     0,     0,  1455,  1456,  1457,  1458,     0,  1459,     0,
       0,  4059,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    63,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4383,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,     0,     0,     0,     0,  4908,     0,     0,     0,     0,
       0,  4919,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4439,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4231,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   824,
       0,     0,     0,     0,     0,  4908,  4908,     0,     0,     0,
       0,     0,     0,     0,     0,  4242,     0,  2286,     0,     0,
    4247,  4248,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4255,     0,     0,     0,     0,  4257,
       0,     0,  4258,     0,     0,  4259,  4260,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     875,  2911,  2911,  2911,  2911,     0,     0,  4272,     0,     0,
       0,     0,  4017,     0,     0,     0,     0,     0,     0,   824,
       0,     0,  1618,     0,     0,     0,  4529,  1619,     0,  1620,
       0,     0,  1621,     0,     0,     0,     0,     0,     0,   824,
       0,   824,  1622,  1623,     0,     0,     0,     0,     0,     0,
       0,   824,     0,  4908,  4908,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2213,     0,     0,     0,     0,
    4908,     0,     0,  1624,     0,     0,  -853,  -853,  1625,  1626,
       0,     0,     0,     0,  1627,     0,  -853,     0,     0,     0,
       0,     0,  1628,     0,     0,     0,     0,     0,  1629,  1630,
    4344,  4347,  1631,     0,     0,     0,     0,     0,     0,     0,
       0,  1632,     0,     0,     0,     0,     0,     0,     0,  4360,
       0,     0,     0,     0,     0,     0,  1633,     0,     0,     0,
       0,   824,     0,  4908,     0,     0,     0,     0,     0,     0,
    1634,     0,     0,     0,  1635,     0,     0,     0,  4908,   824,
       0,     0,  1636,  1637,     0,     0,     0,     0,     0,  1638,
       0,  4908,     0,     0,     0,     0,     0,  1639,     0,  4618,
       0,     0,     0,  1640,     0,     0,     0,     0,     0,   824,
       0,     0,     0,     0,  1641,  4405,     0,     0,     0,   824,
    4908,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4908,  4908,     0,     0,     0,  1642,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4908,     0,     0,     0,     0,     0,     0,   824,     0,     0,
    4908,     0,     0,     0,     0,  4908,     0,     0,     0,     0,
       0,     0,   824,     0,     0,     0,     0,     0,  1643,  4908,
    1644,  4908,     0,     0,     0,     0,     0,  1645,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4908,     0,  4908,
       0,  4908,     0,     0,     0,     0,     0,  1646,     0,     0,
       0,     0,     0,     0,     0,     0,  4484,  4485,     0,  4676,
       0,  1618,     0,     0,     0,     0,  1619,  4908,  1620,     0,
    1647,  1621,  2911,     0,     0,     0,     0,     0,     0,     0,
       0,  1622,  1623,     0,     0,     0,     0,     0,     0,  4908,
    4908,     0,     0,  4703,     0,     0,   824,     0,     0,     0,
       0,     0,     0,     0,   824,     0,     0,  1648,     0,  4908,
    4908,     0,  1624,     0,  4908,     0,     0,  1625,  1626,     0,
       0,     0,     0,  1627,     0,  1649,     0,     0,     0,  1650,
       0,  1628,     0,     0,     0,     0,     0,  1629,  1630,     0,
       0,  1631,     0,     0,     0,     0,     0,     0,     0,     0,
    1632,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1633,     0,  1651,     0,     0,
       0,     0,     0,  1652,     0,     0,     0,     0,     0,  1634,
    1653,     0,     0,  1635,     0,     0,     0,     0,     0,  1654,
       0,  1636,  1637,     0,     0,     0,     0,     0,  1638,     0,
       0,     0,     0,  2213,     0,     0,  1639,     0,     0,     0,
       0,  4777,  1640,     0,     0,     0,     0,     0,     0,     0,
       0,  1655,     0,  1641,  4598,     0,  4600,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1656,  1657,  1658,     0,
       0,     0,     0,     0,     0,     0,  1642,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1659,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1643,     0,  1644,
       0,  3586,  3587,     0,     0,     0,  1645,  3588,     0,  3589,
       0,  3590,  3591,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1646,     0,     0,  3592,
       0,     0,     0,     0,     0,  1660,  1661,  1662,     0,     0,
       0,     0,  1663,     0,     0,     0,     0,  4664,     0,  1647,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1664,
       0,     0,  1665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4670,     0,     0,  3593,
       0,     0,  3594,     0,     0,  1666,  1648,     0,     0,     0,
    3595,     0,     0,     0,     0,     0,     0,     0,  1667,     0,
       0,     0,     0,     0,  1649,     0,     0,     0,  1650,  3255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3596,     0,     0,     0,
       0,     0,  1668,     0,  4963,  1669,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1651,     0,     0,     0,
    2286,     0,  1652,  4714,  3597,     0,  3598,     0,     0,  1653,
       0,  5034,     0,     0,     0,     0,  4344,     0,  1654,     0,
       0,     0,  3599,  3600,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1655,     0,     0,     0,     0,     0,     0,     0,  4344,     0,
       0,     0,     0,     0,  3601,  1656,  1657,  1658,     0,   876,
    1670,  1671,  1672,     0,     0,     0,     0,  3602,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5048,  5049,     0,  3603,  1659,  1673,     0,
       0,     0,     0,     0,     0,  3604,  3605,     0,  3606,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3607,  3608,  3609,     0,     0,
       0,     0,     0,     0,  1660,  1661,  1662,     0,     0,     0,
       0,  1663,     0,     0,  3610,  3611,  3612,     0,     0,     0,
       0,  3613,  2286,     0,  3614,     0,     0,     0,  1664,     0,
       0,  1665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3615,  3616,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1666,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1667,     0,     0,
       0,     0,     0,     0,     0,     0,  3617,  3618,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4878,     0,     0,     0,     0,     0,     0,     0,
       0,  1668,  3260,     0,  1669,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4934,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3619,     0,     0,     0,  3620,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3621,  4978,     0,     0,     0,     0,     0,     0,     0,  1670,
    1671,  1672,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1673,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5015,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3622,     0,     0,  3623,     0,     0,  3624,  3625,  3626,  3627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5063,     0,  5064,     0,     0,     0,     0,     0,  3628,
    3629,     0,     0,  5072,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3630,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5135,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5140,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5159,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   198,   199,     0,   678,   201,   202,   203,   204,  2130,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   679,
       0,   208,   209,   210,   211,   680,   213,     0,   214,  5190,
       0,  2131,   215,   682,   683,   684,   216,   685,     0,   217,
     218,   219,     0,   220,  5205,   221,   222,     0,     0,   223,
     686,   687,   224,   225,     0,   226,   227,   688,   689,   229,
       0,   230,   231,   232,   233,   690,   235,     0,   691,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   692,   693,   256,     0,     0,     0,   694,   257,
     695,     0,   258,   696,   697,     0,   259,   260,   261,   698,
     699,   700,     0,     0,     0,     0,   701,   264,   702,     0,
       0,  2132,   265,   266,     0,   267,     0,     0,  5290,     0,
       0,   268,   269,   270,   271,   272,  2213,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   704,     0,   291,
     292,   293,   294,   295,   705,   706,   296,   297,     0,   298,
     299,   300,   301,   302,   707,     0,   303,   304,  2133,     0,
       0,   708,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   709,   311,   710,     0,   313,     0,   314,     0,   711,
       0,   315,   316,     0,   317,   712,     0,   318,   319,     0,
       0,     0,   713,   321,   322,   323,   714,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   715,   328,   329,
     330,   716,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   717,   341,   342,
       0,     0,     0,     0,     0,   718,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   719,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   720,   371,   372,   373,   374,
     721,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   722,   382,     0,     0,   723,   384,   724,   385,     0,
     386,   725,   726,   727,   728,   729,   391,   392,   393,   394,
     395,     0,   730,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   731,   732,   733,   403,   404,     0,   734,   735,
     405,     0,   406,   407,  2134,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   736,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   737,   738,   426,   739,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   740,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   741,   742,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   743,     0,   744,   470,   471,   472,   473,     0,   474,
    2135,   746,   476,   477,   478,   479,     0,   747,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     748,   749,   510,   511,     0,     0,   512,   513,   750,   515,
     516,   517,   751,   752,   518,   519,   520,   521,   753,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   754,   528,
     529,     0,   755,   756,   757,   758,     0,     0,     0,     0,
       0,   534,   535,     0,   759,   760,   761,   537,   538,     0,
     762,   539,   540,   763,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   764,   549,
       0,     0,   765,   766,   767,   550,   768,   551,     0,     0,
     552,   769,     0,   770,   553,     0,   554,   555,   771,   772,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   773,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   774,   775,     0,   572,   573,   574,   776,   575,   576,
     577,     0,   578,   777,   778,   579,   779,   580,     0,   780,
     781,   782,   783,   784,   581,   582,     0,   785,   583,   786,
     584,   787,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,  2136,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,     0,     0,     0,     0,     0,   788,   789,     0,
       0,     0,     0,   791,     0,   792,     0,     0,     0,   793,
       0,     0,     0,   794,   795,   198,   199,     0,   678,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   679,     0,   208,   209,   210,   211,   680,
     213,     0,   214,     0,     0,   681,   215,   682,   683,   684,
     216,   685,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   686,   687,   224,   225,     0,   226,
     227,   688,   689,   229,     0,   230,   231,   232,   233,   690,
     235,     0,   691,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   692,   693,   256,     0,
       0,     0,   694,   257,   695,     0,   258,   696,   697,     0,
     259,   260,   261,   698,   699,   700,     0,     0,     0,     0,
     701,   264,   702,     0,     0,   703,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   704,     0,   291,   292,   293,   294,   295,   705,   706,
     296,   297,     0,   298,   299,   300,   301,   302,   707,     0,
     303,   304,     0,     0,     0,   708,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   709,   311,   710,     0,   313,
       0,   314,     0,   711,     0,   315,   316,     0,   317,   712,
       0,   318,   319,     0,     0,     0,   713,   321,   322,   323,
     714,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   715,   328,   329,   330,   716,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   717,   341,   342,     0,     0,     0,     0,     0,   718,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     719,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   720,
     371,   372,   373,   374,   721,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   722,   382,     0,     0,   723,
     384,   724,   385,     0,   386,   725,   726,   727,   728,   729,
     391,   392,   393,   394,   395,     0,   730,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   731,   732,   733,   403,
     404,     0,   734,   735,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   736,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   737,
     738,   426,   739,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   740,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   741,   742,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   743,     0,   744,   470,   471,
     472,   473,     0,   474,   745,   746,   476,   477,   478,   479,
       0,   747,   481,    42,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   748,   749,   510,   511,     0,     0,
     512,   513,   750,   515,   516,   517,   751,   752,   518,   519,
     520,   521,   753,   522,   523,     0,    49,   524,   525,   526,
     527,     0,   754,   528,   529,     0,   755,   756,   757,   758,
       0,     0,     0,     0,     0,   534,   535,     0,   759,   760,
     761,   537,   538,     0,   762,   539,   540,   763,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   764,   549,     0,     0,   765,   766,   767,   550,
    1225,   551,     0,     0,   552,   769,     0,   770,   553,     0,
     554,   555,   771,   772,     0,     0,     0,    55,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     773,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   774,   775,     0,   572,   573,
     574,   776,   575,   576,   577,     0,   578,   777,   778,   579,
     779,   580,     0,   780,   781,   782,   783,   784,   581,   582,
       0,   785,   583,   786,   584,   787,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,     0,     0,     0,     0,
       0,   788,   789,     0,     0,     0,     0,   791,     0,   792,
       0,     0,     0,   793,     0,     0,     0,   794,   795,   198,
     199,     0,   678,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   679,     0,   208,
     209,   210,   211,   680,   213,     0,   214,     0,     0,   681,
     215,   682,   683,   684,   216,   685,     0,   217,   218,   219,
    1875,   220,     0,   221,   222,     0,     0,   223,   686,   687,
     224,   225,     0,   226,   227,   688,   689,   229,     0,   230,
     231,   232,   233,   690,   235,     0,   691,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     692,   693,   256,     0,     0,     0,   694,   257,   695,     0,
     258,   696,   697,     0,   259,   260,   261,   698,   699,   700,
       0,     0,     0,     0,   701,   264,   702,     0,     0,   703,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   704,     0,   291,   292,   293,
     294,   295,   705,   706,   296,   297,     0,   298,   299,   300,
     301,   302,   707,     0,   303,   304,     0,     0,     0,   708,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   709,
     311,   710,     0,   313,     0,   314,     0,   711,     0,   315,
     316,     0,   317,   712,     0,   318,   319,     0,     0,     0,
     713,   321,   322,   323,   714,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   715,   328,   329,   330,   716,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,  1876,   340,     0,   717,   341,   342,     0,     0,
       0,     0,     0,   718,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   719,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   720,   371,   372,   373,   374,   721,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   722,
     382,     0,     0,   723,   384,   724,   385,     0,   386,   725,
     726,   727,   728,   729,   391,   392,   393,   394,   395,     0,
     730,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     731,   732,   733,   403,   404,     0,   734,   735,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   736,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   737,   738,   426,   739,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   740,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   741,
     742,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   743,
       0,   744,   470,   471,   472,   473,     0,   474,   745,   746,
     476,   477,   478,   479,     0,   747,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   748,   749,
     510,   511,     0,     0,   512,   513,   750,   515,   516,   517,
     751,   752,   518,   519,   520,   521,   753,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   754,   528,   529,     0,
     755,   756,   757,   758,     0,     0,     0,     0,  1877,   534,
     535,     0,   759,   760,   761,   537,   538,     0,   762,   539,
     540,   763,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   764,   549,     0,     0,
     765,   766,   767,   550,   768,   551,     0,     0,   552,   769,
       0,   770,   553,     0,   554,   555,   771,   772,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   773,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   774,
     775,     0,   572,   573,   574,   776,   575,   576,   577,     0,
     578,   777,   778,   579,   779,   580,     0,   780,   781,   782,
     783,   784,   581,   582,     0,   785,   583,   786,   584,   787,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
       0,     0,     0,     0,     0,   788,   789,     0,     0,     0,
       0,   791,     0,   792,     0,     0,     0,   793,     0,     0,
       0,   794,   795,   198,   199,     0,   678,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   679,     0,   208,   209,   210,   211,   680,   213,     0,
     214,     0,     0,   681,   215,   682,   683,   684,   216,   685,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   686,   687,   224,   225,     0,   226,   227,   688,
     689,   229,     0,   230,   231,   232,   233,   690,   235,     0,
     691,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   692,   693,   256,     0,     0,     0,
     694,   257,   695,     0,   258,   696,   697,     0,   259,   260,
     261,   698,   699,   700,     0,     0,     0,     0,   701,   264,
     702,     0,     0,   703,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   704,
       0,   291,   292,   293,   294,   295,   705,   706,   296,   297,
       0,   298,   299,   300,   301,   302,   707,     0,   303,   304,
       0,     0,     0,   708,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   709,   311,   710,     0,   313,     0,   314,
       0,   711,     0,   315,   316,     0,   317,   712,     0,   318,
     319,     0,     0,     0,   713,   321,   322,   323,   714,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   715,
     328,   329,   330,   716,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   717,
     341,   342,     0,     0,     0,     0,     0,   718,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   719,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   720,   371,   372,
     373,   374,   721,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   722,   382,     0,     0,   723,   384,   724,
     385,     0,   386,   725,   726,   727,   728,   729,   391,   392,
     393,   394,   395,     0,   730,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   731,   732,   733,   403,   404,     0,
     734,   735,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   736,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   737,   738,   426,
     739,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   740,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   741,   742,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   743,     0,   744,   470,   471,   472,   473,
       0,   474,   745,   746,   476,   477,   478,   479,     0,   747,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   748,   749,   510,   511,     0,     0,   512,   513,
     750,   515,   516,   517,   751,   752,   518,   519,   520,   521,
     753,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     754,   528,   529,     0,   755,   756,   757,   758,     0,     0,
       0,     0,     0,   534,   535,     0,   759,   760,   761,   537,
     538,     0,   762,   539,   540,   763,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     764,   549,     0,     0,   765,   766,   767,   550,   768,   551,
       0,     0,   552,   769,     0,   770,   553,     0,   554,   555,
     771,   772,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   773,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   774,   775,     0,   572,   573,   574,   776,
     575,   576,   577,     0,   578,   777,   778,   579,   779,   580,
       0,   780,   781,   782,   783,   784,   581,   582,     0,   785,
     583,   786,   584,   787,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,     0,     0,     0,     0,     0,   788,
     789,   790,     0,     0,     0,   791,     0,   792,     0,     0,
       0,   793,     0,     0,     0,   794,   795,   198,   199,     0,
     678,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   679,     0,   208,   209,   210,
     211,   680,   213,     0,   214,     0,     0,   681,   215,   682,
     683,   684,   216,   685,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   686,   687,   224,   225,
       0,   226,   227,   688,   689,   229,     0,   230,   231,   232,
     233,   690,   235,     0,   691,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   692,   693,
     256,     0,     0,     0,   694,   257,   695,     0,   258,   696,
     697,     0,   259,   260,   261,   698,   699,   700,     0,     0,
       0,     0,   701,   264,   702,     0,     0,   703,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   704,     0,   291,   292,   293,   294,   295,
     705,   706,   296,   297,     0,   298,   299,   300,   301,   302,
     707,     0,   303,   304,     0,     0,     0,   708,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   709,   311,   710,
       0,   313,     0,   314,     0,   711,     0,   315,   316,     0,
     317,   712,     0,   318,   319,     0,     0,     0,   713,   321,
     322,   323,   714,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   715,   328,   329,   330,   716,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   717,   341,   342,     0,     0,     0,     0,
       0,   718,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   719,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   720,   371,   372,   373,   374,   721,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   722,   382,     0,
       0,   723,   384,   724,   385,     0,   386,   725,   726,   727,
     728,   729,   391,   392,   393,   394,   395,     0,   730,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   731,   732,
     733,   403,   404,     0,   734,   735,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   736,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   737,   738,   426,   739,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   740,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   741,   742,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   743,     0,   744,
     470,   471,   472,   473,     0,   474,   745,   746,   476,   477,
     478,   479,     0,   747,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   748,   749,   510,   511,
       0,     0,   512,   513,   750,   515,   516,   517,   751,   752,
     518,   519,   520,   521,   753,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   754,   528,   529,     0,   755,   756,
     757,   758,     0,     0,     0,     0,     0,   534,   535,     0,
     759,   760,   761,   537,   538,     0,   762,   539,   540,   763,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   764,   549,     0,     0,   765,   766,
     767,   550,   768,   551,     0,     0,   552,   769,     0,   770,
     553,     0,   554,   555,   771,   772,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   773,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   774,   775,     0,
     572,   573,   574,   776,   575,   576,   577,     0,   578,   777,
     778,   579,   779,   580,     0,   780,   781,   782,   783,   784,
     581,   582,     0,   785,   583,   786,   584,   787,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,     0,     0,
       0,     0,     0,   788,   789,  2534,     0,     0,     0,   791,
       0,   792,     0,     0,     0,   793,     0,     0,     0,   794,
     795,   198,   199,     0,   678,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   679,
       0,   208,   209,   210,   211,   680,   213,     0,   214,     0,
       0,   681,   215,   682,   683,   684,   216,   685,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     686,   687,   224,   225,     0,   226,   227,   688,   689,   229,
       0,   230,   231,   232,   233,   690,   235,     0,   691,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   692,   693,   256,     0,     0,     0,   694,   257,
     695,     0,   258,   696,   697,     0,   259,   260,   261,   698,
     699,   700,     0,     0,     0,     0,   701,   264,   702,     0,
       0,   703,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   704,     0,   291,
     292,   293,   294,   295,   705,   706,   296,   297,     0,   298,
     299,   300,   301,   302,   707,     0,   303,   304,     0,     0,
       0,   708,   306,  2590,   307,     0,     0,     0,   308,     0,
     309,   709,   311,   710,     0,   313,     0,   314,     0,   711,
       0,   315,   316,     0,   317,   712,     0,   318,   319,     0,
       0,     0,   713,   321,   322,   323,   714,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   715,   328,   329,
     330,   716,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   717,   341,   342,
       0,     0,     0,     0,     0,   718,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   719,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   720,   371,   372,   373,   374,
     721,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   722,   382,     0,     0,   723,   384,   724,   385,     0,
     386,   725,   726,   727,   728,   729,   391,   392,   393,   394,
     395,     0,   730,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   731,   732,   733,   403,   404,     0,   734,   735,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   736,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   737,   738,   426,   739,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   740,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   741,   742,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   743,     0,   744,   470,   471,   472,   473,     0,   474,
     745,   746,   476,   477,   478,   479,     0,   747,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     748,   749,   510,   511,     0,     0,   512,   513,   750,   515,
     516,   517,   751,   752,   518,   519,   520,   521,   753,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   754,   528,
     529,     0,   755,   756,   757,   758,     0,     0,     0,     0,
       0,   534,   535,     0,   759,   760,   761,   537,   538,     0,
     762,   539,   540,   763,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   764,   549,
       0,     0,   765,   766,   767,   550,   768,   551,     0,     0,
     552,   769,     0,   770,   553,     0,   554,   555,   771,   772,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   773,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   774,   775,     0,   572,   573,   574,   776,   575,   576,
     577,     0,   578,   777,   778,   579,   779,   580,     0,   780,
     781,   782,   783,   784,   581,   582,     0,   785,   583,   786,
     584,   787,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,     0,     0,     0,     0,     0,   788,   789,     0,
       0,     0,     0,   791,     0,   792,     0,     0,     0,   793,
       0,     0,     0,   794,   795,   198,   199,     0,   678,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   679,     0,   208,   209,   210,   211,   680,
     213,     0,   214,     0,     0,   681,   215,   682,   683,   684,
     216,   685,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   686,   687,   224,   225,     0,   226,
     227,   688,   689,   229,     0,   230,   231,   232,   233,   690,
     235,     0,   691,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   692,   693,   256,     0,
       0,     0,   694,   257,   695,     0,   258,   696,   697,     0,
     259,   260,   261,   698,   699,   700,     0,     0,     0,     0,
     701,   264,   702,     0,     0,   703,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   704,     0,   291,   292,   293,   294,   295,   705,   706,
     296,   297,     0,   298,   299,   300,   301,   302,   707,     0,
     303,   304,     0,     0,     0,   708,   306,  2592,   307,     0,
       0,     0,   308,     0,   309,   709,   311,   710,     0,   313,
       0,   314,     0,   711,     0,   315,   316,     0,   317,   712,
       0,   318,   319,     0,     0,     0,   713,   321,   322,   323,
     714,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   715,   328,   329,   330,   716,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   717,   341,   342,     0,     0,     0,     0,     0,   718,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     719,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   720,
     371,   372,   373,   374,   721,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   722,   382,     0,     0,   723,
     384,   724,   385,     0,   386,   725,   726,   727,   728,   729,
     391,   392,   393,   394,   395,     0,   730,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   731,   732,   733,   403,
     404,     0,   734,   735,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   736,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   737,
     738,   426,   739,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   740,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   741,   742,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   743,     0,   744,   470,   471,
     472,   473,     0,   474,   745,   746,   476,   477,   478,   479,
       0,   747,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   748,   749,   510,   511,     0,     0,
     512,   513,   750,   515,   516,   517,   751,   752,   518,   519,
     520,   521,   753,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   754,   528,   529,     0,   755,   756,   757,   758,
       0,     0,     0,     0,     0,   534,   535,     0,   759,   760,
     761,   537,   538,     0,   762,   539,   540,   763,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   764,   549,     0,     0,   765,   766,   767,   550,
     768,   551,     0,     0,   552,   769,     0,   770,   553,     0,
     554,   555,   771,   772,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     773,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   774,   775,     0,   572,   573,
     574,   776,   575,   576,   577,     0,   578,   777,   778,   579,
     779,   580,     0,   780,   781,   782,   783,   784,   581,   582,
       0,   785,   583,   786,   584,   787,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,     0,     0,     0,     0,
       0,   788,   789,     0,     0,     0,     0,   791,     0,   792,
       0,     0,     0,   793,     0,     0,     0,   794,   795,   198,
     199,     0,   678,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   679,     0,   208,
     209,   210,   211,   680,   213,     0,   214,     0,     0,   681,
     215,   682,   683,   684,   216,   685,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   686,   687,
     224,   225,     0,   226,   227,   688,   689,   229,     0,   230,
     231,   232,   233,   690,   235,     0,   691,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     692,   693,   256,     0,     0,     0,   694,   257,   695,     0,
     258,   696,   697,     0,   259,   260,   261,   698,   699,   700,
       0,     0,     0,     0,   701,   264,   702,     0,     0,   703,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   704,     0,   291,   292,   293,
     294,   295,   705,   706,   296,   297,     0,   298,   299,   300,
     301,   302,   707,     0,   303,   304,     0,     0,     0,   708,
     306,  2594,   307,     0,     0,     0,   308,     0,   309,   709,
     311,   710,     0,   313,     0,   314,     0,   711,     0,   315,
     316,     0,   317,   712,     0,   318,   319,     0,     0,     0,
     713,   321,   322,   323,   714,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   715,   328,   329,   330,   716,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   717,   341,   342,     0,     0,
       0,     0,     0,   718,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   719,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   720,   371,   372,   373,   374,   721,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   722,
     382,     0,     0,   723,   384,   724,   385,     0,   386,   725,
     726,   727,   728,   729,   391,   392,   393,   394,   395,     0,
     730,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     731,   732,   733,   403,   404,     0,   734,   735,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   736,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   737,   738,   426,   739,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   740,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   741,
     742,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   743,
       0,   744,   470,   471,   472,   473,     0,   474,   745,   746,
     476,   477,   478,   479,     0,   747,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   748,   749,
     510,   511,     0,     0,   512,   513,   750,   515,   516,   517,
     751,   752,   518,   519,   520,   521,   753,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   754,   528,   529,     0,
     755,   756,   757,   758,     0,     0,     0,     0,     0,   534,
     535,     0,   759,   760,   761,   537,   538,     0,   762,   539,
     540,   763,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   764,   549,     0,     0,
     765,   766,   767,   550,   768,   551,     0,     0,   552,   769,
       0,   770,   553,     0,   554,   555,   771,   772,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   773,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   774,
     775,     0,   572,   573,   574,   776,   575,   576,   577,     0,
     578,   777,   778,   579,   779,   580,     0,   780,   781,   782,
     783,   784,   581,   582,     0,   785,   583,   786,   584,   787,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
       0,     0,     0,     0,     0,   788,   789,     0,     0,     0,
       0,   791,     0,   792,     0,     0,     0,   793,     0,     0,
       0,   794,   795,   198,   199,     0,   678,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   679,     0,   208,   209,   210,   211,   680,   213,     0,
     214,     0,     0,   681,   215,   682,   683,   684,   216,   685,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   686,   687,   224,   225,     0,   226,   227,   688,
     689,   229,     0,   230,   231,   232,   233,   690,   235,     0,
     691,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   692,   693,   256,     0,     0,     0,
     694,   257,   695,     0,   258,   696,   697,     0,   259,   260,
     261,   698,   699,   700,     0,     0,     0,     0,   701,   264,
     702,     0,     0,   703,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   704,
       0,   291,   292,   293,   294,   295,   705,   706,   296,   297,
       0,   298,   299,   300,   301,   302,   707,     0,   303,   304,
       0,     0,     0,   708,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   709,   311,   710,     0,   313,     0,   314,
       0,   711,     0,   315,   316,     0,   317,   712,     0,   318,
     319,     0,     0,     0,   713,   321,   322,   323,   714,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   715,
     328,   329,   330,   716,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   717,
     341,   342,     0,     0,     0,     0,     0,   718,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   719,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   720,   371,   372,
     373,   374,   721,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   722,   382,     0,     0,   723,   384,   724,
     385,     0,   386,   725,   726,   727,   728,   729,   391,   392,
     393,   394,   395,     0,   730,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   731,   732,   733,   403,   404,     0,
     734,   735,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   736,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   737,   738,   426,
     739,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   740,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   741,   742,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   743,     0,   744,   470,   471,   472,   473,
       0,   474,   745,   746,   476,   477,   478,   479,     0,   747,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   748,   749,   510,   511,     0,     0,   512,   513,
     750,   515,   516,   517,   751,   752,   518,   519,   520,   521,
     753,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     754,   528,   529,     0,   755,   756,   757,   758,     0,     0,
       0,     0,     0,   534,   535,     0,   759,   760,   761,   537,
     538,     0,   762,   539,   540,   763,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     764,   549,     0,     0,   765,   766,   767,   550,   768,   551,
       0,     0,   552,   769,     0,   770,   553,     0,   554,   555,
     771,   772,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   773,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   774,   775,     0,   572,   573,   574,   776,
     575,   576,   577,     0,   578,   777,   778,   579,   779,   580,
       0,   780,   781,   782,   783,   784,   581,   582,     0,   785,
     583,   786,   584,   787,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,     0,     0,     0,     0,     0,   788,
     789,     0,     0,     0,     0,   791,     0,   792,     0,     0,
       0,   793,     0,     0,     0,   794,   795,   198,   199,     0,
     678,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   679,     0,   208,   209,   210,
     211,   680,   213,     0,   214,     0,     0,   681,   215,   682,
     683,   684,   216,   685,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   686,   687,   224,   225,
       0,   226,   227,   688,   689,   229,     0,   230,   231,   232,
     233,   690,   235,     0,   691,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   692,   693,
     256,     0,     0,     0,   694,   257,   695,     0,   258,   696,
     697,     0,   259,   260,   261,   698,   699,   700,     0,     0,
       0,     0,   701,   264,   702,     0,     0,   703,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   704,     0,   291,   292,   293,   294,   295,
     705,   706,   296,   297,     0,   298,   299,   300,   301,   302,
     707,     0,   303,   304,     0,     0,     0,   708,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   709,   311,   710,
       0,   313,     0,   314,     0,   711,     0,   315,   316,     0,
     317,   712,     0,   318,   319,     0,     0,     0,   713,   321,
     322,   323,   714,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   715,   328,   329,   330,   716,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   717,   341,   342,     0,     0,     0,     0,
       0,   718,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   719,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   720,   371,   372,   373,   374,   721,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   722,   382,     0,
       0,   723,   384,   724,   385,     0,   386,   725,   726,   727,
     728,   729,   391,   392,   393,   394,   395,     0,   730,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   731,   732,
     733,   403,   404,     0,   734,   735,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   736,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   737,   738,   426,   739,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   740,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   741,   742,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   743,     0,   744,
     470,   471,   472,   473,     0,   474,   745,   746,   476,   477,
     478,   479,     0,   747,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   748,   749,   510,   511,
       0,     0,   512,   513,   750,   515,   516,   517,   751,   752,
     518,   519,   520,   521,   753,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   754,   528,   529,     0,   755,   756,
     757,   758,     0,     0,     0,     0,     0,   534,   535,     0,
     759,   760,   761,   537,   538,     0,   762,   539,   540,   763,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   764,   549,     0,     0,   765,   766,
     767,   550,   768,   551,     0,     0,   552,   769,     0,   770,
     553,     0,   554,   555,   771,   772,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   773,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   774,   775,     0,
     572,   573,   574,   776,   575,   576,   577,     0,   578,   777,
     778,   579,   779,   580,     0,   780,   781,   782,   783,   784,
     581,   582,     0,   785,   583,   786,   584,   787,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,     0,     0,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   791,
       0,  1150,     0,     0,     0,   793,     0,     0,     0,   794,
     795,   198,   199,     0,   678,   201,   202,   203,   204,  1923,
       0,   205,     0,     0,     0,     0,  1924,     0,     0,   679,
       0,   208,   209,   210,   211,   680,   213,     0,   214,     0,
       0,   681,   215,   682,   683,   684,   216,   685,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     686,   687,   224,   225,     0,   226,   227,   688,   689,   229,
       0,   230,   231,   232,   233,   690,   235,     0,   691,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   692,   693,   256,     0,     0,     0,   694,   257,
     695,     0,   258,   696,   697,     0,   259,   260,   261,   698,
     699,   700,     0,     0,     0,     0,   701,   264,   702,     0,
       0,   703,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   704,     0,   291,
     292,   293,   294,   295,   705,   706,   296,   297,     0,   298,
     299,   300,   301,   302,   707,     0,   303,   304,     0,     0,
       0,   708,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   709,   311,   710,     0,   313,     0,   314,     0,   711,
       0,   315,   316,     0,   317,   712,     0,   318,   319,     0,
       0,     0,   713,   321,   322,   323,   714,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   715,   328,   329,
     330,   716,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   717,   341,   342,
       0,     0,     0,     0,     0,   718,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   719,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   720,   371,   372,   373,   374,
     721,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   722,   382,     0,     0,   723,   384,   724,   385,     0,
     386,   725,   726,   727,   728,   729,   391,   392,   393,   394,
     395,     0,   730,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   731,     0,   733,   403,   404,     0,   734,   735,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   736,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   737,   738,   426,   739,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   740,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   741,   742,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   743,     0,   744,   470,   471,   472,   473,     0,   474,
     745,   746,   476,   477,   478,   479,     0,   747,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     748,   749,   510,   511,     0,     0,   512,   513,   750,   515,
     516,   517,   751,   752,   518,   519,   520,   521,   753,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   754,   528,
     529,     0,   755,   756,   757,   758,     0,     0,     0,     0,
       0,   534,   535,     0,   759,   760,   761,   537,   538,     0,
     762,   539,   540,   763,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   764,   549,
       0,     0,   765,   766,   767,   550,   768,   551,     0,     0,
     552,   769,     0,   770,   553,     0,   554,   555,   771,   772,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   773,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   774,   775,     0,   572,   573,   574,   776,   575,   576,
     577,     0,   578,   777,   778,   579,   779,   580,     0,   780,
     781,   782,   783,   784,   581,   582,     0,   785,   583,   786,
     584,   787,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,     0,     0,     0,     0,     0,   788,   789,     0,
       0,     0,     0,   791,     0,   792,     0,     0,     0,   793,
       0,     0,     0,   794,   795,   198,   199,     0,   678,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   679,     0,   208,   209,   210,   211,   680,
     213,     0,   214,     0,     0,   681,   215,   682,   683,   684,
     216,   685,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   686,   687,   224,   225,     0,   226,
     227,   688,   689,   229,     0,   230,   231,   232,   233,   690,
     235,     0,   691,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   692,   693,   256,     0,
       0,     0,   694,   257,   695,     0,   258,   696,   697,     0,
     259,   260,   261,   698,   699,   700,     0,     0,     0,     0,
     701,   264,   702,     0,     0,  2212,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   704,     0,   291,   292,   293,   294,   295,   705,   706,
     296,   297,     0,   298,   299,   300,   301,   302,   707,     0,
     303,   304,     0,     0,     0,   708,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   709,   311,   710,     0,   313,
       0,   314,     0,   711,     0,   315,   316,     0,   317,   712,
       0,   318,   319,     0,     0,     0,   713,   321,   322,   323,
     714,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   715,   328,   329,   330,   716,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   717,   341,   342,     0,     0,     0,     0,     0,   718,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     719,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   720,
     371,   372,   373,   374,   721,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   722,   382,     0,     0,   723,
     384,   724,   385,     0,   386,   725,   726,   727,   728,   729,
     391,   392,   393,   394,   395,     0,   730,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   731,   732,   733,   403,
     404,     0,   734,   735,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   736,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   737,
     738,   426,   739,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   740,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   741,   742,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   743,     0,   744,   470,   471,
     472,   473,     0,   474,   745,   746,   476,   477,   478,   479,
       0,   747,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   748,   749,   510,   511,     0,     0,
     512,   513,   750,   515,   516,   517,   751,   752,   518,   519,
     520,   521,   753,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   754,   528,   529,     0,   755,   756,   757,   758,
       0,     0,     0,     0,     0,   534,   535,     0,   759,   760,
     761,   537,   538,     0,   762,   539,   540,   763,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   764,   549,     0,     0,   765,   766,   767,   550,
     768,   551,     0,     0,   552,   769,     0,   770,   553,     0,
     554,   555,   771,   772,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     773,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   774,   775,     0,   572,   573,
     574,   776,   575,   576,   577,     0,   578,   777,   778,   579,
     779,   580,     0,   780,   781,   782,   783,   784,   581,   582,
       0,   785,   583,   786,   584,   787,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,     0,     0,     0,     0,
       0,   788,   789,     0,     0,     0,     0,   791,     0,   792,
       0,     0,     0,   793,     0,     0,     0,   794,   795,   198,
     199,     0,   678,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   679,     0,   208,
     209,   210,   211,   680,   213,     0,   214,     0,     0,   681,
     215,   682,   683,   684,   216,   685,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   686,   687,
     224,   225,     0,   226,   227,   688,   689,   229,     0,   230,
     231,   232,   233,   690,   235,     0,   691,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     692,   693,   256,     0,     0,     0,   694,   257,   695,     0,
     258,   696,   697,     0,   259,   260,   261,   698,   699,   700,
       0,     0,     0,     0,   701,   264,   702,     0,     0,   703,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   704,     0,   291,   292,   293,
     294,   295,   705,   706,   296,   297,     0,   298,   299,   300,
     301,   302,   707,     0,   303,   304,     0,     0,     0,   708,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   709,
     311,   710,     0,   313,     0,   314,     0,   711,     0,   315,
     316,     0,   317,   712,     0,   318,   319,     0,     0,     0,
     713,   321,   322,   323,   714,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   715,   328,   329,   330,  3238,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   717,   341,   342,     0,     0,
       0,     0,     0,   718,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   719,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   720,   371,   372,   373,   374,   721,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   722,
     382,     0,     0,   723,   384,   724,   385,     0,   386,   725,
     726,   727,   728,   729,   391,   392,   393,   394,   395,     0,
     730,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     731,   732,   733,   403,   404,     0,   734,   735,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   736,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   737,   738,   426,   739,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   740,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   741,
     742,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   743,
       0,   744,   470,   471,   472,   473,     0,   474,   745,   746,
     476,   477,   478,   479,     0,   747,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   748,   749,
     510,   511,     0,     0,   512,   513,   750,   515,   516,   517,
     751,   752,   518,   519,   520,   521,   753,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   754,   528,   529,     0,
     755,   756,   757,   758,     0,     0,     0,     0,     0,   534,
     535,     0,   759,   760,   761,   537,   538,     0,   762,   539,
     540,   763,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   764,   549,     0,     0,
     765,   766,   767,   550,   768,   551,     0,     0,   552,   769,
       0,   770,   553,     0,   554,   555,   771,   772,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   773,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   774,
     775,     0,   572,   573,   574,   776,   575,   576,   577,     0,
     578,   777,   778,   579,   779,   580,     0,   780,   781,   782,
     783,   784,   581,   582,     0,   785,   583,   786,   584,   787,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
       0,     0,     0,     0,     0,   788,   789,     0,     0,     0,
       0,   791,     0,   792,     0,     0,     0,   793,     0,     0,
       0,   794,   795,   198,   199,     0,   678,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   679,     0,   208,   209,   210,   211,   680,   213,     0,
     214,     0,     0,   681,   215,   682,   683,   684,   216,   685,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   686,   687,   224,   225,     0,   226,   227,   688,
     689,   229,     0,   230,   231,   232,   233,   690,   235,     0,
     691,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   692,   693,   256,     0,     0,     0,
     694,   257,   695,     0,   258,   696,   697,     0,   259,   260,
     261,   698,   699,   700,     0,     0,     0,     0,   701,   264,
     702,     0,     0,   703,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   704,
       0,   291,   292,   293,   294,   295,   705,   706,   296,   297,
       0,   298,   299,   300,   301,   302,   707,     0,   303,   304,
       0,     0,     0,   708,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   709,   311,   710,     0,   313,     0,   314,
       0,   711,     0,   315,   316,     0,   317,   712,     0,   318,
     319,     0,     0,     0,   713,   321,   322,   323,   714,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   715,
     328,   329,   330,  3299,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   717,
     341,   342,     0,     0,     0,     0,     0,   718,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   719,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   720,   371,   372,
     373,   374,   721,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   722,   382,     0,     0,   723,   384,   724,
     385,     0,   386,   725,   726,   727,   728,   729,   391,   392,
     393,   394,   395,     0,   730,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   731,   732,   733,   403,   404,     0,
     734,   735,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   736,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   737,   738,   426,
     739,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   740,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   741,   742,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   743,     0,   744,   470,   471,   472,   473,
       0,   474,   745,   746,   476,   477,   478,   479,     0,   747,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   748,   749,   510,   511,     0,     0,   512,   513,
     750,   515,   516,   517,   751,   752,   518,   519,   520,   521,
     753,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     754,   528,   529,     0,   755,   756,   757,   758,     0,     0,
       0,     0,     0,   534,   535,     0,   759,   760,   761,   537,
     538,     0,   762,   539,   540,   763,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     764,   549,     0,     0,   765,   766,   767,   550,   768,   551,
       0,     0,   552,   769,     0,   770,   553,     0,   554,   555,
     771,   772,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   773,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   774,   775,     0,   572,   573,   574,   776,
     575,   576,   577,     0,   578,   777,   778,   579,   779,   580,
       0,   780,   781,   782,   783,   784,   581,   582,     0,   785,
     583,   786,   584,   787,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,     0,     0,     0,     0,     0,   788,
     789,     0,     0,     0,     0,   791,     0,   792,     0,     0,
       0,   793,     0,     0,     0,   794,   795,   198,   199,     0,
     678,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   679,     0,   208,   209,   210,
     211,   680,   213,     0,   214,     0,     0,   681,   215,   682,
     683,   684,   216,   685,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   686,   687,   224,   225,
       0,   226,   227,   688,   689,   229,     0,   230,   231,   232,
     233,   690,   235,     0,   691,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   692,   693,
     256,     0,     0,     0,   694,   257,   695,     0,   258,   696,
     697,     0,   259,   260,   261,   698,   699,   700,     0,     0,
       0,     0,   701,   264,   702,     0,     0,   703,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   704,     0,   291,   292,   293,   294,   295,
     705,   706,   296,   297,     0,   298,   299,   300,   301,   302,
     707,     0,   303,   304,     0,     0,     0,   708,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   709,   311,   710,
       0,   313,     0,   314,     0,   711,     0,   315,   316,     0,
     317,   712,     0,   318,   319,     0,     0,     0,   713,   321,
     322,   323,   714,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   715,   328,   329,   330,   716,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   717,   341,   342,     0,     0,     0,     0,
       0,   718,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   719,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   720,   371,   372,   373,   374,   721,   375,   376,  5044,
       0,     0,     0,   377,   378,   379,   380,   722,   382,     0,
       0,   723,   384,   724,   385,     0,   386,   725,   726,   727,
     728,   729,   391,   392,   393,   394,   395,     0,   730,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   731,     0,
     733,   403,   404,     0,   734,   735,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   736,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   737,   738,   426,   739,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   740,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   741,   742,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   743,     0,   744,
     470,   471,   472,   473,     0,   474,   745,   746,   476,   477,
     478,   479,     0,   747,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   748,   749,   510,   511,
       0,     0,   512,   513,   750,   515,   516,   517,   751,   752,
     518,   519,   520,   521,   753,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   754,   528,   529,     0,   755,   756,
     757,   758,     0,     0,     0,     0,     0,   534,   535,     0,
     759,   760,   761,   537,   538,     0,   762,   539,   540,   763,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   764,   549,     0,     0,   765,   766,
     767,   550,   768,   551,     0,     0,   552,   769,     0,   770,
     553,     0,   554,   555,   771,   772,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   773,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   774,   775,     0,
     572,   573,   574,   776,   575,   576,   577,     0,   578,   777,
     778,   579,   779,   580,     0,   780,   781,   782,   783,   784,
     581,   582,     0,   785,   583,   786,   584,   787,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,     0,     0,
       0,     0,     0,   788,   789,     0,     0,     0,     0,   791,
       0,   792,     0,     0,     0,   793,     0,     0,     0,   794,
     795,   198,   199,     0,   678,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   679,
       0,   208,   209,   210,   211,   680,   213,     0,   214,     0,
       0,   681,   215,   682,   683,   684,   216,   685,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     686,   687,   224,   225,     0,   226,   227,   688,   689,   229,
       0,   230,   231,   232,   233,   690,   235,     0,   691,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   692,   693,   256,     0,     0,     0,   694,   257,
     695,     0,   258,   696,   697,     0,   259,   260,   261,   698,
     699,   700,     0,     0,     0,     0,   701,   264,   702,     0,
       0,   703,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   704,     0,   291,
     292,   293,   294,   295,   705,   706,   296,   297,     0,   298,
     299,   300,   301,   302,   707,     0,   303,   304,     0,     0,
       0,   708,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   709,   311,   710,     0,   313,     0,   314,     0,   711,
       0,   315,   316,     0,   317,   712,     0,   318,   319,     0,
       0,     0,   713,   321,   322,   323,   714,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   715,   328,   329,
     330,   716,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   717,   341,   342,
       0,     0,     0,     0,     0,   718,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   719,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   720,   371,   372,   373,   374,
     721,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   722,   382,     0,     0,   723,   384,   724,   385,     0,
     386,   725,   726,   727,   728,   729,   391,   392,   393,   394,
     395,     0,   730,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   731,     0,   733,   403,   404,     0,   734,   735,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   736,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   737,   738,   426,   739,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   740,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   741,   742,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   743,     0,   744,   470,   471,   472,   473,     0,   474,
     745,   746,   476,   477,   478,   479,     0,   747,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     748,   749,   510,   511,     0,     0,   512,   513,   750,   515,
     516,   517,   751,   752,   518,   519,   520,   521,   753,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   754,   528,
     529,     0,   755,   756,   757,   758,     0,     0,     0,     0,
       0,   534,   535,     0,   759,   760,   761,   537,   538,     0,
     762,   539,   540,   763,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   764,   549,
       0,     0,   765,   766,   767,   550,   768,   551,     0,     0,
     552,   769,     0,   770,   553,     0,   554,   555,   771,   772,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   773,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   774,   775,     0,   572,   573,   574,   776,   575,   576,
     577,     0,   578,   777,   778,   579,   779,   580,     0,   780,
     781,   782,   783,   784,   581,   582,     0,   785,   583,   786,
     584,   787,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,     0,     0,     0,     0,     0,   788,   789,     0,
       0,     0,     0,   791,     0,   792,     0,     0,     0,   793,
       0,     0,     0,   794,   795,   198,   199,     0,   678,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   679,     0,   208,   209,   210,   211,   680,
     213,     0,   214,     0,     0,   681,   215,   682,   683,   684,
     216,   685,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   686,   687,   224,   225,     0,   226,
     227,   688,   689,   229,     0,   230,   231,   232,   233,   690,
     235,     0,   691,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   692,   693,   256,     0,
       0,     0,   694,   257,   695,     0,   258,   696,   697,     0,
     259,   260,   261,   698,   699,   700,     0,     0,     0,     0,
     701,   264,   702,     0,     0,   703,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   704,     0,   291,   292,   293,   294,   295,   705,   706,
     296,   297,     0,   298,   299,   300,   301,   302,   707,     0,
     303,   304,     0,     0,     0,   708,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   709,   311,   710,     0,   313,
       0,   314,     0,   711,     0,   315,   316,     0,   317,   712,
       0,   318,   319,     0,     0,     0,   713,   321,   322,   323,
     714,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   715,   328,   329,   330,  1941,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   717,   341,   342,     0,     0,     0,     0,     0,   718,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     719,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   720,
     371,   372,   373,   374,   721,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   722,   382,     0,     0,   723,
     384,   724,   385,     0,   386,   725,   726,   727,   728,   729,
     391,   392,   393,   394,   395,     0,   730,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   731,     0,   733,   403,
     404,     0,   734,   735,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   736,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   737,
     738,   426,   739,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   740,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   741,   742,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   743,     0,   744,   470,   471,
     472,   473,     0,   474,   745,   746,   476,   477,   478,   479,
       0,   747,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   748,   749,   510,   511,     0,     0,
     512,   513,   750,   515,   516,   517,   751,   752,   518,   519,
     520,   521,   753,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   754,   528,   529,     0,   755,   756,   757,   758,
       0,     0,     0,     0,     0,   534,   535,     0,   759,   760,
     761,   537,   538,     0,   762,   539,   540,   763,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   764,   549,     0,     0,   765,   766,   767,   550,
     768,   551,     0,     0,   552,   769,     0,   770,   553,     0,
     554,   555,   771,   772,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     773,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   774,   775,     0,   572,   573,
     574,   776,   575,   576,   577,     0,   578,   777,   778,   579,
     779,   580,     0,   780,   781,   782,   783,   784,   581,   582,
       0,   785,   583,   786,   584,   787,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,     0,     0,     0,     0,
       0,   788,   789,     0,     0,     0,     0,   791,     0,   792,
       0,     0,     0,   793,     0,     0,     0,   794,   795,   198,
     199,     0,   678,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   679,     0,   208,
     209,   210,   211,   680,   213,     0,   214,     0,     0,   681,
     215,   682,   683,   684,   216,   685,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   686,   687,
     224,   225,     0,   226,   227,   688,   689,   229,     0,   230,
     231,   232,   233,   690,   235,     0,   691,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     692,   693,   256,     0,     0,     0,   694,   257,   695,     0,
     258,   696,   697,     0,   259,   260,   261,   698,   699,   700,
       0,     0,     0,     0,   701,   264,   702,     0,     0,   703,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   704,     0,   291,   292,   293,
     294,   295,   705,   706,   296,   297,     0,   298,   299,   300,
     301,   302,   707,     0,   303,   304,     0,     0,     0,   708,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   709,
     311,   710,     0,   313,     0,   314,     0,   711,     0,   315,
     316,     0,   317,   712,     0,   318,   319,     0,     0,     0,
     713,   321,   322,   323,   714,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   715,   328,   329,   330,  1943,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   717,   341,   342,     0,     0,
       0,     0,     0,   718,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   719,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   720,   371,   372,   373,   374,   721,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   722,
     382,     0,     0,   723,   384,   724,   385,     0,   386,   725,
     726,   727,   728,   729,   391,   392,   393,   394,   395,     0,
     730,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     731,     0,   733,   403,   404,     0,   734,   735,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   736,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   737,   738,   426,   739,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   740,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   741,
     742,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   743,
       0,   744,   470,   471,   472,   473,     0,   474,   745,   746,
     476,   477,   478,   479,     0,   747,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   748,   749,
     510,   511,     0,     0,   512,   513,   750,   515,   516,   517,
     751,   752,   518,   519,   520,   521,   753,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   754,   528,   529,     0,
     755,   756,   757,   758,     0,     0,     0,     0,     0,   534,
     535,     0,   759,   760,   761,   537,   538,     0,   762,   539,
     540,   763,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   764,   549,     0,     0,
     765,   766,   767,   550,   768,   551,     0,     0,   552,   769,
       0,   770,   553,     0,   554,   555,   771,   772,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   773,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   774,
     775,     0,   572,   573,   574,   776,   575,   576,   577,     0,
     578,   777,   778,   579,   779,   580,     0,   780,   781,   782,
     783,   784,   581,   582,     0,   785,   583,   786,   584,   787,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
       0,     0,     0,     0,     0,   788,   789,     0,     0,     0,
       0,   791,     0,   792,     0,     0,     0,   793,     0,     0,
       0,   794,   795,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,    42,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,    49,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,    54,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,    55,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,  2764,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,  2765,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,  2766,     0,     0,     0,     0,     0,   198,
     199,     0,   200,   201,   202,   203,   204,  2767,     0,   205,
       0,     0,     0,     0,   206,     0,  2768,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,  2763,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,  2764,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,  2765,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,  2766,
       0,     0,     0,     0,     0,   198,   199,     0,   200,   201,
     202,   203,   204,  2767,     0,   205,     0,     0,     0,     0,
     206,     0,  2768,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
    2764,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
    2765,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,  2766,     0,     0,     0,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,  2767,
     205,     0,     0,     0,     0,   206,     0,     0,  2768,     0,
     208,   209,   210,   211,   212,   213,     0,  -460,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,     0,     0,     0,     0,   223,  4881,
       0,   224,   225,     0,   226,   227,     0,     0,     0,     0,
     230,   231,   232,  4882,   234,   235,     0,   236,   237,     0,
     238,   239,     0,   241,     0,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,     0,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,     0,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,     0,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,     0,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,  4883,   298,   299,
     300,   301,   302,     0,     0,     0,     0,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
       0,   316,     0,     0,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,  4884,     0,   324,     0,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,     0,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,  4885,     0,     0,   336,     0,   337,     0,     0,
       0,   339,     0,     0,   340,  4886,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,  -415,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,     0,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,  4887,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,     0,
       0,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,     0,   454,
    -415,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,     0,     0,   464,   465,     0,   466,   467,   468,  4888,
     469,     0,     0,     0,   471,   472,   473,     0,   474,     0,
     475,   476,     0,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,     0,     0,     0,   489,     0,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,     0,   506,   507,   508,   509,     0,
       0,     0,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,     0,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,     0,     0,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,  -415,     0,     0,     0,   558,   559,   560,     0,   561,
       0,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,     0,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,     0,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,     0,     0,   631,   632,   633,   634,   635,   636,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   207,  5294,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,   682,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
    2681,     0,     0,     0,     0,   263,   264,   702,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,   706,   296,   297,     0,   298,   299,
     300,   301,   302,   707,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,   712,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   719,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,   730,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,   734,   735,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   754,   528,   529,
       0,  2682,   531,   532,  2683,     0,     0,     0,     0,     0,
     534,   535,     0,     0,   760,   536,   537,   538,     0,   762,
     539,   540,   763,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,   793,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,  1541,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,  1542,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,  1543,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   942,   943,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,   944,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   945,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   946,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   947,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   948,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   949,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   950,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     951,   952,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   953,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   954,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
     955,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1019,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,  1229,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,  1019,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   195,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,  1410,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   942,   943,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  1418,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   945,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   946,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   947,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   949,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   951,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   953,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,   955,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,  1019,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   195,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,     0,   630,
     631,   632,   633,   634,   635,   636,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1543,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,  2009,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,     0,
     630,   631,   632,   633,   634,   635,   636,     0,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,  2010,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
       0,   630,   631,   632,   633,   634,   635,   636,     0,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,  5221,   206,     0,  5222,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,     0,   630,   631,   632,   633,   634,   635,   636,     0,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,  2010,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,     0,   630,   631,   632,   633,   634,   635,   636,
       0,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,  5222,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,    42,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,    49,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,    54,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,    55,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,  1005,  3937,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,     0,   630,   631,   632,   633,   634,
     635,   636,     0,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,  4178,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,     0,   630,   631,   632,   633,
     634,   635,   636,     0,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,  4182,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,  2331,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,  2332,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,  1701,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,  1702,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,  3778,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,    42,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,  2334,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,    49,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,    54,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,    55,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,  1005,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,  2764,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,  2765,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,     0,   630,   631,   632,
     633,   634,   635,   636,  2766,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,  2767,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,  1154,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,  3015,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,  3324,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,  4063,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,  1961,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,  2696,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,  3354,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,   198,   199,     0,   200,   201,
     202,   203,   204,  3536,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,     0,   630,   631,
     632,   633,   634,   635,   636,     0,     0,     0,     0,     0,
       0,   198,   199,  3913,   200,   201,   202,   203,   204,   850,
     851,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,   852,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,   853,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
     854,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   855,   288,   289,   856,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   857,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,   858,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,   859,     0,   327,     0,     0,     0,   860,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,   862,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   863,   433,   434,
     435,   864,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,   865,     0,   445,
     446,   447,   448,   449,     0,   866,   451,     0,   452,   453,
     454,     0,     0,   867,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,   868,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,   869,   870,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   871,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,   872,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,   873,   547,   874,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,   924,
     851,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,   852,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,   853,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
     854,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   855,   288,   289,   856,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   857,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,   858,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,   859,     0,   327,     0,     0,     0,   860,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,   862,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   863,   433,   434,
     435,   925,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,   865,     0,   445,
     446,   447,   448,   449,     0,   866,   451,     0,   452,   453,
     454,     0,     0,   867,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,   868,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,   869,   870,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   871,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,   872,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,   873,   547,   874,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
     851,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,   852,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,   853,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
     854,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   855,   288,   289,   856,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   857,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,   858,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,   859,     0,   327,     0,     0,     0,   860,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,   862,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   863,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,   865,     0,   445,
     446,   447,   448,   449,     0,   866,   451,     0,   452,   453,
     454,     0,     0,   867,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,   868,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,   869,   870,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   871,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,   872,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,   873,   547,   874,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,  2919,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,  2920,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,  2921,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,  2922,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,  1260,  1261,     0,   403,   404,     0,     0,  2923,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,  5282,   919,  5283,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
    2924,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,  1234,  1235,   206,  1236,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,  1237,     0,     0,  1238,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,  1239,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,  1240,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1387,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1388,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,  1389,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,  1390,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,  2331,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,  2332,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,  1701,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,  1702,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,  2334,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1412,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1413,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,  1558,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,  1559,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   736,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
    1560,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1387,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  3652,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
    1018,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,  1020,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
    1018,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,  1489,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,  1490,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,  1279,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  2154,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  2787,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,  3093,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1387,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,  3718,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1019,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,  5192,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,  5193,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,   919,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,   988,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,  1050,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,  1051,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,  1239,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,  2297,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  2425,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  3017,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  3029,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  3058,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,  3122,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,  2031,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,  2032,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,  4943,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1418,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,     0,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,     0,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,     0,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,  1419,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,     0,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,     0,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1418,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,     0,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,     0,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,     0,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,     0,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,     0,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  1403,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1404,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,  1405,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  5025,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  5026,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,  5027,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  2092,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,  2093,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,  2884,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,  2885,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     861,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,   630,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,  -430,  -430,   277,     0,
    -430,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,  -451,     0,   277,     0,
    -451,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
    -451,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,  -448,     0,   277,     0,
    -448,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
    -448,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    5136,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    -453,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    5197,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    5241,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    -434,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
       0,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -460,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4881,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4882,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
       0,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4883,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4884,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4885,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4886,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -415,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4887,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -415,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4888,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,  5139,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -415,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,     0,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
       0,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,     0,     0,   631,   632,   633,   634,   635,
     636,  3586,  3587,     0,     0,     0,     0,  3588,     0,  3589,
       0,  3590,  3591,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3592,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3593,
       0,     0,  3594,     0,     0,     0,     0,     0,     0,     0,
    3595,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3596,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3597,     0,  3598,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3599,  3600,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3601,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3602,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3603,     0,     0,     0,
       0,     0,     0,     0,     0,  3604,  3605,     0,  3606,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3607,  3608,  3609,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3610,  3611,  3612,     0,     0,     0,
       0,  3613,     0,     0,  3614,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3615,  3616,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3617,  3618,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3260,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3619,     0,     0,     0,  3620,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3621,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3622,     0,     0,  3623,     0,     0,  3624,  3625,  3626,  3627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3628,
    3629,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3630
};

static const yytype_int16 yycheck[] =
{
       6,   816,   803,     0,    57,  1052,    43,   968,     0,    15,
       0,  1202,    18,   947,   948,  1053,    22,  1042,  1151,  1202,
    1046,  1035,  1102,    21,   114,    31,  1044,  1542,    96,   114,
    2045,     6,    38,   967,   720,    41,  1293,  2499,  1293,    43,
      46,    39,  2052,    49,    60,    43,  1066,    53,  2862,    55,
    2291,  2292,  1674,  2615,  1705,  2052,  1011,    60,  2089,  2249,
    1254,  2326,  1124,  1125,  1618,  1066,  2183,  1892,  1893,  2364,
    2749,    63,  2009,    63,  2009,  1900,  1901,  1902,  3067,  2716,
    2617,  2492,  1037,  1618,  1638,    59,  1330,  2945,  2323,  2324,
      96,  1153,  2526,    22,  1144,  1590,  2530,  1590,  1590,  3632,
    3118,  3538,  1656,  1165,  1166,  1167,  1620,  1974,  3096,  1171,
    1624,  3490,  2125,  2084,   650,   651,  2102,  2492,  2492,    21,
      49,  1379,  1029,  2302,  1638,  2492,   181,   119,  2685,   681,
    3407,    19,  3632,  1431,  1378,  2331,  1650,    39,  2492,  1601,
     146,  2406,    30,  2780,   965,  2757,  2501,    35,  1210,  3173,
    2345,  3173,  3652,  3653,  2271,  4226,  1454,  1455,  1456,  1457,
    1458,  3733,  1460,  2166,   664,   665,  2305,    21,   668,   175,
    2334,   177,   119,    21,   180,   181,   182,   183,  2611,   197,
      11,  2184,  2377,  2378,    18,    19,  2034,    52,    18,    19,
      68,   197,    35,  2196,    19,  2767,    62,  3605,  3606,  2202,
      71,  3609,   177,    18,    19,   180,    21,   156,     9,    18,
      19,    73,    71,     5,    18,    19,    48,   146,  1298,  3627,
     144,    73,   125,   194,    18,    19,   125,  4166,    29,    35,
      18,    19,    22,    34,  4192,   111,   788,   789,   160,   791,
     176,  2089,    18,    19,    18,    19,    18,    19,    18,    19,
      37,    52,   804,    71,   183,    18,    19,   156,   246,  4005,
      18,    19,    21,  1109,  1110,  2794,   194,   162,   197,   125,
     156,  1226,  3537,    81,  3063,    31,   125,  1739,    18,    19,
      73,   230,    21,   263,    18,    19,    18,    19,  1089,    73,
    1600,   235,  1602,  1603,    73,   176,    37,  1607,   109,   276,
      39,   231,    59,   194,    43,  1385,    67,   156,   156,  1619,
     249,   356,  1622,  1623,   674,  1625,    64,   194,  1628,  1629,
    1630,  1631,   158,  2320,  4403,  1635,  2323,  2324,    18,    19,
    1640,   373,    48,    18,    19,  1645,  1646,  1647,  1648,  1649,
     125,   131,   158,  1653,  1654,   219,    18,    19,  2465,  1659,
    1660,  1661,  1662,   176,  1664,  1665,   373,  1667,  2475,   235,
    1670,  2890,   130,  1673,    70,    21,    87,    18,    19,   197,
     156,   156,   163,    18,    19,   828,   829,   830,    44,    21,
     833,   834,   373,    39,   837,    21,   839,   840,   841,   259,
     843,    71,   193,   111,   285,    70,    43,   209,  3806,   456,
     370,    78,   156,   197,   465,    18,    19,    18,    19,  4131,
     430,   388,  4134,   190,    12,  1433,   103,    23,   246,   176,
     501,   380,   456,   180,   572,  3443,   407,  4303,    85,    18,
      19,   255,   219,   388,   197,  1453,   572,   194,  2359,    18,
      19,    21,     9,    77,   103,   193,    77,    18,    19,  1250,
    2371,    25,    18,    19,  1140,    61,    62,   422,   156,   316,
     327,    23,   482,   156,   917,   433,  1281,  1282,  1154,   197,
     282,  4924,   156,    35,   374,   156,   503,  1411,   219,  2489,
    2401,   572,  3919,    18,    19,   165,   216,    49,  1422,   186,
     276,   156,  2489,   429,   197,     9,  1510,    18,    19,    61,
      62,   150,   156,  2937,   194,   369,  2517,  2518,  2519,  2430,
     316,    18,    19,   239,   156,   449,   216,    31,   389,   366,
     367,   249,  2533,   249,    52,   212,    65,   572,  4106,  4640,
     389,   130,   769,   263,   293,  3214,   773,  1551,  1074,  2804,
    4498,    18,    19,    18,    19,   150,   480,  2558,   429,  1567,
    1568,  2562,   597,   387,  2524,   433,   390,   387,  1373,  2676,
     390,  2531,  2499,   263,  4142,  2976,   150,  2578,  2579,   266,
     194,   389,   387,  2584,   331,   390,  2668,   547,   387,    33,
     502,   390,   609,   387,   448,   485,   390,  3149,  2767,  2600,
    2601,  4702,  4125,   387,   168,   377,   390,    19,  2609,   194,
     457,  2791,  2792,   658,  3038,   470,   429,   144,  1108,   433,
    2875,   387,   404,   387,   390,   387,   390,   387,   390,   186,
     390,   586,   276,   203,   387,   773,   603,   390,   262,   387,
    4009,   262,   390,   769,   276,   130,   293,  2754,    73,  4710,
    2905,  2906,   241,    65,   650,   651,  2656,   387,   603,   103,
     390,   246,   658,   387,   660,   387,   390,   402,   390,  2656,
     630,   285,   682,  3097,   194,   192,  1218,   393,   122,   637,
     418,   728,   429,  4081,   433,   378,    18,    19,   659,   770,
     488,  2712,   369,  4091,   643,   609,   498,   285,   704,   355,
     285,  4099,  5145,   774,   728,  4774,  4418,   387,   572,   160,
     390,   704,   387,  4579,   231,   390,  1258,   428,  3387,   389,
    1967,   547,  1967,   774,   720,   387,   246,   256,   390,   761,
    1977,   650,   651,  3437,   388,  4133,  1278,  1789,   773,  4687,
    4688,   547,   613,  4479,   188,  2263,   387,  2265,   793,   390,
    4811,  2751,   387,    18,    19,   390,   388,   465,    18,    19,
     511,  1111,  2783,   770,  2751,   285,   774,   623,   583,   401,
     637,  1297,  3173,   198,   694,  4704,  2781,   747,  3033,  1831,
     563,   647,  2951,   717,   387,  4040,   387,   390,  2332,   390,
    2334,  3076,   652,   774,   563,   572,   774,   793,   572,   795,
     613,   245,  2659,   770,   800,  2620,  3585,  3334,   387,  3336,
     792,   390,   792,   774,   699,   637,   615,  3003,   387,  3005,
    2305,   390,  2305,  2305,   648,  1351,   387,   628,   648,   390,
    2757,   387,  2757,   772,   390,   831,  1362,   583,    18,    19,
     836,   572,   887,   648,   256,   774,   290,   543,   774,   648,
     631,   609,   910,  1905,   648,   676,   774,  3011,  1301,   635,
     774,  1697,   387,   775,   648,   390,   604,   493,  3430,  3648,
     648,  2159,    18,    19,  2712,  2163,   387,   723,   543,   390,
    2168,   774,   648,   772,   648,  4946,   648,   536,   648,   770,
     387,   887,  2504,   390,   643,   648,   772,   893,   774,  1903,
     648,  3324,   947,    18,    19,  3532,  2882,   775,   675,   770,
     955,   956,   769,   909,   910,  2203,  2204,   769,   648,   774,
     387,   770,   387,   390,   648,   390,   648,   769,   595,   373,
     774,   637,  1012,   772,   772,  1771,   769,  1012,  4500,  2239,
     566,   968,   938,  3951,  2949,  2783,    18,    19,   774,   745,
     770,   947,   470,   397,   774,   779,   774,   739,   740,   955,
     956,   774,   770,   243,   952,   770,  3048,  1047,   648,   774,
    4918,   965,  1047,   648,   501,   774,   770,   965,    18,    19,
     774,  3500,   978,   979,  3503,  1035,   648,  3835,  1033,   769,
     774,   635,   988,    21,   620,   634,   772,   772,  2483,  1057,
    2483,  2483,   774,   635,   770,   601,   770,   648,   774,   747,
     774,   637,   774,   648,   774,  1060,   637,   770,  3198,   696,
     609,  1017,   770,  1005,   553,  1005,   774,   774,   772,  2329,
     774,  1013,   656,   657,   769,   656,   657,  1033,  4528,   634,
    2110,  2493,  3171,  1101,   774,   648,  1042,   648,  4315,   601,
     774,   502,   774,   844,   770,   387,  2356,  1053,   390,   978,
     634,  1057,   179,  1059,  1060,  1052,  1062,    77,   174,   648,
    1052,  1067,  1052,  2373,  1070,  1071,  1013,   367,  1074,   648,
    2721,   774,    18,    19,   772,  1081,   774,   648,  4067,   772,
     770,   774,   648,   278,  1090,  1091,  1092,   614,   772,  1095,
     774,   772,  1098,   774,  3937,  1101,  1071,  1103,  2408,  2409,
    1106,  1107,   774,  3024,  1102,   906,  2416,   772,  3403,   774,
     774,   912,   387,   648,   609,   390,   372,   387,   772,  1172,
     390,  4109,   583,   774,  5195,   770,   127,   648,   563,   774,
     772,   553,   316,   769,  1140,   484,   275,  1227,   204,   231,
     594,   648,  1227,  3064,   141,  1074,   770,  4112,  1154,   237,
      40,  3072,   160,    18,    19,  1841,  3077,   770,  1150,   770,
    1150,   774,   572,   774,  3174,  2099,   378,  2247,   258,    18,
      19,   648,   263,   648,  4198,   770,  4198,  3174,   641,   204,
     112,   770,    33,   115,  2222,   774,    18,    19,  2498,   158,
    2381,    47,   125,   231,   637,   774,  1202,   387,  2381,   770,
     390,   122,  1255,  1256,   369,   583,  1259,  2722,   774,  1262,
    1263,  1264,   123,   952,  1267,  1268,  1269,  1270,  1271,  1272,
    1273,  1274,  1277,   222,  3579,  3580,   965,  1233,   980,  3240,
    1236,   387,   473,   285,   390,  2492,  1291,  2492,  1738,   774,
     770,  1257,   262,   697,   639,   372,  4654,   248,  4656,   770,
      71,  1319,  3517,  1753,  1257,  3969,  3970,   543,  3937,  3270,
     243,  3272,   387,   770,  1555,   390,  2291,  2292,   237,   122,
    3465,  1277,  1327,   563,  1565,  3286,   566,  3288,  1284,  1285,
    1286,  1287,   370,  1289,  1290,  1291,   235,   482,  1294,  1295,
    1296,  1297,  3303,  1299,  1300,   770,   952,   774,  1304,  2120,
    1298,  3566,    18,    19,   194,   387,   648,  2128,   390,  1377,
    1316,  1286,  3502,  1319,  4814,  1290,  3506,  3184,   965,  1294,
      57,  1327,  1382,  2009,  1330,  2140,  1394,   511,  1334,  1335,
     125,   774,  2860,  1331,  3946,   188,   247,   387,   624,  3742,
     390,    18,    19,   122,  1350,  1351,    18,    19,   345,   465,
     407,  3908,  3531,  3764,  3757,  1361,  1362,  3224,  1364,  1365,
     216,   200,  2269,  1102,   456,  2880,   219,   162,  1297,   290,
     535,  1377,  1378,   648,  3570,    18,    19,  1432,   648,   774,
    1386,   471,    18,    19,    18,    19,  1423,  1385,  1394,  3764,
    3764,  3686,  3687,  2413,  2414,  4832,   774,  3764,   249,  1951,
    2657,   370,  2657,  1409,  3430,  3431,  3377,  3422,   292,   188,
    3764,  1417,  2413,  2414,  3440,  3441,    18,    19,   456,  1423,
     769,  1350,  1351,  4923,   275,  1423,  1432,  3442,   770,  1331,
     730,   566,  1361,  1362,  2692,  1364,   380,   290,  1506,   372,
     219,   387,  2636,    32,   390,   511,  1102,  3418,  1984,  3462,
    1510,  2695,   373,  3982,  3983,   493,  1524,  3011,   648,   547,
     378,  3015,   589,  1518,  3450,  3451,    21,  4846,   724,    18,
      19,  4314,  4460,    18,    19,  3478,  3479,   158,   605,  3101,
    1486,  1487,   695,  4012,  4013,  4450,   511,  2549,  1543,  4018,
      79,  4020,   648,   401,   502,  1501,   635,  4311,  3763,   774,
    1506,  2759,  1303,  3534,   774,   160,  3331,   276,  2641,  2642,
    3335,   290,  1518,   604,  2576,  3501,  2760,  1970,  1524,    74,
     373,  1576,   387,   648,   435,   390,  3761,  3762,   566,  5062,
     742,   743,    18,    19,   775,  5035,   167,  1543,   387,   194,
    2838,   390,   630,   122,   543,  3099,  3100,   487,    18,    19,
      21,  2849,   765,  2851,   606,   387,  2854,    52,   390,  1298,
     585,   745,  4580,  1555,  3099,   154,   648,  1573,   389,   200,
    1576,   455,   592,  1565,    18,    19,   293,   372,   547,  2131,
     563,   420,   620,   566,   774,  1337,  3100,   484,   704,   705,
    2615,   442,  1331,  3460,   373,   615,    18,    19,   648,   637,
     333,  2651,   659,  3131,   122,   160,  3134,  3135,   493,  3874,
    3138,  3139,  3140,  3141,  3142,  3143,  3144,  3145,   774,   388,
    3148,   198,  3150,    71,  3152,   372,    18,    19,  3156,   353,
     486,   191,   369,   108,   356,  4314,   656,   657,   139,   550,
    4051,  1678,  1298,   572,   576,  2145,  1385,   579,  4082,   774,
    4053,  4851,  4641,  2963,  4854,  4058,   564,    18,    19,  4062,
     572,   630,   125,   635,  3218,   583,    53,    18,    19,   522,
     188,   387,   572,   594,   390,  1331,  3171,    64,  3171,  3171,
     235,   566,  3251,  3550,  1423,   156,  3534,    18,    19,   370,
    4548,   125,   774,  1699,  1700,  3264,  2714,    18,    19,   643,
     572,   219,   648,   128,  2784,  2785,  2786,  1681,   263,  1715,
     387,   290,   122,   390,  5214,   387,   433,   165,   390,  2976,
    3985,  2976,    18,    19,   774,  4885,  4886,   566,   162,  1385,
    3109,   769,    18,    19,   401,   620,   243,   287,  3389,  4276,
     433,   594,   566,  4008,   387,  1751,   221,   390,  1754,  1755,
    1756,   387,   636,   387,   390,   653,   390,  4022,  1764,   231,
     231,   454,  4027,   153,  3761,  3762,   763,   764,   765,   766,
     125,  1700,   290,   537,   164,   282,  1423,   572,   188,   238,
    1755,  1756,   245,   648,   139,   387,  1715,  4198,   390,   420,
     769,  4780,   235,   197,   373,   220,   775,    13,   401,   648,
     350,  3111,   774,   496,   128,  1018,   635,   571,  3675,   219,
      18,    19,   271,  4492,  4217,   594,   648,   637,  3197,    65,
     263,   293,  1751,   400,  4014,   572,   415,  2845,   774,    18,
      19,   332,    11,   733,   603,  1841,  1842,   570,   387,    23,
     769,   390,   387,  5043,  4373,   390,  4375,   502,   437,    59,
     572,    35,  3109,   413,  1909,   373,   774,   769,    18,    19,
    4322,   733,   637,   596,   572,    49,   547,  3878,   293,  3179,
    3180,  3181,  3182,    26,   369,   597,  2810,    61,    62,  3746,
     290,  4443,  4444,  1936,   769,    18,    19,   186,   615,   478,
     239,    18,    19,    18,    19,   282,  1949,   564,   361,  1952,
     249,   387,   533,  1909,   390,    18,    19,    18,    19,   774,
    1926,    18,    19,   122,    21,    13,  3173,   387,  3173,   394,
     390,    18,    19,  1926,   140,   774,   643,  3953,   583,   404,
     401,    84,   648,   510,  1950,  4976,   411,  1929,   372,  1929,
    3197,   389,   774,   387,   209,   774,   390,  1950,   572,   630,
     539,  1957,    18,    19,   774,  2010,   587,   429,   401,   363,
    1966,  4196,  4197,   373,  3995,   387,   176,   266,   390,   293,
     180,   648,   572,    18,    19,   470,   648,   332,  1984,   188,
     615,  4415,  5142,  5143,   194,   456,  2054,  2055,   167,   212,
     714,   715,   716,   543,  2049,   387,   386,    86,   390,   774,
      18,    19,  2008,  2009,  2010,   648,   501,  4038,  4039,  3946,
     256,  3946,   648,  4044,   648,   594,   105,   282,   477,  2025,
    3589,   200,   493,  2029,  4214,   733,   387,   501,   583,   390,
     575,  2037,   637,    35,  2040,   258,   387,  1966,   654,   390,
     515,  2096,   140,  2049,   393,     0,   648,   774,  2054,  2055,
     615,    18,    19,  3622,   612,  1984,   387,  2112,   774,   390,
      62,  3630,   127,  3888,   769,  3890,   387,  2619,  3637,   390,
     369,  2757,    18,    19,  3262,   592,   594,   249,  2084,  2008,
    2086,   290,  2088,  2151,   237,  2088,  2638,    13,  2640,   194,
    2096,   387,  4621,   770,   390,   566,  2164,  4734,   615,   648,
     272,   387,   774,   648,   390,  3362,  2112,    13,  2037,   733,
    4120,  2040,  2110,  5154,  5155,  2113,  2120,    18,    19,   365,
    3200,   331,  2120,  4120,  2128,    18,    19,   770,   277,   235,
    2128,   280,    13,   733,   770,   770,   770,   612,  3382,   774,
    2146,  2147,  2148,  2149,  2150,  2151,  2152,  3995,    13,   620,
     509,   709,   626,   615,  2160,  3349,  2162,   263,  2164,   775,
    3782,  2167,   648,  4725,   373,   388,   637,   493,   770,   774,
     323,  2146,  2147,  2148,   447,  2150,  3420,  4112,   648,   387,
     285,   571,   390,   248,   594,   156,  4376,  2162,    18,    19,
    4038,  4039,  2167,    22,   563,  2250,  4044,   566,   387,  4196,
    4197,   390,    18,    19,   648,  2221,  4141,    18,    19,   774,
     775,    18,    19,  3404,   140,  2524,  3407,   370,  2221,   429,
    2149,   770,  2531,  2152,  3407,  3469,   648,   387,   770,  2284,
     390,  4690,   774,   498,   140,  4246,  4695,    18,    19,  4356,
     566,   420,   122,   612,  2250,  2282,    18,    19,   607,  2247,
     138,    18,    19,   415,   387,   282,   648,   390,  4820,   140,
     387,   534,   387,   390,   141,   390,    18,    19,  2274,  4300,
      22,  3226,  3923,  2310,   387,   140,   387,   390,  2284,   390,
     387,   430,  3344,   390,   770,  2291,  2292,   648,   608,   535,
     387,  2297,   651,   390,   620,   621,  2302,   648,   769,  2302,
     770,   772,   131,   774,  4599,    64,  4601,   553,   188,  4324,
     125,   637,   774,   775,  2369,    74,   138,   648,  2355,  2325,
    3430,   387,   548,   138,   390,  2331,   770,   648,  2274,  3439,
      89,  2337,  2338,  2339,  2340,  2341,  2342,  2343,   194,  3359,
     228,  2347,   387,  2349,   371,   390,   160,  3538,   770,  4808,
    2405,  2297,   648,  2359,   533,  2361,  2362,  3358,  2364,    21,
    2366,  2367,   648,  2369,  2370,  2371,  3384,   160,  2297,   387,
    2376,  2110,   390,  2379,  2113,  2381,    18,    19,   770,   131,
    2386,  2120,   122,  2389,  2390,   594,    48,   212,   653,  2128,
     246,   194,  3207,  2399,   547,  2401,    18,    19,   644,  2405,
     300,   301,   401,   629,   367,  3593,   228,   672,   587,   770,
     290,   137,   769,   228,  2420,   212,    77,   601,   775,   770,
     387,    18,    19,   390,  2430,  2431,   152,  4994,  2496,   285,
     100,  2266,    93,  3743,  3744,  3623,  3624,   167,   241,   770,
     648,   387,   626,   769,   390,  2333,   564,   563,   188,   770,
     566,   450,  4300,   416,  2110,  5017,  2344,  2113,  3009,   648,
    5274,  2390,  2350,   770,    18,    19,    77,   774,   345,  3020,
    3021,  2526,  3663,  2120,   770,  2530,   235,   630,  2484,   219,
    3663,  2128,  2488,    21,   770,   733,   387,   141,   648,   390,
    2496,  2420,  2380,   373,   387,   681,  2384,   390,   770,  2505,
    2506,  2554,   774,  2391,  2392,   753,   692,  3764,  2247,  3764,
      48,  2346,  2504,  2348,  4755,   648,   230,  4071,   766,   767,
    2526,   648,  2357,   648,  2530,  1117,  1118,  1119,    18,    19,
     770,  2506,    18,    19,   774,   648,  1128,   648,    18,    19,
    2375,   648,    18,    19,   762,   445,   446,   158,    18,    19,
     290,   648,   770,   122,   227,  2484,   229,   387,   762,  2488,
     390,  2396,   770,  5130,   681,  2400,   770,  1159,   238,  5031,
    1162,   387,   127,    77,   390,   692,   387,   137,    26,   390,
     387,   770,   648,   390,   769,   769,   234,   235,   258,  1181,
    1182,  2247,   152,  1185,  2662,  4860,   681,  4219,    61,    62,
     753,   271,   775,   648,   265,  2611,   387,   692,    71,   390,
     770,  1203,  1204,   261,  2669,   387,  1208,  1209,   390,   188,
     387,    84,  5189,   390,  5191,   141,   237,   504,   505,    77,
     648,   865,   583,   373,   868,   387,    84,   770,   390,   873,
    5207,    61,    62,   770,   878,   770,  2652,  2653,    18,    19,
     219,    71,  2644,   456,  2644,   681,  2662,   770,   227,   770,
     229,    18,    19,  2669,    38,  3798,   692,  4135,    61,    62,
    4138,  4139,    46,   770,  4202,  4203,  4204,  4205,   668,  2685,
     670,   648,   343,   770,  2690,   355,   185,   774,  2694,  2695,
     493,   345,  5259,  5260,    19,   770,  3829,  3830,  3996,   774,
      23,   770,   648,  3947,   770,   774,   718,   719,   369,   770,
     158,   197,    35,   774,   594,   770,   770,  5179,  2724,   774,
     774,   290,  3855,    26,   230,   770,    49,   197,  3919,   177,
    4599,   212,  4601,   237,  2740,  2741,   184,   770,    61,    62,
      82,   774,   770,   235,  4569,   387,   774,   648,   390,  2765,
    3994,  2757,   770,   364,  2760,   648,   770,  2749,   564,   370,
     774,  2767,  2765,   566,  2767,   387,  5228,   456,   390,  3783,
     431,  2606,    19,  5038,   770,  2767,  2813,  2767,   774,  3841,
     100,    84,  2850,   125,  4338,  4339,  2784,  2785,  2786,   237,
     387,   769,   770,   390,  4051,  2724,  4051,  4807,  3836,  3351,
     212,   770,   235,   770,   373,   774,   148,   477,   566,  2813,
    4807,  2740,  2741,   623,  2820,  2813,   626,   620,   648,  2872,
    4835,  2874,   770,    12,   770,    80,   774,    82,   439,   345,
     656,   657,   648,   387,   637,  3897,   390,   648,    19,   770,
     197,   648,   493,   774,  2850,   187,  2852,  2853,  4858,  4859,
     504,   505,   770,   770,   594,   158,   774,   774,  2864,   769,
     364,  4858,  4859,  2869,   150,   151,   370,   648,   572,   770,
     125,   122,   533,     7,   125,   323,   648,   770,   769,   549,
     769,   648,  2937,   760,   761,   762,   763,   764,   765,   766,
     774,   770,    26,   148,   141,   774,   648,   387,   770,   770,
     390,   387,   774,   774,   390,   122,   769,   387,   770,   770,
     390,   387,   774,   774,   390,   566,   364,   387,   238,   769,
     390,   770,   370,  2852,  2853,   774,   770,    26,   493,   141,
     774,  2937,   187,   575,   237,   439,   547,   188,   258,   637,
     770,  4198,   640,  4198,  2999,  2951,  2952,  2953,  2951,   770,
      84,   271,    64,   774,   770,   775,    77,   697,   212,   770,
     141,   770,    74,   770,   769,   774,   769,   769,   219,   620,
    3988,   188,   770,  2394,  2395,  3993,   774,    89,    77,   994,
     995,   769,   997,  3038,   999,    84,   637,  4507,   599,   770,
     111,   770,  4512,  2999,   769,   774,   770,  3003,   770,  3005,
     774,   566,  3936,   770,  3010,   769,   648,   320,   321,  3015,
     144,   717,   325,   326,   481,  2413,  2414,    21,  3024,   630,
     323,  3027,   564,   770,   770,   594,   648,   774,   774,   212,
     387,   769,  3038,   390,   769,   355,   770,   158,  3044,   290,
     774,  3096,  3097,   547,  2879,  2784,  2785,  2786,   769,  4087,
     770,   648,  4296,   770,   774,   620,   769,   774,  3064,   769,
    4098,   769,  2897,  2898,  2899,  2900,  3072,   370,  1189,  1190,
    3076,  3077,   637,   290,  2813,   770,   179,  4321,   177,   774,
     770,   193,  5232,  5233,   774,   184,  3092,   199,   770,   770,
    3096,  3097,   774,   774,   648,   599,   100,   564,   345,   547,
     770,   769,   569,   237,   769,   759,   760,   761,   762,   763,
     764,   765,   766,  4633,   235,   135,   770,  4637,   769,  4310,
    3175,  3127,   373,   235,  4315,    12,   630,   770,  2784,  2785,
    2786,   774,  4315,   345,   419,   770,   769,  3227,   237,   774,
     141,    21,  3227,   770,  3199,   612,  2981,   774,   770,  3155,
     770,   263,   156,   769,   774,   770,   373,   477,   648,   774,
     769,   628,   648,  3092,   345,   769,  2813,   769,   648,  3175,
     770,  4691,   648,   770,   774,   770,  4696,   770,   648,   774,
     397,   774,   630,  1775,   769,   440,    64,   654,   192,   323,
     194,   770,   769,  3199,   770,   774,    74,   769,   774,   769,
     481,   322,  3200,   120,   769,  2200,  2201,  3213,   212,   654,
    3216,    89,  3218,   217,   770,   385,   770,   769,   774,   340,
     100,   108,  3214,   100,   323,   769,  3218,   231,  3218,   549,
     769,  3223,  3224,   769,   238,   769,   370,  3229,   667,   668,
     127,   670,   246,   364,   547,   761,   762,   763,   764,   765,
     766,  1843,   769,   563,   258,  1847,   769,   504,   505,   769,
    3946,   769,   769,   366,   367,   364,   769,   271,   769,   372,
     378,   370,   276,   769,   769,   769,   156,  1869,   601,   381,
     770,   285,   769,   197,  3213,   141,   769,  3216,   231,   401,
     770,   648,   504,   505,   770,  3130,   769,  3132,  3133,   622,
     623,  3136,  3137,   769,   769,   753,   418,   103,   769,   226,
     769,  3146,  3147,   200,   194,   193,  3151,   451,  3324,  3154,
     769,   246,  3157,   504,   505,   769,   122,   630,   769,   769,
     769,  3399,   212,  4643,  3340,    64,   194,   217,   769,   769,
     194,   769,   769,   594,   345,    74,  4384,  4385,   769,  4387,
      13,   355,  4485,   769,   769,   769,   243,   235,   238,   769,
      89,   238,   769,   769,   769,   769,   246,   769,  4394,  4395,
     769,  3377,    12,   769,   378,  3381,  3382,   594,   258,   769,
     769,   258,  3388,   769,   388,   263,   769,   769,   769,   769,
     769,   271,   188,  3399,   271,  3387,   276,  3403,  3404,   286,
     769,  3407,   769,   769,   769,   285,   197,   519,   246,   501,
     621,   378,  3418,   547,  3420,  3407,   501,  3407,   335,   212,
     775,   774,   339,   775,  3430,  3431,   547,  3430,  3431,   346,
     769,   774,   769,  3439,  3440,  3441,  3439,  3440,  3441,  4954,
     774,    96,  3495,   564,   775,   769,    48,   156,   547,   245,
     753,  4761,   156,   197,  4764,  4765,  4766,  4767,  3254,  3388,
    3256,  3200,   111,  3469,   193,   770,   772,   769,   108,   773,
     199,   612,   249,   477,    48,   355,   276,   140,   355,    21,
     293,   160,  3488,   384,  3490,   171,   589,   127,   533,   345,
     519,   193,   604,   709,   290,     7,   630,   501,   378,   263,
     263,   378,   605,   504,   505,    71,   235,   141,   388,   634,
     427,    13,   759,   760,   761,   762,   763,   764,   765,   766,
     770,   770,   140,   122,    10,  3531,   125,  3533,  3531,    33,
     774,   630,  3538,   420,   263,   775,   770,  4847,   770,   770,
     418,   770,   770,   770,  3200,   549,  4856,  4857,   141,   761,
     762,   763,   764,   765,   766,  4865,   770,   220,   100,   199,
    4578,   502,   769,   156,  3570,   275,   667,   378,   615,   709,
     563,   108,  3578,   774,   491,    50,   516,   373,   759,   760,
     761,   762,   763,   764,   765,   766,   282,    30,  4626,   188,
    4628,  4629,    30,   287,    31,   235,   774,   477,   583,   603,
     477,   397,   774,   458,   459,   460,   461,   462,   463,   464,
     614,   615,   499,   774,   156,    64,   487,  4655,    71,   753,
     219,   501,   733,   572,   774,    74,   273,   774,   658,   773,
     167,   635,   774,   637,   166,   747,   775,   141,   769,   194,
      89,  4832,   122,    37,  3650,   125,   286,   543,   504,   505,
    3485,   563,   194,   166,   753,   543,   287,  3663,   211,   157,
    3666,  3667,    88,   200,   774,   774,   194,    21,   774,   549,
     212,   379,   549,   559,  4635,   217,   646,   564,   136,   566,
    3686,  3687,   122,   156,  3690,   125,   770,   729,    48,   418,
     654,   290,   729,   637,   698,   160,   238,   160,   160,   160,
    4725,   160,   774,   160,   246,   160,   404,   572,   188,   774,
      87,   345,   125,   600,   503,   632,   258,   369,   316,     7,
     769,   115,   110,   603,  3730,   612,    13,  3733,   122,   271,
    4755,    35,   583,   650,   276,   615,  3742,   158,   615,   219,
     401,    74,   401,   285,   193,   249,   583,   401,   188,   136,
     390,  3757,   345,  3759,   261,   635,    43,   637,   759,   760,
     761,   762,   763,   764,   765,   766,   770,   261,   772,   770,
     774,   275,  3778,   401,   373,   779,   401,   136,  4593,   219,
      48,  3787,   401,   619,   401,   179,   235,   401,   401,   619,
     519,  3587,  3588,   108,   188,  4820,  3592,   774,   594,   774,
     501,  4934,   710,   492,   628,   770,   769,    94,  4769,   769,
     290,    98,   774,   355,   263,   610,    57,   378,   698,   448,
     171,   708,     7,   717,   378,   219,   614,   111,     7,   228,
     592,   769,  3628,   200,   770,   770,   378,   770,  3634,  3635,
    3636,   345,   770,  3639,   770,   197,   388,   770,   770,  3778,
     290,   770,   167,   774,   158,   762,   141,  3692,   162,   499,
    4940,   770,   366,   367,   527,   528,   769,   530,   531,   532,
     504,   505,   770,   770,   774,   604,   690,   770,   770,   519,
      37,   770,  5015,   420,   774,   200,   549,   770,   770,   769,
     770,   775,   772,   373,   774,   774,   290,   770,   202,   779,
     775,   697,  3908,   759,   760,   761,   762,   763,   764,   765,
     766,   504,   505,  3919,   770,   775,   141,   769,   222,   766,
     235,   769,   775,   769,   564,    15,   566,   770,   192,   569,
     774,    21,   774,   373,   773,   477,   493,    21,   442,   287,
    3946,  3947,   287,    27,   501,  3937,   287,  3953,   287,    39,
    3953,   287,   401,    43,   774,   287,   774,   160,   115,   501,
     600,   378,   356,   583,   604,   122,   253,    57,    58,   418,
     635,   286,   612,   236,   368,   774,   774,   774,   372,   373,
      64,   401,   583,   287,    13,   160,    27,    71,  3994,   583,
     774,    75,  5017,    77,   493,   594,   210,   378,   197,   197,
     504,   505,   501,  4009,   583,    89,   583,   549,   456,   566,
     255,  5202,   194,   517,   654,   433,  2608,   775,   747,  5202,
     775,   775,   179,    64,   249,   775,   775,  4082,   774,   566,
      71,   188,   249,   763,    75,  5226,    77,   252,   561,   181,
    4077,   125,  3877,  5226,   194,   332,   774,  4053,    89,  4055,
     587,   194,  4058,   770,  4109,    60,  4062,   194,  5249,   774,
     345,   603,   219,   620,   621,  4071,  5249,   566,   708,   514,
     405,   402,   572,   615,   404,   612,  4082,   776,   404,   383,
     637,   572,  5273,   572,   125,   160,   126,   669,   342,  5050,
    5273,   628,   774,   635,   775,   637,    77,   263,   478,  4105,
     415,   598,   263,  4109,   263,   420,   403,   747,   748,   396,
    5148,   769,    93,   378,   594,   419,   707,   673,   249,   203,
     345,   620,   621,  4924,   673,   759,   760,   761,   762,   763,
     764,   765,   766,   290,   141,   160,   770,   160,   637,   443,
    4146,  4147,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   134,   594,   642,   698,   160,   160,   160,
     160,  4167,   160,   160,   468,   160,   759,   760,   761,   762,
     763,   764,   765,   766,   160,   160,  4105,   160,   572,   263,
     160,   160,   576,   160,   499,   579,  4192,   160,   160,   160,
     160,   160,  4167,   160,   100,   589,   160,   160,   160,   356,
     594,   160,   160,   597,   519,   286,   709,   654,   512,   465,
     378,  4217,   769,   154,   245,   372,   373,  4146,   722,   504,
     505,   769,   263,  4229,  5271,   770,   770,  4219,   770,   775,
     772,   518,   774,   774,   770,   770,   770,   779,   572,   543,
     770,   245,   249,   770,   775,    21,   775,   572,   572,   564,
     775,    27,    28,   775,   569,   759,   760,   761,   762,   763,
     764,   765,   766,   583,   655,   160,    35,   583,   769,   774,
     769,   385,   587,   560,   769,   197,   769,   769,   774,   504,
     505,   731,   366,   367,   265,   600,   212,    63,   372,   733,
    4296,   186,   728,    62,   378,  5110,  4302,   612,   433,   197,
    4229,    77,   770,    35,  4310,   615,   201,    83,    84,  4315,
    4316,    87,   428,   628,   197,  4321,   336,   156,  5252,   214,
     774,   555,  4314,   769,    12,   366,   367,   769,   769,   456,
     404,   372,   238,   404,   418,   111,   160,   378,   345,   654,
     406,   774,  4348,   112,  5145,    73,   115,   533,   492,   125,
     160,   161,   258,   129,   123,   533,  4362,   300,   301,   533,
    4415,   533,   343,   533,   769,   271,   263,   761,   762,   263,
     592,   266,   267,   142,   769,   769,   615,   418,   367,   378,
     156,   774,   158,   564,   637,   366,   367,   564,   369,  5204,
     774,   201,   583,   708,   583,   373,   451,  4403,   770,   294,
     770,  4407,   378,   378,   214,  4460,   774,   769,   769,  4415,
     212,   769,   769,   497,   769,   572,   769,   572,   414,   576,
     189,   770,   579,   769,   473,   769,   158,   769,    62,   769,
     162,   769,   589,   748,   247,   247,    48,   594,  5253,   721,
     597,   745,   746,   770,   254,   749,   750,   751,   752,   355,
     431,   770,   770,   495,  4460,   231,   497,   267,   769,   235,
     774,   770,   688,   547,  5265,   688,   242,   774,   363,   770,
     202,   285,   378,    12,   759,   760,   761,   762,   763,   764,
     765,   766,   547,   160,   294,   774,   262,   763,   231,   385,
     222,   260,  4498,  5294,  4500,  4501,   643,   504,   505,   275,
    4492,   282,   445,   446,   160,   197,   547,   769,  4576,   258,
     770,   770,   770,   774,   258,   770,   391,    48,   770,   217,
     604,  4527,   417,   103,   373,    48,   615,   769,   160,   769,
    4536,   228,   498,   103,   759,   760,   761,   762,   763,   764,
     765,   766,   245,  5010,   160,   278,   322,   775,   111,   359,
     111,   162,   533,   769,   401,   287,   769,   730,   769,   769,
     769,   441,   769,   604,   340,   125,   125,   761,   770,   384,
    4576,   477,   566,   404,   769,   378,   516,  4583,   378,   373,
     770,   524,   525,   526,   637,   354,   770,   770,   357,   197,
     583,   681,   401,  4599,   770,  4601,   686,   433,    21,   770,
     210,   770,   269,   378,   761,   762,  5073,   246,   770,   583,
     774,   774,   769,   197,   779,   775,   258,   258,   258,   395,
     698,  5088,   706,   779,   404,   401,   716,   779,   404,   277,
      48,   404,    48,    48,  5101,   153,    48,   763,    35,   769,
      35,   609,   732,   549,   626,   730,   730,   125,   263,   263,
      64,   383,  4658,     4,  4583,   203,   263,    35,   373,   769,
     373,  4496,   373,   747,   416,   706,   435,    77,   378,   378,
      21,    21,   775,   769,   516,   770,   770,   488,   770,   342,
     456,  4687,  4688,   774,   770,    48,   774,   419,    39,   730,
     770,   770,  4745,  5160,   770,   388,   265,   770,   788,   789,
     770,   791,   792,  5170,   428,   774,   747,   483,  5175,   615,
     175,   443,   285,   385,   804,   210,    21,   493,   147,   770,
     566,   258,   258,   769,   769,    48,   770,   774,  4563,   120,
     120,    48,    48,   388,   620,   373,   468,   769,  4744,   368,
     509,    15,  5209,   621,  5211,   637,    21,   774,    81,  4755,
     511,   143,   759,   760,   761,   762,   763,   764,   765,   766,
     373,   228,   194,   769,   540,   541,   542,   404,  4774,   373,
    5237,   547,   173,   263,   342,    48,   385,   194,   770,    21,
     512,   319,  4788,   774,   774,   276,   770,   775,   564,   637,
     566,   567,   674,   748,    48,   398,  4833,   473,   136,   637,
     149,   609,   574,   158,   136,   136,   378,   897,   769,   774,
     579,   543,  5279,  5280,   770,   769,   538,  5284,   770,   770,
     769,   774,   770,   770,   770,   769,  4832,   603,  4834,   774,
     769,   563,   769,   769,   566,  4841,  4842,   769,   607,   769,
    4846,   770,   692,    48,   620,   679,    48,   692,   938,   484,
     654,   484,   692,   535,   769,  4861,   555,   155,    32,   776,
     634,   637,   952,    56,    64,  4871,   385,    64,    19,   770,
     703,   554,   634,    66,    32,   965,  4882,   482,   197,   385,
     385,  4887,   770,    76,   143,   134,   692,   484,   689,   228,
     465,     6,   378,   378,   246,  4892,   154,    90,    91,    92,
    4892,   772,  4892,   702,    48,   171,  4959,   609,   130,   634,
     154,    56,  4918,   106,   772,  4970,   230,   292,  4973,   776,
     124,    66,   231,    54,   703,   575,   143,   373,   772,   154,
     575,    76,   769,   774,   215,   501,    54,   772,   154,   194,
     378,   194,  4940,  4778,   194,    90,    91,    92,   575,   725,
     636,   455,   125,   774,   378,   162,   378,   699,  5013,   196,
    4892,   106,  3168,  3366,  4970,  3162,  3164,  4973,  4500,  4503,
    3166,  3159,  4496,  3755,  1110,  4511,  3563,   753,  4525,  4922,
    4986,  5096,  4809,  5097,  1596,  4527,  4709,    15,  5294,  1079,
    5245,    46,  3908,   769,  2756,  4795,   772,  2690,  4795,  5261,
    4795,  5157,  5066,  5157,  5143,  5092,  4795,  5013,  5091,   969,
    3764,  2322,  1102,   745,   746,  4795,  2328,   749,   750,   751,
     752,  3362,  4795,  1113,  1114,  4198,  4795,  5033,  4795,  4795,
    4795,  4795,  1122,  1123,  1124,  1125,  1126,  1127,  4051,  1065,
    4795,  4219,  4795,  2485,  3224,  1135,  1136,  3223,  1138,  1139,
    4004,  3229,  4615,  1143,  1144,  5040,  4795,  1147,  1148,  1149,
    1150,  4400,  1152,  1153,  5050,  5119,  5119,  4769,  5052,  2413,
    1160,  1161,  2483,  1163,  1164,  1165,  1166,  1167,  3785,  3218,
    1170,  1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,  4071,
    1180,  4072,  4122,  1183,  1184,  3606,  3639,  3638,  1188,  4429,
    5062,  4125,  1192,  1193,  1194,  3320,  4833,  4633,  4691,  4696,
    4773,  2336,  4637,  3010,  4645,  1205,  1206,  1207,  1750,  3022,
    1210,  4098,  4407,  1213,  1214,  1215,  1216,  1217,  1218,  3770,
    2908,  3202,  2901,  4477,  2414,  2414,  2413,  2205,  2209,  4795,
    1575,   334,  1232,  1233,   974,  3669,  4885,  4886,  4795,  1725,
    1240,  2740,  1242,  1243,  2746,  3030,  5162,  1700,   351,  3127,
    3388,  3924,  2721,  5169,  1254,  1255,  1256,  5222,  1258,  1259,
      63,  2091,  1262,  1263,  1264,   939,  1233,  1267,  1268,  1269,
    1270,  1271,  1272,  1273,  1274,   938,  2277,  1957,  1278,   334,
    2650,  1897,  3333,  1283,  4743,  5017,  5202,  1154,  2531,  2767,
    2767,  4940,  5208,  4725,  2767,  2767,   351,  5213,  1298,  5110,
    5233,  5232,  5033,  4603,  4841,  4341,  5222,  3690,  1128,  4842,
    5226,   116,   117,   118,   119,   120,  3981,  4350,   988,  4885,
    4886,  4744,  3446,  4564,  3663,  1486,  4720,    16,  4885,  4886,
    4632,  1331,  1967,  5249,  2284,  1052,  1339,  1052,  2657,  3387,
    3387,  4318,  1484,  3943,  4993,  4994,  3385,  4301,  1049,  5265,
    1052,  4310,  1052,  2846,  2155,  2181,  1574,  5273,   968,  2847,
    2678,  5010,  2064,  3092,  4034,  4141,  3391,  4391,  5273,  5271,
    5030,  5271,  5249,  5109,  4940,  4606,  4315,  4213,  5294,  2952,
    2113,  3155,  5025,  1421,  1236,  1385,   489,    43,  2813,  2128,
      43,  1419,  1392,  2108,  2106,  2724,   924,    39,  2896,  1331,
    2496,  4573,  1524,  2497,  4727,    11,  1043,  1381,    11,  5041,
    3773,   927,  1110,  1110,  1110,  4216,  4157,   472,   223,   224,
     225,   226,  4520,  1423,  5073,  1425,  3680,  4993,  4994,    -1,
      -1,    -1,    -1,    -1,   489,    -1,  4993,  4994,    -1,  5088,
      -1,    -1,    -1,    -1,  5010,    -1,    -1,    -1,   551,    -1,
      -1,    -1,  5101,  5010,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   568,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5130,    -1,  1483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5142,  5143,    -1,   551,    -1,    -1,    -1,
    5245,    -1,  1502,    -1,    -1,    -1,    -1,  5073,    -1,    -1,
      -1,  5160,    -1,   568,    -1,    -1,  5073,    -1,    -1,    -1,
    5265,  5170,  5088,    -1,    -1,    -1,  5175,    -1,    -1,    -1,
     335,  5088,   337,   338,   339,  5101,    -1,    -1,    -1,    -1,
    5189,   346,  5191,    -1,  5101,    -1,    -1,    -1,    -1,  5294,
      -1,    -1,  1552,    -1,    -1,    -1,    -1,    -1,  5207,    -1,
    5209,    -1,  5211,    -1,  5130,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5130,    -1,    -1,  5142,  5143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5142,  5143,    -1,  5237,    -1,
      -1,    -1,    -1,    -1,  5160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5160,  5170,    -1,    -1,    -1,    -1,  5175,
    5259,  5260,    -1,  5170,    -1,    -1,    -1,    -1,  5175,    -1,
      -1,    -1,   427,  5189,    -1,  5191,    -1,    -1,    -1,    -1,
    5279,  5280,  5189,   894,  5191,  5284,    -1,    -1,    -1,    -1,
      -1,  5207,    -1,  5209,    -1,  5211,    -1,    -1,    -1,    -1,
    5207,    -1,  5209,    -1,  5211,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5237,    -1,    -1,    -1,    -1,   490,   491,    -1,    -1,    -1,
      -1,   952,    -1,  5259,  5260,    -1,    -1,    -1,    21,    -1,
      -1,    -1,  5259,  5260,    27,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5279,  5280,    -1,    -1,    -1,  5284,   980,
      -1,    -1,  5279,  5280,    -1,    -1,    -1,  5284,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   686,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,  1777,   716,    -1,
      -1,  1781,    -1,    -1,    -1,    -1,    18,    19,   111,  1789,
      -1,  1791,    -1,    -1,   732,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,   632,    83,    84,
      -1,  1831,    87,   156,    -1,   158,    -1,    -1,    -1,    -1,
      -1,  1102,    -1,    -1,   649,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   792,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,  1875,  1876,  1877,    -1,    -1,
      -1,    -1,    -1,    -1,   116,   117,   118,   119,   120,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   158,    -1,  1905,    -1,    -1,   231,    -1,
    1910,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1929,
      -1,    -1,    -1,    -1,    -1,    -1,  1936,    -1,    -1,   262,
      -1,  1941,    -1,  1943,    -1,    -1,    -1,    -1,    -1,  1949,
      -1,  1951,  1952,    -1,    -1,    -1,    -1,    -1,    -1,   897,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   223,   224,   225,   226,    -1,    -1,    -1,    -1,   322,
     938,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1298,    -1,    -1,
      -1,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,    -1,   322,    -1,    -1,
    1331,    -1,   395,    -1,    -1,    -1,  1337,    -1,   401,    -1,
      -1,   404,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,  1352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   335,    -1,   337,   338,   339,    -1,    -1,
    2110,    -1,    -1,  2113,   346,    -1,    -1,    -1,    -1,    -1,
    2120,  2121,    -1,    -1,  1385,  2125,    -1,    -1,  2128,    -1,
      -1,  2131,    -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,
     395,  2141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,
      -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,   390,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     493,    -1,    -1,    -1,    -1,  1113,  1114,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1122,  1123,    -1,    -1,  1126,  1127,
      -1,    -1,   445,   446,    -1,   427,    -1,  1135,  1136,    -1,
    1138,  1139,    -1,    -1,    -1,  1143,    -1,    -1,    -1,  1147,
    1148,  1149,  1150,    -1,  1152,    -1,    -1,   540,   541,   542,
      -1,    -1,  1160,  1161,   547,  1163,  1164,    -1,   483,    -1,
      -1,    -1,  1170,    -1,    -1,  1173,  1174,  1175,  1176,  1177,
    1178,   564,  1180,   566,   567,  1183,  1184,  2247,    -1,    -1,
    1188,    -1,    -1,    -1,  1192,  1193,  1194,    -1,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1205,  1206,  1207,
      -1,    -1,    -1,    -1,    -1,  1213,  1214,  1215,  1216,  1217,
     603,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,  1232,  1233,    -1,   620,    -1,    -1,
      -1,    -1,  1240,    -1,  1242,  1243,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,   637,    -1,    -1,    27,    28,    -1,
    2320,    -1,    -1,  2323,  2324,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1283,    -1,    -1,   603,    -1,
      -1,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     632,   111,   725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,   648,   649,   650,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     753,    -1,    -1,    -1,  2434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,   158,   772,
      -1,    -1,    -1,    -1,  1392,    -1,    -1,    -1,   711,   712,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   732,
      -1,   734,   735,   736,   737,   738,    -1,  1425,   741,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2521,  2522,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2541,  2542,    -1,  2544,  1483,    -1,  2547,  2548,  2549,
    2550,  2551,   262,    -1,  2554,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2563,  1502,    -1,    -1,    -1,  2568,    -1,
    2570,    -1,  2572,  2573,    -1,  2575,  2576,    -1,    -1,    -1,
    2580,  2581,  2582,    -1,    -1,    -1,  2586,  2587,  2588,    -1,
    2590,    -1,  2592,    -1,  2594,    -1,  2596,    -1,  2598,    -1,
      -1,    -1,    -1,  2603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   322,    -1,  1552,    -1,    -1,    -1,    -1,  2619,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     340,    -1,    -1,    -1,    -1,    -1,  2636,    -1,  2638,    -1,
    2640,    -1,    -1,    -1,  2644,    -1,    -1,    -1,    -1,    -1,
    2650,  2651,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2735,    -1,    -1,    -1,    34,
      35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,    44,
      45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,  2038,  2039,    -1,
      -1,    -1,    -1,    -1,  2784,  2785,  2786,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2813,    -1,    -1,    -1,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
     540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,  1777,
      -1,    -1,    -1,  1781,    -1,    -1,    -1,   142,    -1,  2110,
      -1,    -1,  2113,  1791,   564,    -1,    -1,   567,    -1,    -1,
      -1,    -1,  2862,    -1,   159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2872,    -1,  2874,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,   603,   189,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      63,    64,    -1,    -1,    -1,    -1,    -1,  1875,  1876,  1877,
      -1,    -1,    -1,    -1,    -1,  2945,    79,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   260,    99,    -1,    -1,    -1,
      -1,    -1,  1910,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   279,    -1,  2247,    -1,   121,    -1,
      -1,  1929,    -1,   288,   289,    -1,   291,    -1,   131,   132,
      -1,    -1,  2263,  1941,  2265,  1943,  2267,  2268,    -1,  2270,
     143,   144,    -1,    -1,    -1,   725,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   328,   329,   330,    -1,   170,    -1,    -1,
      -1,    -1,    -1,   753,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   347,   348,   349,    -1,  2317,   190,    -1,   354,
    2321,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,    -1,
     375,   376,   215,    -1,    -1,   218,    -1,    -1,    -1,    -1,
    2351,  2352,  2353,  2354,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,   409,   410,    -1,    -1,    -1,    -1,
      -1,    -1,  2383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,    -1,   285,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2121,    -1,    -1,    -1,  2125,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3200,    -1,   497,  2141,    58,    -1,   501,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,  3238,    -1,
      -1,    -1,    96,    -1,    -1,    -1,  3246,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,  3273,  3274,   129,    -1,    -1,   573,    -1,
      -1,   576,   415,   137,   579,   580,   581,   582,    -1,    -1,
     144,    -1,    -1,   426,    -1,    -1,    -1,    -1,   152,  3299,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,  3309,
      -1,  3311,    -1,  3313,    -1,   448,    -1,    -1,   451,    -1,
     453,    -1,    -1,   456,    -1,    -1,    -1,   622,   623,    -1,
      -1,    -1,    -1,   466,   467,    -1,    -1,    -1,   192,    -1,
      -1,    -1,    -1,   476,  3344,   478,    -1,    -1,    -1,  3349,
      -1,  3351,    -1,    -1,   487,   650,    -1,    -1,    -1,    -1,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,   506,   507,   508,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,  3385,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   539,    -1,   262,    -1,
      -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3421,    -1,  3423,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   285,    -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,
      -1,    -1,  3462,    -1,    -1,    -1,    -1,    -1,   322,   602,
      -1,    -1,    -1,   606,    -1,  2736,    -1,    -1,    -1,   774,
      -1,   614,    -1,    -1,    -1,    -1,   340,   620,    -1,    -1,
     344,    -1,    -1,    -1,    -1,  3495,  2434,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2784,  2785,  2786,    -1,    -1,   661,   662,
     663,   664,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,   676,    -1,    -1,    -1,    -1,    -1,    -1,
     404,    -1,    -1,    -1,  2815,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3569,
      -1,    -1,    -1,    -1,  2512,    -1,    -1,    -1,    -1,    -1,
     713,    -1,    -1,  2521,  2522,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,  2860,
      -1,    -1,    -1,  2541,  2542,    -1,  2544,    -1,    -1,  2547,
    2548,  2549,  2550,  2551,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2563,    -1,    -1,    -1,   483,
    2568,    -1,  2570,    -1,  2572,  2573,   769,  2575,    -1,    -1,
      -1,    -1,  2580,  2581,  2582,    -1,    -1,    -1,  2586,  2587,
    2588,    -1,  2590,    -1,  2592,    -1,  2594,    -1,  2596,    -1,
    2598,    -1,    -1,    -1,    -1,  2603,    -1,    -1,    -1,    -1,
    2931,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2964,    -1,    -1,  2644,    -1,    -1,    -1,
     564,    -1,  2650,   567,  2975,    -1,  2977,  2978,  2979,  2980,
      -1,  2982,  2983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3761,  3762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3039,    -1,
      -1,    -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,
      -1,  3052,    -1,    -1,    -1,    -1,    -1,  2735,    -1,    -1,
      -1,    -1,  3802,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3833,    -1,  3835,    -1,    -1,  3838,  3839,
      -1,  3841,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3852,    -1,    -1,    -1,    -1,  3857,    -1,    -1,
    3860,    -1,    -1,  3863,  3864,    -1,    -1,    -1,    -1,    -1,
    3131,   725,    -1,  3134,  3135,    -1,    -1,  3138,  3139,  3140,
    3141,  3142,  3143,  3144,  3145,  3885,    -1,  3148,    -1,  3150,
      -1,  3152,  3153,    -1,    -1,  3156,    -1,  3897,    -1,   753,
      -1,    -1,    -1,    -1,    14,    -1,    -1,    17,    -1,    35,
      36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2862,    -1,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    62,    -1,    -1,  3200,
      50,    51,    -1,  3943,    -1,    -1,    72,    73,    58,    -1,
      -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    79,
      -1,    97,    -1,    99,    -1,    -1,    -1,    -1,  3978,  3979,
      -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3997,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2945,    -1,    -1,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   157,   158,   143,   144,    -1,    -1,   163,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,  4063,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   198,    -1,   200,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   264,    -1,   282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4164,  4165,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     316,    -1,    -1,    -1,    -1,    -1,  4196,  4197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3505,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3524,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,  3539,    -1,
      -1,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   419,   420,    -1,   422,   423,   424,    -1,
    3238,    -1,    -1,    -1,    -1,   415,    -1,    -1,  3246,    -1,
      -1,  4311,    -1,    -1,    -1,    -1,   426,    -1,   444,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4332,    -1,  4334,  3273,  3274,    -1,   448,    -1,
      -1,   451,    -1,   453,    -1,    -1,   456,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,
      -1,  3299,    -1,    -1,    -1,    -1,   476,    -1,   478,    -1,
      -1,  3309,   498,  3311,    -1,  3313,    -1,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   511,    -1,    -1,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,   506,   507,   508,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,    -1,
      -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,
      -1,    -1,    -1,    -1,    -1,    -1,   546,   563,    -1,    -1,
     566,    -1,    -1,    -1,    -1,  4445,    -1,  3385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,    -1,
     586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4474,  3736,    -1,    -1,    -1,    -1,
     590,    -1,    -1,  3421,    -1,  3423,    -1,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,    -1,   606,    -1,   624,  3760,
      -1,    -1,    -1,    -1,   614,   631,    -1,    -1,    -1,    -1,
     620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3462,    -1,    -1,   637,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4548,    -1,
      -1,  4551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4564,    -1,   676,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   713,    -1,    -1,  4606,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     746,    -1,    -1,   749,   750,   751,   752,    -1,   754,    -1,
      -1,  3569,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4720,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4745,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4029,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4790,    -1,    -1,    -1,    -1,  4795,    -1,    -1,    -1,    -1,
      -1,  4801,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3802,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4879,
      -1,    -1,    -1,    -1,    -1,  4885,  4886,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3833,    -1,  3835,    -1,    -1,
    3838,  3839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3852,    -1,    -1,    -1,    -1,  3857,
      -1,    -1,  3860,    -1,    -1,  3863,  3864,  4927,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4940,  4202,  4203,  4204,  4205,    -1,    -1,  3885,    -1,    -1,
      -1,    -1,  4213,    -1,    -1,    -1,    -1,    -1,    -1,  4959,
      -1,    -1,     7,    -1,    -1,    -1,  4227,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,  4979,
      -1,  4981,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4991,    -1,  4993,  4994,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3943,    -1,    -1,    -1,    -1,
    5010,    -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
    3978,  3979,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3997,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,  5071,    -1,  5073,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,  5088,  5089,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,  5101,    -1,    -1,    -1,    -1,    -1,   152,    -1,  4370,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,  5119,
      -1,    -1,    -1,    -1,   169,  4063,    -1,    -1,    -1,  5129,
    5130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5142,  5143,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5160,    -1,    -1,    -1,    -1,    -1,    -1,  5167,    -1,    -1,
    5170,    -1,    -1,    -1,    -1,  5175,    -1,    -1,    -1,    -1,
      -1,    -1,  5182,    -1,    -1,    -1,    -1,    -1,   233,  5189,
     235,  5191,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5207,    -1,  5209,
      -1,  5211,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4164,  4165,    -1,  4490,
      -1,     7,    -1,    -1,    -1,    -1,    12,  5237,    14,    -1,
     285,    17,  4503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,  5259,
    5260,    -1,    -1,  4524,    -1,    -1,  5266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5274,    -1,    -1,   322,    -1,  5279,
    5280,    -1,    58,    -1,  5284,    -1,    -1,    63,    64,    -1,
      -1,    -1,    -1,    69,    -1,   340,    -1,    -1,    -1,   344,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,    -1,   382,    -1,    -1,
      -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,   125,
     395,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,   404,
      -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,  4311,    -1,    -1,   152,    -1,    -1,    -1,
      -1,  4642,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   436,    -1,   169,  4332,    -1,  4334,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,
      -1,    34,    35,    -1,    -1,    -1,   242,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,  4445,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4474,    -1,    -1,   112,
      -1,    -1,   115,    -1,    -1,   590,   322,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,
      -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,   142,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,   637,    -1,  4855,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,
    4548,    -1,   388,  4551,   187,    -1,   189,    -1,    -1,   395,
      -1,   194,    -1,    -1,    -1,    -1,  4564,    -1,   404,    -1,
      -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4606,    -1,
      -1,    -1,    -1,    -1,   247,   451,   452,   453,    -1,  4940,
     725,   726,   727,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4964,  4965,    -1,   279,   483,   753,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   328,   329,   330,    -1,    -1,
      -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,    -1,
      -1,   547,    -1,    -1,   347,   348,   349,    -1,    -1,    -1,
      -1,   354,  4720,    -1,   357,    -1,    -1,    -1,   564,    -1,
      -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   409,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4790,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   435,    -1,   640,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4822,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     513,  4879,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   725,
     726,   727,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4927,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,   579,   580,   581,   582,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4979,    -1,  4981,    -1,    -1,    -1,    -1,    -1,   622,
     623,    -1,    -1,  4991,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5071,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5089,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,  5167,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,  5182,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,  5266,    -1,
      -1,   135,   136,   137,   138,   139,  5274,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,    -1,    -1,    -1,    -1,    -1,   761,   762,    -1,
      -1,    -1,    -1,   767,    -1,   769,    -1,    -1,    -1,   773,
      -1,    -1,    -1,   777,   778,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,   566,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,    -1,    -1,    -1,    -1,
      -1,   761,   762,    -1,    -1,    -1,    -1,   767,    -1,   769,
      -1,    -1,    -1,   773,    -1,    -1,    -1,   777,   778,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      46,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,    -1,
      -1,    -1,    -1,    -1,    -1,   761,   762,    -1,    -1,    -1,
      -1,   767,    -1,   769,    -1,    -1,    -1,   773,    -1,    -1,
      -1,   777,   778,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,    -1,    -1,    -1,    -1,    -1,    -1,   761,
     762,   763,    -1,    -1,    -1,   767,    -1,   769,    -1,    -1,
      -1,   773,    -1,    -1,    -1,   777,   778,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,    -1,
     748,   749,   750,   751,   752,   753,   754,    -1,    -1,    -1,
      -1,    -1,    -1,   761,   762,   763,    -1,    -1,    -1,   767,
      -1,   769,    -1,    -1,    -1,   773,    -1,    -1,    -1,   777,
     778,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,    -1,    -1,    -1,    -1,    -1,   761,   762,    -1,
      -1,    -1,    -1,   767,    -1,   769,    -1,    -1,    -1,   773,
      -1,    -1,    -1,   777,   778,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,    -1,    -1,    -1,    -1,
      -1,   761,   762,    -1,    -1,    -1,    -1,   767,    -1,   769,
      -1,    -1,    -1,   773,    -1,    -1,    -1,   777,   778,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,    -1,
      -1,    -1,    -1,    -1,    -1,   761,   762,    -1,    -1,    -1,
      -1,   767,    -1,   769,    -1,    -1,    -1,   773,    -1,    -1,
      -1,   777,   778,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,    -1,    -1,    -1,    -1,    -1,    -1,   761,
     762,    -1,    -1,    -1,    -1,   767,    -1,   769,    -1,    -1,
      -1,   773,    -1,    -1,    -1,   777,   778,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,    -1,
     748,   749,   750,   751,   752,   753,   754,    -1,    -1,    -1,
      -1,    -1,    -1,   761,   762,    -1,    -1,    -1,    -1,   767,
      -1,   769,    -1,    -1,    -1,   773,    -1,    -1,    -1,   777,
     778,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,    -1,    -1,    -1,    -1,    -1,   761,   762,    -1,
      -1,    -1,    -1,   767,    -1,   769,    -1,    -1,    -1,   773,
      -1,    -1,    -1,   777,   778,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,    -1,    -1,    -1,    -1,
      -1,   761,   762,    -1,    -1,    -1,    -1,   767,    -1,   769,
      -1,    -1,    -1,   773,    -1,    -1,    -1,   777,   778,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,    -1,
      -1,    -1,    -1,    -1,    -1,   761,   762,    -1,    -1,    -1,
      -1,   767,    -1,   769,    -1,    -1,    -1,   773,    -1,    -1,
      -1,   777,   778,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,    -1,    -1,    -1,    -1,    -1,    -1,   761,
     762,    -1,    -1,    -1,    -1,   767,    -1,   769,    -1,    -1,
      -1,   773,    -1,    -1,    -1,   777,   778,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,    -1,
     748,   749,   750,   751,   752,   753,   754,    -1,    -1,    -1,
      -1,    -1,    -1,   761,   762,    -1,    -1,    -1,    -1,   767,
      -1,   769,    -1,    -1,    -1,   773,    -1,    -1,    -1,   777,
     778,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,    -1,    -1,    -1,    -1,    -1,   761,   762,    -1,
      -1,    -1,    -1,   767,    -1,   769,    -1,    -1,    -1,   773,
      -1,    -1,    -1,   777,   778,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,    -1,    -1,    -1,    -1,
      -1,   761,   762,    -1,    -1,    -1,    -1,   767,    -1,   769,
      -1,    -1,    -1,   773,    -1,    -1,    -1,   777,   778,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,    -1,
      -1,    -1,    -1,    -1,    -1,   761,   762,    -1,    -1,    -1,
      -1,   767,    -1,   769,    -1,    -1,    -1,   773,    -1,    -1,
      -1,   777,   778,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,   620,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,   755,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   769,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   778,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,   755,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   769,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   778,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,   755,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,   769,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,   778,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,    -1,    -1,   749,   750,   751,   752,   753,   754,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,   774,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,    -1,   748,   749,   750,   751,   752,   753,   754,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   773,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   773,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,    -1,   748,   749,   750,   751,   752,
     753,   754,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     773,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   773,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,    -1,   748,   749,   750,
     751,   752,   753,   754,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   773,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   773,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,    -1,   748,
     749,   750,   751,   752,   753,   754,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   773,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,    -1,
     748,   749,   750,   751,   752,   753,   754,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   773,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
      -1,   748,   749,   750,   751,   752,   753,   754,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   770,    20,    -1,   773,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,    -1,   748,   749,   750,   751,   752,   753,   754,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   773,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,    -1,   748,   749,   750,   751,   752,   753,   754,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   773,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,   620,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   769,   770,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,    -1,   748,   749,   750,   751,   752,
     753,   754,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   770,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,    -1,   748,   749,   750,   751,
     752,   753,   754,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   770,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,   620,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,    -1,   748,   749,   750,
     751,   752,   753,   754,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   769,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,    -1,   748,   749,   750,
     751,   752,   753,   754,   755,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   769,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   769,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   769,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   769,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   769,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,   763,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,   763,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,   763,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,     5,     6,    -1,     8,     9,
      10,    11,    12,   763,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,    -1,   748,   749,
     750,   751,   752,   753,   754,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,   763,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,    -1,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,   521,   522,   523,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
     594,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    18,    19,    20,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,   387,    -1,    -1,   390,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,   648,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
     594,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,   522,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,   660,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,   418,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,   748,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
     634,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
     634,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,    -1,    -1,   749,   750,   751,   752,   753,
     754,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   328,   329,   330,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   347,   348,   349,    -1,    -1,    -1,
      -1,   354,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   409,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,   579,   580,   581,   582,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,
     623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   650
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   769,   781,   782,   785,   786,   787,   788,
     789,   791,   796,   798,   823,   824,   825,   826,   828,   831,
     854,   876,   883,   884,  1119,  1120,  1122,  1124,  1126,  1129,
    1131,  1132,  1133,  1134,  1135,  1137,  1138,  1172,  1173,  1174,
    1177,  1191,  1193,  1197,  1200,  1201,  1205,  1207,  1212,  1216,
    1222,  1223,  1224,  1225,  1226,  1227,  1228,  1233,  1234,  1356,
    1389,  1390,  1391,  1392,  1393,  1394,  1395,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1413,  1414,  1435,
    1436,  1440,  1444,  1450,  1466,  1467,  1469,  1472,  1481,  1490,
    1494,  1496,  1497,  1562,  1564,  1566,  1588,  1595,  1597,  1598,
    1599,  1601,  1605,  1607,  1633,  1639,  1640,  1641,  1642,  1678,
    1685,  1686,  1688,  1689,    12,   108,   127,   200,   243,   286,
     420,   499,   564,   566,   600,   612,   708,  1652,  1653,  1654,
    1657,   282,   371,  1206,  1634,   572,  1537,   235,     5,     6,
       8,     9,    10,    11,    12,    15,    20,    23,    25,    26,
      27,    28,    29,    30,    32,    36,    40,    43,    44,    45,
      47,    49,    50,    53,    56,    57,    59,    60,    61,    63,
      65,    66,    67,    68,    69,    70,    72,    73,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    87,
      88,    90,    91,    92,    93,    94,    98,   103,   106,   110,
     111,   112,   115,   120,   121,   126,   127,   129,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   202,   204,
     205,   206,   207,   209,   211,   215,   216,   218,   221,   222,
     226,   227,   228,   229,   232,   233,   234,   237,   242,   243,
     244,   248,   252,   253,   255,   256,   260,   262,   265,   266,
     269,   272,   273,   279,   280,   282,   284,   286,   287,   295,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   320,   321,   322,   323,   325,   326,   331,   332,   333,
     334,   335,   336,   339,   340,   342,   344,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   357,   358,   361,   362,
     363,   364,   365,   369,   370,   374,   376,   377,   379,   380,
     381,   384,   394,   395,   396,   398,   400,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   413,   415,   416,
     417,   419,   421,   422,   423,   424,   425,   427,   428,   429,
     432,   436,   437,   439,   440,   443,   444,   445,   446,   447,
     449,   450,   452,   453,   454,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   468,   469,   471,   472,   473,   475,
     478,   479,   480,   481,   483,   485,   486,   487,   488,   489,
     491,   492,   496,   497,   498,   499,   503,   507,   509,   510,
     511,   512,   514,   515,   516,   517,   518,   524,   525,   526,
     528,   531,   534,   536,   538,   539,   540,   541,   542,   543,
     546,   547,   550,   551,   552,   553,   554,   555,   558,   559,
     560,   561,   563,   564,   567,   568,   569,   570,   573,   574,
     576,   577,   578,   579,   585,   586,   590,   591,   592,   595,
     596,   598,   599,   601,   602,   605,   608,   610,   612,   613,
     619,   621,   624,   628,   630,   631,   632,   633,   640,   641,
     642,   644,   645,   646,   647,   650,   653,   654,   655,   656,
     657,   659,   668,   669,   670,   672,   673,   674,   676,   679,
     681,   688,   689,   692,   694,   696,   697,   701,   702,   703,
     704,   705,   706,   707,   708,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   745,   746,
     748,   749,   750,   751,   752,   753,   754,   848,  1534,  1543,
    1553,  1554,  1555,  1557,  1558,  1561,   316,   457,   563,   566,
    1591,  1591,   641,  1635,   108,   199,   286,   390,   499,   519,
     564,   569,   600,   604,   612,   654,   708,   747,   748,  1095,
    1096,  1409,  1649,  1653,  1654,  1655,  1656,  1657,     8,    23,
      29,    35,    37,    38,    39,    41,    54,    55,    61,    62,
      69,    72,    96,    97,   102,   104,   107,   108,   113,   114,
     115,   120,   122,   125,   171,   178,   179,   188,   195,   205,
     207,   213,   219,   226,   230,   241,   245,   271,   279,   290,
     319,   324,   335,   339,   341,   345,   346,   347,   348,   349,
     356,   366,   367,   368,   372,   373,   397,   409,   410,   412,
     427,   455,   456,   475,   477,   484,   485,   491,   544,   545,
     552,   556,   557,   562,   572,   576,   577,   578,   579,   588,
     589,   590,   594,   597,   612,   616,   617,   618,   620,   625,
     627,   632,   633,   650,   665,   666,   671,   677,   678,   680,
     683,   684,   685,   686,   687,   691,   693,   695,   761,   762,
     763,   767,   769,   773,   777,   778,  1068,  1226,  1244,  1245,
    1248,  1249,  1250,  1252,  1256,  1259,  1261,  1262,  1263,  1264,
    1265,  1272,  1273,  1274,  1295,  1296,  1518,  1520,  1522,  1523,
    1524,  1526,  1529,  1531,  1534,  1543,  1644,  1646,   108,   167,
     200,   235,   286,   420,   499,   519,   564,   587,   600,   612,
     628,   654,   708,   748,  1409,  1543,  1206,   103,   536,   885,
      13,    14,    99,   130,   144,   167,   170,   183,   210,   235,
     241,   274,   285,   421,   425,   441,   449,   457,   493,   506,
     507,   558,   587,   609,   611,  1534,  1537,  1544,  1548,  1555,
    1558,  1559,  1561,  1611,  1612,  1532,  1543,   797,   566,   128,
     220,   293,  1415,   407,   659,    87,   428,  1495,   111,   235,
     647,  1498,   243,   563,  1589,  1591,  1206,  1543,  1491,   487,
     612,  1591,  1206,   128,   293,  1416,  1439,   653,  1482,   522,
     873,   877,   878,  1543,    13,   425,  1611,  1635,  1543,    13,
     140,   220,   527,   528,   530,   531,   532,   549,  1235,  1236,
    1237,  1647,    61,    62,   125,   209,   282,   352,   404,   498,
     585,   653,   654,   672,   708,   773,  1070,  1534,  1546,  1554,
    1555,  1557,  1558,  1560,  1563,  1573,  1578,  1579,  1451,   877,
     204,   511,   585,   204,   511,  1532,  1543,   566,  1445,   407,
     659,   243,  1591,  1596,  1543,   484,  1425,  1429,   660,  1357,
    1358,  1543,    32,    79,   154,   415,   437,   478,   539,  1681,
    1252,  1543,  1534,   401,   988,   769,  1645,  1646,   243,   282,
    1223,  1224,  1226,  1356,     0,   156,   783,   415,   104,   274,
     612,  1145,  1537,  1543,  1547,  1549,  1550,  1623,  1625,   608,
    1175,  1189,   194,   246,   285,  1238,  1239,  1387,   388,   603,
    1369,  1370,   276,   603,  1370,  1375,  1225,  1226,   130,   609,
      17,   195,  1470,  1532,   160,  1149,  1543,   160,   848,   449,
     480,  1600,   212,   848,  1547,  1543,  1532,   564,   230,  1408,
     212,   167,  1128,  1652,  1591,  1635,  1213,  1214,  1532,   769,
     855,   775,   583,   185,  1406,  1532,  1406,    19,  1636,   230,
    1017,   235,   212,   456,  1547,   235,   717,  1543,   564,   263,
     747,  1017,  1017,   212,   263,   604,  1017,   235,   566,  1648,
    1648,  1652,  1657,   769,   769,   769,  1259,   769,   769,   769,
    1248,  1308,   769,   769,   769,   769,   769,   769,   769,   769,
    1247,  1247,   769,  1055,   769,   769,   769,   572,   769,   769,
     769,  1645,   769,   769,   769,   769,   769,   769,   769,   769,
     769,  1248,   769,   769,   769,  1306,  1307,  1529,  1543,   769,
     769,   769,   769,   769,   769,   769,   769,   769,  1248,  1055,
     769,   769,   769,   769,   769,   769,   769,   769,   769,   769,
     769,   769,   769,   769,   769,   769,  1055,   572,   769,   769,
     769,   572,   769,   769,   769,    37,   219,   572,   769,  1247,
    1055,  1055,   769,   769,   769,   769,   769,   769,   769,   769,
     769,   769,   769,   769,   769,   769,   769,   769,   769,   769,
     769,   769,  1259,  1259,  1259,   620,  1224,  1226,  1248,   773,
    1297,  1547,  1543,   774,    18,    19,    21,   387,   390,   572,
     648,  1246,  1253,  1254,  1542,  1543,   160,   161,   201,   214,
     254,   267,   294,   359,  1257,    33,   141,   249,   275,   345,
     366,   367,   442,   504,   505,   517,   722,   759,   760,   761,
     762,   763,   764,   765,   766,  1255,  1259,    71,   389,   572,
    1538,   259,   652,   769,   775,  1408,  1408,  1408,  1543,   212,
    1408,  1408,   717,  1543,  1408,   564,  1408,  1408,  1408,   212,
    1408,  1591,   792,  1473,   135,   419,  1610,   481,   481,   564,
     569,   612,   628,   654,   654,   385,   769,  1626,   563,   378,
    1626,    67,   511,  1626,   109,   628,  1626,   773,  1626,   378,
     583,   774,   381,    68,   433,   775,  1547,   197,   231,  1168,
    1543,  1537,  1687,  1248,   246,    85,   293,  1500,   194,   194,
    1590,  1591,   197,    35,   316,   745,  1456,  1492,  1543,  1209,
    1550,  1208,  1591,   246,  1417,  1408,  1484,   316,   511,   745,
    1483,  1485,   621,   874,   501,   879,  1610,   378,   197,   378,
     583,  1636,  1244,  1237,   501,   654,   775,    35,   125,   160,
     502,  1071,  1426,  1547,   194,   583,  1426,   255,   433,  1580,
    1581,  1583,  1585,    13,   125,   365,  1548,  1551,  1619,   212,
     773,  1547,    35,   125,  1073,  1074,  1547,   775,   125,   585,
    1569,  1577,  1579,   774,  1570,  1426,    36,    61,    72,    97,
      99,   109,   158,   163,   166,   176,   198,   200,   209,   211,
     282,   316,   381,   408,   419,   420,   423,   424,   444,   498,
     511,   547,   566,   631,   746,   749,   750,   751,   752,   754,
    1070,  1452,  1456,  1457,  1459,  1460,  1461,  1574,   879,   447,
     534,  1186,  1187,  1188,   433,   637,  1178,  1179,  1180,  1186,
    1532,  1543,  1687,   769,   774,  1357,   774,   769,  1359,    37,
     219,  1519,  1538,  1680,  1680,  1680,    96,  1679,  1680,  1680,
     156,   775,   769,    48,   156,   156,   197,   111,   770,   770,
    1238,   770,   772,  1543,  1247,   769,   138,   228,   773,   125,
     138,   228,  1621,   465,   774,  1628,   300,   301,   445,   446,
     524,   525,   526,   821,  1190,   612,  1181,  1182,   503,   609,
    1240,   146,   392,   773,  1385,  1386,  1388,  1547,   249,  1239,
    1387,  1238,    48,    13,   140,  1643,  1374,  1375,   290,   373,
     594,  1376,  1377,  1520,  1543,  1643,  1374,  1369,  1370,  1375,
     231,   293,   429,  1442,  1443,  1439,   160,   194,  1222,  1413,
    1414,  1435,  1440,  1468,  1471,  1519,  1543,   333,   570,   596,
    1121,  1550,  1125,  1543,  1547,  1543,  1123,   384,     7,    26,
      84,   144,   237,   323,   370,   451,   630,   753,   956,   957,
     970,   971,   972,   978,   980,   981,   982,  1457,     7,    12,
      14,    17,    27,    28,    58,    63,    64,    69,    77,    83,
      84,    87,    96,   111,   125,   129,   137,   138,   144,   152,
     158,   169,   192,   233,   235,   242,   262,   285,   322,   340,
     344,   382,   388,   395,   404,   436,   451,   452,   453,   483,
     540,   541,   542,   547,   564,   567,   590,   603,   637,   640,
     725,   726,   727,   753,  1018,  1021,  1023,  1024,  1077,  1150,
    1151,  1153,  1154,  1156,  1158,  1159,  1160,  1161,  1163,  1165,
    1543,   171,  1543,   848,   533,  1658,  1659,  1127,  1406,   249,
     774,   235,   263,   401,  1092,  1219,  1220,  1248,  1304,  1305,
    1543,   799,   800,   176,   429,   774,  1192,    59,   176,   180,
     194,   331,   429,  1202,  1203,  1204,    57,   369,   369,   448,
    1637,  1255,  1543,  1543,  1543,   519,   193,  1543,   709,     7,
     950,  1543,   263,  1550,  1622,  1624,  1619,  1543,   263,  1543,
    1543,  1017,    11,   167,   200,   420,   587,   835,  1651,  1659,
    1665,  1667,  1668,  1673,   200,   835,  1650,  1659,  1665,  1668,
    1673,  1648,  1248,  1248,    13,   140,  1302,  1352,  1302,  1302,
    1302,   634,  1310,  1248,  1248,  1305,  1305,  1248,  1248,   140,
    1302,  1352,   770,   373,   770,   770,  1248,  1248,  1248,  1248,
    1529,   116,   117,   118,   119,   120,   223,   224,   225,   226,
     335,   337,   338,   339,   346,   427,   490,   491,   632,   649,
     650,  1347,  1348,  1248,  1304,   112,   115,   576,   579,  1349,
     140,  1298,  1248,  1248,  1248,  1248,  1347,  1248,  1305,  1307,
      10,   774,   775,   140,  1302,  1248,  1248,   140,  1302,  1248,
    1248,  1305,  1305,  1305,  1248,  1305,  1252,  1248,  1248,  1248,
    1248,  1248,  1248,   770,  1248,  1302,  1302,  1248,  1248,   140,
    1302,  1248,  1348,  1348,  1248,    46,   268,   584,  1248,  1248,
     770,  1530,  1531,  1543,  1302,  1302,  1248,  1248,  1248,  1302,
    1302,  1305,   770,   770,  1248,  1248,  1248,  1248,  1248,  1259,
     770,   770,   770,  1238,   770,   774,   209,   282,   498,  1575,
     502,  1248,  1245,  1542,  1543,  1248,  1248,  1248,   179,   372,
     589,   605,  1255,    13,    20,  1250,  1258,  1252,  1252,   769,
    1645,  1259,  1252,  1252,  1252,  1252,   275,   667,  1251,  1252,
    1252,   245,  1252,   245,  1252,  1252,  1252,  1252,  1252,    33,
     249,   275,   442,  1547,  1259,  1538,  1538,  1248,  1269,  1270,
    1271,   763,  1543,  1543,   848,  1543,   378,  1543,   848,  1547,
     709,   978,   980,  1410,  1411,  1412,   848,  1543,  1550,  1618,
    1406,  1619,  1543,  1543,  1408,   615,   793,    35,   158,   162,
     202,   222,   287,   383,   419,   443,   468,   512,   543,   745,
     746,   749,   750,   751,   752,  1474,  1478,  1479,  1591,    86,
     773,   886,   887,   888,   889,  1543,  1608,   563,  1543,  1627,
    1550,  1547,   200,   420,   566,  1609,  1618,  1612,    21,  1350,
    1351,   186,   363,  1543,  1602,  1543,  1687,  1417,   516,   774,
      50,   282,  1499,    30,    30,  1532,  1592,  1593,  1406,   773,
     790,  1537,    31,   287,   774,   583,  1210,  1211,  1532,  1406,
    1532,  1543,  1487,  1486,   774,  1538,    56,    66,    76,    90,
      91,    92,   106,   334,   351,   489,   551,   568,   880,   882,
     774,  1606,  1550,  1618,  1609,   487,  1638,  1637,   197,  1229,
    1230,  1387,    13,   365,  1619,  1543,    71,  1076,  1248,  1550,
     733,   572,  1540,   273,   380,   643,   774,  1584,   774,  1582,
     658,  1565,   773,   774,  1543,   209,   282,   498,   653,   672,
    1576,  1426,  1543,  1580,  1570,  1426,  1571,  1572,  1573,  1578,
      13,    35,   125,   192,   378,   484,   709,  1248,  1587,   166,
     275,   635,  1354,  1465,   769,   108,   167,   200,   420,   566,
     587,   612,   628,  1465,    13,  1547,  1374,   197,   249,  1458,
    1462,   198,    70,   543,   194,   543,   563,    70,   543,    13,
      43,    94,    98,   253,   332,   396,   518,   560,  1446,  1447,
    1448,   166,   222,   543,   543,  1374,  1465,  1465,  1465,  1465,
    1465,   211,  1465,   287,   157,   422,   586,   234,   235,   261,
    1094,    73,   563,   543,   624,   774,   380,   643,    88,   774,
     194,   822,   125,  1248,  1430,  1431,  1432,  1429,  1358,  1360,
    1543,    21,   774,   379,  1683,   559,  1684,   646,   258,   471,
    1682,  1543,  1248,   277,   280,   430,   989,   990,  1550,   136,
     770,   156,   784,   770,   729,    48,  1547,   654,   729,    48,
     637,    65,   256,   365,   535,   553,   644,  1615,  1616,  1550,
    1623,   637,  1142,   160,   160,   160,   160,   160,   160,   774,
     160,  1176,   404,  1183,   667,   668,   670,  1241,  1242,  1243,
     572,  1539,  1539,  1547,   774,   503,  1248,  1371,  1527,  1226,
    1227,   377,   774,  1226,  1227,  1374,  1374,   197,  1407,  1533,
    1543,  1442,  1168,  1547,    87,  1015,  1016,  1023,  1024,  1025,
    1077,   849,   369,   316,     7,   849,   769,   110,   967,  1426,
    1427,  1427,   967,  1427,  1427,   583,  1427,   774,  1020,   158,
      74,    89,   199,   401,   519,  1033,  1035,  1092,  1167,  1427,
      64,    89,   235,  1167,   401,  1427,  1427,  1167,  1427,   401,
     401,  1427,  1427,  1427,  1427,   583,   136,  1427,   261,   401,
     564,    64,    89,   193,   401,   418,  1092,  1167,   261,  1427,
     401,   401,   564,   136,  1427,  1427,  1427,  1427,  1427,  1167,
     401,    48,  1427,  1427,   401,    21,    74,   160,   583,  1092,
    1171,   401,   401,  1427,  1427,  1427,  1427,   139,   332,  1427,
    1427,   401,  1427,   619,   619,  1427,  1427,  1021,    71,  1070,
     450,   988,  1152,   774,   774,   501,   710,  1693,  1130,   492,
     628,  1659,   144,   609,  1199,   125,  1215,  1543,  1214,  1532,
     769,   769,  1220,   770,   774,   232,   295,   296,   297,   298,
     299,   302,   303,   304,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   317,   318,   711,   712,   732,   734,
     735,   736,   737,   738,   741,   814,   815,   821,   458,   459,
     460,   461,   462,   463,   464,   801,   802,  1532,   610,  1203,
      57,   448,   171,   827,   378,     7,   717,   111,   378,  1017,
     967,   614,   951,     7,   228,   125,   774,   830,   592,   769,
     592,   615,  1108,  1109,  1532,   200,  1017,   848,  1543,   848,
     848,  1659,   774,   770,  1302,   770,  1248,   770,   770,   770,
    1248,   150,   634,  1309,    21,   770,   615,   770,   770,   770,
     615,   774,  1305,   770,   763,   770,   774,   774,   770,   770,
     770,   197,   774,   770,   774,  1305,   770,   774,   774,   774,
     762,   774,   770,   770,   769,  1529,  1543,  1302,   770,   770,
     770,  1302,   770,   774,   770,   770,   770,   770,   774,   770,
     249,   770,   774,   774,   770,   774,   774,   770,   770,   770,
     774,   197,   774,  1302,   770,   770,   774,   774,   774,   770,
     197,  1248,   197,  1248,   197,  1248,   197,   770,   774,   770,
     770,   770,   770,   774,    21,   770,   774,   770,   774,   770,
     770,   690,  1280,  1280,   770,   774,  1275,   770,  1275,   774,
     770,  1280,  1280,  1280,  1305,   775,   775,   775,  1547,  1248,
     779,   179,   372,   589,   605,  1645,    19,  1248,   165,  1252,
     769,  1248,  1248,  1252,   769,  1645,  1259,  1252,  1246,   770,
     774,   769,   775,   775,  1532,  1410,  1408,  1020,   958,   959,
     960,   978,   774,    52,   470,  1169,   192,  1699,  1406,   773,
     794,   795,   287,   287,   287,   287,   287,   287,   774,  1406,
    1480,   115,   576,   579,   881,   891,  1296,  1522,  1529,  1547,
     774,   160,   378,   770,   774,   583,   763,  1543,  1552,  1617,
     637,  1613,  1543,   160,   186,   201,   214,   266,   267,   294,
     363,   417,  1603,  1604,  1353,  1354,  1532,  1537,  1537,  1217,
    1218,  1532,   236,  1351,   774,  1547,   122,   188,   219,   290,
     373,   594,  1382,  1383,  1384,    31,   583,  1493,  1550,  1550,
     774,   583,   176,   429,   613,  1194,  1195,  1196,   401,  1319,
    1320,   583,  1489,    13,  1488,  1485,   774,   160,   210,   378,
     197,  1617,  1543,   145,   700,   720,   755,   769,   778,  1231,
    1232,  1311,  1313,  1321,  1322,  1323,  1324,  1325,  1326,  1327,
    1532,  1645,  1353,  1229,   583,   583,   583,    35,  1075,  1547,
     583,  1426,   456,  1136,  1136,   433,   454,   496,  1586,  1583,
    1581,  1619,  1547,  1551,   194,   775,   775,   775,   775,   775,
    1579,  1248,  1587,   774,  1577,   249,  1463,  1538,  1248,   763,
    1017,   848,   848,   848,  1532,   848,  1550,  1532,   287,   350,
     543,  1455,  1455,  1465,  1543,   848,  1465,  1550,  1458,   848,
    1465,   252,   561,   181,   194,  1449,   774,  1463,   822,  1458,
     194,  1458,  1462,  1462,  1458,  1465,  1465,  1188,   514,  1180,
      60,   770,   774,   770,   774,  1645,  1519,   405,   194,   775,
     770,    73,   769,    73,   769,   402,   992,   216,   263,   776,
    1427,   404,   572,   733,    13,   365,  1619,   404,   572,   733,
    1540,  1547,   572,   572,   572,    19,  1614,   320,   321,   325,
     326,  1143,  1144,     5,   404,   739,   740,  1139,  1140,  1141,
    1535,  1537,   122,   188,   290,   373,   594,  1381,  1535,   122,
     188,   219,   290,   373,   594,  1379,  1537,  1537,   821,  1537,
     822,   160,   126,  1184,  1407,   669,  1242,  1070,  1072,  1386,
     342,    22,   131,  1372,  1373,   774,  1377,  1377,  1407,  1532,
    1543,   197,   774,   775,  1441,  1232,   219,   290,   373,   594,
    1380,  1383,  1016,    84,    77,    93,   265,   343,   369,   431,
     533,   851,   853,   478,   263,   598,   969,   108,   221,   394,
     404,   411,   515,   612,   833,   834,  1537,   955,   956,   983,
    1382,  1534,  1537,   955,   983,   983,  1543,  1380,   957,  1427,
    1116,  1543,  1092,  1093,  1206,  1093,    64,   193,   418,  1034,
    1091,  1096,  1107,  1116,  1543,   769,  1543,   125,  1164,  1543,
    1543,  1543,  1543,  1543,  1206,  1381,  1379,  1543,  1379,    13,
    1157,  1346,  1543,  1206,  1537,  1537,  1537,  1537,  1070,  1427,
    1379,  1157,  1543,  1543,   263,  1346,   263,  1543,  1543,  1547,
    1543,  1157,  1427,   186,   266,   369,  1027,  1379,   125,  1166,
    1543,  1381,  1381,  1543,  1206,  1367,  1368,  1530,   125,  1022,
    1379,  1537,  1206,  1543,  1543,  1532,  1206,  1206,    80,    82,
     125,   148,   187,   440,  1026,  1022,  1022,   125,  1379,  1543,
    1379,  1157,   769,   372,  1547,  1380,  1427,  1427,   403,     7,
     144,  1018,  1160,  1161,  1154,  1158,  1161,   718,   719,   968,
    1427,   707,  1697,   378,   843,  1146,   127,   248,  1532,   673,
     673,  1157,   418,  1342,  1343,  1344,  1543,   249,  1248,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   774,
     822,   160,   160,   160,   160,   160,   160,   160,   774,   822,
    1014,  1015,  1532,   969,   709,   642,  1532,  1382,   286,    77,
     177,   184,   364,   952,   953,   954,   970,   971,   972,   973,
     976,   977,   978,   979,   980,   981,   982,   967,    48,   637,
     654,  1622,  1628,  1427,   597,   832,  1296,  1518,    47,   216,
     486,  1111,  1111,   378,    21,   231,   275,   456,   769,   984,
     985,   986,   987,   988,  1019,  1021,  1224,  1226,  1422,  1502,
    1543,   848,   769,   473,  1674,     9,    31,   948,   245,  1248,
     770,  1279,  1280,  1279,  1279,  1279,   575,  1248,  1248,   154,
      35,    62,   112,   115,   123,   142,   189,   260,   354,   357,
     435,   509,   579,   607,  1044,  1048,  1303,  1071,  1071,  1303,
     770,  1279,   770,   245,   245,  1248,  1248,  1248,   388,  1300,
    1248,  1248,  1248,  1248,  1248,  1252,   770,  1279,   770,  1279,
    1248,  1248,  1248,  1248,  1248,  1248,  1305,  1279,  1279,   245,
    1248,  1248,  1248,   770,  1279,  1248,  1248,  1248,  1248,   197,
    1248,   197,  1248,   197,  1248,  1248,  1279,  1279,  1248,    35,
      62,  1379,  1302,  1279,   769,  1281,  1282,  1283,  1543,   231,
     694,  1277,  1520,  1523,   770,  1277,   770,  1259,  1280,   770,
     775,  1117,  1250,   770,   774,  1259,  1259,  1347,  1347,    19,
    1248,   165,  1271,  1304,   763,  1543,  1543,  1162,  1163,  1165,
    1382,  1412,  1020,  1550,  1169,  1547,   774,   822,  1479,  1475,
     889,   892,   893,   888,   374,   485,   890,  1609,  1543,  1618,
     775,   775,   583,   655,  1353,   769,  1374,  1319,   774,  1219,
    1220,  1539,   293,   433,   643,  1594,  1593,  1248,  1537,   583,
    1211,  1532,  1196,   769,   501,   620,   621,   769,  1418,  1419,
    1421,  1422,  1423,  1382,   822,   882,   881,   385,  1609,  1618,
     197,   769,  1645,   769,  1232,  1313,  1322,  1323,  1324,  1325,
     731,   774,   100,   238,   258,   271,   355,   477,   549,  1314,
    1315,  1316,  1319,  1351,   212,  1364,  1353,  1619,  1619,  1619,
     733,  1540,  1540,   728,  1620,  1620,    78,   595,   433,  1380,
    1567,  1568,  1426,  1572,  1537,   197,  1464,   770,  1543,   615,
    1465,   428,  1374,  1448,  1464,  1465,  1550,  1465,  1532,  1532,
    1465,   197,  1535,  1432,  1543,   774,   336,   156,   769,  1252,
     769,  1252,  1380,   555,   993,   769,    12,   991,  1379,  1539,
    1136,   404,   456,   404,  1620,    21,    48,  1615,  1379,  1379,
    1379,  1379,  1144,   285,   606,   174,   465,   704,   705,   697,
    1380,  1380,  1141,  1537,   160,   406,  1185,  1071,    73,  1503,
    1527,   615,  1351,   775,  1232,  1533,   763,  1543,   501,  1427,
    1537,   533,   533,   533,   533,   533,   492,   378,  1537,   964,
     965,   966,   970,   978,   980,  1537,  1537,  1537,  1537,  1379,
    1537,  1537,   770,   774,  1547,  1116,   402,   769,  1116,   769,
     263,   263,   367,  1036,  1037,  1038,  1107,  1093,   769,   615,
     592,  1029,  1030,  1031,  1033,  1543,    34,    35,    40,    42,
      44,    45,    62,   112,   115,   123,   159,   187,   189,   205,
     206,   247,   260,   279,   288,   289,   291,   328,   329,   330,
     347,   348,   349,   354,   357,   375,   376,   409,   410,   497,
     501,   513,   573,   576,   579,   580,   581,   582,   622,   623,
     650,  1039,  1042,  1043,  1044,  1045,  1046,  1047,  1048,  1050,
    1038,  1038,   656,   657,  1110,   144,   501,  1157,  1543,  1202,
     774,  1380,   125,  1071,  1537,   564,  1543,  1169,   637,   564,
    1537,  1039,  1157,   774,  1372,  1157,   583,   583,  1346,  1157,
    1480,  1075,  1071,   958,   373,  1694,  1695,  1427,   137,   152,
    1698,    81,   488,   451,  1147,  1359,   378,   378,   770,   770,
     774,  1215,   769,  1379,  1535,  1379,  1379,  1535,  1535,  1379,
    1379,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1379,
    1379,  1535,  1523,  1535,  1379,  1535,  1537,  1379,   372,   818,
    1549,   372,   820,  1535,  1379,   378,   742,   743,   819,   815,
     769,   803,   803,   769,   808,   808,   769,   811,   811,   769,
     806,   802,   769,   439,   599,   961,   962,   963,   970,   974,
     975,   976,   977,   978,   980,  1382,  1547,   769,   829,   212,
    1427,  1427,  1427,  1427,  1020,   958,   733,  1540,  1547,  1619,
    1142,   612,   709,  1692,   770,  1532,  1422,  1532,   275,  1029,
     986,   985,  1020,  1238,   987,   473,   836,  1669,   123,   247,
     435,   550,  1028,   769,   130,   241,   609,   949,  1248,   770,
    1279,  1248,   575,   769,  1059,  1060,  1060,   769,  1054,   769,
    1052,  1053,  1059,   414,  1049,  1051,  1059,    62,   247,  1054,
     247,  1060,   721,  1260,   770,   770,   770,  1279,  1279,  1248,
    1248,   770,   770,   774,   770,    48,   495,  1299,   774,   774,
     770,   774,   770,   249,  1266,  1267,  1279,  1279,   770,   770,
     770,   770,   774,   770,   770,  1248,   770,   194,   770,   770,
     774,  1279,   770,   774,   774,   770,  1248,   770,  1248,   770,
    1248,   770,   770,   770,   769,  1082,  1082,   774,   770,  1282,
    1284,  1285,   688,   688,  1280,   774,  1276,  1276,  1277,  1280,
    1277,   770,  1543,  1305,   770,  1250,   770,   774,  1259,   770,
    1165,  1163,   960,   795,   194,   637,  1476,   160,   774,  1617,
     637,  1630,   763,   763,  1543,  1618,   385,  1374,  1431,   501,
    1418,  1419,  1218,  1532,  1220,   231,  1221,  1501,  1502,   643,
     282,  1550,  1345,  1346,  1437,  1438,  1530,   770,  1420,  1525,
    1526,  1530,  1543,   769,  1424,  1428,   160,   197,  1617,  1618,
    1248,  1351,  1248,   774,   770,   770,   770,   770,   770,  1311,
    1312,  1313,  1321,  1311,   258,   258,   391,  1318,   238,   271,
     477,  1317,  1318,  1321,  1311,  1311,  1351,  1359,    48,   217,
    1355,  1364,  1136,  1136,   103,  1020,  1587,  1381,  1453,   163,
     631,  1618,   373,  1454,   615,  1458,  1458,   498,  1379,   995,
    1543,   770,   995,   770,    48,   769,   997,  1252,   160,   769,
     228,  1620,  1136,  1540,   456,  1620,   219,  1537,  1541,   733,
    1540,   125,   245,   361,   103,   125,  1380,   245,  1537,   160,
     153,   164,   386,   571,  1504,  1505,   278,  1506,  1232,  1319,
    1543,  1353,   775,  1441,  1437,  1537,   111,   111,   127,   248,
     162,  1020,   834,   769,  1380,   401,   998,   999,   769,  1248,
    1116,   730,   769,   769,  1113,  1114,  1115,  1543,  1111,  1111,
     770,   774,  1039,  1059,  1059,  1060,    23,    35,    49,   601,
     626,  1059,  1070,  1078,  1079,  1080,  1054,   769,  1080,    62,
     622,  1045,  1080,  1080,    62,   623,   623,   626,   769,  1060,
    1054,  1054,  1080,  1059,  1060,   441,  1032,  1085,    27,    71,
      75,    77,   125,   367,   372,   378,   418,   497,   547,   604,
     706,   747,  1035,  1038,  1062,  1063,  1064,  1076,  1084,  1255,
      35,  1059,  1081,  1059,  1059,  1060,   769,  1053,  1061,  1052,
     125,   125,  1039,  1543,  1076,  1076,   566,     9,   186,  1170,
    1368,  1543,  1543,   246,  1194,   770,   761,  1020,   373,   761,
    1696,  1699,   367,   416,    25,   168,   837,   583,   137,   152,
     839,  1660,  1346,  1346,  1343,   816,   817,  1379,   770,   804,
     805,  1543,   770,   809,   810,  1543,  1552,   770,   812,   813,
    1535,  1536,   769,   770,   807,  1114,  1427,  1427,  1020,   829,
     384,  1114,   353,   714,   715,   716,  1543,  1537,   983,   983,
    1380,   954,   404,    21,    48,  1139,  1693,   769,  1532,   770,
    1021,  1028,   378,   856,   857,   858,  1543,   516,  1675,   378,
    1347,  1248,   122,   290,   373,   594,  1080,   373,   373,   770,
    1347,  1347,  1248,  1301,  1527,  1519,   770,  1248,  1248,  1305,
      44,   355,   770,   637,  1268,  1248,  1347,  1248,  1248,  1248,
    1248,   770,   770,   770,  1380,   770,   770,  1379,  1279,   770,
     401,  1286,  1248,  1280,  1280,   197,  1278,   770,  1305,  1477,
     433,    56,    66,    76,    90,    91,    92,   106,   334,   351,
     472,   489,   551,   568,   894,   893,   583,   210,   637,  1629,
     770,  1437,    21,  1433,   378,  1434,  1221,   269,   246,   770,
     774,  1426,  1421,  1422,   770,   774,   775,  1430,   774,   881,
    1618,   197,   774,  1359,   770,  1311,   779,   258,  1318,  1318,
     258,   258,   378,   615,   378,   615,   192,   231,   614,  1337,
    1338,  1339,  1340,  1341,  1248,  1365,  1528,  1248,   698,  1361,
    1355,  1620,  1620,   404,  1380,  1374,  1374,  1618,  1353,  1465,
    1248,   770,   774,   770,   990,   998,   770,  1380,   994,   995,
      48,  1620,  1620,  1540,  1620,   404,   456,  1620,  1380,   125,
     723,   125,  1380,  1537,    48,    48,   153,    48,  1505,   537,
     571,  1507,  1508,  1353,  1353,  1353,   966,  1114,  1543,   770,
     774,  1114,   770,   769,  1114,  1248,   770,   774,   769,  1372,
    1030,  1032,    35,    23,   601,  1070,    35,  1080,  1071,  1118,
    1519,  1080,   626,  1118,  1080,   509,   607,   651,  1056,  1057,
    1058,  1532,  1170,  1075,    82,   125,   148,   187,  1066,  1537,
     115,   576,   579,   761,   762,   769,  1068,  1069,  1521,  1522,
     609,   125,   125,   139,   332,  1067,   263,  1382,   263,  1034,
      71,  1064,   203,  1040,   263,   372,   724,  1081,  1080,  1081,
    1056,   373,  1056,  1056,   769,  1521,  1170,  1532,  1543,   769,
     373,  1695,   373,   416,  1248,  1248,   378,   843,   848,   378,
      77,   844,    21,   637,  1198,   770,   774,   770,   774,   770,
     774,   775,   770,   774,   805,   770,   774,   770,   983,   983,
     963,   769,   770,  1535,  1535,  1535,  1535,  1541,   733,  1540,
    1697,  1114,   770,   984,   516,   488,   770,   774,  1042,  1537,
     239,   249,   393,   859,   860,   861,   862,  1532,   770,   770,
     770,   770,   770,   770,   774,   770,   770,   770,   774,  1279,
     770,   774,   770,   342,   265,   428,   770,   770,   770,   770,
     770,   770,  1083,   774,    48,   388,  1287,   186,   266,  1277,
     770,   175,   285,  1618,   385,   210,    21,  1632,  1353,  1433,
    1543,  1434,   147,   566,  1438,  1432,  1421,  1422,  1525,  1543,
     770,  1428,  1618,  1518,  1351,   770,   258,   258,  1248,   769,
    1248,   769,  1092,  1092,  1338,   639,   774,  1366,  1282,  1362,
    1363,  1361,   822,  1543,   216,   263,   770,   770,  1537,  1620,
    1620,  1540,   120,   120,  1519,  1519,    48,  1519,    48,    48,
    1508,  1369,  1369,   770,   620,  1000,   999,   770,  1112,  1113,
     770,   770,    77,   262,  1103,  1104,  1105,  1106,  1109,  1110,
    1115,   373,  1071,  1081,   770,   774,   770,  1058,   769,  1086,
     637,  1065,  1523,  1523,  1248,  1068,   621,  1075,    15,    21,
    1248,  1155,  1156,   998,  1347,   511,  1537,   143,  1148,  1422,
    1661,   373,   817,   805,   810,  1543,   813,   774,   769,   637,
    1097,  1098,  1099,  1106,   833,  1100,  1101,  1102,  1106,   228,
     404,  1698,   770,  1537,   837,  1670,   858,  1076,   770,   774,
    1543,   194,   373,  1527,  1248,   342,   173,   770,  1379,  1365,
      48,   430,   482,   682,  1288,  1294,  1280,  1629,   385,  1550,
    1374,  1434,  1359,   263,  1532,    73,  1328,  1345,  1345,   194,
    1336,  1336,  1528,    21,   774,   769,   991,   111,   465,  1690,
    1691,  1620,  1519,  1519,  1519,   276,  1378,  1378,  1097,   249,
     272,    77,   111,   235,   322,   340,   364,   564,  1011,  1012,
    1013,  1457,  1100,   770,   774,  1103,  1372,  1537,  1427,  1105,
     770,  1080,  1519,  1080,  1087,  1543,   319,  1088,   748,   770,
     769,   770,   770,   838,   845,   846,   637,  1662,   674,   805,
     805,   398,  1162,  1099,   770,  1162,  1102,    48,  1103,   842,
     843,   473,  1676,   861,  1042,   149,   770,   770,   770,  1371,
      33,   103,   245,   697,  1289,  1290,  1291,  1520,  1523,  1632,
     637,  1631,   609,  1319,   769,   770,   770,   770,   212,   258,
     388,   769,   769,  1283,  1363,  1252,   769,   136,   369,   535,
    1377,   769,  1002,  1004,   574,  1427,   136,   136,  1427,  1427,
    1427,  1427,   769,  1008,  1013,   158,  1085,  1113,  1379,  1372,
     770,   774,   198,   400,   510,   378,  1089,  1543,  1248,   538,
     840,    54,    68,   182,   230,   257,   270,   381,   474,   847,
     898,   900,   901,   902,   904,   905,   906,   907,   908,   909,
     911,   919,   920,   923,   934,   937,   939,   940,  1534,  1545,
    1556,  1557,  1558,  1561,    53,    64,   282,   770,   774,  1534,
    1382,  1162,   839,  1042,   850,  1076,   484,   245,   697,  1290,
    1292,  1520,  1523,   484,  1248,   692,   679,  1293,   692,   692,
     654,  1437,  1072,   701,  1329,  1330,  1543,  1351,    48,    48,
    1342,  1344,   770,   995,  1427,   535,   769,  1003,  1004,  1005,
     327,  1001,  1004,  1537,  1427,  1427,  1382,  1382,  1380,  1543,
     555,  1009,  1010,  1427,  1543,   130,   609,   770,  1248,   155,
     841,   921,   924,  1543,   197,   363,   912,   899,  1545,  1545,
    1543,   903,   786,   292,   455,   636,   943,    32,   941,   776,
      64,   385,    64,   805,   844,  1076,   134,   851,   852,  1255,
    1677,   191,   413,  1663,  1664,  1248,   681,    19,   681,   681,
    1347,   103,   212,   369,   696,    13,   125,   365,  1619,   482,
    1509,   703,   770,   774,   194,  1042,   770,   770,   554,   996,
     770,  1539,   770,   774,   327,  1006,  1007,  1252,  1537,  1537,
    1547,   770,   774,  1547,    52,   369,   470,   501,  1090,  1090,
     548,   629,  1041,  1248,  1248,   634,   926,   930,   197,  1543,
     914,   915,  1248,   864,   897,   898,   900,   902,   904,   906,
     907,   908,   909,   911,   919,   934,   937,   939,   864,   944,
     942,   935,   938,   385,   385,   770,   143,  1671,   134,   897,
    1547,  1666,  1347,  1292,   692,   484,   689,  1565,   228,  1503,
    1518,  1330,   702,  1076,  1380,   996,  1691,  1004,   770,   774,
    1011,  1010,     6,   125,   372,   378,   378,  1062,   922,   931,
     150,   930,   933,   246,   154,  1248,   154,   897,   772,   608,
    1248,   865,   943,   941,   845,   850,   897,   681,    48,  1506,
    1328,   171,  1331,  1007,   609,   130,   634,   925,   927,  1248,
     864,   154,   910,   230,   916,   292,   772,   946,   945,   124,
     863,   866,   936,  1545,   936,  1672,  1519,   231,  1510,   703,
    1090,  1090,   928,   927,   933,   932,    54,   913,  1543,   575,
    1248,   143,    95,   172,   869,   895,  1543,   154,   897,   772,
     897,   373,   769,  1512,  1518,  1248,   154,   575,   774,   864,
     947,   864,   215,   774,  1042,    86,   105,   772,   278,   482,
    1511,   770,   773,  1513,  1514,  1530,   501,  1515,   125,   162,
     372,  1332,  1333,  1334,  1335,   929,    54,   864,  1543,   917,
     154,   154,   194,  1543,  1076,   194,   194,  1547,   770,   774,
    1516,  1517,  1530,  1518,  1334,  1335,  1333,  1335,   378,   575,
     150,   151,   918,   455,   636,   867,   125,   896,   872,   873,
    1379,   868,  1514,   774,  1426,   378,   378,   162,   699,   864,
     864,   914,   521,   523,   870,   871,   872,   875,  1255,  1543,
    1248,  1222,  1517,  1432,   774,   897,   196,   871
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   780,   781,   781,   781,   781,   781,   782,   783,   782,
     782,   784,   784,   785,   785,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   786,   786,   786,   786,   786,   787,   788,   788,   789,
     790,   790,   792,   791,   793,   793,   794,   794,   795,   797,
     796,   799,   798,   800,   798,   801,   801,   802,   802,   802,
     802,   802,   802,   802,   803,   803,   804,   804,   805,   806,
     806,   807,   807,   808,   808,   809,   809,   810,   811,   811,
     812,   812,   813,   814,   814,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   816,   816,   816,   817,
     818,   818,   819,   819,   819,   820,   820,   821,   821,   821,
     821,   822,   822,   823,   823,   823,   823,   824,   825,   827,
     826,   826,   826,   826,   826,   826,   826,   826,   828,   828,
     829,   829,   829,   829,   829,   830,   830,   831,   831,   831,
     832,   832,   833,   833,   834,   834,   834,   834,   834,   834,
     834,   836,   835,   838,   837,   837,   839,   839,   839,   839,
     840,   840,   841,   841,   842,   842,   843,   843,   844,   844,
     846,   845,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   848,   848,   849,   849,   850,
     850,   851,   851,   851,   851,   851,   851,   851,   852,   852,
     852,   853,   853,   854,   855,   855,   856,   856,   857,   857,
     858,   859,   859,   860,   860,   861,   862,   862,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   867,   866,
     868,   866,   869,   869,   870,   870,   871,   872,   872,   873,
     874,   874,   875,   875,   875,   875,   875,   876,   877,   877,
     878,   878,   879,   879,   880,   880,   881,   881,   881,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   883,   884,   885,   885,   885,   886,   886,   887,   887,
     888,   889,   889,   890,   890,   891,   892,   892,   893,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   895,   895,   896,   896,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   899,
     898,   901,   900,   903,   902,   905,   904,   906,   907,   908,
     910,   909,   911,   912,   912,   912,   913,   913,   915,   916,
     917,   914,   918,   918,   918,   919,   919,   921,   922,   920,
     924,   923,   925,   925,   926,   926,   928,   929,   927,   931,
     932,   930,   933,   933,   935,   934,   936,   936,   938,   937,
     940,   939,   942,   941,   943,   944,   945,   943,   946,   947,
     943,   948,   948,   949,   949,   949,   950,   950,   951,   951,
     952,   952,   953,   953,   954,   954,   954,   954,   954,   954,
     954,   954,   954,   954,   954,   955,   955,   956,   956,   957,
     957,   957,   957,   957,   957,   957,   958,   958,   959,   959,
     960,   961,   961,   962,   962,   963,   963,   963,   963,   963,
     963,   963,   964,   964,   965,   965,   966,   966,   966,   967,
     968,   968,   969,   970,   971,   972,   973,   974,   975,   976,
     977,   978,   979,   980,   980,   981,   982,   983,   983,   984,
     984,   985,   985,   986,   986,   986,   987,   987,   988,   989,
     989,   989,   989,   989,   989,   990,   990,   991,   991,   992,
     992,   993,   993,   993,   994,   994,   995,   995,   996,   996,
     997,   997,   998,   998,   999,  1000,  1000,  1000,  1001,  1001,
    1002,  1002,  1003,  1003,  1005,  1004,  1006,  1006,  1007,  1007,
    1008,  1008,  1009,  1009,  1010,  1011,  1011,  1012,  1012,  1013,
    1013,  1013,  1013,  1013,  1013,  1013,  1013,  1014,  1014,  1015,
    1015,  1016,  1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,
    1020,  1020,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,
    1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,
    1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,  1021,
    1021,  1021,  1021,  1021,  1022,  1022,  1023,  1024,  1025,  1026,
    1026,  1026,  1026,  1026,  1026,  1027,  1027,  1027,  1028,  1028,
    1028,  1028,  1029,  1029,  1030,  1030,  1031,  1032,  1032,  1033,
    1033,  1033,  1033,  1033,  1033,  1034,  1035,  1035,  1036,  1036,
    1037,  1037,  1038,  1039,  1039,  1040,  1040,  1041,  1041,  1041,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1043,  1043,  1043,
    1043,  1043,  1043,  1043,  1043,  1044,  1044,  1045,  1045,  1046,
    1046,  1046,  1046,  1046,  1047,  1047,  1047,  1047,  1047,  1048,
    1048,  1049,  1049,  1050,  1050,  1050,  1050,  1051,  1051,  1052,
    1052,  1052,  1053,  1054,  1054,  1055,  1055,  1055,  1056,  1056,
    1057,  1057,  1058,  1058,  1058,  1059,  1059,  1059,  1059,  1060,
    1060,  1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1064,
    1064,  1064,  1064,  1064,  1064,  1064,  1064,  1064,  1064,  1064,
    1064,  1064,  1064,  1064,  1064,  1064,  1064,  1064,  1065,  1065,
    1066,  1066,  1066,  1067,  1067,  1067,  1068,  1069,  1069,  1070,
    1070,  1071,  1071,  1072,  1072,  1073,  1073,  1074,  1074,  1075,
    1075,  1076,  1076,  1077,  1077,  1078,  1078,  1078,  1079,  1079,
    1079,  1080,  1080,  1080,  1080,  1080,  1080,  1080,  1081,  1081,
    1083,  1082,  1084,  1084,  1085,  1086,  1086,  1087,  1087,  1088,
    1088,  1088,  1088,  1089,  1089,  1089,  1089,  1089,  1090,  1090,
    1090,  1090,  1090,  1091,  1091,  1092,  1092,  1093,  1093,  1094,
    1094,  1094,  1095,  1095,  1096,  1096,  1096,  1096,  1096,  1096,
    1096,  1096,  1097,  1097,  1098,  1098,  1099,  1099,  1100,  1100,
    1101,  1101,  1102,  1103,  1103,  1104,  1104,  1105,  1105,  1106,
    1106,  1106,  1107,  1107,  1107,  1108,  1108,  1109,  1109,  1110,
    1110,  1111,  1111,  1111,  1112,  1112,  1113,  1113,  1114,  1114,
    1115,  1115,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1119,
    1121,  1120,  1123,  1122,  1125,  1124,  1127,  1126,  1128,  1126,
    1130,  1129,  1131,  1132,  1132,  1132,  1132,  1133,  1134,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1136,  1136,  1137,  1138,
    1139,  1139,  1140,  1140,  1141,  1141,  1141,  1141,  1141,  1141,
    1141,  1141,  1141,  1141,  1141,  1141,  1141,  1141,  1141,  1141,
    1142,  1142,  1143,  1143,  1144,  1144,  1144,  1144,  1145,  1146,
    1146,  1146,  1146,  1147,  1147,  1148,  1148,  1149,  1149,  1150,
    1150,  1151,  1151,  1152,  1152,  1153,  1153,  1153,  1153,  1154,
    1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,
    1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1155,
    1155,  1156,  1156,  1157,  1157,  1158,  1158,  1158,  1158,  1158,
    1159,  1159,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,
    1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,
    1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1161,  1161,
    1161,  1162,  1162,  1162,  1162,  1162,  1163,  1164,  1164,  1165,
    1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,  1169,  1170,
    1170,  1170,  1171,  1171,  1171,  1171,  1172,  1172,  1173,  1173,
    1174,  1176,  1175,  1177,  1178,  1178,  1179,  1179,  1180,  1180,
    1180,  1180,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1185,
    1185,  1186,  1186,  1187,  1187,  1188,  1188,  1189,  1189,  1190,
    1190,  1190,  1190,  1190,  1191,  1192,  1192,  1192,  1193,  1194,
    1194,  1195,  1195,  1196,  1196,  1196,  1197,  1198,  1198,  1199,
    1199,  1199,  1200,  1201,  1202,  1202,  1203,  1203,  1204,  1204,
    1204,  1204,  1204,  1204,  1205,  1206,  1206,  1206,  1208,  1207,
    1207,  1209,  1209,  1210,  1210,  1211,  1212,  1212,  1213,  1213,
    1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,  1219,  1220,
    1220,  1221,  1221,  1222,  1222,  1222,  1222,  1223,  1223,  1223,
    1223,  1224,  1224,  1224,  1224,  1224,  1224,  1224,  1225,  1225,
    1225,  1225,  1225,  1226,  1226,  1226,  1227,  1227,  1227,  1228,
    1228,  1229,  1229,  1230,  1231,  1231,  1232,  1232,  1233,  1234,
    1235,  1235,  1236,  1236,  1237,  1237,  1238,  1238,  1239,  1239,
    1239,  1240,  1240,  1241,  1242,  1242,  1243,  1243,  1244,  1244,
    1244,  1245,  1245,  1246,  1246,  1246,  1246,  1246,  1247,  1247,
    1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,
    1248,  1249,  1249,  1249,  1249,  1249,  1250,  1250,  1250,  1250,
    1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,
    1250,  1250,  1250,  1251,  1251,  1252,  1252,  1252,  1252,  1252,
    1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,
    1253,  1253,  1254,  1254,  1255,  1255,  1256,  1256,  1257,  1257,
    1257,  1257,  1257,  1257,  1257,  1258,  1258,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1260,  1260,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,
    1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,
    1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1263,  1263,  1263,  1263,  1263,  1263,  1263,  1263,  1263,
    1263,  1263,  1263,  1263,  1263,  1263,  1263,  1263,  1263,  1263,
    1263,  1263,  1263,  1263,  1264,  1264,  1264,  1264,  1264,  1264,
    1264,  1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,
    1269,  1270,  1270,  1271,  1272,  1272,  1273,  1273,  1273,  1273,
    1273,  1273,  1273,  1273,  1273,  1273,  1273,  1273,  1273,  1273,
    1273,  1273,  1273,  1273,  1273,  1273,  1273,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1275,  1275,
    1275,  1276,  1276,  1277,  1277,  1277,  1278,  1278,  1278,  1279,
    1279,  1280,  1281,  1281,  1282,  1283,  1284,  1285,  1285,  1286,
    1286,  1287,  1287,  1288,  1288,  1289,  1289,  1290,  1290,  1290,
    1290,  1290,  1291,  1292,  1292,  1292,  1292,  1292,  1293,  1293,
    1293,  1293,  1293,  1294,  1294,  1294,  1295,  1296,  1297,  1297,
    1297,  1298,  1298,  1299,  1299,  1300,  1300,  1301,  1301,  1302,
    1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,  1303,
    1303,  1303,  1303,  1303,  1304,  1304,  1305,  1305,  1306,  1306,
    1307,  1307,  1308,  1308,  1309,  1309,  1310,  1310,  1311,  1311,
    1311,  1312,  1312,  1313,  1313,  1313,  1313,  1313,  1313,  1314,
    1314,  1314,  1315,  1315,  1315,  1315,  1316,  1316,  1317,  1317,
    1318,  1318,  1319,  1319,  1320,  1321,  1321,  1321,  1321,  1321,
    1321,  1322,  1322,  1323,  1323,  1324,  1325,  1325,  1326,  1326,
    1327,  1327,  1328,  1329,  1329,  1330,  1330,  1330,  1331,  1331,
    1332,  1332,  1332,  1332,  1332,  1333,  1334,  1335,  1335,  1335,
    1336,  1336,  1336,  1336,  1337,  1337,  1338,  1338,  1339,  1339,
    1340,  1340,  1341,  1342,  1342,  1343,  1343,  1344,  1344,  1345,
    1346,  1346,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1349,  1349,  1349,  1349,  1350,  1350,  1351,
    1351,  1352,  1352,  1353,  1353,  1354,  1355,  1355,  1356,  1356,
    1357,  1357,  1358,  1359,  1359,  1360,  1360,  1361,  1361,  1362,
    1362,  1363,  1364,  1364,  1365,  1365,  1366,  1366,  1367,  1367,
    1368,  1369,  1369,  1370,  1371,  1371,  1372,  1372,  1373,  1373,
    1374,  1374,  1375,  1376,  1376,  1376,  1377,  1377,  1377,  1377,
    1377,  1378,  1378,  1379,  1379,  1379,  1379,  1379,  1379,  1380,
    1380,  1380,  1380,  1380,  1381,  1381,  1381,  1381,  1381,  1382,
    1382,  1382,  1382,  1382,  1383,  1384,  1384,  1385,  1385,  1386,
    1386,  1387,  1388,  1388,  1388,  1389,  1390,  1391,  1392,  1393,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1400,  1401,  1402,
    1403,  1403,  1404,  1405,  1406,  1406,  1407,  1407,  1408,  1408,
    1409,  1409,  1410,  1410,  1411,  1411,  1412,  1412,  1413,  1413,
    1413,  1414,  1414,  1414,  1415,  1415,  1415,  1415,  1416,  1416,
    1417,  1417,  1418,  1418,  1418,  1419,  1419,  1419,  1420,  1420,
    1421,  1422,  1422,  1422,  1423,  1423,  1424,  1424,  1425,  1425,
    1426,  1426,  1427,  1427,  1428,  1429,  1430,  1430,  1431,  1431,
    1432,  1432,  1433,  1433,  1434,  1434,  1435,  1436,  1436,  1437,
    1437,  1438,  1439,  1439,  1440,  1440,  1440,  1441,  1441,  1442,
    1442,  1443,  1443,  1443,  1444,  1445,  1445,  1446,  1446,  1447,
    1447,  1448,  1448,  1448,  1448,  1448,  1448,  1448,  1448,  1448,
    1449,  1449,  1451,  1450,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1453,  1452,  1454,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1455,
    1455,  1455,  1456,  1456,  1457,  1457,  1458,  1458,  1459,  1459,
    1460,  1460,  1461,  1461,  1461,  1461,  1462,  1462,  1463,  1463,
    1464,  1464,  1465,  1465,  1465,  1466,  1467,  1468,  1468,  1468,
    1468,  1468,  1468,  1469,  1469,  1470,  1470,  1470,  1471,  1471,
    1471,  1473,  1472,  1475,  1474,  1474,  1476,  1476,  1477,  1476,
    1478,  1478,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1480,  1480,  1482,  1481,  1481,  1483,  1483,  1484,  1484,  1486,
    1485,  1487,  1485,  1485,  1488,  1488,  1489,  1489,  1491,  1490,
    1492,  1492,  1493,  1493,  1494,  1495,  1495,  1495,  1496,  1497,
    1498,  1498,  1499,  1499,  1500,  1500,  1500,  1501,  1501,  1502,
    1502,  1503,  1503,  1504,  1504,  1505,  1505,  1505,  1505,  1506,
    1506,  1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1512,  1513,  1513,  1514,  1514,  1515,  1515,
    1516,  1516,  1517,  1518,  1518,  1518,  1518,  1519,  1519,  1519,
    1520,  1521,  1521,  1521,  1522,  1522,  1522,  1522,  1522,  1522,
    1522,  1522,  1522,  1522,  1523,  1523,  1523,  1523,  1523,  1524,
    1524,  1524,  1525,  1525,  1526,  1526,  1527,  1528,  1529,  1529,
    1530,  1530,  1531,  1531,  1532,  1532,  1533,  1533,  1534,  1534,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1541,  1542,  1543,
    1543,  1544,  1544,  1545,  1545,  1546,  1546,  1547,  1547,  1547,
    1548,  1548,  1548,  1549,  1549,  1550,  1550,  1551,  1551,  1552,
    1553,  1553,  1553,  1553,  1553,  1554,  1554,  1554,  1555,  1555,
    1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,
    1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,
    1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,  1555,
    1555,  1555,  1555,  1555,  1556,  1556,  1556,  1557,  1557,  1557,
    1557,  1557,  1557,  1557,  1557,  1557,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1559,  1559,  1559,  1560,  1560,  1560,  1560,  1561,  1561,  1561,
    1561,  1561,  1562,  1563,  1563,  1563,  1563,  1563,  1563,  1563,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1565,  1565,  1566,
    1566,  1567,  1567,  1568,  1569,  1569,  1570,  1570,  1571,  1571,
    1572,  1572,  1573,  1573,  1573,  1573,  1573,  1574,  1574,  1574,
    1574,  1575,  1575,  1575,  1575,  1576,  1576,  1576,  1576,  1576,
    1576,  1577,  1578,  1578,  1578,  1578,  1578,  1578,  1578,  1579,
    1579,  1579,  1580,  1580,  1581,  1582,  1582,  1583,  1584,  1584,
    1585,  1585,  1586,  1586,  1586,  1586,  1587,  1587,  1587,  1587,
    1587,  1587,  1587,  1587,  1588,  1589,  1590,  1589,  1589,  1591,
    1591,  1592,  1592,  1593,  1594,  1594,  1594,  1594,  1595,  1596,
    1596,  1597,  1598,  1599,  1600,  1600,  1600,  1601,  1601,  1601,
    1601,  1601,  1602,  1602,  1603,  1603,  1603,  1603,  1604,  1604,
    1604,  1604,  1604,  1605,  1605,  1606,  1605,  1605,  1605,  1607,
    1607,  1608,  1607,  1607,  1609,  1609,  1609,  1609,  1610,  1610,
    1611,  1611,  1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,
    1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,
    1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,  1612,
    1612,  1612,  1612,  1612,  1612,  1612,  1613,  1613,  1614,  1614,
    1615,  1615,  1616,  1616,  1616,  1617,  1617,  1617,  1617,  1617,
    1618,  1618,  1619,  1619,  1620,  1620,  1621,  1621,  1622,  1622,
    1622,  1622,  1622,  1622,  1622,  1623,  1623,  1623,  1623,  1623,
    1623,  1623,  1623,  1623,  1623,  1624,  1624,  1625,  1625,  1626,
    1626,  1627,  1627,  1628,  1628,  1628,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1631,  1631,  1631,  1632,  1632,  1634,
    1633,  1635,  1635,  1636,  1636,  1636,  1637,  1637,  1637,  1638,
    1638,  1639,  1640,  1640,  1641,  1642,  1643,  1643,  1643,  1644,
    1645,  1646,  1647,  1647,  1647,  1647,  1647,  1647,  1647,  1647,
    1648,  1649,  1649,  1649,  1650,  1650,  1650,  1650,  1650,  1651,
    1651,  1651,  1651,  1651,  1651,  1652,  1652,  1653,  1654,  1655,
    1655,  1655,  1656,  1657,  1657,  1657,  1658,  1658,  1658,  1660,
    1659,  1661,  1662,  1662,  1662,  1662,  1663,  1663,  1664,  1664,
    1666,  1665,  1667,  1667,  1669,  1670,  1671,  1672,  1668,  1674,
    1675,  1676,  1677,  1673,  1678,  1678,  1678,  1678,  1678,  1678,
    1679,  1679,  1680,  1680,  1680,  1681,  1681,  1682,  1682,  1682,
    1683,  1683,  1684,  1684,  1684,  1685,  1685,  1686,  1686,  1687,
    1687,  1688,  1689,  1689,  1690,  1690,  1691,  1691,  1691,  1692,
    1692,  1693,  1693,  1694,  1694,  1695,  1695,  1696,  1696,  1697,
    1697,  1698,  1698,  1698,  1699,  1699
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     3,     9,     6,     7,     9,     4,    10,     0,
       6,     2,     8,     7,     6,     7,    11,     7,     8,     7,
       0,     3,     3,     6,     3,     0,     3,    12,    11,    11,
       1,     1,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     0,    12,     0,     6,     2,     0,     1,     3,     1,
       0,     2,     0,     2,     0,     1,     3,     4,     0,     2,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     3,     0,     3,     0,     1,     3,     1,
       3,     0,     1,     3,     1,     4,     0,     1,     1,     1,
       0,     3,     2,     3,     0,     3,     5,     5,     0,     7,
       0,     6,     1,     1,     1,     3,     1,     1,     1,     3,
       0,     1,     1,     1,     1,     2,     1,     3,     1,     1,
       0,     1,     0,     2,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     4,     0,     1,     1,     1,     3,     1,     3,
       3,     1,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     0,     3,     0,     2,     2,     2,     2,
       0,     6,     2,     0,     2,     1,     1,     3,     0,     0,
       0,     7,     0,     2,     2,     1,     1,     0,     0,     8,
       0,     6,     1,     2,     1,     2,     0,     0,     6,     0,
       0,     6,     0,     2,     0,     5,     0,     1,     0,     5,
       0,     2,     0,     5,     4,     0,     0,     8,     0,     0,
       8,     1,     1,     1,     1,     1,     0,     2,     0,     4,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     0,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     1,     1,     2,
       1,     1,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     4,     3,     1,     1,     3,     3,     1,     1,     2,
       1,     2,     1,     0,     2,     1,     2,     1,     6,     6,
       5,     4,     5,     4,     5,     0,     1,     0,     3,     0,
       2,     0,     8,     9,     0,     1,     1,     3,     0,     2,
       0,     3,     1,     3,     5,     0,     4,     3,     1,     1,
       1,     3,     1,     3,     0,     4,     1,     3,     1,     1,
       0,     3,     1,     3,     3,     0,     1,     2,     1,     3,
       4,     3,     3,     3,     4,     4,     3,     0,     1,     1,
       2,     1,     1,     1,     0,     3,     1,     2,     1,     3,
       0,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     1,     1,     3,     4,     4,     3,
       2,     2,     3,     3,     1,     1,     4,     4,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     3,     0,     1,     6,
       7,     7,     7,     8,     3,     4,     0,     2,     0,     1,
       0,     1,     2,     2,     9,     0,     2,     0,     1,     1,
       3,     3,     3,     1,     2,     1,     1,     3,     2,     3,
       2,     2,     1,     3,     3,     2,     3,     1,     2,     2,
       2,     1,     2,     1,     1,     1,     2,     3,     2,     3,
       2,     2,     5,     5,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     1,     1,     1,     0,     1,     0,
       1,     1,     5,     0,     3,     0,     2,     3,     0,     1,
       2,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       2,     4,     3,     1,     3,     2,     1,     2,     1,     2,
       2,     2,     2,     3,     2,     2,     2,     1,     0,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     1,     2,     1,     2,     2,     3,
       2,     3,     0,     1,     1,     2,     1,     3,     0,     1,
       1,     2,     1,     0,     1,     1,     2,     1,     1,     3,
       2,     1,     1,     3,     3,     0,     1,     2,     2,     1,
       1,     1,     1,     1,     3,     1,     2,     5,     3,     1,
       1,     4,     0,     1,     0,     2,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     4,     7,     7,     5,
       8,     7,     5,     5,     5,     5,     0,     2,     8,     3,
       0,     1,     1,     2,     2,     2,     2,     5,     3,     3,
       3,     3,     5,     4,     3,     4,     4,     2,     2,     2,
       0,     2,     2,     1,     2,     2,     2,     2,     3,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     1,
       2,     1,     3,     1,     2,     0,     1,     1,     3,     2,
       2,     3,     6,     5,     3,     4,     4,     4,     4,     5,
       4,     3,     3,     8,     7,     4,     4,     1,     1,     0,
       1,     2,     2,     1,     1,     1,     3,     3,     1,     3,
       1,     3,     6,     5,     2,     6,     5,     4,     4,     3,
       3,     3,     3,     2,     2,     6,     8,     5,     4,     4,
       4,     3,     5,     5,     5,     5,     1,     3,     1,     1,
       1,     0,     1,     1,     2,     2,     3,     1,     1,     3,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     2,     2,     2,     4,
       3,     0,     4,     3,     0,     1,     1,     3,     3,     6,
       2,     2,     4,     0,     3,     0,     3,     0,     3,     0,
       3,     0,     1,     1,     3,     1,     1,     0,     2,     1,
       3,     3,     3,     1,     4,     0,     1,     1,     5,     0,
       1,     1,     2,     1,     1,     1,     5,     0,     3,     0,
       5,     4,     2,     4,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     4,     0,     1,     1,     0,     4,
       3,     3,     5,     1,     3,     3,     5,     7,     1,     3,
       2,     1,     1,     8,     5,     1,     3,     3,     4,     0,
       4,     0,     2,     1,     2,     1,     1,     3,     2,     3,
       3,     3,     4,     3,     4,     2,     3,     2,     1,     4,
       4,     4,     4,     3,     3,     4,     1,     1,     1,     9,
       8,     0,     1,     2,     1,     1,     1,     3,     2,     2,
       0,     1,     2,     1,     1,     1,     2,     1,     3,     4,
       4,     1,     1,     2,     0,     1,     2,     1,     3,     1,
       1,     1,     2,     0,     2,     2,     1,     1,     0,     2,
       3,     3,     3,     2,     3,     4,     3,     4,     3,     4,
       1,     3,     4,     3,     4,     1,     3,     4,     5,     7,
       6,     8,     6,     5,     6,     4,     3,     5,     4,     6,
       3,     4,     1,     1,     0,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     5,     6,     6,     4,     4,     5,     3,     3,
       0,     1,     4,     6,     2,     4,     4,     4,    10,     6,
       8,     6,     4,     4,     6,     4,     4,     4,     6,     4,
       7,     7,     7,     6,     6,     6,     6,     3,     4,     6,
       8,     2,     2,     8,     8,     6,     6,     1,     6,     6,
       8,     8,     6,     8,     6,     2,     8,     8,     2,     2,
       2,     4,     4,     4,     4,     3,     8,     6,     8,     4,
       6,     4,     6,     8,     4,     3,     6,     4,     6,     4,
       7,     7,    10,     1,     4,     4,     4,     4,     4,     6,
       4,     4,     6,     2,     3,     0,     4,     0,     3,     0,
       1,     1,     3,     2,     1,     1,     5,     6,     5,     5,
       5,     7,     5,     6,     5,     6,     5,     6,     5,     6,
       5,     5,     5,     5,     5,     6,     8,     4,     4,     4,
       4,     4,     5,     7,     7,     6,     6,     9,     0,     3,
       3,     0,     2,     0,     2,     2,     0,     2,     2,     0,
       1,     2,     1,     1,     1,     3,     4,     0,     1,     0,
       3,     0,     3,     0,     3,     1,     1,     2,     2,     2,
       4,     2,     4,     1,     2,     2,     2,     4,     0,     3,
       2,     2,     3,     1,     1,     1,     4,     2,     3,     1,
       4,     0,     1,     0,     2,     0,     3,     3,     1,     2,
       2,     3,     2,     1,     2,     1,     2,     1,     2,     2,
       2,     1,     1,     2,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       4,     1,     1,     5,     7,     5,     7,     3,     3,     3,
       4,     4,     1,     2,     2,     1,     3,     3,     0,     1,
       0,     1,     0,     1,     4,     1,     1,     1,     1,     1,
       1,     3,     5,     3,     3,     4,     3,     3,     3,     4,
       8,     5,     4,     1,     3,     3,     7,     4,     0,     1,
       0,     1,     1,     2,     2,     3,     3,     1,     1,     2,
       0,     2,     3,     3,     1,     1,     6,     6,     1,     2,
       0,     1,     1,     0,     1,     1,     1,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     0,     1,     2,     0,     2,     2,     3,
       3,     1,     4,     0,     3,     1,     3,     0,     2,     1,
       3,     3,     0,     4,     3,     1,     0,     1,     3,     1,
       2,     0,     1,     3,     3,     1,     0,     1,     1,     1,
       0,     1,     2,     1,     3,     3,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     2,     5,     2,     1,     2,     6,     6,     4,     6,
       4,     5,     4,     4,     5,     4,     4,     4,     5,     5,
       4,     4,     6,     4,     1,     3,     1,     3,     0,     2,
       0,     1,     0,     1,     1,     3,     1,     1,     9,    10,
       8,     6,     7,     6,     0,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     4,     1,     3,     4,     3,     1,
       2,     1,     2,     1,     1,     1,     3,     1,     3,     1,
       1,     1,     0,     1,     3,     4,     0,     1,     3,     1,
       1,     1,     0,     3,     0,     5,    10,     0,     1,     3,
       1,     3,     0,     1,    10,     7,     8,     0,     2,     0,
       2,     1,     1,     1,     3,     0,     1,     0,     1,     1,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       0,     3,     0,     3,     2,     4,     4,     3,     4,     4,
       1,     3,     3,     6,     2,     2,     0,     6,     0,     7,
       6,     2,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     1,     3,     5,     2,     4,     6,
       4,     3,     3,     2,     3,     2,     2,     2,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     2,
       0,     2,     0,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     3,     1,     1,     0,     3,     1,     0,     1,
       1,     0,     4,     0,     4,     1,     0,     3,     0,     3,
       3,     1,     2,     2,     2,     2,     2,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     0,     3,     3,     3,     1,     0,     2,     0,
       4,     0,     3,     1,     0,     1,     0,     2,     0,     3,
       3,     3,     2,     2,     3,     0,     1,     1,     2,    18,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     3,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     2,
       2,     2,     1,     1,     3,     5,     2,     1,     1,     1,
       1,     1,     3,     5,     1,     3,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     2,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     5,     5,     7,     7,
       3,     3,     3,     6,     6,     6,     4,     0,     2,     4,
       6,     1,     3,     1,     2,     2,     0,     2,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     2,     0,     2,     2,     2,     2,
       2,     3,     3,     4,     6,     2,     3,     3,     2,     1,
       3,     3,     2,     2,     1,     0,     2,     3,     0,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     0,     3,     3,     1,
       1,     1,     3,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     3,     4,     2,     6,     4,     3,     6,
       7,    10,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     7,     0,     9,     8,     6,     5,
       9,     0,    11,     7,     0,     1,     1,     1,     0,     1,
       1,     3,     2,     3,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     2,     2,     0,     3,     0,     1,
       3,     1,     2,     2,     2,     1,     3,     3,     1,     3,
       1,     3,     1,     3,     0,     3,     0,     3,     4,     5,
       4,     6,     6,     7,     1,     7,     9,     5,     6,     8,
       4,     7,     7,     8,     2,     1,     3,     1,     3,     0,
       3,     1,     3,     0,     2,     2,     2,     2,     0,     3,
       0,     3,     0,     3,     4,     3,     3,     0,     3,     0,
       3,     0,     1,     0,     3,     2,     0,     1,     2,     0,
       1,     4,     4,     5,     2,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     3,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     1,
       2,     1,     2,     3,     3,     3,     0,     3,     3,     0,
       7,     2,     0,     3,     4,     4,     1,     1,     0,     2,
       0,    12,     7,     6,     0,     0,     0,     0,    14,     0,
       0,     0,     0,    11,     4,     4,     3,     4,     3,     3,
       0,     2,     1,     3,     5,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     3,     5,     3,     3,     3,     1,
       3,     4,     6,    10,     1,     5,     0,     2,     3,     1,
       1,     0,     3,     1,     3,     1,     3,     1,     2,     0,
       3,     0,     1,     1,     0,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 23481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 23495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 23517 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23541 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2100 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 23877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2196 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 23957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 23968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 23979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2260 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 24007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 24019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 24029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 24044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 24081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 24092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 24103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 24114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 24125 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 24137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 24148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 24197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 24227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 24237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 24288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24391 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24423 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 24456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 24464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 24472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 24480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 24497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24505 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 24513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24609 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24617 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 24645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 24653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 24661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2798 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2803 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 24811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 24823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2885 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 24939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 24953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 24961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 24969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 24979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24995 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 25028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 25044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 25052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 25060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 25093 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3101 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 25099 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 25129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 25137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 25145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 25153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 25162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 25170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 25178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 25324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 25339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 25441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3393 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3394 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25453 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3398 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3399 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25465 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3405 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3407 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3409 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3411 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3413 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3415 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25501 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3417 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3422 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3423 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 25519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3424 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 25525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25541 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 25549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 25555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3448 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 25563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25615 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3584 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3589 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3627 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 25900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3817 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 25951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3826 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 26016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3898 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 26040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 26064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3926 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3941 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3962 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3963 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 26122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 26169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 26213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 26225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4057 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 26237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 26243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4083 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4105 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 26305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 26311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 26317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 26323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 26329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 26335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 26341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 26347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 26353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 26359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 26365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 26371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 26451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 26512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26518 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 26540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 4339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 4362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26695 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 4367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4391 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4461 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4469 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4517 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 26862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4687 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 27103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4759 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4767 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 27178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4823 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4846 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 27205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4856 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4901 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 27259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 27267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 27275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4932 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4940 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4982 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4990 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4998 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5036 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 27443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 27464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 27470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 27476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 27496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 27515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5138 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 27530 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 27539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5157 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 27556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 27590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5219 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5227 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5268 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5285 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5293 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27740 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5363 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 5383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 5389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 5411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 5417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 5423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27844 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 5453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 5477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 27934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 27940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 27954 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 27962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 27970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 27978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 28002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 28010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 28026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 28034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 28042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 28050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 28058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 28064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 28114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 28123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 28132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 28143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 28165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 28185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 28193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 28201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 28217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 28233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 28251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 28269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 28294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 28302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 28310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 28316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5874 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 28361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 28367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 28422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 28428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 28436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 28444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28465 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 28480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 28488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 28514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 28520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 6003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 28526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 28532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 6009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 28560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 28566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 6051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 28592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 28598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6057 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6073 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6074 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6078 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6079 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 28808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
	  }
#line 28816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	  }
#line 28824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 28832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 28840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 28848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 28856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 28864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 28885 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 28893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 28917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 28925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 28933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 28941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 28949 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 28957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 28989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 28997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 29005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 29013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 29031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 29037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 29049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 29055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 29061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 29067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 29073 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 29079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 29085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 29091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 29097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 29103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 29109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6337 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 29115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6338 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 29121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6339 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 29127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6340 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 29133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 29153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 29159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 29165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 29173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 29179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 29188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 29246 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 29255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 29261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 29267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29273 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 29297 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 29303 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 29311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 29332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 29350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 29358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29374 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 29382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 29390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 29466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 29523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 29531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 29539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 29547 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 29555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 29563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 29571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29579 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 29587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29648 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6700 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6701 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6705 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6706 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6710 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6711 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6712 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6713 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6714 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 29789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 29795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 29801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 29807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 29813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 29822 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 29828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6741 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 29834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6743 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29852 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 29861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 29870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 29879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 29888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 29897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 29903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6792 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 29930 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 29944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 29956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 29967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 29997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 30006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 30012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 30035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 30055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 30063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 30071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 30079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 30087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 30095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 30111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 30119 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 30127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 30143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 30159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 30167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 30175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 30183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 30191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 30199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 30212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 30220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 30228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 30234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 30242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 30248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 30254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 30260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 30266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 30272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 30278 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 30307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 30319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 30350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 30356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 30366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 30378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7078 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7079 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 30402 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30411 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 30432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 30442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 30452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 30509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 30536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7172 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 30548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 30566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 30572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 30578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 30606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7227 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 30612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 30618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 30624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 30711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7277 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7278 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7287 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7288 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7289 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 30761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 30769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 30777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 30785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 30928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 30944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 30950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 30968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 30986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 30992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 31004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 31010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 31031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 31067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 31078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 31088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 31100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 31116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 31125 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 31140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 31155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 31167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 31180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7663 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7682 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 31451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 31496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 31512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 31528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 31543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 31549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 31555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 31564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 31574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7947 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 31590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 31600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 8009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 31666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 31677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 31688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 31699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 31709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 31719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 31729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 31745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 31761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 31771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8092 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8093 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 31799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 31809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 31819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 31829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 31844 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 31887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 31905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31927 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 31953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 31961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 31970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 31979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 31989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 31997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 32005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 32013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 32021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 32029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 32037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32053 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 32061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 32087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 32095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 32103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 32111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 32119 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 32135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 32143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 32151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 32157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 32165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 32173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 32179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 32216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 32245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 32253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 32261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 32286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 32302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 32334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 32342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 32350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 32358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 32366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 32374 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 32398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 32422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 32432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 32440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 32448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 32475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 32481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 32525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 32533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 32557 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 32565 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32583 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 32601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 32607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 32613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 32619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 32625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 32631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8621 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8622 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8623 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8624 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 32664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8634 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 32673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8641 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8643 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 32690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 32705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 32794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 32826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 32843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 32875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32891 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 32915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 32923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 32932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 32958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 32967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 32976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 32984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 32999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 33011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 33017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 33047 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 33053 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 33059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 33069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 33075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 33094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 33104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 33115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 33126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 33135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 33150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 33159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 33165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 33171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 9011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 33177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 9013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 33183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 33189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 33195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 33203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 33209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 33229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9039 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 33243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 33283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 33292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33302 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 33320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 33332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 33348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 33384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 33390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 33401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 33421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 33430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 33438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 33446 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 33454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 33462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 33470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33494 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33510 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33518 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 33526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 33534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33566 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 33572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 33578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 33586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 33595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 33603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            if (item_list == nullptr ||
                item_list->push_back(
                  NEW_PTN Item_field((yyloc), nullptr, nullptr, "*")))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 33616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 33664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 33698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 33710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 33718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 33727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 33735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 33745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 33773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 33781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 33789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 33795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 33801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 33807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 33813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 33819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 33825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 33856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 33876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9585 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9586 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33949 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 33957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 33965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 33973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 33981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 34005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 34013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 34021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 34038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 34046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 34063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 34074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 34082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 34093 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 34101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 34109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 34117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 34129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 34137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 34163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 34175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 34243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 34251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34275 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34283 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9830 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 34307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9841 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 34313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 34319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 34325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 34331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 34337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 34343 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 34349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 34355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 34361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 34367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 34375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 34381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 34397 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 34405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 34413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9899 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 34435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 34467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 34475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 34483 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), &(yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 34491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 34499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 34507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 34515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 34523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 34531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 34539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 34550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 34562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 34568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 34574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 34582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 34590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 34598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 34606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 34614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 34622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 34646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34654 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 34662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 34670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 34686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 34694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 34702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 34710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 34728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 34737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 34745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 34753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 34761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 34769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 34786 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 34794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 34802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 34818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 34850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 34858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 34875 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 34883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34891 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 34940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 34948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 34956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 34980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 34988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 34996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 35004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 35012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 35044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 35060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 35084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 35092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 35100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 35108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 35116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 35124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 35132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 35140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 35148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 35158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 35168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 35178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 35188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 35198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 35216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35224 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 35238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 35252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35264 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 35270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 35276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 35316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 35362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 35376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 35392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 35408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 35496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 35504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 35512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 35520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 35528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 35536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 35612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 35638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 35646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 35654 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 35662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 35670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 35678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 35686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 35694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 35702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 35726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 35742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 35750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10701 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 35768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 35776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 35784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35792 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 35824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 35832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 35841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 35849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 35857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 35865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 35873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 35889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 35897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 35905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 35913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 35921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 35929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 35945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 35953 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 35961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 35969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 35976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 35982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 35988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 35994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 36002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 36019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 36027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 36035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36047 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 36057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 36063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 36069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 36075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 36103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 36114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 36137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 36149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 36237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 36260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 36271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 36277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36297 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 36303 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 36309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 36365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 36375 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36387 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 36401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 36458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 36466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 36472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 36478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 36484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 36508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 36514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 36520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 36534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 36540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 36546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 36552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 36558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 36564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 36594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 36651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 36666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 36674 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 36702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].jt_on_error_or_empty).error.type, (yyvsp[0].jt_on_error_or_empty).error.default_string,
                (yyvsp[0].jt_on_error_or_empty).empty.type, (yyvsp[0].jt_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 36715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 36723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 36731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 36739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
          }
#line 36775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.jt_on_error_or_empty).error = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
          }
#line 36787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_ERROR, nullptr};
          }
#line 36807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_NULL, nullptr};
          }
#line 36815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_DEFAULT, (yyvsp[0].text_literal)};
          }
#line 36823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 36831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 36861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 36888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 36894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 36905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 36957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11612 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 36982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 36988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 36994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 37000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 37006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 37012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 37018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 37024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 37030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 37036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 37042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 37048 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 37054 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 37060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 37066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 37072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 37078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 37084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 37090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 37096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11639 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 37102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 37108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11641 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11642 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 37120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11651 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 37126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 37132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 37138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 37144 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 37158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 37166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 37174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 37183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 37193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 37210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 37223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 37231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 37241 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 37251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 37259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 37267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 37277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 37287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 37298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 37304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 37312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37321 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 37338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 37344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 37372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 37378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 37386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11879 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 37412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 37418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 37424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 37430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 37438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 37448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 37458 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 37468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 37476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 37484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11950 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11953 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11954 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11955 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11959 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11961 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11962 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11968 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11969 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11970 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11971 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11975 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11977 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11978 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11979 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11984 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 37652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 37680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 37688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 37696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 37704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37712 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 37718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 37728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 37755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 37766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 37837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 37853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12173 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 37864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37880 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 37890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 37902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 37979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 37989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12297 "sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 37997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 38005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 38025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 38045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 38057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 38063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 38069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 38075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 38095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 38111 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 38138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 38177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 38183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12483 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12485 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 38202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 38208 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 38214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 38227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38291 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 38309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12573 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 38315 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 38323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 38329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 38389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 38417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 38426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 38440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 38449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 38457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12716 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 38472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 38478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 38511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 38517 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38547 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 38559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 38565 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 38571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 38577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 38585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12829 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 38593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12833 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 38601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12837 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 38609 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12841 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 38617 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12845 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 38625 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12849 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 38633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12853 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 38641 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12857 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 38649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12861 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 38657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12868 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 38665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12872 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 38677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 38688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12896 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12905 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 38711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12911 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12923 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12934 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 38757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 38776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 38787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 38799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12975 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 38805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 38827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 38835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 38843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 38852 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 38861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 38870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 38879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 38896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 38907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 38943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 38955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 38967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 38981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 39007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 39016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 39042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 39078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, false);
            MAKE_CMD(tmp);
          }
#line 39087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, false);
            MAKE_CMD(tmp);
          }
#line 39096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
            MAKE_CMD(tmp);
          }
#line 39105 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, true);
            MAKE_CMD(tmp);
          }
#line 39114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, true);
            MAKE_CMD(tmp);
          }
#line 39123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
            MAKE_CMD(tmp);
          }
#line 39132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 39155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 39167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 39175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 39183 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13237 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_CLIENT_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_CLIENT_STATS))
             MYSQL_YYABORT;
          }
#line 39194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13244 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_USER_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_USER_STATS))
             MYSQL_YYABORT;
          }
#line 39205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13251 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_THREAD_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_THREAD_STATS))
             MYSQL_YYABORT;
          }
#line 39216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13258 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_TABLE_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_STATS))
             MYSQL_YYABORT;
          }
#line 39227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13265 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_INDEX_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_INDEX_STATS))
             MYSQL_YYABORT;
          }
#line 39238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 39270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39307 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 39325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 39335 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13336 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 39341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13338 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 39347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13340 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 39353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 39359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 39365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 39395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 39401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 39407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 39413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13381 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 39419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13382 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 39425 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13386 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 39431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13387 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 39437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 39443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 39449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 39455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 39463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 39471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 39479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 39487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39505 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
          }
#line 39513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 39519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 39528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 39539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13475 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13492 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 39602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13535 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13540 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 39630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13542 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 39636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13544 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 39642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13546 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 39648 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13548 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 39654 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 39660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13552 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 39666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13554 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 39672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13556 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 39678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13558 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 39684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13560 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 39690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13562 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 39696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13564 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 39702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13566 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 39708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13568 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 39714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13570 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 39720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13572 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 39726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 39732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 39738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 39747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13589 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 39764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 39774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13620 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 39790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 39810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13640 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 39816 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13644 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 39822 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13645 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 39828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13649 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 39849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 39859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 39876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 39884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 39897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 39910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13716 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13717 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13718 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 39928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 39938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 39961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 39967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13775 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 39973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 39997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40003 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 40009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 40015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 40021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 40027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 40033 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 40042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 40051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 40061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 40070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 40079 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 40085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 40091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 40100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 40109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 40118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 40124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13866 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 40130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 40142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13880 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13881 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13882 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 40160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 40180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 40194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 40200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 40262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 40272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 40290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40323 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 40343 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 40360 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 40366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 40388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 40396 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 40404 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40452 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 40468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 40484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 40492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 40500 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40518 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 40534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 40620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 40665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 40739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 40756 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 40762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 40858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 40873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40891 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 40901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 40909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 40917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 40925 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 40933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 40944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 40956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 40968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 40981 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 40989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 41016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 41025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 41034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 41043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 41049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 41055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 41063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 41071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 41091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 41097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 41108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 41118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 41124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 41130 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41138 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 41146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 41154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 41160 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41178 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41208 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15202 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15215 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41262 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 41290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 41298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 41314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 41325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 41333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 41341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 41365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 41373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 41381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 41389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 41395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 41401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 41409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 41415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 41421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 41427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 41433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 41439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 41445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 41451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 41457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 41471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 41479 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 41487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 41495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 41503 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 41511 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 41523 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 41531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 41539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15381 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 41585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 41591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 41597 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 41606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 41612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 41624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 41643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 41652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 41660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 41669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_action)= ROTATE_BINLOG_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 41689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 41705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-4].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-4]));
              MYSQL_YYABORT;
            }
          }
#line 41721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 41729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 41737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41788 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 41794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 41800 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 41806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 41812 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 41818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 41824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 41830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 41839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41885 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 41894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 41915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2780:
#line 15664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 15679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41959 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 41991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 41997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 42017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 42028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15743 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 42034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 42058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 42064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 42070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 42076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 42082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 42088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 42094 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 42100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 42106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 42112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 42118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 42124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 42133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 42139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 42157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 42163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 42169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 42175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 42181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 42187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15806 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 42193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 42199 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 42205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 42211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 42217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 42223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 42229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 42235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15822 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 42241 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 42267 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 42281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 42295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42329 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42345 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *tmp;
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42402 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42434 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42446 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 42542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 42554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 42641 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42656 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 42707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 42719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42737 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 42746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 42761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 42767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 16246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 42795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 16250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 42803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 16254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 42811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 16258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 42819 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 16264 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16266 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 42831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42837 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16277 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16286 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16288 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 42878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16292 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 42884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 42893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 42903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16306 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42909 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16310 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42915 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16311 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42927 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42939 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42957 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16329 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16330 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42995 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43005 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 43025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 43037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 43043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 43051 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 43057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 43063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 43069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 43075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 43081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 43087 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 43098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 43104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 43115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16442 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16444 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16446 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 43148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 43156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16506 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43162 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16508 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16510 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16515 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 43180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16520 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 43186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16522 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 43192 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16524 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 43198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16529 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 43204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16531 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 43210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16533 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 43216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 43256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 43308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 43314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43320 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 43332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 43338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 43344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16649 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 43353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16655 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 43362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16672 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 43398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16704 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 43429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16781 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16805 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 43506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16811 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43551 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16852 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 43622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16919 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 43646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16939 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43654 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16944 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16952 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16960 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 43691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 43718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 43736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 43745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 17006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 17007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 17011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 43770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 17020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 43784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 17030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 43803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 17047 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 17048 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 17052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 17053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 43827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 17054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 43833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 17058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 17059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 43845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 17064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 17066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 43857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 17068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 43863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 17073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 43873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 17079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 43883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 17088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 17094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 43903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 17103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 17109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 17118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 43936 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 17136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 17146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 17167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 43977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 17171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 43985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 17178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 43993 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 17182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 44001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 17186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 44009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 17192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 44015 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 17193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 44021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 17198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 44032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 17204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 44038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 17209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 17216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 44060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 17226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 44071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 17233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 44085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 17245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44091 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 17246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 44097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 17250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 44103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 17252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 44112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 17259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 44118 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 17261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 44127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 17266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 44136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 17273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 44142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 17274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 44148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 44152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
